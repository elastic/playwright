{"version":3,"file":"jsHandle.js","names":["_channelOwner","require","_serializers","_errors","_Symbol$asyncDispose","Symbol","asyncDispose","JSHandle","ChannelOwner","from","handle","_object","constructor","parent","type","guid","initializer","_preview","_initializer","preview","_channel","on","evaluate","pageFunction","arg","result","evaluateExpression","expression","String","isFunction","serializeArgument","parseResult","value","evaluateHandle","evaluateExpressionHandle","getProperty","propertyName","name","getProperties","map","Map","getPropertyList","properties","set","jsonValue","asElement","dispose","e","isTargetClosedError","_objectCount","_wrapApiCall","count","objectCount","toString","exports","handles","pushHandle","channel","push","length","serializeValue","h","fallThrough","parseSerializedValue","undefined","assertMaxArguments","max","Error"],"sources":["../../src/client/jsHandle.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as channels from '@protocol/channels';\nimport { ChannelOwner } from './channelOwner';\nimport { parseSerializedValue, serializeValue } from '../protocol/serializers';\nimport type * as api from '../../types/types';\nimport type * as structs from '../../types/structs';\nimport { isTargetClosedError } from './errors';\n\nexport class JSHandle<T = any> extends ChannelOwner<channels.JSHandleChannel> implements api.JSHandle {\n  private _preview: string;\n\n  static from(handle: channels.JSHandleChannel): JSHandle {\n    return (handle as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.JSHandleInitializer) {\n    super(parent, type, guid, initializer);\n    this._preview = this._initializer.preview;\n    this._channel.on('previewUpdated', ({ preview }) => this._preview = preview);\n  }\n\n  async evaluate<R, Arg>(pageFunction: structs.PageFunctionOn<T, Arg, R>, arg?: Arg): Promise<R> {\n    const result = await this._channel.evaluateExpression({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return parseResult(result.value);\n  }\n\n  async evaluateHandle<R, Arg>(pageFunction: structs.PageFunctionOn<T, Arg, R>, arg?: Arg): Promise<structs.SmartHandle<R>> {\n    const result = await this._channel.evaluateExpressionHandle({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return JSHandle.from(result.handle) as any as structs.SmartHandle<R>;\n  }\n\n  async getProperty(propertyName: string): Promise<JSHandle> {\n    const result = await this._channel.getProperty({ name: propertyName });\n    return JSHandle.from(result.handle);\n  }\n\n  async getProperties(): Promise<Map<string, JSHandle>> {\n    const map = new Map<string, JSHandle>();\n    for (const { name, value } of (await this._channel.getPropertyList()).properties)\n      map.set(name, JSHandle.from(value));\n    return map;\n  }\n\n  async jsonValue(): Promise<T> {\n    return parseResult((await this._channel.jsonValue()).value);\n  }\n\n  asElement(): T extends Node ? api.ElementHandle<T> : null {\n    return null as any;\n  }\n\n  async [Symbol.asyncDispose]() {\n    await this.dispose();\n  }\n\n  async dispose() {\n    try {\n      await this._channel.dispose();\n    } catch (e) {\n      if (isTargetClosedError(e))\n        return;\n      throw e;\n    }\n  }\n\n  async _objectCount() {\n    return await this._wrapApiCall(async () => {\n      const { count } = await this._channel.objectCount();\n      return count;\n    });\n  }\n\n  override toString(): string {\n    return this._preview;\n  }\n}\n\n// This function takes care of converting all JSHandles to their channels,\n// so that generic channel serializer converts them to guids.\nexport function serializeArgument(arg: any): channels.SerializedArgument {\n  const handles: channels.Channel[] = [];\n  const pushHandle = (channel: channels.Channel): number => {\n    handles.push(channel);\n    return handles.length - 1;\n  };\n  const value = serializeValue(arg, value => {\n    if (value instanceof JSHandle)\n      return { h: pushHandle(value._channel) };\n    return { fallThrough: value };\n  });\n  return { value, handles };\n}\n\nexport function parseResult(value: channels.SerializedValue): any {\n  return parseSerializedValue(value, undefined);\n}\n\nexport function assertMaxArguments(count: number, max: number): asserts count {\n  if (count > max)\n    throw new Error('Too many arguments. If you need to pass more than 1 argument to the function wrap them in an object.');\n}\n"],"mappings":"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"}