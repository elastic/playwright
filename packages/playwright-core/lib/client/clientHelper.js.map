{"version":3,"file":"clientHelper.js","names":["_fs","_interopRequireDefault","require","_utils","obj","__esModule","default","envObjectToArray","env","result","name","Object","is","undefined","push","value","String","evaluationScript","fun","arg","addSourceUrl","source","toString","argString","JSON","stringify","Error","isString","content","path","fs","promises","readFile","addSourceUrlToScript","replace"],"sources":["../../src/client/clientHelper.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as types from './types';\nimport fs from 'fs';\nimport { isString } from '../utils';\n\nexport function envObjectToArray(env: types.Env): { name: string, value: string }[] {\n  const result: { name: string, value: string }[] = [];\n  for (const name in env) {\n    if (!Object.is(env[name], undefined))\n      result.push({ name, value: String(env[name]) });\n  }\n  return result;\n}\n\nexport async function evaluationScript(fun: Function | string | { path?: string, content?: string }, arg?: any, addSourceUrl: boolean = true): Promise<string> {\n  if (typeof fun === 'function') {\n    const source = fun.toString();\n    const argString = Object.is(arg, undefined) ? 'undefined' : JSON.stringify(arg);\n    return `(${source})(${argString})`;\n  }\n  if (arg !== undefined)\n    throw new Error('Cannot evaluate a string with arguments');\n  if (isString(fun))\n    return fun;\n  if (fun.content !== undefined)\n    return fun.content;\n  if (fun.path !== undefined) {\n    let source = await fs.promises.readFile(fun.path, 'utf8');\n    if (addSourceUrl)\n      source = addSourceUrlToScript(source, fun.path);\n    return source;\n  }\n  throw new Error('Either path or content property must be present');\n}\n\nexport function addSourceUrlToScript(source: string, path: string): string {\n  return `${source}\\n//# sourceURL=${path.replace(/\\n/g, '')}`;\n}\n"],"mappings":";;;;;;;;AAkBA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAAoC,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAnBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,SAASG,gBAAgBA,CAACC,GAAc,EAAqC;EAClF,MAAMC,MAAyC,GAAG,EAAE;EACpD,KAAK,MAAMC,IAAI,IAAIF,GAAG,EAAE;IACtB,IAAI,CAACG,MAAM,CAACC,EAAE,CAACJ,GAAG,CAACE,IAAI,CAAC,EAAEG,SAAS,CAAC,EAClCJ,MAAM,CAACK,IAAI,CAAC;MAAEJ,IAAI;MAAEK,KAAK,EAAEC,MAAM,CAACR,GAAG,CAACE,IAAI,CAAC;IAAE,CAAC,CAAC;EACnD;EACA,OAAOD,MAAM;AACf;AAEO,eAAeQ,gBAAgBA,CAACC,GAA4D,EAAEC,GAAS,EAAEC,YAAqB,GAAG,IAAI,EAAmB;EAC7J,IAAI,OAAOF,GAAG,KAAK,UAAU,EAAE;IAC7B,MAAMG,MAAM,GAAGH,GAAG,CAACI,QAAQ,CAAC,CAAC;IAC7B,MAAMC,SAAS,GAAGZ,MAAM,CAACC,EAAE,CAACO,GAAG,EAAEN,SAAS,CAAC,GAAG,WAAW,GAAGW,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC;IAC/E,OAAQ,IAAGE,MAAO,KAAIE,SAAU,GAAE;EACpC;EACA,IAAIJ,GAAG,KAAKN,SAAS,EACnB,MAAM,IAAIa,KAAK,CAAC,yCAAyC,CAAC;EAC5D,IAAI,IAAAC,eAAQ,EAACT,GAAG,CAAC,EACf,OAAOA,GAAG;EACZ,IAAIA,GAAG,CAACU,OAAO,KAAKf,SAAS,EAC3B,OAAOK,GAAG,CAACU,OAAO;EACpB,IAAIV,GAAG,CAACW,IAAI,KAAKhB,SAAS,EAAE;IAC1B,IAAIQ,MAAM,GAAG,MAAMS,WAAE,CAACC,QAAQ,CAACC,QAAQ,CAACd,GAAG,CAACW,IAAI,EAAE,MAAM,CAAC;IACzD,IAAIT,YAAY,EACdC,MAAM,GAAGY,oBAAoB,CAACZ,MAAM,EAAEH,GAAG,CAACW,IAAI,CAAC;IACjD,OAAOR,MAAM;EACf;EACA,MAAM,IAAIK,KAAK,CAAC,iDAAiD,CAAC;AACpE;AAEO,SAASO,oBAAoBA,CAACZ,MAAc,EAAEQ,IAAY,EAAU;EACzE,OAAQ,GAAER,MAAO,mBAAkBQ,IAAI,CAACK,OAAO,CAAC,KAAK,EAAE,EAAE,CAAE,EAAC;AAC9D"}