{"version":3,"file":"elementHandle.js","names":["_frame","require","_jsHandle","_fs","_interopRequireDefault","_utilsBundle","_path","_utils","_fileUtils","_writableStream","_stream","_util","obj","__esModule","default","pipelineAsync","promisify","pipeline","ElementHandle","JSHandle","from","handle","_object","fromNullable","constructor","parent","type","guid","initializer","_elementChannel","_channel","asElement","ownerFrame","Frame","frame","contentFrame","getAttribute","name","value","undefined","inputValue","textContent","innerText","innerHTML","isChecked","isDisabled","isEditable","isEnabled","isHidden","isVisible","dispatchEvent","eventInit","serializeArgument","scrollIntoViewIfNeeded","options","hover","click","dblclick","tap","selectOption","values","result","convertSelectOptionValues","fill","selectText","setInputFiles","files","Error","converted","convertInputFiles","page","context","focus","text","press","key","check","uncheck","setChecked","checked","boundingBox","screenshot","copy","mask","determineScreenshotType","map","locator","selector","_selector","path","mkdirIfNeeded","fs","promises","writeFile","binary","$","querySelector","element","$$","querySelectorAll","elements","h","$eval","pageFunction","arg","evalOnSelector","expression","String","isFunction","parseResult","$$eval","evalOnSelectorAll","waitForElementState","state","waitForSelector","exports","Array","isArray","length","i","assert","v","isString","valueOrLabel","filePayloadExceedsSizeLimit","payloads","reduce","size","item","buffer","byteLength","fileUploadSizeLimit","resolvePathsAndDirectoryForInputFiles","items","_localPaths2","localPaths","localDirectory","stat","isDirectory","resolve","_localPaths","push","slice","some","every","_connection","isRemote","readdir","withFileTypes","recursive","filter","f","isFile","join","writableStreams","rootDir","_wrapApiCall","createTempFiles","rootDirName","basename","Promise","all","file","lastModifiedMs","mtimeMs","relative","writable","WritableStream","createReadStream","stream","directoryStream","streams","mimeType","mime","getType"],"sources":["../../src/client/elementHandle.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as channels from '@protocol/channels';\nimport { Frame } from './frame';\nimport type { Locator } from './locator';\nimport { JSHandle, serializeArgument, parseResult } from './jsHandle';\nimport type { ChannelOwner } from './channelOwner';\nimport type { SelectOption, FilePayload, Rect, SelectOptionOptions } from './types';\nimport fs from 'fs';\nimport { mime } from '../utilsBundle';\nimport path from 'path';\nimport { assert, isString } from '../utils';\nimport { fileUploadSizeLimit, mkdirIfNeeded } from '../utils/fileUtils';\nimport type * as api from '../../types/types';\nimport type * as structs from '../../types/structs';\nimport type { BrowserContext } from './browserContext';\nimport { WritableStream } from './writableStream';\nimport { pipeline } from 'stream';\nimport { promisify } from 'util';\n\nconst pipelineAsync = promisify(pipeline);\n\nexport class ElementHandle<T extends Node = Node> extends JSHandle<T> implements api.ElementHandle {\n  readonly _elementChannel: channels.ElementHandleChannel;\n\n  static override from(handle: channels.ElementHandleChannel): ElementHandle {\n    return (handle as any)._object;\n  }\n\n  static fromNullable(handle: channels.ElementHandleChannel | undefined): ElementHandle | null {\n    return handle ? ElementHandle.from(handle) : null;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.JSHandleInitializer) {\n    super(parent, type, guid, initializer);\n    this._elementChannel = this._channel as channels.ElementHandleChannel;\n  }\n\n  override asElement(): T extends Node ? ElementHandle<T> : null {\n    return this as any;\n  }\n\n  async ownerFrame(): Promise<Frame | null> {\n    return Frame.fromNullable((await this._elementChannel.ownerFrame()).frame);\n  }\n\n  async contentFrame(): Promise<Frame | null> {\n    return Frame.fromNullable((await this._elementChannel.contentFrame()).frame);\n  }\n\n  async getAttribute(name: string): Promise<string | null> {\n    const value = (await this._elementChannel.getAttribute({ name })).value;\n    return value === undefined ? null : value;\n  }\n\n  async inputValue(): Promise<string> {\n    return (await this._elementChannel.inputValue()).value;\n  }\n\n  async textContent(): Promise<string | null> {\n    const value = (await this._elementChannel.textContent()).value;\n    return value === undefined ? null : value;\n  }\n\n  async innerText(): Promise<string> {\n    return (await this._elementChannel.innerText()).value;\n  }\n\n  async innerHTML(): Promise<string> {\n    return (await this._elementChannel.innerHTML()).value;\n  }\n\n  async isChecked(): Promise<boolean> {\n    return (await this._elementChannel.isChecked()).value;\n  }\n\n  async isDisabled(): Promise<boolean> {\n    return (await this._elementChannel.isDisabled()).value;\n  }\n\n  async isEditable(): Promise<boolean> {\n    return (await this._elementChannel.isEditable()).value;\n  }\n\n  async isEnabled(): Promise<boolean> {\n    return (await this._elementChannel.isEnabled()).value;\n  }\n\n  async isHidden(): Promise<boolean> {\n    return (await this._elementChannel.isHidden()).value;\n  }\n\n  async isVisible(): Promise<boolean> {\n    return (await this._elementChannel.isVisible()).value;\n  }\n\n  async dispatchEvent(type: string, eventInit: Object = {}) {\n    await this._elementChannel.dispatchEvent({ type, eventInit: serializeArgument(eventInit) });\n  }\n\n  async scrollIntoViewIfNeeded(options: channels.ElementHandleScrollIntoViewIfNeededOptions = {}) {\n    await this._elementChannel.scrollIntoViewIfNeeded(options);\n  }\n\n  async hover(options: channels.ElementHandleHoverOptions = {}): Promise<void> {\n    await this._elementChannel.hover(options);\n  }\n\n  async click(options: channels.ElementHandleClickOptions = {}): Promise<void> {\n    return await this._elementChannel.click(options);\n  }\n\n  async dblclick(options: channels.ElementHandleDblclickOptions = {}): Promise<void> {\n    return await this._elementChannel.dblclick(options);\n  }\n\n  async tap(options: channels.ElementHandleTapOptions = {}): Promise<void> {\n    return await this._elementChannel.tap(options);\n  }\n\n  async selectOption(values: string | api.ElementHandle | SelectOption | string[] | api.ElementHandle[] | SelectOption[] | null, options: SelectOptionOptions = {}): Promise<string[]> {\n    const result = await this._elementChannel.selectOption({ ...convertSelectOptionValues(values), ...options });\n    return result.values;\n  }\n\n  async fill(value: string, options: channels.ElementHandleFillOptions = {}): Promise<void> {\n    return await this._elementChannel.fill({ value, ...options });\n  }\n\n  async selectText(options: channels.ElementHandleSelectTextOptions = {}): Promise<void> {\n    await this._elementChannel.selectText(options);\n  }\n\n  async setInputFiles(files: string | FilePayload | string[] | FilePayload[], options: channels.ElementHandleSetInputFilesOptions = {}) {\n    const frame = await this.ownerFrame();\n    if (!frame)\n      throw new Error('Cannot set input files to detached element');\n    const converted = await convertInputFiles(files, frame.page().context());\n    await this._elementChannel.setInputFiles({ ...converted, ...options });\n  }\n\n  async focus(): Promise<void> {\n    await this._elementChannel.focus();\n  }\n\n  async type(text: string, options: channels.ElementHandleTypeOptions = {}): Promise<void> {\n    await this._elementChannel.type({ text, ...options });\n  }\n\n  async press(key: string, options: channels.ElementHandlePressOptions = {}): Promise<void> {\n    await this._elementChannel.press({ key, ...options });\n  }\n\n  async check(options: channels.ElementHandleCheckOptions = {}) {\n    return await this._elementChannel.check(options);\n  }\n\n  async uncheck(options: channels.ElementHandleUncheckOptions = {}) {\n    return await this._elementChannel.uncheck(options);\n  }\n\n  async setChecked(checked: boolean, options?: channels.ElementHandleCheckOptions) {\n    if (checked)\n      await this.check(options);\n    else\n      await this.uncheck(options);\n  }\n\n  async boundingBox(): Promise<Rect | null> {\n    const value = (await this._elementChannel.boundingBox()).value;\n    return value === undefined ? null : value;\n  }\n\n  async screenshot(options: Omit<channels.ElementHandleScreenshotOptions, 'mask'> & { path?: string, mask?: Locator[] } = {}): Promise<Buffer> {\n    const copy: channels.ElementHandleScreenshotOptions = { ...options, mask: undefined };\n    if (!copy.type)\n      copy.type = determineScreenshotType(options);\n    if (options.mask) {\n      copy.mask = options.mask.map(locator => ({\n        frame: locator._frame._channel,\n        selector: locator._selector,\n      }));\n    }\n    const result = await this._elementChannel.screenshot(copy);\n    if (options.path) {\n      await mkdirIfNeeded(options.path);\n      await fs.promises.writeFile(options.path, result.binary);\n    }\n    return result.binary;\n  }\n\n  async $(selector: string): Promise<ElementHandle<SVGElement | HTMLElement> | null> {\n    return ElementHandle.fromNullable((await this._elementChannel.querySelector({ selector })).element) as ElementHandle<SVGElement | HTMLElement> | null;\n  }\n\n  async $$(selector: string): Promise<ElementHandle<SVGElement | HTMLElement>[]> {\n    const result = await this._elementChannel.querySelectorAll({ selector });\n    return result.elements.map(h => ElementHandle.from(h) as ElementHandle<SVGElement | HTMLElement>);\n  }\n\n  async $eval<R, Arg>(selector: string, pageFunction: structs.PageFunctionOn<Element, Arg, R>, arg?: Arg): Promise<R> {\n    const result = await this._elementChannel.evalOnSelector({ selector, expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return parseResult(result.value);\n  }\n\n  async $$eval<R, Arg>(selector: string, pageFunction: structs.PageFunctionOn<Element[], Arg, R>, arg?: Arg): Promise<R> {\n    const result = await this._elementChannel.evalOnSelectorAll({ selector, expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return parseResult(result.value);\n  }\n\n  async waitForElementState(state: 'visible' | 'hidden' | 'stable' | 'enabled' | 'disabled', options: channels.ElementHandleWaitForElementStateOptions = {}): Promise<void> {\n    return await this._elementChannel.waitForElementState({ state, ...options });\n  }\n\n  waitForSelector(selector: string, options: channels.ElementHandleWaitForSelectorOptions & { state: 'attached' | 'visible' }): Promise<ElementHandle<SVGElement | HTMLElement>>;\n  waitForSelector(selector: string, options?: channels.ElementHandleWaitForSelectorOptions): Promise<ElementHandle<SVGElement | HTMLElement> | null>;\n  async waitForSelector(selector: string, options: channels.ElementHandleWaitForSelectorOptions = {}): Promise<ElementHandle<SVGElement | HTMLElement> | null> {\n    const result = await this._elementChannel.waitForSelector({ selector, ...options });\n    return ElementHandle.fromNullable(result.element) as ElementHandle<SVGElement | HTMLElement> | null;\n  }\n}\n\nexport function convertSelectOptionValues(values: string | api.ElementHandle | SelectOption | string[] | api.ElementHandle[] | SelectOption[] | null): { elements?: channels.ElementHandleChannel[], options?: SelectOption[] } {\n  if (values === null)\n    return {};\n  if (!Array.isArray(values))\n    values = [values as any];\n  if (!values.length)\n    return {};\n  for (let i = 0; i < values.length; i++)\n    assert(values[i] !== null, `options[${i}]: expected object, got null`);\n  if (values[0] instanceof ElementHandle)\n    return { elements: (values as ElementHandle[]).map((v: ElementHandle) => v._elementChannel) };\n  if (isString(values[0]))\n    return { options: (values as string[]).map(valueOrLabel => ({ valueOrLabel })) };\n  return { options: values as SelectOption[] };\n}\n\ntype SetInputFilesFiles = Pick<channels.ElementHandleSetInputFilesParams, 'payloads' | 'localPaths' | 'localDirectory' | 'streams' | 'directoryStream'>;\n\nfunction filePayloadExceedsSizeLimit(payloads: FilePayload[]) {\n  return payloads.reduce((size, item) => size + (item.buffer ? item.buffer.byteLength : 0), 0) >= fileUploadSizeLimit;\n}\n\nasync function resolvePathsAndDirectoryForInputFiles(items: string[]): Promise<[string[] | undefined, string | undefined]> {\n  let localPaths: string[] | undefined;\n  let localDirectory: string | undefined;\n  for (const item of items) {\n    const stat = await fs.promises.stat(item as string);\n    if (stat.isDirectory()) {\n      if (localDirectory)\n        throw new Error('Multiple directories are not supported');\n      localDirectory = path.resolve(item as string);\n    } else {\n      localPaths ??= [];\n      localPaths.push(path.resolve(item as string));\n    }\n  }\n  if (localPaths?.length && localDirectory)\n    throw new Error('File paths must be all files or a single directory');\n  return [localPaths, localDirectory];\n}\n\nexport async function convertInputFiles(files: string | FilePayload | string[] | FilePayload[], context: BrowserContext): Promise<SetInputFilesFiles> {\n  const items: (string | FilePayload)[] = Array.isArray(files) ? files.slice() : [files];\n\n  if (items.some(item => typeof item === 'string')) {\n    if (!items.every(item => typeof item === 'string'))\n      throw new Error('File paths cannot be mixed with buffers');\n\n    const [localPaths, localDirectory] = await resolvePathsAndDirectoryForInputFiles(items);\n\n    if (context._connection.isRemote()) {\n      const files = localDirectory ? (await fs.promises.readdir(localDirectory, { withFileTypes: true, recursive: true })).filter(f => f.isFile()).map(f => path.join(f.path, f.name)) : localPaths!;\n      const { writableStreams, rootDir } = await context._wrapApiCall(async () => context._channel.createTempFiles({\n        rootDirName: localDirectory ? path.basename(localDirectory) : undefined,\n        items: await Promise.all(files.map(async file => {\n          const lastModifiedMs = (await fs.promises.stat(file)).mtimeMs;\n          return {\n            name: localDirectory ? path.relative(localDirectory, file) : path.basename(file),\n            lastModifiedMs\n          };\n        })),\n      }), true);\n      for (let i = 0; i < files.length; i++) {\n        const writable = WritableStream.from(writableStreams[i]);\n        await pipelineAsync(fs.createReadStream(files[i]), writable.stream());\n      }\n      return {\n        directoryStream: rootDir,\n        streams: localDirectory ? undefined : writableStreams,\n      };\n    }\n    return {\n      localPaths,\n      localDirectory,\n    };\n  }\n\n  const payloads = items as FilePayload[];\n  if (filePayloadExceedsSizeLimit(payloads))\n    throw new Error('Cannot set buffer larger than 50Mb, please write it to a file and pass its path instead.');\n  return { payloads };\n}\n\nexport function determineScreenshotType(options: { path?: string, type?: 'png' | 'jpeg' }): 'png' | 'jpeg' | undefined {\n  if (options.path) {\n    const mimeType = mime.getType(options.path);\n    if (mimeType === 'image/png')\n      return 'png';\n    else if (mimeType === 'image/jpeg')\n      return 'jpeg';\n    throw new Error(`path: unsupported mime type \"${mimeType}\"`);\n  }\n  return options.type;\n}\n"],"mappings":"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"}