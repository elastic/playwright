{"version":3,"file":"browserType.js","names":["_browser3","require","_browserContext","_channelOwner","_connection","_events","_clientHelper","_utils","_timeoutRunner","BrowserType","ChannelOwner","constructor","args","_serverLauncher","_contexts","Set","_playwright","_defaultContextOptions","_defaultContextTimeout","_defaultContextNavigationTimeout","_defaultLaunchOptions","from","browserType","_object","executablePath","_initializer","Error","name","launch","options","_this$_defaultLaunchO","assert","userDataDir","port","logger","launchOptions","ignoreDefaultArgs","Array","isArray","undefined","ignoreAllDefaultArgs","env","envObjectToArray","_wrapApiCall","browser","Browser","_channel","_didLaunchBrowser","launchServer","launchPersistentContext","_this$_defaultLaunchO2","contextParams","prepareBrowserContextParams","persistentParams","channel","result","context","BrowserContext","_didCreateContext","connect","optionsOrWsEndpoint","_connect","wsEndpoint","params","_params$exposeNetwork","deadline","timeout","monotonicTime","headers","localUtils","connectParams","exposeNetwork","_exposeNetwork","slowMo","__testHookRedirectPortForwarding","socksProxyRedirectPortForTest","pipe","connectHeaders","closePipe","close","catch","connection","Connection","_instrumentation","markAsRemote","on","closeError","onPipeClosed","reason","_browser","contexts","page","pages","_onClose","setTimeout","_browser2","_didClose","onmessage","message","send","dispatch","e","String","raceAgainstDeadline","__testHookBeforeCreateBrowser","playwright","initializePlaywright","preLaunchedBrowser","_setSelectors","selectors","_shouldCloseConnectionOnClose","_connectHeaders","Events","Disconnected","timedOut","connectOverCDP","endpointURLOrOptions","_connectOverCDP","endpointURL","headersObjectToArray","defaultContext","browserOptions","_browserType","_options","_logger","contextOptions","add","_setOptions","setDefaultTimeout","setDefaultNavigationTimeout","runAfterCreateBrowserContext","_willCloseContext","delete","runBeforeCloseBrowserContext","exports"],"sources":["../../src/client/browserType.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as channels from '@protocol/channels';\nimport { Browser } from './browser';\nimport { BrowserContext, prepareBrowserContextParams } from './browserContext';\nimport { ChannelOwner } from './channelOwner';\nimport type { LaunchOptions, LaunchServerOptions, ConnectOptions, LaunchPersistentContextOptions, BrowserContextOptions, Logger } from './types';\nimport { Connection } from './connection';\nimport { Events } from './events';\nimport type { ChildProcess } from 'child_process';\nimport { envObjectToArray } from './clientHelper';\nimport { assert, headersObjectToArray, monotonicTime } from '../utils';\nimport type * as api from '../../types/types';\nimport { raceAgainstDeadline } from '../utils/timeoutRunner';\nimport type { Playwright } from './playwright';\n\nexport interface BrowserServerLauncher {\n  launchServer(options?: LaunchServerOptions): Promise<api.BrowserServer>;\n}\n\n// This is here just for api generation and checking.\nexport interface BrowserServer extends api.BrowserServer {\n  process(): ChildProcess;\n  wsEndpoint(): string;\n  close(): Promise<void>;\n  kill(): Promise<void>;\n}\n\nexport class BrowserType extends ChannelOwner<channels.BrowserTypeChannel> implements api.BrowserType {\n  _serverLauncher?: BrowserServerLauncher;\n  _contexts = new Set<BrowserContext>();\n  _playwright!: Playwright;\n\n  // Instrumentation.\n  _defaultContextOptions?: BrowserContextOptions;\n  _defaultContextTimeout?: number;\n  _defaultContextNavigationTimeout?: number;\n  private _defaultLaunchOptions?: LaunchOptions;\n\n  static from(browserType: channels.BrowserTypeChannel): BrowserType {\n    return (browserType as any)._object;\n  }\n\n  executablePath(): string {\n    if (!this._initializer.executablePath)\n      throw new Error('Browser is not supported on current platform');\n    return this._initializer.executablePath;\n  }\n\n  name(): string {\n    return this._initializer.name;\n  }\n\n  async launch(options: LaunchOptions = {}): Promise<Browser> {\n    assert(!(options as any).userDataDir, 'userDataDir option is not supported in `browserType.launch`. Use `browserType.launchPersistentContext` instead');\n    assert(!(options as any).port, 'Cannot specify a port without launching as a server.');\n\n    const logger = options.logger || this._defaultLaunchOptions?.logger;\n    options = { ...this._defaultLaunchOptions, ...options };\n    const launchOptions: channels.BrowserTypeLaunchParams = {\n      ...options,\n      ignoreDefaultArgs: Array.isArray(options.ignoreDefaultArgs) ? options.ignoreDefaultArgs : undefined,\n      ignoreAllDefaultArgs: !!options.ignoreDefaultArgs && !Array.isArray(options.ignoreDefaultArgs),\n      env: options.env ? envObjectToArray(options.env) : undefined,\n    };\n    return await this._wrapApiCall(async () => {\n      const browser = Browser.from((await this._channel.launch(launchOptions)).browser);\n      this._didLaunchBrowser(browser, options, logger);\n      return browser;\n    });\n  }\n\n  async launchServer(options: LaunchServerOptions = {}): Promise<api.BrowserServer> {\n    if (!this._serverLauncher)\n      throw new Error('Launching server is not supported');\n    options = { ...this._defaultLaunchOptions, ...options };\n    return await this._serverLauncher.launchServer(options);\n  }\n\n  async launchPersistentContext(userDataDir: string, options: LaunchPersistentContextOptions = {}): Promise<BrowserContext> {\n    const logger = options.logger || this._defaultLaunchOptions?.logger;\n    assert(!(options as any).port, 'Cannot specify a port without launching as a server.');\n    options = { ...this._defaultLaunchOptions, ...this._defaultContextOptions, ...options };\n    const contextParams = await prepareBrowserContextParams(options);\n    const persistentParams: channels.BrowserTypeLaunchPersistentContextParams = {\n      ...contextParams,\n      ignoreDefaultArgs: Array.isArray(options.ignoreDefaultArgs) ? options.ignoreDefaultArgs : undefined,\n      ignoreAllDefaultArgs: !!options.ignoreDefaultArgs && !Array.isArray(options.ignoreDefaultArgs),\n      env: options.env ? envObjectToArray(options.env) : undefined,\n      channel: options.channel,\n      userDataDir,\n    };\n    return await this._wrapApiCall(async () => {\n      const result = await this._channel.launchPersistentContext(persistentParams);\n      const context = BrowserContext.from(result.context);\n      await this._didCreateContext(context, contextParams, options, logger);\n      return context;\n    });\n  }\n\n  connect(options: api.ConnectOptions & { wsEndpoint: string }): Promise<api.Browser>;\n  connect(wsEndpoint: string, options?: api.ConnectOptions): Promise<api.Browser>;\n  async connect(optionsOrWsEndpoint: string | (api.ConnectOptions & { wsEndpoint: string }), options?: api.ConnectOptions): Promise<Browser>{\n    if (typeof optionsOrWsEndpoint === 'string')\n      return await this._connect({ ...options, wsEndpoint: optionsOrWsEndpoint });\n    assert(optionsOrWsEndpoint.wsEndpoint, 'options.wsEndpoint is required');\n    return await this._connect(optionsOrWsEndpoint);\n  }\n\n  async _connect(params: ConnectOptions): Promise<Browser> {\n    const logger = params.logger;\n    return await this._wrapApiCall(async () => {\n      const deadline = params.timeout ? monotonicTime() + params.timeout : 0;\n      const headers = { 'x-playwright-browser': this.name(), ...params.headers };\n      const localUtils = this._connection.localUtils();\n      const connectParams: channels.LocalUtilsConnectParams = {\n        wsEndpoint: params.wsEndpoint,\n        headers,\n        exposeNetwork: params.exposeNetwork ?? params._exposeNetwork,\n        slowMo: params.slowMo,\n        timeout: params.timeout,\n      };\n      if ((params as any).__testHookRedirectPortForwarding)\n        connectParams.socksProxyRedirectPortForTest = (params as any).__testHookRedirectPortForwarding;\n      const { pipe, headers: connectHeaders } = await localUtils._channel.connect(connectParams);\n      const closePipe = () => pipe.close().catch(() => {});\n      const connection = new Connection(localUtils, this._instrumentation);\n      connection.markAsRemote();\n      connection.on('close', closePipe);\n\n      let browser: Browser;\n      let closeError: string | undefined;\n      const onPipeClosed = (reason?: string) => {\n        // Emulate all pages, contexts and the browser closing upon disconnect.\n        for (const context of browser?.contexts() || []) {\n          for (const page of context.pages())\n            page._onClose();\n          context._onClose();\n        }\n        connection.close(reason || closeError);\n        // Give a chance to any API call promises to reject upon page/context closure.\n        // This happens naturally when we receive page.onClose and browser.onClose from the server\n        // in separate tasks. However, upon pipe closure we used to dispatch them all synchronously\n        // here and promises did not have a chance to reject.\n        // The order of rejects vs closure is a part of the API contract and our test runner\n        // relies on it to attribute rejections to the right test.\n        setTimeout(() => browser?._didClose(), 0);\n      };\n      pipe.on('closed', params => onPipeClosed(params.reason));\n      connection.onmessage = message => this._wrapApiCall(() => pipe.send({ message }).catch(() => onPipeClosed()), /* isInternal */ true);\n\n      pipe.on('message', ({ message }) => {\n        try {\n          connection!.dispatch(message);\n        } catch (e) {\n          closeError = String(e);\n          closePipe();\n        }\n      });\n\n      const result = await raceAgainstDeadline(async () => {\n        // For tests.\n        if ((params as any).__testHookBeforeCreateBrowser)\n          await (params as any).__testHookBeforeCreateBrowser();\n\n        const playwright = await connection!.initializePlaywright();\n        if (!playwright._initializer.preLaunchedBrowser) {\n          closePipe();\n          throw new Error('Malformed endpoint. Did you use BrowserType.launchServer method?');\n        }\n        playwright._setSelectors(this._playwright.selectors);\n        browser = Browser.from(playwright._initializer.preLaunchedBrowser!);\n        this._didLaunchBrowser(browser, {}, logger);\n        browser._shouldCloseConnectionOnClose = true;\n        browser._connectHeaders = connectHeaders;\n        browser.on(Events.Browser.Disconnected, () => this._wrapApiCall(() => closePipe(), /* isInternal */ true));\n        return browser;\n      }, deadline);\n      if (!result.timedOut) {\n        return result.result;\n      } else {\n        closePipe();\n        throw new Error(`Timeout ${params.timeout}ms exceeded`);\n      }\n    });\n  }\n\n  async connectOverCDP(options: api.ConnectOverCDPOptions  & { wsEndpoint?: string }): Promise<api.Browser>;\n  async connectOverCDP(endpointURL: string, options?: api.ConnectOverCDPOptions): Promise<api.Browser>;\n  async connectOverCDP(endpointURLOrOptions: (api.ConnectOverCDPOptions & { wsEndpoint?: string })|string, options?: api.ConnectOverCDPOptions) {\n    if (typeof endpointURLOrOptions === 'string')\n      return await this._connectOverCDP(endpointURLOrOptions, options);\n    const endpointURL = 'endpointURL' in endpointURLOrOptions ? endpointURLOrOptions.endpointURL : endpointURLOrOptions.wsEndpoint;\n    assert(endpointURL, 'Cannot connect over CDP without wsEndpoint.');\n    return await this.connectOverCDP(endpointURL, endpointURLOrOptions);\n  }\n\n  async _connectOverCDP(endpointURL: string, params: api.ConnectOverCDPOptions = {}): Promise<Browser>  {\n    if (this.name() !== 'chromium')\n      throw new Error('Connecting over CDP is only supported in Chromium.');\n    const headers = params.headers ? headersObjectToArray(params.headers) : undefined;\n    const result = await this._channel.connectOverCDP({\n      endpointURL,\n      headers,\n      slowMo: params.slowMo,\n      timeout: params.timeout\n    });\n    const browser = Browser.from(result.browser);\n    this._didLaunchBrowser(browser, {}, params.logger);\n    if (result.defaultContext)\n      await this._didCreateContext(BrowserContext.from(result.defaultContext), {}, {}, params.logger);\n    return browser;\n  }\n\n  _didLaunchBrowser(browser: Browser, browserOptions: LaunchOptions, logger: Logger | undefined) {\n    browser._browserType = this;\n    browser._options = browserOptions;\n    browser._logger = logger;\n  }\n\n  async _didCreateContext(context: BrowserContext, contextOptions: channels.BrowserNewContextParams, browserOptions: LaunchOptions, logger: Logger | undefined) {\n    context._logger = logger;\n    context._browserType = this;\n    this._contexts.add(context);\n    context._setOptions(contextOptions, browserOptions);\n    if (this._defaultContextTimeout !== undefined)\n      context.setDefaultTimeout(this._defaultContextTimeout);\n    if (this._defaultContextNavigationTimeout !== undefined)\n      context.setDefaultNavigationTimeout(this._defaultContextNavigationTimeout);\n    await this._instrumentation.runAfterCreateBrowserContext(context);\n  }\n\n  async _willCloseContext(context: BrowserContext) {\n    this._contexts.delete(context);\n    await this._instrumentation.runBeforeCloseBrowserContext(context);\n  }\n}\n"],"mappings":"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"}