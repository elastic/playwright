{"version":3,"file":"video.js","names":["_utils","require","Video","constructor","page","connection","_artifact","_artifactReadyPromise","ManualPromise","_isRemote","isRemote","_closedOrCrashedScope","safeRace","_artifactReady","artifact","resolve","path","Error","_initializer","absolutePath","saveAs","delete","exports"],"sources":["../../src/client/video.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Page } from './page';\nimport type * as api from '../../types/types';\nimport type { Artifact } from './artifact';\nimport type { Connection } from './connection';\nimport { ManualPromise } from '../utils';\n\nexport class Video implements api.Video {\n  private _artifact: Promise<Artifact | null> | null = null;\n  private _artifactReadyPromise = new ManualPromise<Artifact>();\n  private _isRemote = false;\n\n  constructor(page: Page, connection: Connection) {\n    this._isRemote = connection.isRemote();\n    this._artifact = page._closedOrCrashedScope.safeRace(this._artifactReadyPromise);\n  }\n\n  _artifactReady(artifact: Artifact) {\n    this._artifactReadyPromise.resolve(artifact);\n  }\n\n  async path(): Promise<string> {\n    if (this._isRemote)\n      throw new Error(`Path is not available when connecting remotely. Use saveAs() to save a local copy.`);\n    const artifact = await this._artifact;\n    if (!artifact)\n      throw new Error('Page did not produce any video frames');\n    return artifact._initializer.absolutePath;\n  }\n\n  async saveAs(path: string): Promise<void> {\n    const artifact = await this._artifact;\n    if (!artifact)\n      throw new Error('Page did not produce any video frames');\n    return await artifact.saveAs(path);\n  }\n\n  async delete(): Promise<void> {\n    const artifact = await this._artifact;\n    if (artifact)\n      await artifact.delete();\n  }\n}\n"],"mappings":";;;;;;AAoBA,IAAAA,MAAA,GAAAC,OAAA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQO,MAAMC,KAAK,CAAsB;EAKtCC,WAAWA,CAACC,IAAU,EAAEC,UAAsB,EAAE;IAAA,KAJxCC,SAAS,GAAoC,IAAI;IAAA,KACjDC,qBAAqB,GAAG,IAAIC,oBAAa,CAAW,CAAC;IAAA,KACrDC,SAAS,GAAG,KAAK;IAGvB,IAAI,CAACA,SAAS,GAAGJ,UAAU,CAACK,QAAQ,CAAC,CAAC;IACtC,IAAI,CAACJ,SAAS,GAAGF,IAAI,CAACO,qBAAqB,CAACC,QAAQ,CAAC,IAAI,CAACL,qBAAqB,CAAC;EAClF;EAEAM,cAAcA,CAACC,QAAkB,EAAE;IACjC,IAAI,CAACP,qBAAqB,CAACQ,OAAO,CAACD,QAAQ,CAAC;EAC9C;EAEA,MAAME,IAAIA,CAAA,EAAoB;IAC5B,IAAI,IAAI,CAACP,SAAS,EAChB,MAAM,IAAIQ,KAAK,CAAE,oFAAmF,CAAC;IACvG,MAAMH,QAAQ,GAAG,MAAM,IAAI,CAACR,SAAS;IACrC,IAAI,CAACQ,QAAQ,EACX,MAAM,IAAIG,KAAK,CAAC,uCAAuC,CAAC;IAC1D,OAAOH,QAAQ,CAACI,YAAY,CAACC,YAAY;EAC3C;EAEA,MAAMC,MAAMA,CAACJ,IAAY,EAAiB;IACxC,MAAMF,QAAQ,GAAG,MAAM,IAAI,CAACR,SAAS;IACrC,IAAI,CAACQ,QAAQ,EACX,MAAM,IAAIG,KAAK,CAAC,uCAAuC,CAAC;IAC1D,OAAO,MAAMH,QAAQ,CAACM,MAAM,CAACJ,IAAI,CAAC;EACpC;EAEA,MAAMK,MAAMA,CAAA,EAAkB;IAC5B,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACR,SAAS;IACrC,IAAIQ,QAAQ,EACV,MAAMA,QAAQ,CAACO,MAAM,CAAC,CAAC;EAC3B;AACF;AAACC,OAAA,CAAApB,KAAA,GAAAA,KAAA"}