{"version":3,"file":"worker.js","names":["_events","require","_channelOwner","_jsHandle","_utils","_errors","Worker","ChannelOwner","from","worker","_object","constructor","parent","type","guid","initializer","_page","_context","_closedScope","LongStandingScope","_channel","on","_workers","delete","_serviceWorkers","emit","Events","Close","once","_this$_page","close","_closeErrorWithReason","TargetClosedError","url","_initializer","evaluate","pageFunction","arg","assertMaxArguments","arguments","length","result","evaluateExpression","expression","String","isFunction","serializeArgument","parseResult","value","evaluateHandle","evaluateExpressionHandle","JSHandle","handle","exports"],"sources":["../../src/client/worker.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Events } from './events';\nimport type * as channels from '@protocol/channels';\nimport { ChannelOwner } from './channelOwner';\nimport { assertMaxArguments, JSHandle, parseResult, serializeArgument } from './jsHandle';\nimport type { Page } from './page';\nimport type { BrowserContext } from './browserContext';\nimport type * as api from '../../types/types';\nimport type * as structs from '../../types/structs';\nimport { LongStandingScope } from '../utils';\nimport { TargetClosedError } from './errors';\n\nexport class Worker extends ChannelOwner<channels.WorkerChannel> implements api.Worker {\n  _page: Page | undefined;  // Set for web workers.\n  _context: BrowserContext | undefined;  // Set for service workers.\n  readonly _closedScope = new LongStandingScope();\n\n  static from(worker: channels.WorkerChannel): Worker {\n    return (worker as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.WorkerInitializer) {\n    super(parent, type, guid, initializer);\n    this._channel.on('close', () => {\n      if (this._page)\n        this._page._workers.delete(this);\n      if (this._context)\n        this._context._serviceWorkers.delete(this);\n      this.emit(Events.Worker.Close, this);\n    });\n    this.once(Events.Worker.Close, () => this._closedScope.close(this._page?._closeErrorWithReason() || new TargetClosedError()));\n  }\n\n  url(): string {\n    return this._initializer.url;\n  }\n\n  async evaluate<R, Arg>(pageFunction: structs.PageFunction<Arg, R>, arg?: Arg): Promise<R> {\n    assertMaxArguments(arguments.length, 2);\n    const result = await this._channel.evaluateExpression({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return parseResult(result.value);\n  }\n\n  async evaluateHandle<R, Arg>(pageFunction: structs.PageFunction<Arg, R>, arg?: Arg): Promise<structs.SmartHandle<R>> {\n    assertMaxArguments(arguments.length, 2);\n    const result = await this._channel.evaluateExpressionHandle({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n    return JSHandle.from(result.handle) as any as structs.SmartHandle<R>;\n  }\n}\n"],"mappings":";;;;;;AAgBA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAKA,IAAAG,MAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaO,MAAMK,MAAM,SAASC,0BAAY,CAA+C;EAKrF,OAAOC,IAAIA,CAACC,MAA8B,EAAU;IAClD,OAAQA,MAAM,CAASC,OAAO;EAChC;EAEAC,WAAWA,CAACC,MAAoB,EAAEC,IAAY,EAAEC,IAAY,EAAEC,WAAuC,EAAE;IACrG,KAAK,CAACH,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,CAAC;IAAC,KATzCC,KAAK;IAAqB;IAAA,KAC1BC,QAAQ;IAA+B;IAAA,KAC9BC,YAAY,GAAG,IAAIC,wBAAiB,CAAC,CAAC;IAQ7C,IAAI,CAACC,QAAQ,CAACC,EAAE,CAAC,OAAO,EAAE,MAAM;MAC9B,IAAI,IAAI,CAACL,KAAK,EACZ,IAAI,CAACA,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;MAClC,IAAI,IAAI,CAACN,QAAQ,EACf,IAAI,CAACA,QAAQ,CAACO,eAAe,CAACD,MAAM,CAAC,IAAI,CAAC;MAC5C,IAAI,CAACE,IAAI,CAACC,cAAM,CAACpB,MAAM,CAACqB,KAAK,EAAE,IAAI,CAAC;IACtC,CAAC,CAAC;IACF,IAAI,CAACC,IAAI,CAACF,cAAM,CAACpB,MAAM,CAACqB,KAAK,EAAE;MAAA,IAAAE,WAAA;MAAA,OAAM,IAAI,CAACX,YAAY,CAACY,KAAK,CAAC,EAAAD,WAAA,OAAI,CAACb,KAAK,cAAAa,WAAA,uBAAVA,WAAA,CAAYE,qBAAqB,CAAC,CAAC,KAAI,IAAIC,yBAAiB,CAAC,CAAC,CAAC;IAAA,EAAC;EAC/H;EAEAC,GAAGA,CAAA,EAAW;IACZ,OAAO,IAAI,CAACC,YAAY,CAACD,GAAG;EAC9B;EAEA,MAAME,QAAQA,CAASC,YAA0C,EAAEC,GAAS,EAAc;IACxF,IAAAC,4BAAkB,EAACC,SAAS,CAACC,MAAM,EAAE,CAAC,CAAC;IACvC,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACrB,QAAQ,CAACsB,kBAAkB,CAAC;MAAEC,UAAU,EAAEC,MAAM,CAACR,YAAY,CAAC;MAAES,UAAU,EAAE,OAAOT,YAAY,KAAK,UAAU;MAAEC,GAAG,EAAE,IAAAS,2BAAiB,EAACT,GAAG;IAAE,CAAC,CAAC;IACxK,OAAO,IAAAU,qBAAW,EAACN,MAAM,CAACO,KAAK,CAAC;EAClC;EAEA,MAAMC,cAAcA,CAASb,YAA0C,EAAEC,GAAS,EAAmC;IACnH,IAAAC,4BAAkB,EAACC,SAAS,CAACC,MAAM,EAAE,CAAC,CAAC;IACvC,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACrB,QAAQ,CAAC8B,wBAAwB,CAAC;MAAEP,UAAU,EAAEC,MAAM,CAACR,YAAY,CAAC;MAAES,UAAU,EAAE,OAAOT,YAAY,KAAK,UAAU;MAAEC,GAAG,EAAE,IAAAS,2BAAiB,EAACT,GAAG;IAAE,CAAC,CAAC;IAC9K,OAAOc,kBAAQ,CAAC3C,IAAI,CAACiC,MAAM,CAACW,MAAM,CAAC;EACrC;AACF;AAACC,OAAA,CAAA/C,MAAA,GAAAA,MAAA"}