{"version":3,"file":"fetch.js","names":["_fs","_interopRequireDefault","require","_path","util","_interopRequireWildcard","_utils","_fileUtils","_channelOwner","_network","_tracing","_errors","_browserContext","_Symbol$asyncDispose","_Symbol$asyncDispose2","_util$inspect$custom","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","APIRequest","constructor","playwright","_playwright","_contexts","Set","_defaultContextOptions","newContext","options","_this$_defaultContext","storageState","JSON","parse","fs","promises","readFile","tracesDir","context","APIRequestContext","from","_channel","newRequest","extraHTTPHeaders","headersObjectToArray","undefined","clientCertificates","toClientCertificatesProtocol","request","add","_request","_tracesDir","_instrumentation","runAfterCreateRequestContext","exports","Symbol","asyncDispose","ChannelOwner","channel","_object","parent","type","guid","initializer","_closeReason","Tracing","tracing","dispose","_this$_request","reason","runBeforeCloseRequestContext","isTargetClosedError","_resetStackCounter","delete","url","fetch","method","head","patch","post","put","urlOrRequest","isString","_innerFetch","_wrapApiCall","_options$request","_options$request2","_options$request3","TargetClosedError","assert","data","form","multipart","maxRedirects","maxRetries","params","mapParamsToArray","headersObj","headers","jsonData","formData","multipartData","postDataBuffer","isJsonContentType","isJsonParsable","stringify","Buffer","isBuffer","Error","objectToArray","globalThis","FormData","name","value","entries","push","file","mimeType","buffer","arrayBuffer","toFormField","fixtures","__testHookLookup","result","postData","timeout","failOnStatusCode","ignoreHTTPSErrors","APIResponse","response","state","path","mkdirIfNeeded","writeFile","isFilePayload","payload","filePayloadToJson","ReadStream","readStreamToJson","String","SyntaxError","inspect","custom","_initializer","_headers","RawHeaders","ok","status","statusText","headersArray","body","fetchResponseBody","fetchUid","_fetchUid","binary","text","content","toString","json","disposeAPIResponse","map","join","_fetchLog","log","fetchLog","stream","Promise","resolve","reject","chunks","on","chunk","concat","err","streamPath","basename","toLocaleLowerCase","queryStringToArray","queryString","searchParams","URLSearchParams","searchParamsToArray","size"],"sources":["../../src/client/fetch.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport * as util from 'util';\nimport type { Serializable } from '../../types/structs';\nimport type * as api from '../../types/types';\nimport type { HeadersArray, NameValue } from '../common/types';\nimport type * as channels from '@protocol/channels';\nimport { assert, headersObjectToArray, isString } from '../utils';\nimport { mkdirIfNeeded } from '../utils/fileUtils';\nimport { ChannelOwner } from './channelOwner';\nimport { RawHeaders } from './network';\nimport type { ClientCertificate, FilePayload, Headers, StorageState } from './types';\nimport type { Playwright } from './playwright';\nimport { Tracing } from './tracing';\nimport { TargetClosedError, isTargetClosedError } from './errors';\nimport { toClientCertificatesProtocol } from './browserContext';\n\nexport type FetchOptions = {\n  params?: { [key: string]: string | number | boolean; } | URLSearchParams | string,\n  method?: string,\n  headers?: Headers,\n  data?: string | Buffer | Serializable,\n  form?: { [key: string]: string|number|boolean; };\n  multipart?: { [key: string]: string|number|boolean|fs.ReadStream|FilePayload; };\n  timeout?: number,\n  failOnStatusCode?: boolean,\n  ignoreHTTPSErrors?: boolean,\n  maxRedirects?: number,\n  maxRetries?: number,\n};\n\ntype NewContextOptions = Omit<channels.PlaywrightNewRequestOptions, 'extraHTTPHeaders' | 'clientCertificates' | 'storageState' | 'tracesDir'> & {\n  extraHTTPHeaders?: Headers,\n  storageState?: string | StorageState,\n  clientCertificates?: ClientCertificate[];\n};\n\ntype RequestWithBodyOptions = Omit<FetchOptions, 'method'>;\n\nexport class APIRequest implements api.APIRequest {\n  private _playwright: Playwright;\n  readonly _contexts = new Set<APIRequestContext>();\n\n  // Instrumentation.\n  _defaultContextOptions?: NewContextOptions & { tracesDir?: string };\n\n  constructor(playwright: Playwright) {\n    this._playwright = playwright;\n  }\n\n  async newContext(options: NewContextOptions = {}): Promise<APIRequestContext> {\n    options = { ...this._defaultContextOptions, ...options };\n    const storageState = typeof options.storageState === 'string' ?\n      JSON.parse(await fs.promises.readFile(options.storageState, 'utf8')) :\n      options.storageState;\n    // We do not expose tracesDir in the API, so do not allow options to accidentally override it.\n    const tracesDir = this._defaultContextOptions?.tracesDir;\n    const context = APIRequestContext.from((await this._playwright._channel.newRequest({\n      ...options,\n      extraHTTPHeaders: options.extraHTTPHeaders ? headersObjectToArray(options.extraHTTPHeaders) : undefined,\n      storageState,\n      tracesDir,\n      clientCertificates: await toClientCertificatesProtocol(options.clientCertificates),\n    })).request);\n    this._contexts.add(context);\n    context._request = this;\n    context._tracing._tracesDir = tracesDir;\n    await context._instrumentation.runAfterCreateRequestContext(context);\n    return context;\n  }\n}\n\nexport class APIRequestContext extends ChannelOwner<channels.APIRequestContextChannel> implements api.APIRequestContext {\n  _request?: APIRequest;\n  readonly _tracing: Tracing;\n  private _closeReason: string | undefined;\n\n  static from(channel: channels.APIRequestContextChannel): APIRequestContext {\n    return (channel as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.APIRequestContextInitializer) {\n    super(parent, type, guid, initializer);\n    this._tracing = Tracing.from(initializer.tracing);\n  }\n\n  async [Symbol.asyncDispose]() {\n    await this.dispose();\n  }\n\n  async dispose(options: { reason?: string } = {}): Promise<void> {\n    this._closeReason = options.reason;\n    await this._instrumentation.runBeforeCloseRequestContext(this);\n    try {\n      await this._channel.dispose(options);\n    } catch (e) {\n      if (isTargetClosedError(e))\n        return;\n      throw e;\n    }\n    this._tracing._resetStackCounter();\n    this._request?._contexts.delete(this);\n  }\n\n  async delete(url: string, options?: RequestWithBodyOptions): Promise<APIResponse> {\n    return await this.fetch(url, {\n      ...options,\n      method: 'DELETE',\n    });\n  }\n\n  async head(url: string, options?: RequestWithBodyOptions): Promise<APIResponse> {\n    return await this.fetch(url, {\n      ...options,\n      method: 'HEAD',\n    });\n  }\n\n  async get(url: string, options?: RequestWithBodyOptions): Promise<APIResponse> {\n    return await this.fetch(url, {\n      ...options,\n      method: 'GET',\n    });\n  }\n\n  async patch(url: string, options?: RequestWithBodyOptions): Promise<APIResponse> {\n    return await this.fetch(url, {\n      ...options,\n      method: 'PATCH',\n    });\n  }\n\n  async post(url: string, options?: RequestWithBodyOptions): Promise<APIResponse> {\n    return await this.fetch(url, {\n      ...options,\n      method: 'POST',\n    });\n  }\n\n  async put(url: string, options?: RequestWithBodyOptions): Promise<APIResponse> {\n    return await this.fetch(url, {\n      ...options,\n      method: 'PUT',\n    });\n  }\n\n  async fetch(urlOrRequest: string | api.Request, options: FetchOptions = {}): Promise<APIResponse> {\n    const url = isString(urlOrRequest) ? urlOrRequest : undefined;\n    const request = isString(urlOrRequest) ? undefined : urlOrRequest;\n    return await this._innerFetch({ url, request, ...options });\n  }\n\n  async _innerFetch(options: FetchOptions & { url?: string, request?: api.Request } = {}): Promise<APIResponse> {\n    return await this._wrapApiCall(async () => {\n      if (this._closeReason)\n        throw new TargetClosedError(this._closeReason);\n      assert(options.request || typeof options.url === 'string', 'First argument must be either URL string or Request');\n      assert((options.data === undefined ? 0 : 1) + (options.form === undefined ? 0 : 1) + (options.multipart === undefined ? 0 : 1) <= 1, `Only one of 'data', 'form' or 'multipart' can be specified`);\n      assert(options.maxRedirects === undefined || options.maxRedirects >= 0, `'maxRedirects' must be greater than or equal to '0'`);\n      assert(options.maxRetries === undefined || options.maxRetries >= 0, `'maxRetries' must be greater than or equal to '0'`);\n      const url = options.url !== undefined ? options.url : options.request!.url();\n      const params = mapParamsToArray(options.params);\n      const method = options.method || options.request?.method();\n      // Cannot call allHeaders() here as the request may be paused inside route handler.\n      const headersObj = options.headers || options.request?.headers();\n      const headers = headersObj ? headersObjectToArray(headersObj) : undefined;\n      let jsonData: any;\n      let formData: channels.NameValue[] | undefined;\n      let multipartData: channels.FormField[] | undefined;\n      let postDataBuffer: Buffer | undefined;\n      if (options.data !== undefined) {\n        if (isString(options.data)) {\n          if (isJsonContentType(headers))\n            jsonData = isJsonParsable(options.data) ? options.data : JSON.stringify(options.data);\n          else\n            postDataBuffer = Buffer.from(options.data, 'utf8');\n        } else if (Buffer.isBuffer(options.data)) {\n          postDataBuffer = options.data;\n        } else if (typeof options.data === 'object' || typeof options.data === 'number' || typeof options.data === 'boolean') {\n          jsonData = JSON.stringify(options.data);\n        } else {\n          throw new Error(`Unexpected 'data' type`);\n        }\n      } else if (options.form) {\n        formData = objectToArray(options.form);\n      } else if (options.multipart) {\n        multipartData = [];\n        if (globalThis.FormData && options.multipart instanceof FormData) {\n          const form = options.multipart;\n          for (const [name, value] of form.entries()) {\n            if (isString(value)) {\n              multipartData.push({ name, value });\n            } else {\n              const file: ServerFilePayload = {\n                name: value.name,\n                mimeType: value.type,\n                buffer: Buffer.from(await value.arrayBuffer()),\n              };\n              multipartData.push({ name, file });\n            }\n          }\n        } else {\n          // Convert file-like values to ServerFilePayload structs.\n          for (const [name, value] of Object.entries(options.multipart))\n            multipartData.push(await toFormField(name, value));\n        }\n      }\n      if (postDataBuffer === undefined && jsonData === undefined && formData === undefined && multipartData === undefined)\n        postDataBuffer = options.request?.postDataBuffer() || undefined;\n      const fixtures = {\n        __testHookLookup: (options as any).__testHookLookup\n      };\n      const result = await this._channel.fetch({\n        url,\n        params,\n        method,\n        headers,\n        postData: postDataBuffer,\n        jsonData,\n        formData,\n        multipartData,\n        timeout: options.timeout,\n        failOnStatusCode: options.failOnStatusCode,\n        ignoreHTTPSErrors: options.ignoreHTTPSErrors,\n        maxRedirects: options.maxRedirects,\n        maxRetries: options.maxRetries,\n        ...fixtures\n      });\n      return new APIResponse(this, result.response);\n    });\n  }\n\n  async storageState(options: { path?: string } = {}): Promise<StorageState> {\n    const state = await this._channel.storageState();\n    if (options.path) {\n      await mkdirIfNeeded(options.path);\n      await fs.promises.writeFile(options.path, JSON.stringify(state, undefined, 2), 'utf8');\n    }\n    return state;\n  }\n}\n\nasync function toFormField(name: string, value: string|number|boolean|fs.ReadStream|FilePayload): Promise<channels.FormField> {\n  if (isFilePayload(value)) {\n    const payload = value as FilePayload;\n    if (!Buffer.isBuffer(payload.buffer))\n      throw new Error(`Unexpected buffer type of 'data.${name}'`);\n    return { name, file: filePayloadToJson(payload) };\n  } else if (value instanceof fs.ReadStream) {\n    return { name, file: await readStreamToJson(value as fs.ReadStream) };\n  } else {\n    return { name, value: String(value) };\n  }\n}\n\nfunction isJsonParsable(value: any) {\n  if (typeof value !== 'string')\n    return false;\n  try {\n    JSON.parse(value);\n    return true;\n  } catch (e) {\n    if (e instanceof SyntaxError)\n      return false;\n    else\n      throw e;\n  }\n}\n\nexport class APIResponse implements api.APIResponse {\n  private readonly _initializer: channels.APIResponse;\n  private readonly _headers: RawHeaders;\n  readonly _request: APIRequestContext;\n\n  constructor(context: APIRequestContext, initializer: channels.APIResponse) {\n    this._request = context;\n    this._initializer = initializer;\n    this._headers = new RawHeaders(this._initializer.headers);\n  }\n\n  ok(): boolean {\n    return this._initializer.status >= 200 && this._initializer.status <= 299;\n  }\n\n  url(): string {\n    return this._initializer.url;\n  }\n\n  status(): number {\n    return this._initializer.status;\n  }\n\n  statusText(): string {\n    return this._initializer.statusText;\n  }\n\n  headers(): Headers {\n    return this._headers.headers();\n  }\n\n  headersArray(): HeadersArray {\n    return this._headers.headersArray();\n  }\n\n  async body(): Promise<Buffer> {\n    try {\n      const result = await this._request._channel.fetchResponseBody({ fetchUid: this._fetchUid() });\n      if (result.binary === undefined)\n        throw new Error('Response has been disposed');\n      return result.binary;\n    } catch (e) {\n      if (isTargetClosedError(e))\n        throw new Error('Response has been disposed');\n      throw e;\n    }\n  }\n\n  async text(): Promise<string> {\n    const content = await this.body();\n    return content.toString('utf8');\n  }\n\n  async json(): Promise<object> {\n    const content = await this.text();\n    return JSON.parse(content);\n  }\n\n  async [Symbol.asyncDispose]() {\n    await this.dispose();\n  }\n\n  async dispose(): Promise<void> {\n    await this._request._channel.disposeAPIResponse({ fetchUid: this._fetchUid() });\n  }\n\n  [util.inspect.custom]() {\n    const headers = this.headersArray().map(({ name, value }) => `  ${name}: ${value}`);\n    return `APIResponse: ${this.status()} ${this.statusText()}\\n${headers.join('\\n')}`;\n  }\n\n  _fetchUid(): string {\n    return this._initializer.fetchUid;\n  }\n\n  async _fetchLog(): Promise<string[]> {\n    const { log } = await this._request._channel.fetchLog({ fetchUid: this._fetchUid() });\n    return log;\n  }\n}\n\ntype ServerFilePayload = NonNullable<channels.FormField['file']>;\n\nfunction filePayloadToJson(payload: FilePayload): ServerFilePayload {\n  return {\n    name: payload.name,\n    mimeType: payload.mimeType,\n    buffer: payload.buffer,\n  };\n}\n\nasync function readStreamToJson(stream: fs.ReadStream): Promise<ServerFilePayload> {\n  const buffer = await new Promise<Buffer>((resolve, reject) => {\n    const chunks: Buffer[] = [];\n    stream.on('data', chunk => chunks.push(chunk as Buffer));\n    stream.on('end', () => resolve(Buffer.concat(chunks)));\n    stream.on('error', err => reject(err));\n  });\n  const streamPath: string = Buffer.isBuffer(stream.path) ? stream.path.toString('utf8') : stream.path;\n  return {\n    name: path.basename(streamPath),\n    buffer,\n  };\n}\n\nfunction isJsonContentType(headers?: HeadersArray): boolean {\n  if (!headers)\n    return false;\n  for (const { name, value } of headers) {\n    if (name.toLocaleLowerCase() === 'content-type')\n      return value === 'application/json';\n  }\n  return false;\n}\n\nfunction objectToArray(map?: { [key: string]: any }): NameValue[] | undefined {\n  if (!map)\n    return undefined;\n  const result = [];\n  for (const [name, value] of Object.entries(map))\n    result.push({ name, value: String(value) });\n  return result;\n}\n\nfunction queryStringToArray(queryString: string): NameValue[] | undefined {\n  const searchParams = new URLSearchParams(queryString);\n  return searchParamsToArray(searchParams);\n}\n\nfunction searchParamsToArray(searchParams: URLSearchParams): NameValue[] | undefined {\n  if (searchParams.size === 0)\n    return undefined;\n\n  const result: NameValue[] = [];\n  for (const [name, value] of searchParams.entries())\n    result.push({ name, value });\n  return result;\n}\n\nfunction mapParamsToArray(params: FetchOptions['params']): NameValue[] | undefined {\n  if (params instanceof URLSearchParams)\n    return searchParamsToArray(params);\n  if (typeof params === 'string')\n    return queryStringToArray(params);\n\n  return objectToArray(params);\n}\n\nfunction isFilePayload(value: any): boolean {\n  return typeof value === 'object' && value['name'] && value['mimeType'] && value['buffer'];\n}\n"],"mappings":"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"}