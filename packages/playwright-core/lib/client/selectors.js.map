{"version":3,"file":"selectors.js","names":["_clientHelper","require","_channelOwner","_locator","Selectors","constructor","_channels","Set","_registrations","register","name","script","options","source","evaluationScript","undefined","params","channel","_channel","push","setTestIdAttribute","attributeName","setTestIdAttributeName","testIdAttributeName","catch","_addChannel","add","_removeChannel","delete","exports","SelectorsOwner","ChannelOwner","from","browser","_object"],"sources":["../../src/client/selectors.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { evaluationScript } from './clientHelper';\nimport type * as channels from '@protocol/channels';\nimport { ChannelOwner } from './channelOwner';\nimport type { SelectorEngine } from './types';\nimport type * as api from '../../types/types';\nimport { setTestIdAttribute, testIdAttributeName } from './locator';\n\nexport class Selectors implements api.Selectors {\n  private _channels = new Set<SelectorsOwner>();\n  private _registrations: channels.SelectorsRegisterParams[] = [];\n\n  async register(name: string, script: string | (() => SelectorEngine) | { path?: string, content?: string }, options: { contentScript?: boolean } = {}): Promise<void> {\n    const source = await evaluationScript(script, undefined, false);\n    const params = { ...options, name, source };\n    for (const channel of this._channels)\n      await channel._channel.register(params);\n    this._registrations.push(params);\n  }\n\n  setTestIdAttribute(attributeName: string) {\n    setTestIdAttribute(attributeName);\n    for (const channel of this._channels)\n      channel._channel.setTestIdAttributeName({ testIdAttributeName: attributeName }).catch(() => {});\n  }\n\n  _addChannel(channel: SelectorsOwner) {\n    this._channels.add(channel);\n    for (const params of this._registrations) {\n      // This should not fail except for connection closure, but just in case we catch.\n      channel._channel.register(params).catch(() => {});\n      channel._channel.setTestIdAttributeName({ testIdAttributeName: testIdAttributeName() }).catch(() => {});\n    }\n  }\n\n  _removeChannel(channel: SelectorsOwner) {\n    this._channels.delete(channel);\n  }\n}\n\nexport class SelectorsOwner extends ChannelOwner<channels.SelectorsChannel> {\n  static from(browser: channels.SelectorsChannel): SelectorsOwner {\n    return (browser as any)._object;\n  }\n}\n"],"mappings":";;;;;;AAgBA,IAAAA,aAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AAGA,IAAAE,QAAA,GAAAF,OAAA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASO,MAAMG,SAAS,CAA0B;EAAAC,YAAA;IAAA,KACtCC,SAAS,GAAG,IAAIC,GAAG,CAAiB,CAAC;IAAA,KACrCC,cAAc,GAAuC,EAAE;EAAA;EAE/D,MAAMC,QAAQA,CAACC,IAAY,EAAEC,MAA6E,EAAEC,OAAoC,GAAG,CAAC,CAAC,EAAiB;IACpK,MAAMC,MAAM,GAAG,MAAM,IAAAC,8BAAgB,EAACH,MAAM,EAAEI,SAAS,EAAE,KAAK,CAAC;IAC/D,MAAMC,MAAM,GAAG;MAAE,GAAGJ,OAAO;MAAEF,IAAI;MAAEG;IAAO,CAAC;IAC3C,KAAK,MAAMI,OAAO,IAAI,IAAI,CAACX,SAAS,EAClC,MAAMW,OAAO,CAACC,QAAQ,CAACT,QAAQ,CAACO,MAAM,CAAC;IACzC,IAAI,CAACR,cAAc,CAACW,IAAI,CAACH,MAAM,CAAC;EAClC;EAEAI,kBAAkBA,CAACC,aAAqB,EAAE;IACxC,IAAAD,2BAAkB,EAACC,aAAa,CAAC;IACjC,KAAK,MAAMJ,OAAO,IAAI,IAAI,CAACX,SAAS,EAClCW,OAAO,CAACC,QAAQ,CAACI,sBAAsB,CAAC;MAAEC,mBAAmB,EAAEF;IAAc,CAAC,CAAC,CAACG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACnG;EAEAC,WAAWA,CAACR,OAAuB,EAAE;IACnC,IAAI,CAACX,SAAS,CAACoB,GAAG,CAACT,OAAO,CAAC;IAC3B,KAAK,MAAMD,MAAM,IAAI,IAAI,CAACR,cAAc,EAAE;MACxC;MACAS,OAAO,CAACC,QAAQ,CAACT,QAAQ,CAACO,MAAM,CAAC,CAACQ,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;MACjDP,OAAO,CAACC,QAAQ,CAACI,sBAAsB,CAAC;QAAEC,mBAAmB,EAAE,IAAAA,4BAAmB,EAAC;MAAE,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACzG;EACF;EAEAG,cAAcA,CAACV,OAAuB,EAAE;IACtC,IAAI,CAACX,SAAS,CAACsB,MAAM,CAACX,OAAO,CAAC;EAChC;AACF;AAACY,OAAA,CAAAzB,SAAA,GAAAA,SAAA;AAEM,MAAM0B,cAAc,SAASC,0BAAY,CAA4B;EAC1E,OAAOC,IAAIA,CAACC,OAAkC,EAAkB;IAC9D,OAAQA,OAAO,CAASC,OAAO;EACjC;AACF;AAACL,OAAA,CAAAC,cAAA,GAAAA,cAAA"}