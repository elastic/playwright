{"version":3,"file":"accessibility.js","names":["axNodeFromProtocol","axNode","result","value","valueNumber","undefined","valueString","checked","pressed","children","map","Accessibility","constructor","channel","_channel","snapshot","options","root","_elementChannel","accessibilitySnapshot","interestingOnly","rootAXNode","exports"],"sources":["../../src/client/accessibility.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as channels from '@protocol/channels';\nimport type { ElementHandle } from './elementHandle';\nimport type * as api from '../../types/types';\n\ntype SerializedAXNode = Omit<channels.AXNode, 'valueString' | 'valueNumber' | 'children' | 'checked' | 'pressed'> & {\n  value?: string|number,\n  checked?: boolean | 'mixed',\n  pressed?: boolean | 'mixed',\n  children?: SerializedAXNode[]\n};\n\nfunction axNodeFromProtocol(axNode: channels.AXNode): SerializedAXNode {\n  const result: SerializedAXNode = {\n    ...axNode,\n    value: axNode.valueNumber !== undefined ? axNode.valueNumber : axNode.valueString,\n    checked: axNode.checked === 'checked' ? true : axNode.checked === 'unchecked' ? false : axNode.checked,\n    pressed: axNode.pressed === 'pressed' ? true : axNode.pressed === 'released' ? false : axNode.pressed,\n    children: axNode.children ? axNode.children.map(axNodeFromProtocol) : undefined,\n  };\n  delete (result as any).valueNumber;\n  delete (result as any).valueString;\n  return result;\n}\n\nexport class Accessibility implements api.Accessibility {\n  private _channel: channels.PageChannel;\n\n  constructor(channel: channels.PageChannel) {\n    this._channel = channel;\n  }\n\n  async snapshot(options: { interestingOnly?: boolean; root?: ElementHandle } = {}): Promise<SerializedAXNode | null> {\n    const root = options.root ? options.root._elementChannel : undefined;\n    const result = await this._channel.accessibilitySnapshot({ interestingOnly: options.interestingOnly, root });\n    return result.rootAXNode ? axNodeFromProtocol(result.rootAXNode) : null;\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaA,SAASA,kBAAkBA,CAACC,MAAuB,EAAoB;EACrE,MAAMC,MAAwB,GAAG;IAC/B,GAAGD,MAAM;IACTE,KAAK,EAAEF,MAAM,CAACG,WAAW,KAAKC,SAAS,GAAGJ,MAAM,CAACG,WAAW,GAAGH,MAAM,CAACK,WAAW;IACjFC,OAAO,EAAEN,MAAM,CAACM,OAAO,KAAK,SAAS,GAAG,IAAI,GAAGN,MAAM,CAACM,OAAO,KAAK,WAAW,GAAG,KAAK,GAAGN,MAAM,CAACM,OAAO;IACtGC,OAAO,EAAEP,MAAM,CAACO,OAAO,KAAK,SAAS,GAAG,IAAI,GAAGP,MAAM,CAACO,OAAO,KAAK,UAAU,GAAG,KAAK,GAAGP,MAAM,CAACO,OAAO;IACrGC,QAAQ,EAAER,MAAM,CAACQ,QAAQ,GAAGR,MAAM,CAACQ,QAAQ,CAACC,GAAG,CAACV,kBAAkB,CAAC,GAAGK;EACxE,CAAC;EACD,OAAQH,MAAM,CAASE,WAAW;EAClC,OAAQF,MAAM,CAASI,WAAW;EAClC,OAAOJ,MAAM;AACf;AAEO,MAAMS,aAAa,CAA8B;EAGtDC,WAAWA,CAACC,OAA6B,EAAE;IAAA,KAFnCC,QAAQ;IAGd,IAAI,CAACA,QAAQ,GAAGD,OAAO;EACzB;EAEA,MAAME,QAAQA,CAACC,OAA4D,GAAG,CAAC,CAAC,EAAoC;IAClH,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACC,IAAI,CAACC,eAAe,GAAGb,SAAS;IACpE,MAAMH,MAAM,GAAG,MAAM,IAAI,CAACY,QAAQ,CAACK,qBAAqB,CAAC;MAAEC,eAAe,EAAEJ,OAAO,CAACI,eAAe;MAAEH;IAAK,CAAC,CAAC;IAC5G,OAAOf,MAAM,CAACmB,UAAU,GAAGrB,kBAAkB,CAACE,MAAM,CAACmB,UAAU,CAAC,GAAG,IAAI;EACzE;AACF;AAACC,OAAA,CAAAX,aAAA,GAAAA,aAAA"}