{"version":3,"file":"fetch.js","names":["_http","_interopRequireDefault","require","_https","_stream","_url","_zlib","_timeoutSettings","_userAgent","_utils","_utilsBundle","_browserContext","_cookieStore","_formData","_happyEyeballs","_instrumentation","_progress","_tracing","_network","_socksClientCertificatesInterceptor","obj","__esModule","default","APIRequestContext","SdkObject","findResponseBody","guid","request","allInstances","body","fetchResponses","get","undefined","constructor","parent","Map","fetchLog","_activeProgressControllers","Set","_closeReason","add","_disposeImpl","delete","clear","emit","Events","Dispose","disposeResponse","fetchUid","_storeResponseBody","uid","createGuid","set","fetch","params","metadata","_params$method","_defaults$clientCerti","defaults","_defaultOptions","headers","userAgent","extraHTTPHeaders","name","value","setHeader","requestUrl","URL","url","baseURL","searchParams","append","credentials","_getHttpCredentials","send","setBasicAuthorizationHeader","method","toUpperCase","proxy","agent","clientCertificates","length","server","shouldBypassProxy","bypass","_proxyOpts$protocol","proxyOpts","parse","protocol","startsWith","SocksProxyAgent","host","hostname","port","username","auth","password","HttpsProxyAgent","timeout","timeoutSettings","deadline","monotonicTime","options","maxRedirects","getMatchingTLSOptionsForOrigin","origin","__testHookLookup","ignoreHTTPSErrors","rejectUnauthorized","postData","serializePostData","String","byteLength","controller","ProgressController","fetchResponse","run","progress","_sendRequestWithRetries","maxRetries","log","failOnStatusCode","status","responseText","text","toString","substring","Error","statusText","_parseSetCookieHeader","responseUrl","setCookie","defaultPath","pathname","substr","split","slice","join","cookies","header","cookie","parseCookie","domain","assert","includes","domainMatches","path","push","_updateRequestCookieHeader","getHeader","_cookies","valueArray","map","c","_maxRetries","backoff","i","_sendRequest","e","code","Promise","f","setTimeout","_getHeader","requestCookies","p","v","trim","requestEvent","Request","fulfill","reject","requestConstructor","https","http","httpsHappyEyeballsAgent","httpHappyEyeballsAgent","requestOptions","response","notifyRequestFinished","requestFinishedEvent","httpVersion","statusCode","statusMessage","rawHeaders","RequestFinished","Object","entries","_addCookies","all","catch","redirectStatus","_response$headers$loc","destroy","removeHeader","redirectOptions","locationHeaderValue","Buffer","from","location","locationURL","error","on","chunks","notifyBodyFinished","concat","toHeadersArray","transform","encoding","zlib","createGunzip","flush","constants","Z_SYNC_FLUSH","finishFlush","createBrotliDecompress","BROTLI_OPERATION_FLUSH","createInflate","emptyStreamTransform","SafeEmptyStreamTransform","pipeline","message","chunk","rewriteOpenSSLErrorIfNeeded","disposeListener","off","rejectOnTimeout","remaining","write","end","_this$_defaultOptions","_this$_defaultOptions2","httpCredentials","toLowerCase","exports","Transform","onEmptyStreamCallback","_receivedSomeData","_onEmptyStreamCallback","_transform","callback","_flush","BrowserContextAPIRequestContext","context","_context","once","BrowserContext","Close","tracing","dispose","reason","_options","_browser","addCookies","storageState","GlobalAPIRequestContext","playwright","CookieStore","_origins","attribution","TimeoutSettings","setDefaultTimeout","test","origins","verifyClientCertificates","getUserAgent","Tracing","tracesDir","deleteTmpTracesDir","allCookies","result","pairs","filter","s","key","separatorPos","indexOf","expires","httpOnly","secure","sameSite","expiresMs","Date","isFinite","Math","min","kMaxCookieExpiresDateInSeconds","maxAgeSec","parseInt","now","toLocaleLowerCase","jsonData","formData","multipartData","URLSearchParams","MultipartFormData","field","file","addFileField","addField","contentTypeHeader","finish","keepExisting","existing","find","pair","domains","some","d","endsWith","encoded"],"sources":["../../src/server/fetch.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as channels from '@protocol/channels';\nimport type { LookupAddress } from 'dns';\nimport http from 'http';\nimport https from 'https';\nimport type { Readable, TransformCallback } from 'stream';\nimport { pipeline, Transform } from 'stream';\nimport url from 'url';\nimport zlib from 'zlib';\nimport type { HTTPCredentials } from '../../types/types';\nimport { TimeoutSettings } from '../common/timeoutSettings';\nimport { getUserAgent } from '../utils/userAgent';\nimport { assert, createGuid, monotonicTime } from '../utils';\nimport { HttpsProxyAgent, SocksProxyAgent } from '../utilsBundle';\nimport { BrowserContext, verifyClientCertificates } from './browserContext';\nimport { CookieStore, domainMatches } from './cookieStore';\nimport { MultipartFormData } from './formData';\nimport { httpHappyEyeballsAgent, httpsHappyEyeballsAgent } from '../utils/happy-eyeballs';\nimport type { CallMetadata } from './instrumentation';\nimport { SdkObject } from './instrumentation';\nimport type { Playwright } from './playwright';\nimport type { Progress } from './progress';\nimport { ProgressController } from './progress';\nimport { Tracing } from './trace/recorder/tracing';\nimport type * as types from './types';\nimport type { HeadersArray, ProxySettings } from './types';\nimport { kMaxCookieExpiresDateInSeconds } from './network';\nimport { getMatchingTLSOptionsForOrigin, rewriteOpenSSLErrorIfNeeded } from './socksClientCertificatesInterceptor';\n\ntype FetchRequestOptions = {\n  userAgent: string;\n  extraHTTPHeaders?: HeadersArray;\n  httpCredentials?: HTTPCredentials;\n  proxy?: ProxySettings;\n  timeoutSettings: TimeoutSettings;\n  ignoreHTTPSErrors?: boolean;\n  baseURL?: string;\n  clientCertificates?: channels.BrowserNewContextOptions['clientCertificates'];\n};\n\ntype HeadersObject = Readonly<{ [name: string]: string }>;\n\nexport type APIRequestEvent = {\n  url: URL,\n  method: string,\n  headers: HeadersObject,\n  cookies: channels.NameValue[],\n  postData?: Buffer\n};\n\nexport type APIRequestFinishedEvent = {\n  requestEvent: APIRequestEvent,\n  httpVersion: string;\n  headers: http.IncomingHttpHeaders;\n  cookies: channels.NetworkCookie[];\n  rawHeaders: string[];\n  statusCode: number;\n  statusMessage: string;\n  body?: Buffer;\n};\n\ntype SendRequestOptions = https.RequestOptions & {\n  maxRedirects: number,\n  deadline: number,\n  headers: HeadersObject,\n  __testHookLookup?: (hostname: string) => LookupAddress[]\n};\n\nexport abstract class APIRequestContext extends SdkObject {\n  static Events = {\n    Dispose: 'dispose',\n\n    Request: 'request',\n    RequestFinished: 'requestfinished',\n  };\n\n  readonly fetchResponses: Map<string, Buffer> = new Map();\n  readonly fetchLog: Map<string, string[]> = new Map();\n  protected static allInstances: Set<APIRequestContext> = new Set();\n  readonly _activeProgressControllers = new Set<ProgressController>();\n  _closeReason: string | undefined;\n\n  static findResponseBody(guid: string): Buffer | undefined {\n    for (const request of APIRequestContext.allInstances) {\n      const body = request.fetchResponses.get(guid);\n      if (body)\n        return body;\n    }\n    return undefined;\n  }\n\n  constructor(parent: SdkObject) {\n    super(parent, 'request-context');\n    APIRequestContext.allInstances.add(this);\n  }\n\n  protected _disposeImpl() {\n    APIRequestContext.allInstances.delete(this);\n    this.fetchResponses.clear();\n    this.fetchLog.clear();\n    this.emit(APIRequestContext.Events.Dispose);\n  }\n\n  disposeResponse(fetchUid: string) {\n    this.fetchResponses.delete(fetchUid);\n    this.fetchLog.delete(fetchUid);\n  }\n\n  abstract tracing(): Tracing;\n\n  abstract dispose(options: { reason?: string }): Promise<void>;\n\n  abstract _defaultOptions(): FetchRequestOptions;\n  abstract _addCookies(cookies: channels.NetworkCookie[]): Promise<void>;\n  abstract _cookies(url: URL): Promise<channels.NetworkCookie[]>;\n  abstract storageState(): Promise<channels.APIRequestContextStorageStateResult>;\n\n  private _storeResponseBody(body: Buffer): string {\n    const uid = createGuid();\n    this.fetchResponses.set(uid, body);\n    return uid;\n  }\n\n  async fetch(params: channels.APIRequestContextFetchParams, metadata: CallMetadata): Promise<channels.APIResponse> {\n    const defaults = this._defaultOptions();\n    const headers: HeadersObject = {\n      'user-agent': defaults.userAgent,\n      'accept': '*/*',\n      'accept-encoding': 'gzip,deflate,br',\n    };\n\n    if (defaults.extraHTTPHeaders) {\n      for (const { name, value } of defaults.extraHTTPHeaders)\n        setHeader(headers, name, value);\n    }\n\n    if (params.headers) {\n      for (const { name, value } of params.headers)\n        setHeader(headers, name, value);\n    }\n\n    const requestUrl = new URL(params.url, defaults.baseURL);\n    if (params.params) {\n      for (const { name, value } of params.params)\n        requestUrl.searchParams.append(name, value);\n    }\n\n    const credentials = this._getHttpCredentials(requestUrl);\n    if (credentials?.send === 'always')\n      setBasicAuthorizationHeader(headers, credentials);\n\n    const method = params.method?.toUpperCase() || 'GET';\n    const proxy = defaults.proxy;\n    let agent;\n    // When `clientCertificates` is present, we set the `proxy` property to our own socks proxy\n    // for the browser to use. However, we don't need it here, because we already respect\n    // `clientCertificates` when fetching from Node.js.\n    if (proxy && !defaults.clientCertificates?.length && proxy.server !== 'per-context' && !shouldBypassProxy(requestUrl, proxy.bypass)) {\n      const proxyOpts = url.parse(proxy.server);\n      if (proxyOpts.protocol?.startsWith('socks')) {\n        agent = new SocksProxyAgent({\n          host: proxyOpts.hostname,\n          port: proxyOpts.port || undefined,\n        });\n      } else {\n        if (proxy.username)\n          proxyOpts.auth = `${proxy.username}:${proxy.password || ''}`;\n        // TODO: We should use HttpProxyAgent conditional on proxyOpts.protocol instead of always using CONNECT method.\n        agent = new HttpsProxyAgent(proxyOpts);\n      }\n    }\n\n    const timeout = defaults.timeoutSettings.timeout(params);\n    const deadline = timeout && (monotonicTime() + timeout);\n\n    const options: SendRequestOptions = {\n      method,\n      headers,\n      agent,\n      maxRedirects: params.maxRedirects === 0 ? -1 : params.maxRedirects === undefined ? 20 : params.maxRedirects,\n      timeout,\n      deadline,\n      ...getMatchingTLSOptionsForOrigin(this._defaultOptions().clientCertificates, requestUrl.origin),\n      __testHookLookup: (params as any).__testHookLookup,\n    };\n    // rejectUnauthorized = undefined is treated as true in Node.js 12.\n    if (params.ignoreHTTPSErrors || defaults.ignoreHTTPSErrors)\n      options.rejectUnauthorized = false;\n\n    const postData = serializePostData(params, headers);\n    if (postData)\n      setHeader(headers, 'content-length', String(postData.byteLength));\n    const controller = new ProgressController(metadata, this);\n    const fetchResponse = await controller.run(progress => {\n      return this._sendRequestWithRetries(progress, requestUrl, options, postData, params.maxRetries);\n    });\n    const fetchUid = this._storeResponseBody(fetchResponse.body);\n    this.fetchLog.set(fetchUid, controller.metadata.log);\n    if (params.failOnStatusCode && (fetchResponse.status < 200 || fetchResponse.status >= 400)) {\n      let responseText = '';\n      if (fetchResponse.body.byteLength) {\n        let text = fetchResponse.body.toString('utf8');\n        if (text.length > 1000)\n          text = text.substring(0, 997) + '...';\n        responseText = `\\nResponse text:\\n${text}`;\n      }\n      throw new Error(`${fetchResponse.status} ${fetchResponse.statusText}${responseText}`);\n    }\n    return { ...fetchResponse, fetchUid };\n  }\n\n  private _parseSetCookieHeader(responseUrl: string, setCookie: string[] | undefined): channels.NetworkCookie[] {\n    if (!setCookie)\n      return [];\n    const url = new URL(responseUrl);\n    // https://datatracker.ietf.org/doc/html/rfc6265#section-5.1.4\n    const defaultPath = '/' + url.pathname.substr(1).split('/').slice(0, -1).join('/');\n    const cookies: channels.NetworkCookie[] = [];\n    for (const header of setCookie) {\n      // Decode cookie value?\n      const cookie: channels.NetworkCookie | null = parseCookie(header);\n      if (!cookie)\n        continue;\n      // https://datatracker.ietf.org/doc/html/rfc6265#section-5.2.3\n      if (!cookie.domain)\n        cookie.domain = url.hostname;\n      else\n        assert(cookie.domain.startsWith('.') || !cookie.domain.includes('.'));\n      if (!domainMatches(url.hostname, cookie.domain!))\n        continue;\n      // https://datatracker.ietf.org/doc/html/rfc6265#section-5.2.4\n      if (!cookie.path || !cookie.path.startsWith('/'))\n        cookie.path = defaultPath;\n      cookies.push(cookie);\n    }\n    return cookies;\n  }\n\n  private async _updateRequestCookieHeader(url: URL, headers: HeadersObject) {\n    if (getHeader(headers, 'cookie') !== undefined)\n      return;\n    const cookies = await this._cookies(url);\n    if (cookies.length) {\n      const valueArray = cookies.map(c => `${c.name}=${c.value}`);\n      setHeader(headers, 'cookie', valueArray.join('; '));\n    }\n  }\n\n  private async _sendRequestWithRetries(progress: Progress, url: URL, options: SendRequestOptions, postData?: Buffer, maxRetries?: number): Promise<Omit<channels.APIResponse, 'fetchUid'> & { body: Buffer }>{\n    maxRetries ??= 0;\n    let backoff = 250;\n    for (let i = 0; i <= maxRetries; i++) {\n      try {\n        return await this._sendRequest(progress, url, options, postData);\n      } catch (e) {\n        if (maxRetries === 0)\n          throw e;\n        if (i === maxRetries || (options.deadline && monotonicTime() + backoff > options.deadline))\n          throw new Error(`Failed after ${i + 1} attempt(s): ${e}`);\n        // Retry on connection reset only.\n        if (e.code !== 'ECONNRESET')\n          throw e;\n        progress.log(`  Received ECONNRESET, will retry after ${backoff}ms.`);\n        await new Promise(f => setTimeout(f, backoff));\n        backoff *= 2;\n      }\n    }\n    throw new Error('Unreachable');\n  }\n\n  private async _sendRequest(progress: Progress, url: URL, options: SendRequestOptions, postData?: Buffer): Promise<Omit<channels.APIResponse, 'fetchUid'> & { body: Buffer }>{\n    await this._updateRequestCookieHeader(url, options.headers);\n\n    const requestCookies = getHeader(options.headers, 'cookie')?.split(';').map(p => {\n      const [name, value] = p.split('=').map(v => v.trim());\n      return { name, value };\n    }) || [];\n    const requestEvent: APIRequestEvent = {\n      url,\n      method: options.method!,\n      headers: options.headers,\n      cookies: requestCookies,\n      postData\n    };\n    this.emit(APIRequestContext.Events.Request, requestEvent);\n\n    return new Promise((fulfill, reject) => {\n      const requestConstructor: ((url: URL, options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void) => http.ClientRequest)\n        = (url.protocol === 'https:' ? https : http).request;\n      // If we have a proxy agent already, do not override it.\n      const agent = options.agent || (url.protocol === 'https:' ? httpsHappyEyeballsAgent : httpHappyEyeballsAgent);\n      const requestOptions = { ...options, agent };\n      const request = requestConstructor(url, requestOptions as any, async response => {\n        const notifyRequestFinished = (body?: Buffer) => {\n          const requestFinishedEvent: APIRequestFinishedEvent = {\n            requestEvent,\n            httpVersion: response.httpVersion,\n            statusCode: response.statusCode || 0,\n            statusMessage: response.statusMessage || '',\n            headers: response.headers,\n            rawHeaders: response.rawHeaders,\n            cookies,\n            body\n          };\n          this.emit(APIRequestContext.Events.RequestFinished, requestFinishedEvent);\n        };\n        progress.log(`← ${response.statusCode} ${response.statusMessage}`);\n        for (const [name, value] of Object.entries(response.headers))\n          progress.log(`  ${name}: ${value}`);\n\n        const cookies = this._parseSetCookieHeader(response.url || url.toString(), response.headers['set-cookie']) ;\n        if (cookies.length) {\n          try {\n            await this._addCookies(cookies);\n          } catch (e) {\n            // Cookie value is limited by 4096 characters in the browsers. If setCookies failed,\n            // we try setting each cookie individually just in case only some of them are bad.\n            await Promise.all(cookies.map(c => this._addCookies([c]).catch(() => {})));\n          }\n        }\n\n        if (redirectStatus.includes(response.statusCode!) && options.maxRedirects >= 0) {\n          if (!options.maxRedirects) {\n            reject(new Error('Max redirect count exceeded'));\n            request.destroy();\n            return;\n          }\n          const headers = { ...options.headers };\n          removeHeader(headers, `cookie`);\n\n          // HTTP-redirect fetch step 13 (https://fetch.spec.whatwg.org/#http-redirect-fetch)\n          const status = response.statusCode!;\n          let method = options.method!;\n          if ((status === 301 || status === 302) && method === 'POST' ||\n              status === 303 && !['GET', 'HEAD'].includes(method)) {\n            method = 'GET';\n            postData = undefined;\n            removeHeader(headers, `content-encoding`);\n            removeHeader(headers, `content-language`);\n            removeHeader(headers, `content-length`);\n            removeHeader(headers, `content-location`);\n            removeHeader(headers, `content-type`);\n          }\n\n\n          const redirectOptions: SendRequestOptions = {\n            method,\n            headers,\n            agent: options.agent,\n            maxRedirects: options.maxRedirects - 1,\n            timeout: options.timeout,\n            deadline: options.deadline,\n            ...getMatchingTLSOptionsForOrigin(this._defaultOptions().clientCertificates, url.origin),\n            __testHookLookup: options.__testHookLookup,\n          };\n          // rejectUnauthorized = undefined is treated as true in node 12.\n          if (options.rejectUnauthorized === false)\n            redirectOptions.rejectUnauthorized = false;\n\n          // HTTP-redirect fetch step 4: If locationURL is null, then return response.\n          // Best-effort UTF-8 decoding, per spec it's US-ASCII only, but browsers are more lenient.\n          // Node.js parses it as Latin1 via std::v8::String, so we convert it to UTF-8.\n          const locationHeaderValue = Buffer.from(response.headers.location ?? '', 'latin1').toString('utf8');\n          if (locationHeaderValue) {\n            let locationURL;\n            try {\n              locationURL = new URL(locationHeaderValue, url);\n            } catch (error) {\n              reject(new Error(`uri requested responds with an invalid redirect URL: ${locationHeaderValue}`));\n              request.destroy();\n              return;\n            }\n\n            if (headers['host'])\n              headers['host'] = locationURL.host;\n\n            notifyRequestFinished();\n            fulfill(this._sendRequest(progress, locationURL, redirectOptions, postData));\n            request.destroy();\n            return;\n          }\n        }\n        if (response.statusCode === 401 && !getHeader(options.headers, 'authorization')) {\n          const auth = response.headers['www-authenticate'];\n          const credentials = this._getHttpCredentials(url);\n          if (auth?.trim().startsWith('Basic') && credentials) {\n            setBasicAuthorizationHeader(options.headers, credentials);\n            notifyRequestFinished();\n            fulfill(this._sendRequest(progress, url, options, postData));\n            request.destroy();\n            return;\n          }\n        }\n        response.on('aborted', () => reject(new Error('aborted')));\n\n        const chunks: Buffer[] = [];\n        const notifyBodyFinished = () => {\n          const body = Buffer.concat(chunks);\n          notifyRequestFinished(body);\n          fulfill({\n            url: response.url || url.toString(),\n            status: response.statusCode || 0,\n            statusText: response.statusMessage || '',\n            headers: toHeadersArray(response.rawHeaders),\n            body\n          });\n        };\n\n        let body: Readable = response;\n        let transform: Transform | undefined;\n        const encoding = response.headers['content-encoding'];\n        if (encoding === 'gzip' || encoding === 'x-gzip') {\n          transform = zlib.createGunzip({\n            flush: zlib.constants.Z_SYNC_FLUSH,\n            finishFlush: zlib.constants.Z_SYNC_FLUSH\n          });\n        } else if (encoding === 'br') {\n          transform = zlib.createBrotliDecompress({\n            flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n            finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n          });\n        } else if (encoding === 'deflate') {\n          transform = zlib.createInflate();\n        }\n        if (transform) {\n          // Brotli and deflate decompressors throw if the input stream is empty.\n          const emptyStreamTransform = new SafeEmptyStreamTransform(notifyBodyFinished);\n          body = pipeline(response, emptyStreamTransform, transform, e => {\n            if (e)\n              reject(new Error(`failed to decompress '${encoding}' encoding: ${e.message}`));\n          });\n          body.on('error', e => reject(new Error(`failed to decompress '${encoding}' encoding: ${e}`)));\n        } else {\n          body.on('error', reject);\n        }\n\n        body.on('data', chunk => chunks.push(chunk));\n        body.on('end', notifyBodyFinished);\n      });\n      request.on('error', error => reject(rewriteOpenSSLErrorIfNeeded(error)));\n\n      const disposeListener = () => {\n        reject(new Error('Request context disposed.'));\n        request.destroy();\n      };\n      this.on(APIRequestContext.Events.Dispose, disposeListener);\n      request.on('close', () => this.off(APIRequestContext.Events.Dispose, disposeListener));\n\n      progress.log(`→ ${options.method} ${url.toString()}`);\n      if (options.headers) {\n        for (const [name, value] of Object.entries(options.headers))\n          progress.log(`  ${name}: ${value}`);\n      }\n\n      if (options.deadline) {\n        const rejectOnTimeout = () =>  {\n          reject(new Error(`Request timed out after ${options.timeout}ms`));\n          request.destroy();\n        };\n        const remaining = options.deadline - monotonicTime();\n        if (remaining <= 0) {\n          rejectOnTimeout();\n          return;\n        }\n        request.setTimeout(remaining, rejectOnTimeout);\n      }\n\n      if (postData)\n        request.write(postData);\n      request.end();\n    });\n  }\n\n  private _getHttpCredentials(url: URL) {\n    if (!this._defaultOptions().httpCredentials?.origin || url.origin.toLowerCase() === this._defaultOptions().httpCredentials?.origin?.toLowerCase())\n      return this._defaultOptions().httpCredentials;\n    return undefined;\n  }\n}\n\nclass SafeEmptyStreamTransform extends Transform {\n  private _receivedSomeData: boolean = false;\n  private _onEmptyStreamCallback: () => void;\n\n  constructor(onEmptyStreamCallback: () => void) {\n    super();\n    this._onEmptyStreamCallback = onEmptyStreamCallback;\n  }\n  override _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void {\n    this._receivedSomeData = true;\n    callback(null, chunk);\n  }\n  override _flush(callback: TransformCallback): void {\n    if (this._receivedSomeData)\n      callback(null);\n    else\n      this._onEmptyStreamCallback();\n  }\n}\n\nexport class BrowserContextAPIRequestContext extends APIRequestContext {\n  private readonly _context: BrowserContext;\n\n  constructor(context: BrowserContext) {\n    super(context);\n    this._context = context;\n    context.once(BrowserContext.Events.Close, () => this._disposeImpl());\n  }\n\n  override tracing() {\n    return this._context.tracing;\n  }\n\n  override async dispose(options: { reason?: string }) {\n    this._closeReason = options.reason;\n    this.fetchResponses.clear();\n  }\n\n  _defaultOptions(): FetchRequestOptions {\n    return {\n      userAgent: this._context._options.userAgent || this._context._browser.userAgent(),\n      extraHTTPHeaders: this._context._options.extraHTTPHeaders,\n      httpCredentials: this._context._options.httpCredentials,\n      proxy: this._context._options.proxy || this._context._browser.options.proxy,\n      timeoutSettings: this._context._timeoutSettings,\n      ignoreHTTPSErrors: this._context._options.ignoreHTTPSErrors,\n      baseURL: this._context._options.baseURL,\n      clientCertificates: this._context._options.clientCertificates,\n    };\n  }\n\n  async _addCookies(cookies: channels.NetworkCookie[]): Promise<void> {\n    await this._context.addCookies(cookies);\n  }\n\n  async _cookies(url: URL): Promise<channels.NetworkCookie[]> {\n    return await this._context.cookies(url.toString());\n  }\n\n  override async storageState(): Promise<channels.APIRequestContextStorageStateResult> {\n    return this._context.storageState();\n  }\n}\n\n\nexport class GlobalAPIRequestContext extends APIRequestContext {\n  private readonly _cookieStore: CookieStore = new CookieStore();\n  private readonly _options: FetchRequestOptions;\n  private readonly _origins: channels.OriginStorage[] | undefined;\n  private readonly _tracing: Tracing;\n\n  constructor(playwright: Playwright, options: channels.PlaywrightNewRequestOptions) {\n    super(playwright);\n    this.attribution.context = this;\n    const timeoutSettings = new TimeoutSettings();\n    if (options.timeout !== undefined)\n      timeoutSettings.setDefaultTimeout(options.timeout);\n    const proxy = options.proxy;\n    if (proxy?.server) {\n      let url = proxy?.server.trim();\n      if (!/^\\w+:\\/\\//.test(url))\n        url = 'http://' + url;\n      proxy.server = url;\n      if (options.clientCertificates)\n        throw new Error('Cannot specify both proxy and clientCertificates');\n    }\n    if (options.storageState) {\n      this._origins = options.storageState.origins;\n      this._cookieStore.addCookies(options.storageState.cookies || []);\n    }\n    verifyClientCertificates(options.clientCertificates);\n    this._options = {\n      baseURL: options.baseURL,\n      userAgent: options.userAgent || getUserAgent(),\n      extraHTTPHeaders: options.extraHTTPHeaders,\n      ignoreHTTPSErrors: !!options.ignoreHTTPSErrors,\n      httpCredentials: options.httpCredentials,\n      clientCertificates: options.clientCertificates,\n      proxy,\n      timeoutSettings,\n    };\n    this._tracing = new Tracing(this, options.tracesDir);\n  }\n\n  override tracing() {\n    return this._tracing;\n  }\n\n  override async dispose(options: { reason?: string }) {\n    this._closeReason = options.reason;\n    await this._tracing.flush();\n    await this._tracing.deleteTmpTracesDir();\n    this._disposeImpl();\n  }\n\n  _defaultOptions(): FetchRequestOptions {\n    return this._options;\n  }\n\n  async _addCookies(cookies: channels.NetworkCookie[]): Promise<void> {\n    this._cookieStore.addCookies(cookies);\n  }\n\n  async _cookies(url: URL): Promise<channels.NetworkCookie[]> {\n    return this._cookieStore.cookies(url);\n  }\n\n  override async storageState(): Promise<channels.APIRequestContextStorageStateResult> {\n    return {\n      cookies: this._cookieStore.allCookies(),\n      origins: this._origins || []\n    };\n  }\n}\n\nfunction toHeadersArray(rawHeaders: string[]): types.HeadersArray {\n  const result: types.HeadersArray = [];\n  for (let i = 0; i < rawHeaders.length; i += 2)\n    result.push({ name: rawHeaders[i], value: rawHeaders[i + 1] });\n  return result;\n}\n\nconst redirectStatus = [301, 302, 303, 307, 308];\n\nfunction parseCookie(header: string): channels.NetworkCookie | null {\n  const pairs = header.split(';').filter(s => s.trim().length > 0).map(p => {\n    let key = '';\n    let value = '';\n    const separatorPos = p.indexOf('=');\n    if (separatorPos === -1) {\n      // If only a key is specified, the value is left undefined.\n      key = p.trim();\n    } else {\n      // Otherwise we assume that the key is the element before the first `=`\n      key = p.slice(0, separatorPos).trim();\n      // And the value is the rest of the string.\n      value = p.slice(separatorPos + 1).trim();\n    }\n    return [key, value];\n  });\n  if (!pairs.length)\n    return null;\n  const [name, value] = pairs[0];\n  const cookie: channels.NetworkCookie = {\n    name,\n    value,\n    domain: '',\n    path: '',\n    expires: -1,\n    httpOnly: false,\n    secure: false,\n    // From https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\n    // The cookie-sending behavior if SameSite is not specified is SameSite=Lax.\n    sameSite: 'Lax'\n  };\n  for (let i = 1; i < pairs.length; i++) {\n    const [name, value] = pairs[i];\n    switch (name.toLowerCase()) {\n      case 'expires':\n        const expiresMs = (+new Date(value));\n        // https://datatracker.ietf.org/doc/html/rfc6265#section-5.2.1\n        if (isFinite(expiresMs)) {\n          if (expiresMs <= 0)\n            cookie.expires = 0;\n          else\n            cookie.expires = Math.min(expiresMs / 1000, kMaxCookieExpiresDateInSeconds);\n        }\n        break;\n      case 'max-age':\n        const maxAgeSec = parseInt(value, 10);\n        if (isFinite(maxAgeSec)) {\n          // From https://datatracker.ietf.org/doc/html/rfc6265#section-5.2.2\n          // If delta-seconds is less than or equal to zero (0), let expiry-time\n          // be the earliest representable date and time.\n          if (maxAgeSec <= 0)\n            cookie.expires = 0;\n          else\n            cookie.expires = Math.min(Date.now() / 1000 + maxAgeSec, kMaxCookieExpiresDateInSeconds);\n        }\n        break;\n      case 'domain':\n        cookie.domain = value.toLocaleLowerCase() || '';\n        if (cookie.domain && !cookie.domain.startsWith('.') && cookie.domain.includes('.'))\n          cookie.domain = '.' + cookie.domain;\n        break;\n      case 'path':\n        cookie.path = value || '';\n        break;\n      case 'secure':\n        cookie.secure = true;\n        break;\n      case 'httponly':\n        cookie.httpOnly = true;\n        break;\n      case 'samesite':\n        switch (value.toLowerCase()) {\n          case 'none':\n            cookie.sameSite = 'None';\n            break;\n          case 'lax':\n            cookie.sameSite = 'Lax';\n            break;\n          case 'strict':\n            cookie.sameSite = 'Strict';\n            break;\n        }\n        break;\n    }\n  }\n  return cookie;\n}\n\nfunction serializePostData(params: channels.APIRequestContextFetchParams, headers: HeadersObject): Buffer | undefined {\n  assert((params.postData ? 1 : 0) + (params.jsonData ? 1 : 0) + (params.formData ? 1 : 0) + (params.multipartData ? 1 : 0) <= 1, `Only one of 'data', 'form' or 'multipart' can be specified`);\n  if (params.jsonData !== undefined) {\n    setHeader(headers, 'content-type', 'application/json', true);\n    return Buffer.from(params.jsonData, 'utf8');\n  } else if (params.formData) {\n    const searchParams = new URLSearchParams();\n    for (const { name, value } of params.formData)\n      searchParams.append(name, value);\n    setHeader(headers, 'content-type', 'application/x-www-form-urlencoded', true);\n    return Buffer.from(searchParams.toString(), 'utf8');\n  } else if (params.multipartData) {\n    const formData = new MultipartFormData();\n    for (const field of params.multipartData) {\n      if (field.file)\n        formData.addFileField(field.name, field.file);\n      else if (field.value)\n        formData.addField(field.name, field.value);\n    }\n    setHeader(headers, 'content-type', formData.contentTypeHeader(), true);\n    return formData.finish();\n  } else if (params.postData !== undefined) {\n    setHeader(headers, 'content-type', 'application/octet-stream', true);\n    return params.postData;\n  }\n  return undefined;\n}\n\nfunction setHeader(headers: { [name: string]: string }, name: string, value: string, keepExisting = false) {\n  const existing = Object.entries(headers).find(pair => pair[0].toLowerCase() === name.toLowerCase());\n  if (!existing)\n    headers[name] = value;\n  else if (!keepExisting)\n    headers[existing[0]] = value;\n}\n\nfunction getHeader(headers: HeadersObject, name: string) {\n  const existing = Object.entries(headers).find(pair => pair[0].toLowerCase() === name.toLowerCase());\n  return existing ? existing[1] : undefined;\n}\n\nfunction removeHeader(headers: { [name: string]: string }, name: string) {\n  delete headers[name];\n}\n\nfunction shouldBypassProxy(url: URL, bypass?: string): boolean {\n  if (!bypass)\n    return false;\n  const domains = bypass.split(',').map(s => {\n    s = s.trim();\n    if (!s.startsWith('.'))\n      s = '.' + s;\n    return s;\n  });\n  const domain = '.' + url.hostname;\n  return domains.some(d => domain.endsWith(d));\n}\n\nfunction setBasicAuthorizationHeader(headers: { [name: string]: string }, credentials: HTTPCredentials) {\n  const { username, password } = credentials;\n  const encoded = Buffer.from(`${username || ''}:${password || ''}`).toString('base64');\n  setHeader(headers, 'authorization', `Basic ${encoded}`);\n}\n"],"mappings":"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"}