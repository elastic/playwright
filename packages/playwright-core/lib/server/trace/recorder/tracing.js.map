{"version":3,"file":"tracing.js","names":["_fs","_interopRequireDefault","require","_os","_path","_debug","_utils","_artifact","_browserContext","_instrumentation","_page","_harTracer","_snapshotter","_dispatcher","_errors","obj","__esModule","default","version","kScreencastOptions","width","height","quality","Tracing","SdkObject","constructor","context","tracesDir","SerializedFS","_screencastListeners","_eventListeners","_context","_state","_isStopping","_precreatedTracesDir","_tracesTmpDir","_allResources","Set","_contextCreatedEvent","_pendingHarEntries","HarTracer","content","includeTraceInfo","recordRequestOverrides","waitForContentOnStop","testIdAttributeName","selectors","undefined","type","origin","browserName","options","platform","process","wallTime","monotonicTime","sdkLanguage","attribution","playwright","BrowserContext","Snapshotter","assert","_browser","name","channel","_options","resetForReuse","_this$_snapshotter","stopChunk","mode","catch","stop","start","Error","traceName","createGuid","_createTracesDirIfNeeded","traceFile","path","join","networkFile","resourcesDir","chunkOrdinal","traceSha1s","networkSha1s","recording","callIds","mkdir","writeFile","snapshots","omitScripts","live","startChunk","_this$_snapshotter2","clear","_changeTraceName","_allocateNewTraceFile","dirname","event","title","Date","now","appendFile","JSON","stringify","instrumentation","addListener","push","eventsHelper","addEventListener","Events","Console","_onConsoleMessage","bind","PageError","_onPageError","screenshots","_startScreencast","page","pages","_startScreencastInPage","Page","_stopScreencast","removeEventListeners","setScreencastOptions","state","suffix","newNetworkFile","copyFile","flushHarEntries","syncAndGetError","deleteTmpTracesDir","removeFolders","fs","mkdtempSync","os","tmpdir","abort","_this$_snapshotter3","dispose","flush","params","_this$_snapshotter4","removeListener","entries","value","sha1","zipFileName","zip","error","isConnected","artifact","Artifact","reportFinished","_captureSnapshot","snapshotName","sdkObject","metadata","element","started","shouldCaptureSnapshot","captureSnapshot","id","onBeforeCall","_sdkObject$attributio","_this$_state","createBeforeActionTraceEvent","Promise","resolve","temporarilyDisableTracingScreencastThrottling","beforeSnapshot","add","_appendTraceEvent","onBeforeInputAction","_this$_state2","_sdkObject$attributio2","has","createInputActionTraceEvent","inputSnapshot","onCallLog","logName","message","isServerSide","internal","createActionLogTraceEvent","onAfterCall","_this$_state3","_this$_state4","_sdkObject$attributio3","delete","createAfterActionTraceEvent","afterSnapshot","onEntryStarted","entry","onEntryFinished","snapshot","visited","visitTraceEvent","harLines","length","onContentBlob","buffer","_appendResource","onSnapshotterBlob","blob","onFrameSnapshot","_message$page","messageType","text","args","map","a","preview","toString","rawValue","location","time","pageId","guid","class","method","serializeError","prefix","ScreencastFrame","timestamp","resourcePath","exports","object","sha1s","Array","isArray","o","Dispatcher","_type","Buffer","result","key","endsWith","commandsWithTracingSnapshots","startsWith","callId","startTime","apiName","stepId","point","_metadata$error","endTime"],"sources":["../../../../src/server/trace/recorder/tracing.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport type { NameValue } from '../../../common/types';\nimport type { TracingTracingStopChunkParams } from '@protocol/channels';\nimport { commandsWithTracingSnapshots } from '../../../protocol/debug';\nimport { assert, createGuid, monotonicTime, SerializedFS, removeFolders, eventsHelper, type RegisteredListener } from '../../../utils';\nimport { Artifact } from '../../artifact';\nimport { BrowserContext } from '../../browserContext';\nimport type { ElementHandle } from '../../dom';\nimport type { APIRequestContext } from '../../fetch';\nimport type { CallMetadata, InstrumentationListener } from '../../instrumentation';\nimport { SdkObject } from '../../instrumentation';\nimport { Page } from '../../page';\nimport type * as har from '@trace/har';\nimport type { HarTracerDelegate } from '../../har/harTracer';\nimport { HarTracer } from '../../har/harTracer';\nimport type { FrameSnapshot } from '@trace/snapshot';\nimport type * as trace from '@trace/trace';\nimport type { SnapshotterBlob, SnapshotterDelegate } from './snapshotter';\nimport { Snapshotter } from './snapshotter';\nimport type { ConsoleMessage } from '../../console';\nimport { Dispatcher } from '../../dispatchers/dispatcher';\nimport { serializeError } from '../../errors';\n\nconst version: trace.VERSION = 7;\n\nexport type TracerOptions = {\n  name?: string;\n  snapshots?: boolean;\n  screenshots?: boolean;\n  live?: boolean;\n};\n\ntype RecordingState = {\n  options: TracerOptions,\n  traceName: string,\n  networkFile: string,\n  traceFile: string,\n  tracesDir: string,\n  resourcesDir: string,\n  chunkOrdinal: number,\n  networkSha1s: Set<string>,\n  traceSha1s: Set<string>,\n  recording: boolean;\n  callIds: Set<string>;\n};\n\nconst kScreencastOptions = { width: 800, height: 600, quality: 90 };\n\nexport class Tracing extends SdkObject implements InstrumentationListener, SnapshotterDelegate, HarTracerDelegate {\n  private _fs = new SerializedFS();\n  private _snapshotter?: Snapshotter;\n  private _harTracer: HarTracer;\n  private _screencastListeners: RegisteredListener[] = [];\n  private _eventListeners: RegisteredListener[] = [];\n  private _context: BrowserContext | APIRequestContext;\n  // Note: state should only be touched inside API methods, but not inside trace operations.\n  private _state: RecordingState | undefined;\n  private _isStopping = false;\n  private _precreatedTracesDir: string | undefined;\n  private _tracesTmpDir: string | undefined;\n  private _allResources = new Set<string>();\n  private _contextCreatedEvent: trace.ContextCreatedTraceEvent;\n  private _pendingHarEntries = new Set<har.Entry>();\n\n  constructor(context: BrowserContext | APIRequestContext, tracesDir: string | undefined) {\n    super(context, 'tracing');\n    this._context = context;\n    this._precreatedTracesDir = tracesDir;\n    this._harTracer = new HarTracer(context, null, this, {\n      content: 'attach',\n      includeTraceInfo: true,\n      recordRequestOverrides: false,\n      waitForContentOnStop: false,\n    });\n    const testIdAttributeName = ('selectors' in context) ? context.selectors().testIdAttributeName() : undefined;\n    this._contextCreatedEvent = {\n      version,\n      type: 'context-options',\n      origin: 'library',\n      browserName: '',\n      options: {},\n      platform: process.platform,\n      wallTime: 0,\n      monotonicTime: 0,\n      sdkLanguage: context.attribution.playwright.options.sdkLanguage,\n      testIdAttributeName\n    };\n    if (context instanceof BrowserContext) {\n      this._snapshotter = new Snapshotter(context, this);\n      assert(tracesDir, 'tracesDir must be specified for BrowserContext');\n      this._contextCreatedEvent.browserName = context._browser.options.name;\n      this._contextCreatedEvent.channel = context._browser.options.channel;\n      this._contextCreatedEvent.options = context._options;\n    }\n  }\n\n  async resetForReuse() {\n    // Discard previous chunk if any and ignore any errors there.\n    await this.stopChunk({ mode: 'discard' }).catch(() => {});\n    await this.stop();\n    this._snapshotter?.resetForReuse();\n  }\n\n  async start(options: TracerOptions) {\n    if (this._isStopping)\n      throw new Error('Cannot start tracing while stopping');\n    if (this._state)\n      throw new Error('Tracing has been already started');\n\n    // Re-write for testing.\n    this._contextCreatedEvent.sdkLanguage = this._context.attribution.playwright.options.sdkLanguage;\n\n    // TODO: passing the same name for two contexts makes them write into a single file\n    // and conflict.\n    const traceName = options.name || createGuid();\n\n    const tracesDir = this._createTracesDirIfNeeded();\n\n    // Init the state synchronously.\n    this._state = {\n      options,\n      traceName,\n      tracesDir,\n      traceFile: path.join(tracesDir, traceName + '.trace'),\n      networkFile: path.join(tracesDir, traceName + '.network'),\n      resourcesDir: path.join(tracesDir, 'resources'),\n      chunkOrdinal: 0,\n      traceSha1s: new Set(),\n      networkSha1s: new Set(),\n      recording: false,\n      callIds: new Set(),\n    };\n    this._fs.mkdir(this._state.resourcesDir);\n    this._fs.writeFile(this._state.networkFile, '');\n    // Tracing is 10x bigger if we include scripts in every trace.\n    if (options.snapshots)\n      this._harTracer.start({ omitScripts: !options.live });\n  }\n\n  async startChunk(options: { name?: string, title?: string } = {}): Promise<{ traceName: string }> {\n    if (this._state && this._state.recording)\n      await this.stopChunk({ mode: 'discard' });\n\n    if (!this._state)\n      throw new Error('Must start tracing before starting a new chunk');\n    if (this._isStopping)\n      throw new Error('Cannot start a trace chunk while stopping');\n\n    this._state.recording = true;\n    this._state.callIds.clear();\n\n    if (options.name && options.name !== this._state.traceName)\n      this._changeTraceName(this._state, options.name);\n    else\n      this._allocateNewTraceFile(this._state);\n\n    this._fs.mkdir(path.dirname(this._state.traceFile));\n    const event: trace.TraceEvent = {\n      ...this._contextCreatedEvent,\n      title: options.title,\n      wallTime: Date.now(),\n      monotonicTime: monotonicTime()\n    };\n    this._fs.appendFile(this._state.traceFile, JSON.stringify(event) + '\\n');\n\n    this._context.instrumentation.addListener(this, this._context);\n    this._eventListeners.push(\n        eventsHelper.addEventListener(this._context, BrowserContext.Events.Console, this._onConsoleMessage.bind(this)),\n        eventsHelper.addEventListener(this._context, BrowserContext.Events.PageError, this._onPageError.bind(this)),\n    );\n    if (this._state.options.screenshots)\n      this._startScreencast();\n    if (this._state.options.snapshots)\n      await this._snapshotter?.start();\n    return { traceName: this._state.traceName };\n  }\n\n  private _startScreencast() {\n    if (!(this._context instanceof BrowserContext))\n      return;\n    for (const page of this._context.pages())\n      this._startScreencastInPage(page);\n    this._screencastListeners.push(\n        eventsHelper.addEventListener(this._context, BrowserContext.Events.Page, this._startScreencastInPage.bind(this)),\n    );\n  }\n\n  private _stopScreencast() {\n    eventsHelper.removeEventListeners(this._screencastListeners);\n    if (!(this._context instanceof BrowserContext))\n      return;\n    for (const page of this._context.pages())\n      page.setScreencastOptions(null);\n  }\n\n  private _allocateNewTraceFile(state: RecordingState) {\n    const suffix = state.chunkOrdinal ? `-chunk${state.chunkOrdinal}` : ``;\n    state.chunkOrdinal++;\n    state.traceFile = path.join(state.tracesDir, `${state.traceName}${suffix}.trace`);\n  }\n\n  private _changeTraceName(state: RecordingState, name: string) {\n    state.traceName = name;\n    state.chunkOrdinal = 0;  // Reset ordinal for the new name.\n    this._allocateNewTraceFile(state);\n\n    // Network file survives across chunks, so make a copy with the new name.\n    const newNetworkFile = path.join(state.tracesDir, name + '.network');\n    this._fs.copyFile(state.networkFile, newNetworkFile);\n    state.networkFile = newNetworkFile;\n  }\n\n  async stop() {\n    if (!this._state)\n      return;\n    if (this._isStopping)\n      throw new Error(`Tracing is already stopping`);\n    if (this._state.recording)\n      throw new Error(`Must stop trace file before stopping tracing`);\n    this._harTracer.stop();\n    this.flushHarEntries();\n    await this._fs.syncAndGetError();\n    this._state = undefined;\n  }\n\n  async deleteTmpTracesDir() {\n    if (this._tracesTmpDir)\n      await removeFolders([this._tracesTmpDir]);\n  }\n\n  private _createTracesDirIfNeeded() {\n    if (this._precreatedTracesDir)\n      return this._precreatedTracesDir;\n    this._tracesTmpDir = fs.mkdtempSync(path.join(os.tmpdir(), 'playwright-tracing-'));\n    return this._tracesTmpDir;\n  }\n\n  abort() {\n    this._snapshotter?.dispose();\n    this._harTracer.stop();\n  }\n\n  async flush() {\n    this.abort();\n    await this._fs.syncAndGetError();\n  }\n\n  async stopChunk(params: TracingTracingStopChunkParams): Promise<{ artifact?: Artifact, entries?: NameValue[] }> {\n    if (this._isStopping)\n      throw new Error(`Tracing is already stopping`);\n    this._isStopping = true;\n\n    if (!this._state || !this._state.recording) {\n      this._isStopping = false;\n      if (params.mode !== 'discard')\n        throw new Error(`Must start tracing before stopping`);\n      return {};\n    }\n\n    this._context.instrumentation.removeListener(this);\n    eventsHelper.removeEventListeners(this._eventListeners);\n    if (this._state.options.screenshots)\n      this._stopScreencast();\n\n    if (this._state.options.snapshots)\n      await this._snapshotter?.stop();\n\n    this.flushHarEntries();\n\n    // Network file survives across chunks, make a snapshot before returning the resulting entries.\n    // We should pick a name starting with \"traceName\" and ending with .network.\n    // Something like <traceName>someSuffixHere.network.\n    // However, this name must not clash with any other \"traceName\".network in the same tracesDir.\n    // We can use <traceName>-<guid>.network, but \"-pwnetcopy-0\" suffix is more readable\n    // and makes it easier to debug future issues.\n    const newNetworkFile = path.join(this._state.tracesDir, this._state.traceName + `-pwnetcopy-${this._state.chunkOrdinal}.network`);\n\n    const entries: NameValue[] = [];\n    entries.push({ name: 'trace.trace', value: this._state.traceFile });\n    entries.push({ name: 'trace.network', value: newNetworkFile });\n    for (const sha1 of new Set([...this._state.traceSha1s, ...this._state.networkSha1s]))\n      entries.push({ name: path.join('resources', sha1), value: path.join(this._state.resourcesDir, sha1) });\n\n    // Only reset trace sha1s, network resources are preserved between chunks.\n    this._state.traceSha1s = new Set();\n\n    if (params.mode === 'discard') {\n      this._isStopping = false;\n      this._state.recording = false;\n      return {};\n    }\n\n    this._fs.copyFile(this._state.networkFile, newNetworkFile);\n\n    const zipFileName = this._state.traceFile + '.zip';\n    if (params.mode === 'archive')\n      this._fs.zip(entries, zipFileName);\n\n    // Make sure all file operations complete.\n    const error = await this._fs.syncAndGetError();\n\n    this._isStopping = false;\n    if (this._state)\n      this._state.recording = false;\n\n    // IMPORTANT: no awaits after this point, to make sure recording state is correct.\n\n    if (error) {\n      // This check is here because closing the browser removes the tracesDir and tracing\n      // cannot access removed files. Clients are ready for the missing artifact.\n      if (this._context instanceof BrowserContext && !this._context._browser.isConnected())\n        return {};\n      throw error;\n    }\n\n    if (params.mode === 'entries')\n      return { entries };\n\n    const artifact = new Artifact(this._context, zipFileName);\n    artifact.reportFinished();\n    return { artifact };\n  }\n\n  async _captureSnapshot(snapshotName: string, sdkObject: SdkObject, metadata: CallMetadata, element?: ElementHandle): Promise<void> {\n    if (!this._snapshotter)\n      return;\n    if (!sdkObject.attribution.page)\n      return;\n    if (!this._snapshotter.started())\n      return;\n    if (!shouldCaptureSnapshot(metadata))\n      return;\n    await this._snapshotter.captureSnapshot(sdkObject.attribution.page, metadata.id, snapshotName, element).catch(() => {});\n  }\n\n  onBeforeCall(sdkObject: SdkObject, metadata: CallMetadata) {\n    // IMPORTANT: no awaits before this._appendTraceEvent in this method.\n    const event = createBeforeActionTraceEvent(metadata);\n    if (!event)\n      return Promise.resolve();\n    sdkObject.attribution.page?.temporarilyDisableTracingScreencastThrottling();\n    event.beforeSnapshot = `before@${metadata.id}`;\n    this._state?.callIds.add(metadata.id);\n    this._appendTraceEvent(event);\n    return this._captureSnapshot(event.beforeSnapshot, sdkObject, metadata);\n  }\n\n  onBeforeInputAction(sdkObject: SdkObject, metadata: CallMetadata, element: ElementHandle) {\n    if (!this._state?.callIds.has(metadata.id))\n      return Promise.resolve();\n    // IMPORTANT: no awaits before this._appendTraceEvent in this method.\n    const event = createInputActionTraceEvent(metadata);\n    if (!event)\n      return Promise.resolve();\n    sdkObject.attribution.page?.temporarilyDisableTracingScreencastThrottling();\n    event.inputSnapshot = `input@${metadata.id}`;\n    this._appendTraceEvent(event);\n    return this._captureSnapshot(event.inputSnapshot, sdkObject, metadata, element);\n  }\n\n  onCallLog(sdkObject: SdkObject, metadata: CallMetadata, logName: string, message: string) {\n    if (metadata.isServerSide || metadata.internal)\n      return;\n    if (logName !== 'api')\n      return;\n    const event = createActionLogTraceEvent(metadata, message);\n    if (event)\n      this._appendTraceEvent(event);\n  }\n\n  async onAfterCall(sdkObject: SdkObject, metadata: CallMetadata) {\n    if (!this._state?.callIds.has(metadata.id))\n      return;\n    this._state?.callIds.delete(metadata.id);\n    const event = createAfterActionTraceEvent(metadata);\n    if (!event)\n      return;\n    sdkObject.attribution.page?.temporarilyDisableTracingScreencastThrottling();\n    event.afterSnapshot = `after@${metadata.id}`;\n    this._appendTraceEvent(event);\n    return this._captureSnapshot(event.afterSnapshot, sdkObject, metadata);\n  }\n\n  onEntryStarted(entry: har.Entry) {\n    this._pendingHarEntries.add(entry);\n  }\n\n  onEntryFinished(entry: har.Entry) {\n    this._pendingHarEntries.delete(entry);\n    const event: trace.ResourceSnapshotTraceEvent = { type: 'resource-snapshot', snapshot: entry };\n    const visited = visitTraceEvent(event, this._state!.networkSha1s);\n    this._fs.appendFile(this._state!.networkFile, JSON.stringify(visited) + '\\n', true /* flush */);\n  }\n\n  flushHarEntries() {\n    const harLines: string[] = [];\n    for (const entry of this._pendingHarEntries) {\n      const event: trace.ResourceSnapshotTraceEvent = { type: 'resource-snapshot', snapshot: entry };\n      const visited = visitTraceEvent(event, this._state!.networkSha1s);\n      harLines.push(JSON.stringify(visited));\n    }\n    this._pendingHarEntries.clear();\n    if (harLines.length)\n      this._fs.appendFile(this._state!.networkFile, harLines.join('\\n') + '\\n', true /* flush */);\n  }\n\n  onContentBlob(sha1: string, buffer: Buffer) {\n    this._appendResource(sha1, buffer);\n  }\n\n  onSnapshotterBlob(blob: SnapshotterBlob): void {\n    this._appendResource(blob.sha1, blob.buffer);\n  }\n\n  onFrameSnapshot(snapshot: FrameSnapshot): void {\n    this._appendTraceEvent({ type: 'frame-snapshot', snapshot });\n  }\n\n  private _onConsoleMessage(message: ConsoleMessage) {\n    const event: trace.ConsoleMessageTraceEvent = {\n      type: 'console',\n      messageType: message.type(),\n      text: message.text(),\n      args: message.args().map(a => ({ preview: a.toString(), value: a.rawValue() })),\n      location: message.location(),\n      time: monotonicTime(),\n      pageId: message.page()?.guid,\n    };\n    this._appendTraceEvent(event);\n  }\n\n  private _onPageError(error: Error, page: Page) {\n    const event: trace.EventTraceEvent = {\n      type: 'event',\n      time: monotonicTime(),\n      class: 'BrowserContext',\n      method: 'pageError',\n      params: { error: serializeError(error) },\n      pageId: page.guid,\n    };\n    this._appendTraceEvent(event);\n  }\n\n  private _startScreencastInPage(page: Page) {\n    page.setScreencastOptions(kScreencastOptions);\n    const prefix = page.guid;\n    this._screencastListeners.push(\n        eventsHelper.addEventListener(page, Page.Events.ScreencastFrame, params => {\n          const suffix = params.timestamp || Date.now();\n          const sha1 = `${prefix}-${suffix}.jpeg`;\n          const event: trace.ScreencastFrameTraceEvent = {\n            type: 'screencast-frame',\n            pageId: page.guid,\n            sha1,\n            width: params.width,\n            height: params.height,\n            timestamp: monotonicTime()\n          };\n          // Make sure to write the screencast frame before adding a reference to it.\n          this._appendResource(sha1, params.buffer);\n          this._appendTraceEvent(event);\n        }),\n    );\n  }\n\n  private _appendTraceEvent(event: trace.TraceEvent) {\n    const visited = visitTraceEvent(event, this._state!.traceSha1s);\n    // Do not flush (console) events, they are too noisy, unless we are in ui mode (live).\n    const flush = this._state!.options.live || (event.type !== 'event' && event.type !== 'console' && event.type !== 'log');\n    this._fs.appendFile(this._state!.traceFile, JSON.stringify(visited) + '\\n', flush);\n  }\n\n  private _appendResource(sha1: string, buffer: Buffer) {\n    if (this._allResources.has(sha1))\n      return;\n    this._allResources.add(sha1);\n    const resourcePath = path.join(this._state!.resourcesDir, sha1);\n    this._fs.writeFile(resourcePath, buffer, true /* skipIfExists */);\n  }\n}\n\nfunction visitTraceEvent(object: any, sha1s: Set<string>): any {\n  if (Array.isArray(object))\n    return object.map(o => visitTraceEvent(o, sha1s));\n  if (object instanceof Dispatcher)\n    return `<${(object as Dispatcher<any, any, any>)._type}>`;\n  if (object instanceof Buffer)\n    return `<Buffer>`;\n  if (object instanceof Date)\n    return object;\n  if (typeof object === 'object') {\n    const result: any = {};\n    for (const key in object) {\n      if (key === 'sha1' || key === '_sha1' || key.endsWith('Sha1')) {\n        const sha1 = object[key];\n        if (sha1)\n          sha1s.add(sha1);\n      }\n      result[key] = visitTraceEvent(object[key], sha1s);\n    }\n    return result;\n  }\n  return object;\n}\n\nexport function shouldCaptureSnapshot(metadata: CallMetadata): boolean {\n  return commandsWithTracingSnapshots.has(metadata.type + '.' + metadata.method);\n}\n\nfunction createBeforeActionTraceEvent(metadata: CallMetadata): trace.BeforeActionTraceEvent | null {\n  if (metadata.internal || metadata.method.startsWith('tracing'))\n    return null;\n  return {\n    type: 'before',\n    callId: metadata.id,\n    startTime: metadata.startTime,\n    apiName: metadata.apiName || metadata.type + '.' + metadata.method,\n    class: metadata.type,\n    method: metadata.method,\n    params: metadata.params,\n    stepId: metadata.stepId,\n    pageId: metadata.pageId,\n  };\n}\n\nfunction createInputActionTraceEvent(metadata: CallMetadata): trace.InputActionTraceEvent | null {\n  if (metadata.internal || metadata.method.startsWith('tracing'))\n    return null;\n  return {\n    type: 'input',\n    callId: metadata.id,\n    point: metadata.point,\n  };\n}\n\nfunction createActionLogTraceEvent(metadata: CallMetadata, message: string): trace.LogTraceEvent | null {\n  if (metadata.internal || metadata.method.startsWith('tracing'))\n    return null;\n  return {\n    type: 'log',\n    callId: metadata.id,\n    time: monotonicTime(),\n    message,\n  };\n}\n\nfunction createAfterActionTraceEvent(metadata: CallMetadata): trace.AfterActionTraceEvent | null {\n  if (metadata.internal || metadata.method.startsWith('tracing'))\n    return null;\n  return {\n    type: 'after',\n    callId: metadata.id,\n    endTime: metadata.endTime,\n    error: metadata.error?.error,\n    result: metadata.result,\n    point: metadata.point,\n  };\n}\n"],"mappings":"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"}