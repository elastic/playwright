{"version":3,"file":"traceViewer.js","names":["_path","_interopRequireDefault","require","_fs","_httpServer","_utils","_launchApp","_instrumentation","_playwright","_progress","_utilsBundle","obj","__esModule","default","validateTraceUrls","traceUrls","traceUrl","traceFile","endsWith","substring","length","startsWith","fs","existsSync","Error","startTraceViewerServer","options","server","HttpServer","routePrefix","request","response","url","URL","relativePath","pathname","slice","filePath","searchParams","get","serveFile","traceName","statusCode","setHeader","end","JSON","stringify","traceDescriptor","e","absolutePath","path","join","__dirname","split","transport","isServer","StdinServer","undefined","createWebSocket","host","port","start","preferredPort","installRootRedirect","params","URLSearchParams","append","wsGuid","isUnderTest","arg","args","grep","grepInvert","project","workers","String","timeout","headed","outputDir","updateSnapshots","reporter","urlPath","webApp","toString","routePath","_","runTraceViewerApp","browserName","exitOnClose","page","openTraceViewerApp","urlPrefix","on","gracefullyProcessExitDoNotHang","runTraceInBrowser","openTraceInBrowser","traceViewerPlaywright","createPlaywright","sdkLanguage","isInternalPlaywright","traceViewerBrowser","context","launchApp","windowSize","width","height","persistentContextOptions","useWebSocket","headless","controller","ProgressController","serverSideCallMetadata","_browser","run","progress","_defaultContext","_loadDefaultContextAsIs","process","env","PWTEST_PRINT_WS_ENDPOINT","stderr","write","wsEndpoint","syncLocalStorageWithSettings","close","reason","catch","mainFrame","goto","console","log","open","replace","constructor","_pollTimer","_traceUrl","sendEvent","stdin","data","trim","_pollLoadTrace","_loadTrace","dispatch","method","onclose","_this$sendEvent","clearTimeout","call","setTimeout","result","entries","traceDir","dirname","basename","name","readdirSync","push","resourcesDir"],"sources":["../../../../src/server/trace/viewer/traceViewer.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport fs from 'fs';\nimport { HttpServer } from '../../../utils/httpServer';\nimport type { Transport } from '../../../utils/httpServer';\nimport { gracefullyProcessExitDoNotHang, isUnderTest } from '../../../utils';\nimport { syncLocalStorageWithSettings } from '../../launchApp';\nimport { serverSideCallMetadata } from '../../instrumentation';\nimport { createPlaywright } from '../../playwright';\nimport { ProgressController } from '../../progress';\nimport { open } from '../../../utilsBundle';\nimport type { Page } from '../../page';\nimport type { BrowserType } from '../../browserType';\nimport { launchApp } from '../../launchApp';\n\nexport type TraceViewerServerOptions = {\n  host?: string;\n  port?: number;\n  isServer?: boolean;\n  transport?: Transport;\n};\n\nexport type TraceViewerRedirectOptions = {\n  args?: string[];\n  grep?: string;\n  grepInvert?: string;\n  project?: string[];\n  workers?: number | string;\n  headed?: boolean;\n  timeout?: number;\n  reporter?: string[];\n  webApp?: string;\n  isServer?: boolean;\n  outputDir?: string;\n  updateSnapshots?: 'all' | 'none' | 'missing';\n};\n\nexport type TraceViewerAppOptions = {\n  headless?: boolean;\n  persistentContextOptions?: Parameters<BrowserType['launchPersistentContext']>[2];\n};\n\nfunction validateTraceUrls(traceUrls: string[]) {\n  for (const traceUrl of traceUrls) {\n    let traceFile = traceUrl;\n    // If .json is requested, we'll synthesize it.\n    if (traceUrl.endsWith('.json'))\n      traceFile = traceUrl.substring(0, traceUrl.length - '.json'.length);\n\n    if (!traceUrl.startsWith('http://') && !traceUrl.startsWith('https://') && !fs.existsSync(traceFile) && !fs.existsSync(traceFile + '.trace'))\n      throw new Error(`Trace file ${traceUrl} does not exist!`);\n  }\n}\n\nexport async function startTraceViewerServer(options?: TraceViewerServerOptions): Promise<HttpServer> {\n  const server = new HttpServer();\n  server.routePrefix('/trace', (request, response) => {\n    const url = new URL('http://localhost' + request.url!);\n    const relativePath = url.pathname.slice('/trace'.length);\n    if (relativePath.endsWith('/stall.js'))\n      return true;\n    if (relativePath.startsWith('/file')) {\n      try {\n        const filePath = url.searchParams.get('path')!;\n        if (fs.existsSync(filePath))\n          return server.serveFile(request, response, url.searchParams.get('path')!);\n\n        // If .json is requested, we'll synthesize it for zip-less operation.\n        if (filePath.endsWith('.json')) {\n          const traceName = filePath.substring(0, filePath.length - '.json'.length);\n          response.statusCode = 200;\n          response.setHeader('Content-Type', 'application/json');\n          response.end(JSON.stringify(traceDescriptor(traceName)));\n          return true;\n        }\n      } catch (e) {\n      }\n      response.statusCode = 404;\n      response.end();\n      return true;\n    }\n    const absolutePath = path.join(__dirname, '..', '..', '..', 'vite', 'traceViewer', ...relativePath.split('/'));\n    return server.serveFile(request, response, absolutePath);\n  });\n\n  const transport = options?.transport || (options?.isServer ? new StdinServer() : undefined);\n  if (transport)\n    server.createWebSocket(transport);\n\n  const { host, port } = options || {};\n  await server.start({ preferredPort: port, host });\n  return server;\n}\n\nexport async function installRootRedirect(server: HttpServer, traceUrls: string[], options: TraceViewerRedirectOptions) {\n  const params = new URLSearchParams();\n  for (const traceUrl of traceUrls)\n    params.append('trace', traceUrl);\n  if (server.wsGuid())\n    params.append('ws', server.wsGuid()!);\n  if (options?.isServer)\n    params.append('isServer', '');\n  if (isUnderTest())\n    params.append('isUnderTest', 'true');\n  for (const arg of options.args || [])\n    params.append('arg', arg);\n  if (options.grep)\n    params.append('grep', options.grep);\n  if (options.grepInvert)\n    params.append('grepInvert', options.grepInvert);\n  for (const project of options.project || [])\n    params.append('project', project);\n  if (options.workers)\n    params.append('workers', String(options.workers));\n  if (options.timeout)\n    params.append('timeout', String(options.timeout));\n  if (options.headed)\n    params.append('headed', '');\n  if (options.outputDir)\n    params.append('outputDir', options.outputDir);\n  if (options.updateSnapshots)\n    params.append('updateSnapshots', options.updateSnapshots);\n  for (const reporter of options.reporter || [])\n    params.append('reporter', reporter);\n\n  const urlPath  = `./trace/${options.webApp || 'index.html'}?${params.toString()}`;\n  server.routePath('/', (_, response) => {\n    response.statusCode = 302;\n    response.setHeader('Location', urlPath);\n    response.end();\n    return true;\n  });\n}\n\nexport async function runTraceViewerApp(traceUrls: string[], browserName: string, options: TraceViewerServerOptions & { headless?: boolean }, exitOnClose?: boolean) {\n  validateTraceUrls(traceUrls);\n  const server = await startTraceViewerServer(options);\n  await installRootRedirect(server, traceUrls, options);\n  const page = await openTraceViewerApp(server.urlPrefix('precise'), browserName, options);\n  if (exitOnClose)\n    page.on('close', () => gracefullyProcessExitDoNotHang(0));\n  return page;\n}\n\nexport async function runTraceInBrowser(traceUrls: string[], options: TraceViewerServerOptions) {\n  validateTraceUrls(traceUrls);\n  const server = await startTraceViewerServer(options);\n  await installRootRedirect(server, traceUrls, options);\n  await openTraceInBrowser(server.urlPrefix('human-readable'));\n}\n\nexport async function openTraceViewerApp(url: string, browserName: string, options?: TraceViewerAppOptions): Promise<Page> {\n  const traceViewerPlaywright = createPlaywright({ sdkLanguage: 'javascript', isInternalPlaywright: true });\n  const traceViewerBrowser = isUnderTest() ? 'chromium' : browserName;\n\n  const { context, page } = await launchApp(traceViewerPlaywright[traceViewerBrowser as 'chromium'], {\n    // TODO: store language in the trace.\n    sdkLanguage: traceViewerPlaywright.options.sdkLanguage,\n    windowSize: { width: 1280, height: 800 },\n    persistentContextOptions: {\n      ...options?.persistentContextOptions,\n      useWebSocket: isUnderTest(),\n      headless: !!options?.headless,\n    },\n  });\n\n  const controller = new ProgressController(serverSideCallMetadata(), context._browser);\n  await controller.run(async progress => {\n    await context._browser._defaultContext!._loadDefaultContextAsIs(progress);\n  });\n\n  if (process.env.PWTEST_PRINT_WS_ENDPOINT)\n    process.stderr.write('DevTools listening on: ' + context._browser.options.wsEndpoint + '\\n');\n\n  if (!isUnderTest())\n    await syncLocalStorageWithSettings(page, 'traceviewer');\n\n  if (isUnderTest())\n    page.on('close', () => context.close({ reason: 'Trace viewer closed' }).catch(() => {}));\n\n  await page.mainFrame().goto(serverSideCallMetadata(), url);\n  return page;\n}\n\nexport async function openTraceInBrowser(url: string) {\n  // eslint-disable-next-line no-console\n  console.log('\\nListening on ' + url);\n  if (!isUnderTest())\n    await open(url.replace('0.0.0.0', 'localhost')).catch(() => {});\n}\n\nclass StdinServer implements Transport {\n  private _pollTimer: NodeJS.Timeout | undefined;\n  private _traceUrl: string | undefined;\n\n  constructor() {\n    process.stdin.on('data', data => {\n      const url = data.toString().trim();\n      if (url === this._traceUrl)\n        return;\n      if (url.endsWith('.json'))\n        this._pollLoadTrace(url);\n      else\n        this._loadTrace(url);\n    });\n    process.stdin.on('close', () => gracefullyProcessExitDoNotHang(0));\n  }\n\n  async dispatch(method: string, params: any) {\n    if (method === 'initialize') {\n      if (this._traceUrl)\n        this._loadTrace(this._traceUrl);\n    }\n  }\n\n  onclose() {\n  }\n\n  sendEvent?: (method: string, params: any) => void;\n  close?: () => void;\n\n  private _loadTrace(traceUrl: string) {\n    this._traceUrl = traceUrl;\n    clearTimeout(this._pollTimer);\n    this.sendEvent?.('loadTraceRequested', { traceUrl });\n  }\n\n  private _pollLoadTrace(url: string) {\n    this._loadTrace(url);\n    this._pollTimer = setTimeout(() => {\n      this._pollLoadTrace(url);\n    }, 500);\n  }\n}\n\nfunction traceDescriptor(traceName: string) {\n  const result: { entries: { name: string, path: string }[] } = {\n    entries: []\n  };\n\n  const traceDir = path.dirname(traceName);\n  const traceFile = path.basename(traceName);\n  for (const name of fs.readdirSync(traceDir)) {\n    if (name.startsWith(traceFile))\n      result.entries.push({ name, path: path.join(traceDir, name) });\n  }\n\n  const resourcesDir = path.join(traceDir, 'resources');\n  if (fs.existsSync(resourcesDir)) {\n    for (const name of fs.readdirSync(resourcesDir))\n      result.entries.push({ name: 'resources/' + name, path: path.join(resourcesDir, name) });\n  }\n  return result;\n}\n"],"mappings":"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"}