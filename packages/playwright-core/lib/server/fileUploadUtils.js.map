{"version":3,"file":"fileUploadUtils.js","names":["_fs","_interopRequireDefault","require","_path","_utils","_utilsBundle","obj","__esModule","default","filesExceedUploadLimit","files","sizes","Promise","all","map","file","fs","promises","stat","size","reduce","total","fileUploadSizeLimit","prepareFilesForUpload","frame","params","_fileBuffers","payloads","streams","directoryStream","localPaths","localDirectory","filter","Boolean","length","Error","c","path","p","assert","isAbsolute","resolve","fileBuffers","_page","_browserContext","_browser","_isCollocatedWithServer","item","name","basename","buffer","readFile","lastModifiedMs","mtimeMs","undefined","filePayloads","payload","mimeType","mime","getType","toString"],"sources":["../../src/server/fileUploadUtils.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as channels from '@protocol/channels';\nimport fs from 'fs';\nimport path from 'path';\nimport { assert, fileUploadSizeLimit } from '../utils';\nimport { mime } from '../utilsBundle';\nimport type { WritableStreamDispatcher } from './dispatchers/writableStreamDispatcher';\nimport type { InputFilesItems } from './dom';\nimport type { Frame } from './frames';\nimport type * as types from './types';\n\nasync function filesExceedUploadLimit(files: string[]) {\n  const sizes = await Promise.all(files.map(async file => (await fs.promises.stat(file)).size));\n  return sizes.reduce((total, size) => total + size, 0) >= fileUploadSizeLimit;\n}\n\nexport async function prepareFilesForUpload(frame: Frame, params: channels.ElementHandleSetInputFilesParams): Promise<InputFilesItems> {\n  const { payloads, streams, directoryStream } = params;\n  let { localPaths, localDirectory } = params;\n\n  if ([payloads, localPaths, localDirectory, streams, directoryStream].filter(Boolean).length !== 1)\n    throw new Error('Exactly one of payloads, localPaths and streams must be provided');\n\n  if (streams)\n    localPaths = streams.map(c => (c as WritableStreamDispatcher).path());\n  if (directoryStream)\n    localDirectory = (directoryStream as WritableStreamDispatcher).path();\n\n  if (localPaths) {\n    for (const p of localPaths)\n      assert(path.isAbsolute(p) && path.resolve(p) === p, 'Paths provided to localPaths must be absolute and fully resolved.');\n  }\n\n  let fileBuffers: {\n    name: string,\n    mimeType?: string,\n    buffer: Buffer,\n    lastModifiedMs?: number,\n  }[] | undefined = payloads;\n\n  if (!frame._page._browserContext._browser._isCollocatedWithServer) {\n    // If the browser is on a different machine read files into buffers.\n    if (localPaths) {\n      if (await filesExceedUploadLimit(localPaths))\n        throw new Error('Cannot transfer files larger than 50Mb to a browser not co-located with the server');\n      fileBuffers = await Promise.all(localPaths.map(async item => {\n        return {\n          name: path.basename(item),\n          buffer: await fs.promises.readFile(item),\n          lastModifiedMs: (await fs.promises.stat(item)).mtimeMs,\n        };\n      }));\n      localPaths = undefined;\n    }\n  }\n\n  const filePayloads: types.FilePayload[] | undefined = fileBuffers?.map(payload => ({\n    name: payload.name,\n    mimeType: payload.mimeType || mime.getType(payload.name) || 'application/octet-stream',\n    buffer: payload.buffer.toString('base64'),\n    lastModifiedMs: payload.lastModifiedMs\n  }));\n\n  return { localPaths, localDirectory, filePayloads };\n}"],"mappings":";;;;;;AAiBA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAAsC,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AApBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,eAAeG,sBAAsBA,CAACC,KAAe,EAAE;EACrD,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,GAAG,CAAC,MAAMC,IAAI,IAAI,CAAC,MAAMC,WAAE,CAACC,QAAQ,CAACC,IAAI,CAACH,IAAI,CAAC,EAAEI,IAAI,CAAC,CAAC;EAC7F,OAAOR,KAAK,CAACS,MAAM,CAAC,CAACC,KAAK,EAAEF,IAAI,KAAKE,KAAK,GAAGF,IAAI,EAAE,CAAC,CAAC,IAAIG,0BAAmB;AAC9E;AAEO,eAAeC,qBAAqBA,CAACC,KAAY,EAAEC,MAAiD,EAA4B;EAAA,IAAAC,YAAA;EACrI,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGJ,MAAM;EACrD,IAAI;IAAEK,UAAU;IAAEC;EAAe,CAAC,GAAGN,MAAM;EAE3C,IAAI,CAACE,QAAQ,EAAEG,UAAU,EAAEC,cAAc,EAAEH,OAAO,EAAEC,eAAe,CAAC,CAACG,MAAM,CAACC,OAAO,CAAC,CAACC,MAAM,KAAK,CAAC,EAC/F,MAAM,IAAIC,KAAK,CAAC,kEAAkE,CAAC;EAErF,IAAIP,OAAO,EACTE,UAAU,GAAGF,OAAO,CAACd,GAAG,CAACsB,CAAC,IAAKA,CAAC,CAA8BC,IAAI,CAAC,CAAC,CAAC;EACvE,IAAIR,eAAe,EACjBE,cAAc,GAAIF,eAAe,CAA8BQ,IAAI,CAAC,CAAC;EAEvE,IAAIP,UAAU,EAAE;IACd,KAAK,MAAMQ,CAAC,IAAIR,UAAU,EACxB,IAAAS,aAAM,EAACF,aAAI,CAACG,UAAU,CAACF,CAAC,CAAC,IAAID,aAAI,CAACI,OAAO,CAACH,CAAC,CAAC,KAAKA,CAAC,EAAE,mEAAmE,CAAC;EAC5H;EAEA,IAAII,WAKW,GAAGf,QAAQ;EAE1B,IAAI,CAACH,KAAK,CAACmB,KAAK,CAACC,eAAe,CAACC,QAAQ,CAACC,uBAAuB,EAAE;IACjE;IACA,IAAIhB,UAAU,EAAE;MACd,IAAI,MAAMrB,sBAAsB,CAACqB,UAAU,CAAC,EAC1C,MAAM,IAAIK,KAAK,CAAC,oFAAoF,CAAC;MACvGO,WAAW,GAAG,MAAM9B,OAAO,CAACC,GAAG,CAACiB,UAAU,CAAChB,GAAG,CAAC,MAAMiC,IAAI,IAAI;QAC3D,OAAO;UACLC,IAAI,EAAEX,aAAI,CAACY,QAAQ,CAACF,IAAI,CAAC;UACzBG,MAAM,EAAE,MAAMlC,WAAE,CAACC,QAAQ,CAACkC,QAAQ,CAACJ,IAAI,CAAC;UACxCK,cAAc,EAAE,CAAC,MAAMpC,WAAE,CAACC,QAAQ,CAACC,IAAI,CAAC6B,IAAI,CAAC,EAAEM;QACjD,CAAC;MACH,CAAC,CAAC,CAAC;MACHvB,UAAU,GAAGwB,SAAS;IACxB;EACF;EAEA,MAAMC,YAA6C,IAAA7B,YAAA,GAAGgB,WAAW,cAAAhB,YAAA,uBAAXA,YAAA,CAAaZ,GAAG,CAAC0C,OAAO,KAAK;IACjFR,IAAI,EAAEQ,OAAO,CAACR,IAAI;IAClBS,QAAQ,EAAED,OAAO,CAACC,QAAQ,IAAIC,iBAAI,CAACC,OAAO,CAACH,OAAO,CAACR,IAAI,CAAC,IAAI,0BAA0B;IACtFE,MAAM,EAAEM,OAAO,CAACN,MAAM,CAACU,QAAQ,CAAC,QAAQ,CAAC;IACzCR,cAAc,EAAEI,OAAO,CAACJ;EAC1B,CAAC,CAAC,CAAC;EAEH,OAAO;IAAEtB,UAAU;IAAEC,cAAc;IAAEwB;EAAa,CAAC;AACrD"}