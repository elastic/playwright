{"version":3,"file":"pipeTransport.js","names":["_utils","require","_debugLogger","PipeTransport","constructor","pipeWrite","pipeRead","_pipeRead","_pipeWrite","_pendingBuffers","_waitForNextTask","makeWaitForNextTask","_closed","_onclose","onmessage","on","buffer","_dispatch","call","e","debugLogger","log","undefined","onclose","readable","send","message","Error","write","JSON","stringify","close","end","indexOf","push","slice","Buffer","concat","toString","parse","start","exports"],"sources":["../../src/server/pipeTransport.ts"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from './transport';\nimport { makeWaitForNextTask } from '../utils';\nimport { debugLogger } from '../utils/debugLogger';\n\nexport class PipeTransport implements ConnectionTransport {\n  private _pipeRead: NodeJS.ReadableStream;\n  private _pipeWrite: NodeJS.WritableStream;\n  private _pendingBuffers: Buffer[] = [];\n  private _waitForNextTask = makeWaitForNextTask();\n  private _closed = false;\n  private _onclose?: (reason?: string) => void;\n\n  onmessage?: (message: ProtocolResponse) => void;\n\n  constructor(pipeWrite: NodeJS.WritableStream, pipeRead: NodeJS.ReadableStream) {\n    this._pipeRead = pipeRead;\n    this._pipeWrite = pipeWrite;\n    pipeRead.on('data', buffer => this._dispatch(buffer));\n    pipeRead.on('close', () => {\n      this._closed = true;\n      if (this._onclose)\n        this._onclose.call(null);\n    });\n    pipeRead.on('error', e => debugLogger.log('error', e));\n    pipeWrite.on('error', e => debugLogger.log('error', e));\n    this.onmessage = undefined;\n  }\n\n  get onclose() {\n    return this._onclose;\n  }\n\n  set onclose(onclose: undefined | ((reason?: string) => void)) {\n    this._onclose = onclose;\n    if (onclose && !this._pipeRead.readable)\n      onclose();\n  }\n\n  send(message: ProtocolRequest) {\n    if (this._closed)\n      throw new Error('Pipe has been closed');\n    this._pipeWrite.write(JSON.stringify(message));\n    this._pipeWrite.write('\\0');\n  }\n\n  close() {\n    throw new Error('unimplemented');\n  }\n\n  _dispatch(buffer: Buffer) {\n    let end = buffer.indexOf('\\0');\n    if (end === -1) {\n      this._pendingBuffers.push(buffer);\n      return;\n    }\n    this._pendingBuffers.push(buffer.slice(0, end));\n    const message = Buffer.concat(this._pendingBuffers).toString();\n    this._waitForNextTask(() => {\n      if (this.onmessage)\n        this.onmessage.call(null, JSON.parse(message));\n    });\n\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n    while (end !== -1) {\n      const message = buffer.toString(undefined, start, end);\n      this._waitForNextTask(() => {\n        if (this.onmessage)\n          this.onmessage.call(null, JSON.parse(message));\n      });\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n    this._pendingBuffers = [buffer.slice(start)];\n  }\n}\n"],"mappings":";;;;;;AAkBA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,MAAME,aAAa,CAAgC;EAUxDC,WAAWA,CAACC,SAAgC,EAAEC,QAA+B,EAAE;IAAA,KATvEC,SAAS;IAAA,KACTC,UAAU;IAAA,KACVC,eAAe,GAAa,EAAE;IAAA,KAC9BC,gBAAgB,GAAG,IAAAC,0BAAmB,EAAC,CAAC;IAAA,KACxCC,OAAO,GAAG,KAAK;IAAA,KACfC,QAAQ;IAAA,KAEhBC,SAAS;IAGP,IAAI,CAACP,SAAS,GAAGD,QAAQ;IACzB,IAAI,CAACE,UAAU,GAAGH,SAAS;IAC3BC,QAAQ,CAACS,EAAE,CAAC,MAAM,EAAEC,MAAM,IAAI,IAAI,CAACC,SAAS,CAACD,MAAM,CAAC,CAAC;IACrDV,QAAQ,CAACS,EAAE,CAAC,OAAO,EAAE,MAAM;MACzB,IAAI,CAACH,OAAO,GAAG,IAAI;MACnB,IAAI,IAAI,CAACC,QAAQ,EACf,IAAI,CAACA,QAAQ,CAACK,IAAI,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFZ,QAAQ,CAACS,EAAE,CAAC,OAAO,EAAEI,CAAC,IAAIC,wBAAW,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC,CAAC;IACtDd,SAAS,CAACU,EAAE,CAAC,OAAO,EAAEI,CAAC,IAAIC,wBAAW,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC,CAAC;IACvD,IAAI,CAACL,SAAS,GAAGQ,SAAS;EAC5B;EAEA,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACV,QAAQ;EACtB;EAEA,IAAIU,OAAOA,CAACA,OAAgD,EAAE;IAC5D,IAAI,CAACV,QAAQ,GAAGU,OAAO;IACvB,IAAIA,OAAO,IAAI,CAAC,IAAI,CAAChB,SAAS,CAACiB,QAAQ,EACrCD,OAAO,CAAC,CAAC;EACb;EAEAE,IAAIA,CAACC,OAAwB,EAAE;IAC7B,IAAI,IAAI,CAACd,OAAO,EACd,MAAM,IAAIe,KAAK,CAAC,sBAAsB,CAAC;IACzC,IAAI,CAACnB,UAAU,CAACoB,KAAK,CAACC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;IAC9C,IAAI,CAAClB,UAAU,CAACoB,KAAK,CAAC,IAAI,CAAC;EAC7B;EAEAG,KAAKA,CAAA,EAAG;IACN,MAAM,IAAIJ,KAAK,CAAC,eAAe,CAAC;EAClC;EAEAV,SAASA,CAACD,MAAc,EAAE;IACxB,IAAIgB,GAAG,GAAGhB,MAAM,CAACiB,OAAO,CAAC,IAAI,CAAC;IAC9B,IAAID,GAAG,KAAK,CAAC,CAAC,EAAE;MACd,IAAI,CAACvB,eAAe,CAACyB,IAAI,CAAClB,MAAM,CAAC;MACjC;IACF;IACA,IAAI,CAACP,eAAe,CAACyB,IAAI,CAAClB,MAAM,CAACmB,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC;IAC/C,MAAMN,OAAO,GAAGU,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC5B,eAAe,CAAC,CAAC6B,QAAQ,CAAC,CAAC;IAC9D,IAAI,CAAC5B,gBAAgB,CAAC,MAAM;MAC1B,IAAI,IAAI,CAACI,SAAS,EAChB,IAAI,CAACA,SAAS,CAACI,IAAI,CAAC,IAAI,EAAEW,IAAI,CAACU,KAAK,CAACb,OAAO,CAAC,CAAC;IAClD,CAAC,CAAC;IAEF,IAAIc,KAAK,GAAGR,GAAG,GAAG,CAAC;IACnBA,GAAG,GAAGhB,MAAM,CAACiB,OAAO,CAAC,IAAI,EAAEO,KAAK,CAAC;IACjC,OAAOR,GAAG,KAAK,CAAC,CAAC,EAAE;MACjB,MAAMN,OAAO,GAAGV,MAAM,CAACsB,QAAQ,CAAChB,SAAS,EAAEkB,KAAK,EAAER,GAAG,CAAC;MACtD,IAAI,CAACtB,gBAAgB,CAAC,MAAM;QAC1B,IAAI,IAAI,CAACI,SAAS,EAChB,IAAI,CAACA,SAAS,CAACI,IAAI,CAAC,IAAI,EAAEW,IAAI,CAACU,KAAK,CAACb,OAAO,CAAC,CAAC;MAClD,CAAC,CAAC;MACFc,KAAK,GAAGR,GAAG,GAAG,CAAC;MACfA,GAAG,GAAGhB,MAAM,CAACiB,OAAO,CAAC,IAAI,EAAEO,KAAK,CAAC;IACnC;IACA,IAAI,CAAC/B,eAAe,GAAG,CAACO,MAAM,CAACmB,KAAK,CAACK,KAAK,CAAC,CAAC;EAC9C;AACF;AAACC,OAAA,CAAAtC,aAAA,GAAAA,aAAA"}