{"version":3,"file":"wkInterceptableRequest.js","names":["network","_interopRequireWildcard","require","_utils","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","errorReasons","WKInterceptableRequest","constructor","session","frame","event","redirectedFrom","documentId","_session","_requestId","request","_timestamp","_wallTime","requestId","resourceType","type","toLowerCase","postDataBuffer","timestamp","walltime","postData","Buffer","from","Request","_page","_browserContext","url","method","headersObjectToArray","headers","adoptRequestFromNewProcess","newSession","createResponse","responsePayload","getResponseBody","response","send","body","base64Encoded","timingPayload","timing","startTime","domainLookupStart","wkMillisToRoundishMillis","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseStart","setCookieSeparator","process","platform","Response","status","statusText","source","setRawResponseHeaders","setTransferSize","requestHeaders","keys","length","URL","host","setRawRequestHeaders","exports","WKRouteImpl","abort","errorCode","errorType","assert","sendMayFail","fulfill","Error","mimeType","isBase64","headersArrayToObject","contentType","split","trim","content","continue","overrides","undefined","toString","value"],"sources":["../../../src/server/webkit/wkInterceptableRequest.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as frames from '../frames';\nimport * as network from '../network';\nimport type * as types from '../types';\nimport type { Protocol } from './protocol';\nimport type { WKSession } from './wkConnection';\nimport { assert, headersObjectToArray, headersArrayToObject } from '../../utils';\n\nconst errorReasons: { [reason: string]: Protocol.Network.ResourceErrorType } = {\n  'aborted': 'Cancellation',\n  'accessdenied': 'AccessControl',\n  'addressunreachable': 'General',\n  'blockedbyclient': 'Cancellation',\n  'blockedbyresponse': 'General',\n  'connectionaborted': 'General',\n  'connectionclosed': 'General',\n  'connectionfailed': 'General',\n  'connectionrefused': 'General',\n  'connectionreset': 'General',\n  'internetdisconnected': 'General',\n  'namenotresolved': 'General',\n  'timedout': 'Timeout',\n  'failed': 'General',\n};\n\nexport class WKInterceptableRequest {\n  private _session: WKSession;\n  private _requestId: string;\n  readonly request: network.Request;\n  _timestamp: number;\n  _wallTime: number;\n\n  constructor(session: WKSession, frame: frames.Frame, event: Protocol.Network.requestWillBeSentPayload, redirectedFrom: WKInterceptableRequest | null, documentId: string | undefined) {\n    this._session = session;\n    this._requestId = event.requestId;\n    const resourceType = event.type ? event.type.toLowerCase() : (redirectedFrom ? redirectedFrom.request.resourceType() : 'other');\n    let postDataBuffer = null;\n    this._timestamp = event.timestamp;\n    this._wallTime = event.walltime * 1000;\n    if (event.request.postData)\n      postDataBuffer = Buffer.from(event.request.postData, 'base64');\n    this.request = new network.Request(frame._page._browserContext, frame, null, redirectedFrom?.request || null, documentId, event.request.url,\n        resourceType, event.request.method, postDataBuffer, headersObjectToArray(event.request.headers));\n  }\n\n  adoptRequestFromNewProcess(newSession: WKSession, requestId: string) {\n    this._session = newSession;\n    this._requestId = requestId;\n  }\n\n  createResponse(responsePayload: Protocol.Network.Response): network.Response {\n    const getResponseBody = async () => {\n      const response = await this._session.send('Network.getResponseBody', { requestId: this._requestId });\n      return Buffer.from(response.body, response.base64Encoded ? 'base64' : 'utf8');\n    };\n    const timingPayload = responsePayload.timing;\n    const timing: network.ResourceTiming = {\n      startTime: this._wallTime,\n      domainLookupStart: timingPayload ? wkMillisToRoundishMillis(timingPayload.domainLookupStart) : -1,\n      domainLookupEnd: timingPayload ? wkMillisToRoundishMillis(timingPayload.domainLookupEnd) : -1,\n      connectStart: timingPayload ? wkMillisToRoundishMillis(timingPayload.connectStart) : -1,\n      secureConnectionStart: timingPayload ? wkMillisToRoundishMillis(timingPayload.secureConnectionStart) : -1,\n      connectEnd: timingPayload ? wkMillisToRoundishMillis(timingPayload.connectEnd) : -1,\n      requestStart: timingPayload ? wkMillisToRoundishMillis(timingPayload.requestStart) : -1,\n      responseStart: timingPayload ? wkMillisToRoundishMillis(timingPayload.responseStart) : -1,\n    };\n    const setCookieSeparator = process.platform === 'darwin' ? ',' : 'playwright-set-cookie-separator';\n    const response = new network.Response(this.request, responsePayload.status, responsePayload.statusText, headersObjectToArray(responsePayload.headers, ',', setCookieSeparator), timing, getResponseBody, responsePayload.source === 'service-worker');\n\n    // No raw response headers in WebKit, use \"provisional\" ones.\n    response.setRawResponseHeaders(null);\n    // Transfer size is not available in WebKit.\n    response.setTransferSize(null);\n\n    if (responsePayload.requestHeaders && Object.keys(responsePayload.requestHeaders).length) {\n      const headers = { ...responsePayload.requestHeaders };\n      if (!headers['host'])\n        headers['Host'] = new URL(this.request.url()).host;\n      this.request.setRawRequestHeaders(headersObjectToArray(headers));\n    } else {\n      // No raw headers available, use provisional ones.\n      this.request.setRawRequestHeaders(null);\n    }\n    return response;\n  }\n}\n\nexport class WKRouteImpl implements network.RouteDelegate {\n  private readonly _session: WKSession;\n  private readonly _requestId: string;\n\n  constructor(session: WKSession, requestId: string) {\n    this._session = session;\n    this._requestId = requestId;\n  }\n\n  async abort(errorCode: string) {\n    const errorType = errorReasons[errorCode];\n    assert(errorType, 'Unknown error code: ' + errorCode);\n    // In certain cases, protocol will return error if the request was already canceled\n    // or the page was closed. We should tolerate these errors.\n    await this._session.sendMayFail('Network.interceptRequestWithError', { requestId: this._requestId, errorType });\n  }\n\n  async fulfill(response: types.NormalizedFulfillResponse) {\n    if (300 <= response.status && response.status < 400)\n      throw new Error('Cannot fulfill with redirect status: ' + response.status);\n\n    // In certain cases, protocol will return error if the request was already canceled\n    // or the page was closed. We should tolerate these errors.\n    let mimeType = response.isBase64 ? 'application/octet-stream' : 'text/plain';\n    const headers = headersArrayToObject(response.headers, true /* lowerCase */);\n    const contentType = headers['content-type'];\n    if (contentType)\n      mimeType = contentType.split(';')[0].trim();\n\n    await this._session.sendMayFail('Network.interceptRequestWithResponse', {\n      requestId: this._requestId,\n      status: response.status,\n      statusText: network.statusText(response.status),\n      mimeType,\n      headers,\n      base64Encoded: response.isBase64,\n      content: response.body\n    });\n  }\n\n  async continue(overrides: types.NormalizedContinueOverrides) {\n    // In certain cases, protocol will return error if the request was already canceled\n    // or the page was closed. We should tolerate these errors.\n    await this._session.sendMayFail('Network.interceptWithRequest', {\n      requestId: this._requestId,\n      url: overrides.url,\n      method: overrides.method,\n      headers: overrides.headers ? headersArrayToObject(overrides.headers, false /* lowerCase */) : undefined,\n      postData: overrides.postData ? Buffer.from(overrides.postData).toString('base64') : undefined\n    });\n  }\n}\n\nfunction wkMillisToRoundishMillis(value: number): number {\n  // WebKit uses -1000 for unavailable.\n  if (value === -1000)\n    return -1;\n\n  // WebKit has a bug, instead of -1 it sends -1000 to be in ms.\n  if (value <= 0) {\n    // DNS can start before request start on Mac Network Stack\n    return -1;\n  }\n\n  return ((value * 1000) | 0) / 1000;\n}\n"],"mappings":"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"}