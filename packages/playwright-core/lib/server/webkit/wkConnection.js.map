{"version":3,"file":"wkConnection.js","names":["_events","require","_utils","_debugLogger","_helper","_protocolError","kBrowserCloseMessageId","exports","kPageProxyMessageReceived","Symbol","WKConnection","constructor","transport","onDisconnect","protocolLogger","browserLogsCollector","_transport","_onDisconnect","_protocolLogger","_browserLogsCollector","_browserDisconnectedLogs","_lastId","_closed","browserSession","WKSession","message","rawSend","onmessage","_dispatchMessage","bind","onclose","_onClose","nextMessageId","send","id","pageProxyId","payload","dispatchMessage","method","params","reason","undefined","helper","formatBrowserLogs","recentLogs","dispose","isClosed","close","EventEmitter","connection","sessionId","_disposed","_rawSend","_callbacks","Map","_crashed","on","addListener","off","removeListener","once","setMaxListeners","ProtocolError","messageObj","Promise","resolve","reject","set","error","sendMayFail","catch","debugLogger","log","markAsCrashed","isDisposed","callback","values","type","logs","clear","object","has","get","delete","setMessage","result","assert","then","emit"],"sources":["../../../src/server/webkit/wkConnection.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\nimport { assert } from '../../utils';\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from '../transport';\nimport type { Protocol } from './protocol';\nimport type { RecentLogsCollector } from '../../utils/debugLogger';\nimport { debugLogger } from '../../utils/debugLogger';\nimport type { ProtocolLogger } from '../types';\nimport { helper } from '../helper';\nimport { ProtocolError } from '../protocolError';\n\n// WKPlaywright uses this special id to issue Browser.close command which we\n// should ignore.\nexport const kBrowserCloseMessageId = -9999;\n\n// We emulate kPageProxyMessageReceived message to unify it with Browser.pageProxyCreated\n// and Browser.pageProxyDestroyed for easier management.\nexport const kPageProxyMessageReceived = Symbol('kPageProxyMessageReceived');\nexport type PageProxyMessageReceivedPayload = { pageProxyId: string, message: any };\n\nexport class WKConnection {\n  private readonly _transport: ConnectionTransport;\n  private readonly _onDisconnect: () => void;\n  private readonly _protocolLogger: ProtocolLogger;\n  private readonly _browserLogsCollector: RecentLogsCollector;\n  _browserDisconnectedLogs: string | undefined;\n  private _lastId = 0;\n  private _closed = false;\n  readonly browserSession: WKSession;\n\n  constructor(transport: ConnectionTransport, onDisconnect: () => void, protocolLogger: ProtocolLogger, browserLogsCollector: RecentLogsCollector) {\n    this._transport = transport;\n    this._onDisconnect = onDisconnect;\n    this._protocolLogger = protocolLogger;\n    this._browserLogsCollector = browserLogsCollector;\n    this.browserSession = new WKSession(this, '', (message: any) => {\n      this.rawSend(message);\n    });\n    this._transport.onmessage = this._dispatchMessage.bind(this);\n    // onclose should be set last, since it can be immediately called.\n    this._transport.onclose = this._onClose.bind(this);\n  }\n\n  nextMessageId(): number {\n    return ++this._lastId;\n  }\n\n  rawSend(message: ProtocolRequest) {\n    this._protocolLogger('send', message);\n    this._transport.send(message);\n  }\n\n  private _dispatchMessage(message: ProtocolResponse) {\n    this._protocolLogger('receive', message);\n    if (message.id === kBrowserCloseMessageId)\n      return;\n    if (message.pageProxyId) {\n      const payload: PageProxyMessageReceivedPayload = { message: message, pageProxyId: message.pageProxyId };\n      this.browserSession.dispatchMessage({ method: kPageProxyMessageReceived, params: payload });\n      return;\n    }\n    this.browserSession.dispatchMessage(message);\n  }\n\n  _onClose(reason?: string) {\n    this._closed = true;\n    this._transport.onmessage = undefined;\n    this._transport.onclose = undefined;\n    this._browserDisconnectedLogs = helper.formatBrowserLogs(this._browserLogsCollector.recentLogs(), reason);\n    this.browserSession.dispose();\n    this._onDisconnect();\n  }\n\n  isClosed() {\n    return this._closed;\n  }\n\n  close() {\n    if (!this._closed)\n      this._transport.close();\n  }\n}\n\nexport class WKSession extends EventEmitter {\n  connection: WKConnection;\n  readonly sessionId: string;\n\n  private _disposed = false;\n  private readonly _rawSend: (message: any) => void;\n  private readonly _callbacks = new Map<number, { resolve: (o: any) => void, reject: (e: ProtocolError) => void, error: ProtocolError }>();\n  private _crashed: boolean = false;\n\n  override on: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override addListener: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override off: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override removeListener: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override once: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n\n  constructor(connection: WKConnection, sessionId: string, rawSend: (message: any) => void) {\n    super();\n    this.setMaxListeners(0);\n    this.connection = connection;\n    this.sessionId = sessionId;\n    this._rawSend = rawSend;\n\n    this.on = super.on;\n    this.off = super.removeListener;\n    this.addListener = super.addListener;\n    this.removeListener = super.removeListener;\n    this.once = super.once;\n  }\n\n  async send<T extends keyof Protocol.CommandParameters>(\n    method: T,\n    params?: Protocol.CommandParameters[T]\n  ): Promise<Protocol.CommandReturnValues[T]> {\n    if (this._crashed || this._disposed || this.connection._browserDisconnectedLogs)\n      throw new ProtocolError(this._crashed ? 'crashed' : 'closed', undefined, this.connection._browserDisconnectedLogs);\n    const id = this.connection.nextMessageId();\n    const messageObj = { id, method, params };\n    this._rawSend(messageObj);\n    return new Promise<Protocol.CommandReturnValues[T]>((resolve, reject) => {\n      this._callbacks.set(id, { resolve, reject, error: new ProtocolError('error', method) });\n    });\n  }\n\n  sendMayFail<T extends keyof Protocol.CommandParameters>(method: T, params?: Protocol.CommandParameters[T]): Promise<Protocol.CommandReturnValues[T] | void> {\n    return this.send(method, params).catch(error => debugLogger.log('error', error));\n  }\n\n  markAsCrashed() {\n    this._crashed = true;\n  }\n\n  isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  dispose() {\n    for (const callback of this._callbacks.values()) {\n      callback.error.type = this._crashed ? 'crashed' : 'closed';\n      callback.error.logs = this.connection._browserDisconnectedLogs;\n      callback.reject(callback.error);\n    }\n    this._callbacks.clear();\n    this._disposed = true;\n  }\n\n  dispatchMessage(object: any) {\n    if (object.id && this._callbacks.has(object.id)) {\n      const callback = this._callbacks.get(object.id)!;\n      this._callbacks.delete(object.id);\n      if (object.error) {\n        callback.error.setMessage(object.error.message);\n        callback.reject(callback.error);\n      } else {\n        callback.resolve(object.result);\n      }\n    } else if (object.id && !object.error) {\n      // Response might come after session has been disposed and rejected all callbacks.\n      assert(this.isDisposed());\n    } else {\n      Promise.resolve().then(() => this.emit(object.method, object.params));\n    }\n  }\n}\n"],"mappings":"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"}