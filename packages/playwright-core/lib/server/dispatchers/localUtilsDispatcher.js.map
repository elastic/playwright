{"version":3,"file":"localUtilsDispatcher.js","names":["_fs","_interopRequireDefault","require","_path","_os","_manualPromise","_utils","_dispatcher","_zipBundle","_zipFile","_jsonPipeDispatcher","_transport","_socksInterceptor","_userAgent","_progress","_network","_instrumentation","_deviceDescriptors","obj","__esModule","default","LocalUtilsDispatcher","Dispatcher","constructor","scope","playwright","localUtils","SdkObject","deviceDescriptors","Object","entries","descriptors","map","name","descriptor","_type_LocalUtils","_harBackends","Map","_stackSessions","zip","params","promise","ManualPromise","zipFile","yazl","ZipFile","on","error","reject","addFile","file","fs","statSync","isFile","e","entry","value","stackSession","stacksId","get","undefined","callStacks","length","writer","process","env","PW_LIVE_TRACE_STACKS","buffer","Buffer","from","JSON","stringify","serializeClientSideCallMetadata","addBuffer","includeSources","sourceFiles","Set","stack","add","sourceFile","calculateSha1","mode","promises","mkdir","path","dirname","recursive","end","outputStream","pipe","createWriteStream","resolve","_deleteStackSession","tempFile","rename","yauzl","open","err","inZipFile","assert","pendingEntries","entryCount","openReadStream","readStream","addReadStream","fileName","unlink","then","catch","harOpen","metadata","harBackend","endsWith","entryNames","harEntryName","find","har","read","harFile","parse","toString","HarBackend","readFile","set","id","harId","harLookup","action","message","lookup","url","method","headers","postData","isNavigationRequest","harClose","delete","dispose","harUnzip","dir","writeFile","join","close","connect","controller","ProgressController","_object","setLogName","run","progress","_params$exposeNetwork","wsHeaders","getUserAgent","exposeNetwork","wsEndpoint","urlToWSEndpoint","transport","WebSocketTransport","socksInterceptor","SocksInterceptor","socksProxyRedirectPortForTest","JsonPipeDispatcher","onmessage","json","interceptMessage","cb","dispatch","slowMo","setTimeout","send","onclose","reason","cleanup","wasClosed","timeout","tracingStarted","tmpDir","tracesDir","mkdtemp","os","tmpdir","traceStacksFile","traceName","Promise","traceDiscarded","addStackToTracingNoReply","session","values","push","callData","removeFolders","exports","redirectStatus","baseDir","createGuid","_harFile","_baseDir","_harFindResponse","request","redirectURL","response","_loadContent","content","status","body","_file","text","encoding","harLog","log","visited","candidate","equals","boundary","multipartBoundary","candidataBoundary","replaceAll","list","matchingHeaders","countMatchingHeaders","sort","a","b","has","Error","locationHeader","h","toLowerCase","includes","locationURL","URL","_this$_zipFile","harHeaders","matches","endpointURL","_progress$timeUntilDe","startsWith","fetchUrl","pathname","fetchData","timeUntilDeadline","statusCode","throwIfAborted","wsUrl","wsEndpointPath","substring","protocol","contentType","match"],"sources":["../../../src/server/dispatchers/localUtilsDispatcher.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type EventEmitter from 'events';\nimport fs from 'fs';\nimport path from 'path';\nimport os from 'os';\nimport type * as channels from '@protocol/channels';\nimport { ManualPromise } from '../../utils/manualPromise';\nimport { assert, calculateSha1, createGuid, removeFolders } from '../../utils';\nimport type { RootDispatcher } from './dispatcher';\nimport { Dispatcher } from './dispatcher';\nimport { yazl, yauzl } from '../../zipBundle';\nimport { ZipFile } from '../../utils/zipFile';\nimport type * as har from '@trace/har';\nimport type { HeadersArray } from '../types';\nimport { JsonPipeDispatcher } from '../dispatchers/jsonPipeDispatcher';\nimport { WebSocketTransport } from '../transport';\nimport { SocksInterceptor } from '../socksInterceptor';\nimport type { CallMetadata } from '../instrumentation';\nimport { getUserAgent } from '../../utils/userAgent';\nimport type { Progress } from '../progress';\nimport { ProgressController } from '../progress';\nimport { fetchData } from '../../utils/network';\nimport type { HTTPRequestParams } from '../../utils/network';\nimport type http from 'http';\nimport type { Playwright } from '../playwright';\nimport { SdkObject } from '../../server/instrumentation';\nimport { serializeClientSideCallMetadata } from '../../utils';\nimport { deviceDescriptors as descriptors }  from '../deviceDescriptors';\n\nexport class LocalUtilsDispatcher extends Dispatcher<{ guid: string }, channels.LocalUtilsChannel, RootDispatcher> implements channels.LocalUtilsChannel {\n  _type_LocalUtils: boolean;\n  private _harBackends = new Map<string, HarBackend>();\n  private _stackSessions = new Map<string, {\n    file: string,\n    writer: Promise<void>,\n    tmpDir: string | undefined,\n    callStacks: channels.ClientSideCallMetadata[]\n  }>();\n\n  constructor(scope: RootDispatcher, playwright: Playwright) {\n    const localUtils = new SdkObject(playwright, 'localUtils', 'localUtils');\n    const deviceDescriptors = Object.entries(descriptors)\n        .map(([name, descriptor]) => ({ name, descriptor }));\n    super(scope, localUtils, 'LocalUtils', {\n      deviceDescriptors,\n    });\n    this._type_LocalUtils = true;\n  }\n\n  async zip(params: channels.LocalUtilsZipParams): Promise<void> {\n    const promise = new ManualPromise<void>();\n    const zipFile = new yazl.ZipFile();\n    (zipFile as any as EventEmitter).on('error', error => promise.reject(error));\n\n    const addFile = (file: string, name: string) => {\n      try {\n        if (fs.statSync(file).isFile())\n          zipFile.addFile(file, name);\n      } catch (e) {\n      }\n    };\n\n    for (const entry of params.entries)\n      addFile(entry.value, entry.name);\n\n    // Add stacks and the sources.\n    const stackSession = params.stacksId ? this._stackSessions.get(params.stacksId) : undefined;\n    if (stackSession?.callStacks.length) {\n      await stackSession.writer;\n      if (process.env.PW_LIVE_TRACE_STACKS) {\n        zipFile.addFile(stackSession.file, 'trace.stacks');\n      } else {\n        const buffer = Buffer.from(JSON.stringify(serializeClientSideCallMetadata(stackSession.callStacks)));\n        zipFile.addBuffer(buffer, 'trace.stacks');\n      }\n    }\n\n    // Collect sources from stacks.\n    if (params.includeSources) {\n      const sourceFiles = new Set<string>();\n      for (const { stack } of stackSession?.callStacks || []) {\n        if (!stack)\n          continue;\n        for (const { file } of stack)\n          sourceFiles.add(file);\n      }\n      for (const sourceFile of sourceFiles)\n        addFile(sourceFile, 'resources/src@' + calculateSha1(sourceFile) + '.txt');\n    }\n\n    if (params.mode === 'write') {\n      // New file, just compress the entries.\n      await fs.promises.mkdir(path.dirname(params.zipFile), { recursive: true });\n      zipFile.end(undefined, () => {\n        zipFile.outputStream.pipe(fs.createWriteStream(params.zipFile))\n            .on('close', () => promise.resolve())\n            .on('error', error => promise.reject(error));\n      });\n      await promise;\n      await this._deleteStackSession(params.stacksId);\n      return;\n    }\n\n    // File already exists. Repack and add new entries.\n    const tempFile = params.zipFile + '.tmp';\n    await fs.promises.rename(params.zipFile, tempFile);\n\n    yauzl.open(tempFile, (err, inZipFile) => {\n      if (err) {\n        promise.reject(err);\n        return;\n      }\n      assert(inZipFile);\n      let pendingEntries = inZipFile.entryCount;\n      inZipFile.on('entry', entry => {\n        inZipFile.openReadStream(entry, (err, readStream) => {\n          if (err) {\n            promise.reject(err);\n            return;\n          }\n          zipFile.addReadStream(readStream!, entry.fileName);\n          if (--pendingEntries === 0) {\n            zipFile.end(undefined, () => {\n              zipFile.outputStream.pipe(fs.createWriteStream(params.zipFile)).on('close', () => {\n                fs.promises.unlink(tempFile).then(() => {\n                  promise.resolve();\n                }).catch(error => promise.reject(error));\n              });\n            });\n          }\n        });\n      });\n    });\n    await promise;\n    await this._deleteStackSession(params.stacksId);\n  }\n\n  async harOpen(params: channels.LocalUtilsHarOpenParams, metadata: CallMetadata): Promise<channels.LocalUtilsHarOpenResult> {\n    let harBackend: HarBackend;\n    if (params.file.endsWith('.zip')) {\n      const zipFile = new ZipFile(params.file);\n      const entryNames = await zipFile.entries();\n      const harEntryName = entryNames.find(e => e.endsWith('.har'));\n      if (!harEntryName)\n        return { error: 'Specified archive does not have a .har file' };\n      const har = await zipFile.read(harEntryName);\n      const harFile = JSON.parse(har.toString()) as har.HARFile;\n      harBackend = new HarBackend(harFile, null, zipFile);\n    } else {\n      const harFile = JSON.parse(await fs.promises.readFile(params.file, 'utf-8')) as har.HARFile;\n      harBackend = new HarBackend(harFile, path.dirname(params.file), null);\n    }\n    this._harBackends.set(harBackend.id, harBackend);\n    return { harId: harBackend.id };\n  }\n\n  async harLookup(params: channels.LocalUtilsHarLookupParams, metadata: CallMetadata): Promise<channels.LocalUtilsHarLookupResult> {\n    const harBackend = this._harBackends.get(params.harId);\n    if (!harBackend)\n      return { action: 'error', message: `Internal error: har was not opened` };\n    return await harBackend.lookup(params.url, params.method, params.headers, params.postData, params.isNavigationRequest);\n  }\n\n  async harClose(params: channels.LocalUtilsHarCloseParams, metadata: CallMetadata): Promise<void> {\n    const harBackend = this._harBackends.get(params.harId);\n    if (harBackend) {\n      this._harBackends.delete(harBackend.id);\n      harBackend.dispose();\n    }\n  }\n\n  async harUnzip(params: channels.LocalUtilsHarUnzipParams, metadata: CallMetadata): Promise<void> {\n    const dir = path.dirname(params.zipFile);\n    const zipFile = new ZipFile(params.zipFile);\n    for (const entry of await zipFile.entries()) {\n      const buffer = await zipFile.read(entry);\n      if (entry === 'har.har')\n        await fs.promises.writeFile(params.harFile, buffer);\n      else\n        await fs.promises.writeFile(path.join(dir, entry), buffer);\n    }\n    zipFile.close();\n    await fs.promises.unlink(params.zipFile);\n  }\n\n  async connect(params: channels.LocalUtilsConnectParams, metadata: CallMetadata): Promise<channels.LocalUtilsConnectResult> {\n    const controller = new ProgressController(metadata, this._object as SdkObject);\n    controller.setLogName('browser');\n    return await controller.run(async progress => {\n      const wsHeaders = {\n        'User-Agent': getUserAgent(),\n        'x-playwright-proxy': params.exposeNetwork ?? '',\n        ...params.headers,\n      };\n      const wsEndpoint = await urlToWSEndpoint(progress, params.wsEndpoint);\n\n      const transport = await WebSocketTransport.connect(progress, wsEndpoint, wsHeaders, true, 'x-playwright-debug-log');\n      const socksInterceptor = new SocksInterceptor(transport, params.exposeNetwork, params.socksProxyRedirectPortForTest);\n      const pipe = new JsonPipeDispatcher(this);\n      transport.onmessage = json => {\n        if (socksInterceptor.interceptMessage(json))\n          return;\n        const cb = () => {\n          try {\n            pipe.dispatch(json);\n          } catch (e) {\n            transport.close();\n          }\n        };\n        if (params.slowMo)\n          setTimeout(cb, params.slowMo);\n        else\n          cb();\n      };\n      pipe.on('message', message => {\n        transport.send(message);\n      });\n      transport.onclose = (reason?: string) => {\n        socksInterceptor?.cleanup();\n        pipe.wasClosed(reason);\n      };\n      pipe.on('close', () => transport.close());\n      return { pipe, headers: transport.headers };\n    }, params.timeout || 0);\n  }\n\n  async tracingStarted(params: channels.LocalUtilsTracingStartedParams, metadata?: CallMetadata | undefined): Promise<channels.LocalUtilsTracingStartedResult> {\n    let tmpDir = undefined;\n    if (!params.tracesDir)\n      tmpDir = await fs.promises.mkdtemp(path.join(os.tmpdir(), 'playwright-tracing-'));\n    const traceStacksFile = path.join(params.tracesDir || tmpDir!, params.traceName + '.stacks');\n    this._stackSessions.set(traceStacksFile, { callStacks: [], file: traceStacksFile, writer: Promise.resolve(), tmpDir });\n    return { stacksId: traceStacksFile };\n  }\n\n  async traceDiscarded(params: channels.LocalUtilsTraceDiscardedParams, metadata?: CallMetadata | undefined): Promise<void> {\n    await this._deleteStackSession(params.stacksId);\n  }\n\n  async addStackToTracingNoReply(params: channels.LocalUtilsAddStackToTracingNoReplyParams, metadata?: CallMetadata | undefined): Promise<void> {\n    for (const session of this._stackSessions.values()) {\n      session.callStacks.push(params.callData);\n      if (process.env.PW_LIVE_TRACE_STACKS) {\n        session.writer = session.writer.then(() => {\n          const buffer = Buffer.from(JSON.stringify(serializeClientSideCallMetadata(session.callStacks)));\n          return fs.promises.writeFile(session.file, buffer);\n        });\n      }\n    }\n  }\n\n  private async _deleteStackSession(stacksId?: string) {\n    const session = stacksId ? this._stackSessions.get(stacksId) : undefined;\n    if (!session)\n      return;\n    await session.writer;\n    if (session.tmpDir)\n      await removeFolders([session.tmpDir]);\n    this._stackSessions.delete(stacksId!);\n  }\n}\n\nconst redirectStatus = [301, 302, 303, 307, 308];\n\nclass HarBackend {\n  readonly id = createGuid();\n  private _harFile: har.HARFile;\n  private _zipFile: ZipFile | null;\n  private _baseDir: string | null;\n\n  constructor(harFile: har.HARFile, baseDir: string | null, zipFile: ZipFile | null) {\n    this._harFile = harFile;\n    this._baseDir = baseDir;\n    this._zipFile = zipFile;\n  }\n\n  async lookup(url: string, method: string, headers: HeadersArray, postData: Buffer | undefined, isNavigationRequest: boolean): Promise<{\n      action: 'error' | 'redirect' | 'fulfill' | 'noentry',\n      message?: string,\n      redirectURL?: string,\n      status?: number,\n      headers?: HeadersArray,\n      body?: Buffer }> {\n    let entry;\n    try {\n      entry = await this._harFindResponse(url, method, headers, postData);\n    } catch (e) {\n      return { action: 'error', message: 'HAR error: ' + e.message };\n    }\n\n    if (!entry)\n      return { action: 'noentry' };\n\n    // If navigation is being redirected, restart it with the final url to ensure the document's url changes.\n    if (entry.request.url !== url && isNavigationRequest)\n      return { action: 'redirect', redirectURL: entry.request.url };\n\n    const response = entry.response;\n    try {\n      const buffer = await this._loadContent(response.content);\n      return {\n        action: 'fulfill',\n        status: response.status,\n        headers: response.headers,\n        body: buffer,\n      };\n    } catch (e) {\n      return { action: 'error', message: e.message };\n    }\n  }\n\n  private async _loadContent(content: { text?: string, encoding?: string, _file?: string }): Promise<Buffer> {\n    const file = content._file;\n    let buffer: Buffer;\n    if (file) {\n      if (this._zipFile)\n        buffer = await this._zipFile.read(file);\n      else\n        buffer = await fs.promises.readFile(path.resolve(this._baseDir!, file));\n    } else {\n      buffer = Buffer.from(content.text || '', content.encoding === 'base64' ? 'base64' : 'utf-8');\n    }\n    return buffer;\n  }\n\n  private async _harFindResponse(url: string, method: string, headers: HeadersArray, postData: Buffer | undefined): Promise<har.Entry | undefined> {\n    const harLog = this._harFile.log;\n    const visited = new Set<har.Entry>();\n    while (true) {\n      const entries: har.Entry[] = [];\n      for (const candidate of harLog.entries) {\n        if (candidate.request.url !== url || candidate.request.method !== method)\n          continue;\n        if (method === 'POST' && postData && candidate.request.postData) {\n          const buffer = await this._loadContent(candidate.request.postData);\n          if (!buffer.equals(postData)) {\n            const boundary = multipartBoundary(headers);\n            if (!boundary)\n              continue;\n            const candidataBoundary = multipartBoundary(candidate.request.headers);\n            if (!candidataBoundary)\n              continue;\n            // Try to match multipart/form-data ignroing boundary as it changes between requests.\n            if (postData.toString().replaceAll(boundary, '') !== buffer.toString().replaceAll(candidataBoundary, ''))\n              continue;\n          }\n        }\n        entries.push(candidate);\n      }\n\n      if (!entries.length)\n        return;\n\n      let entry = entries[0];\n\n      // Disambiguate using headers - then one with most matching headers wins.\n      if (entries.length > 1) {\n        const list: { candidate: har.Entry, matchingHeaders: number }[] = [];\n        for (const candidate of entries) {\n          const matchingHeaders = countMatchingHeaders(candidate.request.headers, headers);\n          list.push({ candidate, matchingHeaders });\n        }\n        list.sort((a, b) => b.matchingHeaders - a.matchingHeaders);\n        entry = list[0].candidate;\n      }\n\n      if (visited.has(entry))\n        throw new Error(`Found redirect cycle for ${url}`);\n\n      visited.add(entry);\n\n      // Follow redirects.\n      const locationHeader = entry.response.headers.find(h => h.name.toLowerCase() === 'location');\n      if (redirectStatus.includes(entry.response.status) && locationHeader) {\n        const locationURL = new URL(locationHeader.value, url);\n        url = locationURL.toString();\n        if ((entry.response.status === 301 || entry.response.status === 302) && method === 'POST' ||\n          entry.response.status === 303 && !['GET', 'HEAD'].includes(method)) {\n          // HTTP-redirect fetch step 13 (https://fetch.spec.whatwg.org/#http-redirect-fetch)\n          method = 'GET';\n        }\n        continue;\n      }\n\n      return entry;\n    }\n  }\n\n  dispose() {\n    this._zipFile?.close();\n  }\n}\n\nfunction countMatchingHeaders(harHeaders: har.Header[], headers: HeadersArray): number {\n  const set = new Set(headers.map(h => h.name.toLowerCase() + ':' + h.value));\n  let matches = 0;\n  for (const h of harHeaders) {\n    if (set.has(h.name.toLowerCase() + ':' + h.value))\n      ++matches;\n  }\n  return matches;\n}\n\nexport async function urlToWSEndpoint(progress: Progress|undefined, endpointURL: string): Promise<string> {\n  if (endpointURL.startsWith('ws'))\n    return endpointURL;\n\n  progress?.log(`<ws preparing> retrieving websocket url from ${endpointURL}`);\n  const fetchUrl = new URL(endpointURL);\n  if (!fetchUrl.pathname.endsWith('/'))\n    fetchUrl.pathname += '/';\n  fetchUrl.pathname += 'json';\n  const json = await fetchData({\n    url: fetchUrl.toString(),\n    method: 'GET',\n    timeout: progress?.timeUntilDeadline() ?? 30_000,\n    headers: { 'User-Agent': getUserAgent() },\n  }, async (params: HTTPRequestParams, response: http.IncomingMessage) => {\n    return new Error(`Unexpected status ${response.statusCode} when connecting to ${fetchUrl.toString()}.\\n` +\n        `This does not look like a Playwright server, try connecting via ws://.`);\n  });\n  progress?.throwIfAborted();\n\n  const wsUrl = new URL(endpointURL);\n  let wsEndpointPath = JSON.parse(json).wsEndpointPath;\n  if (wsEndpointPath.startsWith('/'))\n    wsEndpointPath = wsEndpointPath.substring(1);\n  if (!wsUrl.pathname.endsWith('/'))\n    wsUrl.pathname += '/';\n  wsUrl.pathname += wsEndpointPath;\n  wsUrl.protocol = wsUrl.protocol === 'https:' ? 'wss:' : 'ws:';\n  return wsUrl.toString();\n}\n\nfunction multipartBoundary(headers: HeadersArray) {\n  const contentType = headers.find(h => h.name.toLowerCase() === 'content-type');\n  if (!contentType?.value.includes('multipart/form-data'))\n    return undefined;\n  const boundary = contentType.value.match(/boundary=(\\S+)/);\n  if (boundary)\n    return boundary[1];\n  return undefined;\n}\n"],"mappings":"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"}