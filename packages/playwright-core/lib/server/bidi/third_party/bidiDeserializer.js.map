{"version":3,"file":"bidiDeserializer.js","names":["BidiDeserializer","deserialize","result","_result$value","_result$value2","_result$value3","_result$value4","undefined","type","value","map","reduce","acc","add","Set","tuple","key","_deserializeTuple","set","Map","RegExp","pattern","flags","Date","_deserializeNumber","BigInt","Boolean","Error","NaN","Infinity","serializedKey","serializedValue","exports"],"sources":["../../../../src/server/bidi/third_party/bidiDeserializer.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * Modifications copyright (c) Microsoft Corporation.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\nimport type * as Bidi from './bidiProtocol';\n\n/* eslint-disable object-curly-spacing */\n\n/**\n * @internal\n */\nexport class BidiDeserializer {\n  static deserialize(result: Bidi.Script.RemoteValue): any {\n    if (!result)\n      return undefined;\n\n    switch (result.type) {\n      case 'array':\n        return result.value?.map(value => {\n          return BidiDeserializer.deserialize(value);\n        });\n      case 'set':\n        return result.value?.reduce((acc: Set<unknown>, value) => {\n          return acc.add(BidiDeserializer.deserialize(value));\n        }, new Set());\n      case 'object':\n        return result.value?.reduce((acc: Record<any, unknown>, tuple) => {\n          const {key, value} = BidiDeserializer._deserializeTuple(tuple);\n          acc[key as any] = value;\n          return acc;\n        }, {});\n      case 'map':\n        return result.value?.reduce((acc: Map<unknown, unknown>, tuple) => {\n          const {key, value} = BidiDeserializer._deserializeTuple(tuple);\n          return acc.set(key, value);\n        }, new Map());\n      case 'promise':\n        return {};\n      case 'regexp':\n        return new RegExp(result.value.pattern, result.value.flags);\n      case 'date':\n        return new Date(result.value);\n      case 'undefined':\n        return undefined;\n      case 'null':\n        return null;\n      case 'number':\n        return BidiDeserializer._deserializeNumber(result.value);\n      case 'bigint':\n        return BigInt(result.value);\n      case 'boolean':\n        return Boolean(result.value);\n      case 'string':\n        return result.value;\n    }\n\n    throw new Error(`Deserialization of type ${result.type} not supported.`);\n  }\n\n  static _deserializeNumber(value: Bidi.Script.SpecialNumber | number): number {\n    switch (value) {\n      case '-0':\n        return -0;\n      case 'NaN':\n        return NaN;\n      case 'Infinity':\n        return Infinity;\n      case '-Infinity':\n        return -Infinity;\n      default:\n        return value;\n    }\n  }\n\n  static _deserializeTuple([serializedKey, serializedValue]: [\n    Bidi.Script.RemoteValue | string,\n    Bidi.Script.RemoteValue,\n  ]): {key: unknown; value: unknown} {\n    const key =\n      typeof serializedKey === 'string'\n        ? serializedKey\n        : BidiDeserializer.deserialize(serializedKey);\n    const value = BidiDeserializer.deserialize(serializedValue);\n\n    return {key, value};\n  }\n}\n"],"mappings":"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"}