{"version":3,"file":"bidiInput.js","names":["bidi","_interopRequireWildcard","require","_bidiKeyboard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","RawKeyboardImpl","constructor","session","_session","setSession","keydown","modifiers","code","keyCode","keyCodeWithoutLocation","key","location","autoRepeat","text","actions","push","type","value","getBidiKeyValue","_performActions","keyup","sendText","char","send","context","sessionId","id","exports","RawMouseImpl","move","x","y","button","buttons","forClick","Math","round","down","clickCount","toBidiButton","up","click","options","delay","cc","duration","wheel","deltaX","deltaY","parameters","pointerType","Input","PointerType","Mouse","RawTouchscreenImpl","tap","Error"],"sources":["../../../src/server/bidi/bidiInput.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as input from '../input';\nimport type * as types from '../types';\nimport type { BidiSession } from './bidiConnection';\nimport * as bidi from './third_party/bidiProtocol';\nimport { getBidiKeyValue } from './third_party/bidiKeyboard';\n\nexport class RawKeyboardImpl implements input.RawKeyboard {\n  private _session: BidiSession;\n\n  constructor(session: BidiSession) {\n    this._session = session;\n  }\n\n  setSession(session: BidiSession) {\n    this._session = session;\n  }\n\n  async keydown(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number, autoRepeat: boolean, text: string | undefined): Promise<void> {\n    const actions: bidi.Input.KeySourceAction[] = [];\n    actions.push({ type: 'keyDown', value: getBidiKeyValue(key) });\n    // TODO: add modifiers?\n    await this._performActions(actions);\n  }\n\n  async keyup(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number): Promise<void> {\n    const actions: bidi.Input.KeySourceAction[] = [];\n    actions.push({ type: 'keyUp', value: getBidiKeyValue(key) });\n    await this._performActions(actions);\n  }\n\n  async sendText(text: string): Promise<void> {\n    const actions: bidi.Input.KeySourceAction[] = [];\n    for (const char of text) {\n      const value = getBidiKeyValue(char);\n      actions.push({ type: 'keyDown', value });\n      actions.push({ type: 'keyUp', value });\n    }\n    await this._performActions(actions);\n  }\n\n  private async _performActions(actions: bidi.Input.KeySourceAction[]) {\n    await this._session.send('input.performActions', {\n      context: this._session.sessionId,\n      actions: [\n        {\n          type: 'key',\n          id: 'pw_keyboard',\n          actions,\n        }\n      ]\n    });\n  }\n}\n\nexport class RawMouseImpl implements input.RawMouse {\n  private readonly _session: BidiSession;\n\n  constructor(session: BidiSession) {\n    this._session = session;\n  }\n\n  async move(x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, forClick: boolean): Promise<void> {\n    // TODO: bidi throws when x/y are not integers.\n    x = Math.round(x);\n    y = Math.round(y);\n    await this._performActions([{ type: 'pointerMove', x, y }]);\n  }\n\n  async down(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    await this._performActions([{ type: 'pointerDown', button: toBidiButton(button) }]);\n  }\n\n  async up(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    await this._performActions([{ type: 'pointerUp', button: toBidiButton(button) }]);\n  }\n\n  async click(x: number, y: number, options: { delay?: number, button?: types.MouseButton, clickCount?: number } = {}) {\n    x = Math.round(x);\n    y = Math.round(y);\n    const button = toBidiButton(options.button || 'left');\n    const { delay = null, clickCount = 1 } = options;\n    const actions: bidi.Input.PointerSourceAction[] = [];\n    actions.push({ type: 'pointerMove', x, y });\n    for (let cc = 1; cc <= clickCount; ++cc) {\n      actions.push({ type: 'pointerDown', button });\n      if (delay)\n        actions.push({ type: 'pause', duration: delay });\n      actions.push({ type: 'pointerUp', button });\n      if (delay && cc < clickCount)\n        actions.push({ type: 'pause', duration: delay });\n    }\n    await this._performActions(actions);\n  }\n\n  async wheel(x: number, y: number, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, deltaX: number, deltaY: number): Promise<void> {\n  }\n\n  private async _performActions(actions: bidi.Input.PointerSourceAction[]) {\n    await this._session.send('input.performActions', {\n      context: this._session.sessionId,\n      actions: [\n        {\n          type: 'pointer',\n          id: 'pw_mouse',\n          parameters: {\n            pointerType: bidi.Input.PointerType.Mouse,\n          },\n          actions,\n        }\n      ]\n    });\n  }\n}\n\nexport class RawTouchscreenImpl implements input.RawTouchscreen {\n  private readonly _session: BidiSession;\n\n  constructor(session: BidiSession) {\n    this._session = session;\n  }\n\n  async tap(x: number, y: number, modifiers: Set<types.KeyboardModifier>) {\n  }\n}\n\nfunction toBidiButton(button: string): number {\n  switch (button) {\n    case 'left': return 0;\n    case 'right': return 2;\n    case 'middle': return 1;\n  }\n  throw new Error('Unknown button: ' + button);\n}\n"],"mappings":"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"}