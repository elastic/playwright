{"version":3,"file":"bidiConnection.js","names":["_events","require","_utils","_debugLogger","_helper","_protocolError","kBrowserCloseMessageId","exports","BidiConnection","constructor","transport","onDisconnect","protocolLogger","browserLogsCollector","_transport","_onDisconnect","_protocolLogger","_browserLogsCollector","_browserDisconnectedLogs","_lastId","_closed","browserSession","_browsingContextToSession","Map","BidiSession","message","rawSend","onmessage","_dispatchMessage","bind","onclose","_onClose","nextMessageId","send","object","type","_object$params$source","context","params","method","source","session","get","dispatchMessage","id","values","hasCallback","reason","undefined","helper","formatBrowserLogs","recentLogs","dispose","isClosed","close","createMainFrameBrowsingContextSession","bowsingContextId","result","set","EventEmitter","connection","sessionId","_disposed","_rawSend","_callbacks","_crashed","_browsingContexts","Set","on","addListener","off","removeListener","once","setMaxListeners","addFrameBrowsingContext","add","removeFrameBrowsingContext","delete","ProtocolError","messageObj","Promise","resolve","reject","error","sendMayFail","catch","debugLogger","log","markAsCrashed","isDisposed","clear","callback","logs","has","setMessage","JSON","stringify","assert","then","emit"],"sources":["../../../src/server/bidi/bidiConnection.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\nimport { assert } from '../../utils';\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from '../transport';\nimport type { RecentLogsCollector } from '../../utils/debugLogger';\nimport { debugLogger } from '../../utils/debugLogger';\nimport type { ProtocolLogger } from '../types';\nimport { helper } from '../helper';\nimport { ProtocolError } from '../protocolError';\nimport type * as bidi from './third_party/bidiProtocol';\nimport type * as bidiCommands from './third_party/bidiCommands';\n\n// BidiPlaywright uses this special id to issue Browser.close command which we\n// should ignore.\nexport const kBrowserCloseMessageId = 0;\n\nexport class BidiConnection {\n  private readonly _transport: ConnectionTransport;\n  private readonly _onDisconnect: () => void;\n  private readonly _protocolLogger: ProtocolLogger;\n  private readonly _browserLogsCollector: RecentLogsCollector;\n  _browserDisconnectedLogs: string | undefined;\n  private _lastId = 0;\n  private _closed = false;\n  readonly browserSession: BidiSession;\n  readonly _browsingContextToSession = new Map<string, BidiSession>();\n\n  constructor(transport: ConnectionTransport, onDisconnect: () => void, protocolLogger: ProtocolLogger, browserLogsCollector: RecentLogsCollector) {\n    this._transport = transport;\n    this._onDisconnect = onDisconnect;\n    this._protocolLogger = protocolLogger;\n    this._browserLogsCollector = browserLogsCollector;\n    this.browserSession = new BidiSession(this, '', (message: any) => {\n      this.rawSend(message);\n    });\n    this._transport.onmessage = this._dispatchMessage.bind(this);\n    // onclose should be set last, since it can be immediately called.\n    this._transport.onclose = this._onClose.bind(this);\n  }\n\n  nextMessageId(): number {\n    return ++this._lastId;\n  }\n\n  rawSend(message: ProtocolRequest) {\n    this._protocolLogger('send', message);\n    this._transport.send(message);\n  }\n\n  private _dispatchMessage(message: ProtocolResponse) {\n    this._protocolLogger('receive', message);\n    const object = message as bidi.Message;\n    // Bidi messages do not have a common session identifier, so we\n    // route them based on BrowsingContext.\n    if (object.type === 'event') {\n      // Route page events to the right session.\n      let context;\n      if ('context' in object.params)\n        context = object.params.context;\n      else if (object.method === 'log.entryAdded')\n        context = object.params.source?.context;\n      if (context) {\n        const session = this._browsingContextToSession.get(context);\n        if (session) {\n          session.dispatchMessage(message);\n          return;\n        }\n      }\n    } else if (message.id) {\n      // Find caller session.\n      for (const session of this._browsingContextToSession.values()) {\n        if (session.hasCallback(message.id)) {\n          session.dispatchMessage(message);\n          return;\n        }\n      }\n    }\n    this.browserSession.dispatchMessage(message);\n  }\n\n  _onClose(reason?: string) {\n    this._closed = true;\n    this._transport.onmessage = undefined;\n    this._transport.onclose = undefined;\n    this._browserDisconnectedLogs = helper.formatBrowserLogs(this._browserLogsCollector.recentLogs(), reason);\n    this.browserSession.dispose();\n    this._onDisconnect();\n  }\n\n  isClosed() {\n    return this._closed;\n  }\n\n  close() {\n    if (!this._closed)\n      this._transport.close();\n  }\n\n  createMainFrameBrowsingContextSession(bowsingContextId: bidi.BrowsingContext.BrowsingContext): BidiSession {\n    const result = new BidiSession(this, bowsingContextId, message => this.rawSend(message));\n    this._browsingContextToSession.set(bowsingContextId, result);\n    return result;\n  }\n}\n\ntype BidiEvents = {\n  [K in bidi.Event['method']]: Extract<bidi.Event, {method: K}>;\n};\n\nexport class BidiSession extends EventEmitter {\n  readonly connection: BidiConnection;\n  readonly sessionId: string;\n\n  private _disposed = false;\n  private readonly _rawSend: (message: any) => void;\n  private readonly _callbacks = new Map<number, { resolve: (o: any) => void, reject: (e: ProtocolError) => void, error: ProtocolError }>();\n  private _crashed: boolean = false;\n  private readonly _browsingContexts = new Set<string>();\n\n  override on: <T extends keyof BidiEvents | symbol>(event: T, listener: (payload: T extends symbol ? any : BidiEvents[T extends keyof BidiEvents ? T : never]['params']) => void) => this;\n  override addListener: <T extends keyof BidiEvents | symbol>(event: T, listener: (payload: T extends symbol ? any : BidiEvents[T extends keyof BidiEvents ? T : never]['params']) => void) => this;\n  override off: <T extends keyof BidiEvents | symbol>(event: T, listener: (payload: T extends symbol ? any : BidiEvents[T extends keyof BidiEvents ? T : never]['params']) => void) => this;\n  override removeListener: <T extends keyof BidiEvents | symbol>(event: T, listener: (payload: T extends symbol ? any : BidiEvents[T extends keyof BidiEvents ? T : never]['params']) => void) => this;\n  override once: <T extends keyof BidiEvents | symbol>(event: T, listener: (payload: T extends symbol ? any : BidiEvents[T extends keyof BidiEvents ? T : never]['params']) => void) => this;\n\n  constructor(connection: BidiConnection, sessionId: string, rawSend: (message: any) => void) {\n    super();\n    this.setMaxListeners(0);\n    this.connection = connection;\n    this.sessionId = sessionId;\n    this._rawSend = rawSend;\n\n    this.on = super.on;\n    this.off = super.removeListener;\n    this.addListener = super.addListener;\n    this.removeListener = super.removeListener;\n    this.once = super.once;\n  }\n\n  addFrameBrowsingContext(context: string) {\n    this._browsingContexts.add(context);\n    this.connection._browsingContextToSession.set(context, this);\n  }\n\n  removeFrameBrowsingContext(context: string) {\n    this._browsingContexts.delete(context);\n    this.connection._browsingContextToSession.delete(context);\n  }\n\n  async send<T extends keyof bidiCommands.Commands>(\n    method: T,\n    params?: bidiCommands.Commands[T]['params']\n  ): Promise<bidiCommands.Commands[T]['returnType']> {\n    if (this._crashed || this._disposed || this.connection._browserDisconnectedLogs)\n      throw new ProtocolError(this._crashed ? 'crashed' : 'closed', undefined, this.connection._browserDisconnectedLogs);\n    const id = this.connection.nextMessageId();\n    const messageObj = { id, method, params };\n    this._rawSend(messageObj);\n    return new Promise<bidiCommands.Commands[T]['returnType']>((resolve, reject) => {\n      this._callbacks.set(id, { resolve, reject, error: new ProtocolError('error', method) });\n    });\n  }\n\n  sendMayFail<T extends keyof bidiCommands.Commands>(method: T, params?: bidiCommands.Commands[T]['params']): Promise<bidiCommands.Commands[T]['returnType'] | void> {\n    return this.send(method, params).catch(error => debugLogger.log('error', error));\n  }\n\n  markAsCrashed() {\n    this._crashed = true;\n  }\n\n  isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  dispose() {\n    this._disposed = true;\n    this.connection._browsingContextToSession.delete(this.sessionId);\n    for (const context of this._browsingContexts)\n      this.connection._browsingContextToSession.delete(context);\n    this._browsingContexts.clear();\n    for (const callback of this._callbacks.values()) {\n      callback.error.type = this._crashed ? 'crashed' : 'closed';\n      callback.error.logs = this.connection._browserDisconnectedLogs;\n      callback.reject(callback.error);\n    }\n    this._callbacks.clear();\n  }\n\n  hasCallback(id: number): boolean {\n    return this._callbacks.has(id);\n  }\n\n  dispatchMessage(message: any) {\n    const object = message as bidi.Message;\n    if (object.id === kBrowserCloseMessageId)\n      return;\n    if (object.id && this._callbacks.has(object.id)) {\n      const callback = this._callbacks.get(object.id)!;\n      this._callbacks.delete(object.id);\n      if (object.type === 'error') {\n        callback.error.setMessage(object.error + '\\nMessage: ' + object.message);\n        callback.reject(callback.error);\n      } else if (object.type === 'success') {\n        callback.resolve(object.result);\n      } else {\n        callback.error.setMessage('Internal error, unexpected response type: ' + JSON.stringify(object));\n        callback.reject(callback.error);\n      }\n    } else if (object.id) {\n      // Response might come after session has been disposed and rejected all callbacks.\n      assert(this.isDisposed());\n    } else {\n      Promise.resolve().then(() => this.emit(object.method, object.params));\n    }\n  }\n}\n"],"mappings":"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"}