{"version":3,"file":"backendAdb.js","names":["_utilsBundle","require","net","_interopRequireWildcard","_events","_utils","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","AdbBackend","devices","options","result","runCommand","host","port","lines","toString","trim","split","map","line","serial","status","AdbDevice","exports","constructor","_closed","init","close","command","Error","open","becomeSocket","debug","socket","BufferedSocketWrapper","createConnection","write","encodeMessage","read","assert","commandOutput","startsWith","remainingLength","parseInt","readAll","message","lenHex","length","repeat","Buffer","from","EventEmitter","guid","createGuid","_socket","_buffer","_isSocket","_notifyReader","_connectPromise","_isClosed","_command","Promise","f","on","data","emit","concat","error","substring","destroy","slice"],"sources":["../../../src/server/android/backendAdb.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debug } from '../../utilsBundle';\nimport type * as channels from '@protocol/channels';\nimport * as net from 'net';\nimport { EventEmitter } from 'events';\nimport type { Backend, DeviceBackend, SocketBackend } from './android';\nimport { assert, createGuid } from '../../utils';\n\nexport class AdbBackend implements Backend {\n  async devices(options: channels.AndroidDevicesOptions = {}): Promise<DeviceBackend[]> {\n    const result = await runCommand('host:devices', options.host, options.port);\n    const lines = result.toString().trim().split('\\n');\n    return lines.map(line => {\n      const [serial, status] = line.trim().split('\\t');\n      return new AdbDevice(serial, status, options.host, options.port);\n    });\n  }\n}\n\nclass AdbDevice implements DeviceBackend {\n  serial: string;\n  status: string;\n  host: string | undefined;\n  port: number | undefined;\n  private _closed = false;\n\n  constructor(serial: string, status: string, host?: string, port?: number) {\n    this.serial = serial;\n    this.status = status;\n    this.host = host;\n    this.port = port;\n  }\n\n  async init() {\n  }\n\n  async close() {\n    this._closed = true;\n  }\n\n  runCommand(command: string): Promise<Buffer> {\n    if (this._closed)\n      throw new Error('Device is closed');\n    return runCommand(command, this.host, this.port, this.serial);\n  }\n\n  async open(command: string): Promise<SocketBackend> {\n    if (this._closed)\n      throw new Error('Device is closed');\n    const result = await open(command, this.host, this.port, this.serial);\n    result.becomeSocket();\n    return result;\n  }\n}\n\nasync function runCommand(command: string, host: string = '127.0.0.1', port: number = 5037, serial?: string): Promise<Buffer> {\n  debug('pw:adb:runCommand')(command, serial);\n  const socket = new BufferedSocketWrapper(command, net.createConnection({ host, port }));\n  try {\n    if (serial) {\n      await socket.write(encodeMessage(`host:transport:${serial}`));\n      const status = await socket.read(4);\n      assert(status.toString() === 'OKAY', status.toString());\n    }\n    await socket.write(encodeMessage(command));\n    const status = await socket.read(4);\n    assert(status.toString() === 'OKAY', status.toString());\n    let commandOutput: Buffer;\n    if (!command.startsWith('shell:')) {\n      const remainingLength = parseInt((await socket.read(4)).toString(), 16);\n      commandOutput = await socket.read(remainingLength);\n    } else {\n      commandOutput = await socket.readAll();\n    }\n    return commandOutput;\n  } finally {\n    socket.close();\n  }\n}\n\nasync function open(command: string, host: string = '127.0.0.1', port: number = 5037, serial?: string): Promise<BufferedSocketWrapper> {\n  const socket = new BufferedSocketWrapper(command, net.createConnection({ host, port }));\n  if (serial) {\n    await socket.write(encodeMessage(`host:transport:${serial}`));\n    const status = await socket.read(4);\n    assert(status.toString() === 'OKAY', status.toString());\n  }\n  await socket.write(encodeMessage(command));\n  const status = await socket.read(4);\n  assert(status.toString() === 'OKAY', status.toString());\n  return socket;\n}\n\nfunction encodeMessage(message: string): Buffer {\n  let lenHex = (message.length).toString(16);\n  lenHex = '0'.repeat(4 - lenHex.length) + lenHex;\n  return Buffer.from(lenHex + message);\n}\n\nclass BufferedSocketWrapper extends EventEmitter implements SocketBackend {\n  readonly guid = createGuid();\n  private _socket: net.Socket;\n  private _buffer = Buffer.from([]);\n  private _isSocket = false;\n  private _notifyReader: (() => void) | undefined;\n  private _connectPromise: Promise<void>;\n  private _isClosed = false;\n  private _command: string;\n\n  constructor(command: string, socket: net.Socket) {\n    super();\n    this._command = command;\n    this._socket = socket;\n    this._connectPromise = new Promise(f => this._socket.on('connect', f));\n    this._socket.on('data', data => {\n      debug('pw:adb:data')(data.toString());\n      if (this._isSocket) {\n        this.emit('data', data);\n        return;\n      }\n      this._buffer = Buffer.concat([this._buffer, data]);\n      if (this._notifyReader)\n        this._notifyReader();\n    });\n    this._socket.on('close', () => {\n      this._isClosed = true;\n      if (this._notifyReader)\n        this._notifyReader();\n      this.close();\n      this.emit('close');\n    });\n    this._socket.on('error', error => this.emit('error', error));\n  }\n\n  async write(data: Buffer) {\n    debug('pw:adb:send')(data.toString().substring(0, 100) + '...');\n    await this._connectPromise;\n    await new Promise(f => this._socket.write(data, f));\n  }\n\n  close() {\n    if (this._isClosed)\n      return;\n    debug('pw:adb')('Close ' + this._command);\n    this._socket.destroy();\n  }\n\n  async read(length: number): Promise<Buffer> {\n    await this._connectPromise;\n    assert(!this._isSocket, 'Can not read by length in socket mode');\n    while (this._buffer.length < length)\n      await new Promise<void>(f => this._notifyReader = f);\n    const result = this._buffer.slice(0, length);\n    this._buffer = this._buffer.slice(length);\n    debug('pw:adb:recv')(result.toString().substring(0, 100) + '...');\n    return result;\n  }\n\n  async readAll(): Promise<Buffer> {\n    while (!this._isClosed)\n      await new Promise<void>(f => this._notifyReader = f);\n    return this._buffer;\n  }\n\n  becomeSocket() {\n    assert(!this._buffer.length);\n    this._isSocket = true;\n  }\n}\n"],"mappings":"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"}