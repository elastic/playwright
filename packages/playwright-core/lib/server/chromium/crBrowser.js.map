{"version":3,"file":"crBrowser.js","names":["_path","_interopRequireDefault","require","_browser","_browserContext","_utils","network","_interopRequireWildcard","_page","_frames","_crConnection","_crPage","_crProtocolHelper","_crServiceWorker","_artifact","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","CRBrowser","Browser","connect","parent","transport","options","devtools","connection","CRConnection","protocolLogger","browserLogsCollector","browser","_devtools","isClank","_isCollocatedWithServer","session","rootSession","__testHookOnConnectToBrowser","version","send","_version","product","substring","indexOf","_userAgent","userAgent","headful","includes","persistent","autoAttach","waitForDebuggerOnStart","flatten","_defaultContext","CRBrowserContext","undefined","Promise","all","then","_initialize","_waitForAllPagesToBeInitialized","constructor","_connection","_session","_clientRootSessionPromise","_contexts","Map","_crPages","_backgroundPages","_serviceWorkers","_tracingRecording","_tracingClient","on","ConnectionEvents","Disconnected","_didDisconnect","_onAttachedToTarget","bind","_onDetachedFromTarget","_onDownloadWillBegin","_onDownloadProgress","doCreateNewContext","proxyBypassList","proxy","process","env","PLAYWRIGHT_DISABLE_FORCED_CHROMIUM_PROXIED_LOOPBACK","bypass","browserContextId","disposeOnDetach","proxyServer","server","context","contexts","Array","from","values","_platform","name","map","page","pageOrError","targetInfo","sessionId","waitingForDebugger","type","createChildSession","assert","JSON","stringify","url","startsWith","install","treatOtherAsPage","PW_CHROMIUM_ATTACH_TO_OTHER","detach","catch","targetId","backgroundPage","CRPage","hasUIWindow","isBackgroundPage","opener","openerId","crPage","serviceWorker","CRServiceWorker","emit","CREvents","ServiceWorker","payload","delete","didClose","clear","_didClose","_findOwningPage","frameId","frame","_frameManager","willBeginDownload","originPage","_initializedPage","_opener","_downloadCreated","guid","suggestedFilename","state","_downloadFinished","_closeReason","_closePage","_targetId","newBrowserCDPSession","createBrowserSession","startTracing","_delegate","_mainFrameSession","_client","defaultCategories","screenshots","categories","push","transferMode","join","stopTracing","event","f","once","tracingPath","path","artifactsDir","createGuid","saveProtocolStream","stream","artifact","Artifact","reportFinished","isConnected","_closed","_clientRootSession","exports","BrowserContext","_authenticateProxyViaCredentials","some","promises","_options","acceptDownloads","behavior","_browserContextId","downloadPath","downloadsPath","eventsEnabled","filter","pages","Boolean","newPageDelegate","assertBrowserContextIsNotOwned","oldKeys","Set","keys","newKeys","key","size","doGetCookies","urls","cookies","filterCookies","c","copy","sameSite","priority","sameParty","sourceScheme","sourcePort","addCookies","rewriteCookies","doClearCookies","doGrantPermissions","origin","permissions","webPermissionToProtocol","filtered","permission","protocolPermission","Error","doClearPermissions","setGeolocation","geolocation","verifyGeolocation","updateGeolocation","setExtraHTTPHeaders","headers","extraHTTPHeaders","updateExtraHTTPHeaders","sw","serviceWorkers","setUserAgent","updateUserAgent","setOffline","offline","updateOffline","doSetHTTPCredentials","httpCredentials","updateHttpCredentials","doAddInitScript","initScript","addInitScript","doRemoveNonInternalInitScripts","removeNonInternalInitScripts","doUpdateRequestInterception","updateRequestInterception","doClose","reason","openedBeforeUnloadDialogs","dialogs","_openedDialogs","dialog","dismiss","stopVideoRecording","close","_stopVideoRecording","onClosePersistent","entries","clearCache","_networkManager","cancelDownload","backgroundPages","result","newCDPSession","Page","Frame","_sessions","_id","attachToTarget","BackgroundPage"],"sources":["../../../src/server/chromium/crBrowser.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BrowserOptions } from '../browser';\nimport path from 'path';\nimport { Browser } from '../browser';\nimport { assertBrowserContextIsNotOwned, BrowserContext, verifyGeolocation } from '../browserContext';\nimport { assert, createGuid } from '../../utils';\nimport * as network from '../network';\nimport type { InitScript, PageDelegate, Worker } from '../page';\nimport { Page } from '../page';\nimport { Frame } from '../frames';\nimport type { Dialog } from '../dialog';\nimport type { ConnectionTransport } from '../transport';\nimport type * as types from '../types';\nimport type * as channels from '@protocol/channels';\nimport type { CRSession, CDPSession } from './crConnection';\nimport { ConnectionEvents, CRConnection } from './crConnection';\nimport { CRPage } from './crPage';\nimport { saveProtocolStream } from './crProtocolHelper';\nimport type { Protocol } from './protocol';\nimport type { CRDevTools } from './crDevTools';\nimport { CRServiceWorker } from './crServiceWorker';\nimport type { SdkObject } from '../instrumentation';\nimport { Artifact } from '../artifact';\n\nexport class CRBrowser extends Browser {\n  readonly _connection: CRConnection;\n  _session: CRSession;\n  private _clientRootSessionPromise: Promise<CDPSession> | null = null;\n  readonly _contexts = new Map<string, CRBrowserContext>();\n  _crPages = new Map<string, CRPage>();\n  _backgroundPages = new Map<string, CRPage>();\n  _serviceWorkers = new Map<string, CRServiceWorker>();\n  _devtools?: CRDevTools;\n  private _version = '';\n\n  private _tracingRecording = false;\n  private _tracingClient: CRSession | undefined;\n  private _userAgent: string = '';\n\n  static async connect(parent: SdkObject, transport: ConnectionTransport, options: BrowserOptions, devtools?: CRDevTools): Promise<CRBrowser> {\n    // Make a copy in case we need to update `headful` property below.\n    options = { ...options };\n    const connection = new CRConnection(transport, options.protocolLogger, options.browserLogsCollector);\n    const browser = new CRBrowser(parent, connection, options);\n    browser._devtools = devtools;\n    if (browser.isClank())\n      browser._isCollocatedWithServer = false;\n    const session = connection.rootSession;\n    if ((options as any).__testHookOnConnectToBrowser)\n      await (options as any).__testHookOnConnectToBrowser();\n\n    const version = await session.send('Browser.getVersion');\n    browser._version = version.product.substring(version.product.indexOf('/') + 1);\n    browser._userAgent = version.userAgent;\n    // We don't trust the option as it may lie in case of connectOverCDP where remote browser\n    // may have been launched with different options.\n    browser.options.headful = !version.userAgent.includes('Headless');\n    if (!options.persistent) {\n      await session.send('Target.setAutoAttach', { autoAttach: true, waitForDebuggerOnStart: true, flatten: true });\n      return browser;\n    }\n    browser._defaultContext = new CRBrowserContext(browser, undefined, options.persistent);\n    await Promise.all([\n      session.send('Target.setAutoAttach', { autoAttach: true, waitForDebuggerOnStart: true, flatten: true }).then(async () => {\n        // Target.setAutoAttach has a bug where it does not wait for new Targets being attached.\n        // However making a dummy call afterwards fixes this.\n        // This can be removed after https://chromium-review.googlesource.com/c/chromium/src/+/2885888 lands in stable.\n        await session.send('Target.getTargetInfo');\n      }),\n      (browser._defaultContext as CRBrowserContext)._initialize(),\n    ]);\n    await browser._waitForAllPagesToBeInitialized();\n    return browser;\n  }\n\n  constructor(parent: SdkObject, connection: CRConnection, options: BrowserOptions) {\n    super(parent, options);\n    this._connection = connection;\n    this._session = this._connection.rootSession;\n    this._connection.on(ConnectionEvents.Disconnected, () => this._didDisconnect());\n    this._session.on('Target.attachedToTarget', this._onAttachedToTarget.bind(this));\n    this._session.on('Target.detachedFromTarget', this._onDetachedFromTarget.bind(this));\n    this._session.on('Browser.downloadWillBegin', this._onDownloadWillBegin.bind(this));\n    this._session.on('Browser.downloadProgress', this._onDownloadProgress.bind(this));\n  }\n\n  async doCreateNewContext(options: channels.BrowserNewContextParams): Promise<BrowserContext> {\n    let proxyBypassList = undefined;\n    if (options.proxy) {\n      if (process.env.PLAYWRIGHT_DISABLE_FORCED_CHROMIUM_PROXIED_LOOPBACK)\n        proxyBypassList = options.proxy.bypass;\n      else\n        proxyBypassList = '<-loopback>' + (options.proxy.bypass ? `,${options.proxy.bypass}` : '');\n    }\n\n    const { browserContextId } = await this._session.send('Target.createBrowserContext', {\n      disposeOnDetach: true,\n      proxyServer: options.proxy ? options.proxy.server : undefined,\n      proxyBypassList,\n    });\n    const context = new CRBrowserContext(this, browserContextId, options);\n    await context._initialize();\n    this._contexts.set(browserContextId, context);\n    return context;\n  }\n\n  contexts(): BrowserContext[] {\n    return Array.from(this._contexts.values());\n  }\n\n  version(): string {\n    return this._version;\n  }\n\n  userAgent(): string {\n    return this._userAgent;\n  }\n\n  _platform(): 'mac' | 'linux' | 'win' {\n    if (this._userAgent.includes('Windows'))\n      return 'win';\n    if (this._userAgent.includes('Macintosh'))\n      return 'mac';\n    return 'linux';\n  }\n\n  isClank(): boolean {\n    return this.options.name === 'clank';\n  }\n\n  async _waitForAllPagesToBeInitialized() {\n    await Promise.all([...this._crPages.values()].map(page => page.pageOrError()));\n  }\n\n  _onAttachedToTarget({ targetInfo, sessionId, waitingForDebugger }: Protocol.Target.attachedToTargetPayload) {\n    if (targetInfo.type === 'browser')\n      return;\n    const session = this._session.createChildSession(sessionId);\n    assert(targetInfo.browserContextId, 'targetInfo: ' + JSON.stringify(targetInfo, null, 2));\n    let context = this._contexts.get(targetInfo.browserContextId) || null;\n    if (!context) {\n      // TODO: auto attach only to pages from our contexts.\n      // assert(this._defaultContext);\n      context = this._defaultContext as CRBrowserContext;\n    }\n\n    if (targetInfo.type === 'other' && targetInfo.url.startsWith('devtools://devtools') && this._devtools) {\n      this._devtools.install(session);\n      return;\n    }\n\n    const treatOtherAsPage = targetInfo.type === 'other' && process.env.PW_CHROMIUM_ATTACH_TO_OTHER;\n\n    if (!context || (targetInfo.type === 'other' && !treatOtherAsPage)) {\n      session.detach().catch(() => {});\n      return;\n    }\n\n    assert(!this._crPages.has(targetInfo.targetId), 'Duplicate target ' + targetInfo.targetId);\n    assert(!this._backgroundPages.has(targetInfo.targetId), 'Duplicate target ' + targetInfo.targetId);\n    assert(!this._serviceWorkers.has(targetInfo.targetId), 'Duplicate target ' + targetInfo.targetId);\n\n    if (targetInfo.type === 'background_page') {\n      const backgroundPage = new CRPage(session, targetInfo.targetId, context, null, { hasUIWindow: false, isBackgroundPage: true });\n      this._backgroundPages.set(targetInfo.targetId, backgroundPage);\n      return;\n    }\n\n    if (targetInfo.type === 'page' || treatOtherAsPage) {\n      const opener = targetInfo.openerId ? this._crPages.get(targetInfo.openerId) || null : null;\n      const crPage = new CRPage(session, targetInfo.targetId, context, opener, { hasUIWindow: targetInfo.type === 'page', isBackgroundPage: false });\n      this._crPages.set(targetInfo.targetId, crPage);\n      return;\n    }\n\n    if (targetInfo.type === 'service_worker') {\n      const serviceWorker = new CRServiceWorker(context, session, targetInfo.url);\n      this._serviceWorkers.set(targetInfo.targetId, serviceWorker);\n      context.emit(CRBrowserContext.CREvents.ServiceWorker, serviceWorker);\n      return;\n    }\n\n    // Detach from any targets we are not interested in, to avoid side-effects.\n    //\n    // One example of a side effect: upon shared worker restart, we receive\n    // Inspector.targetReloadedAfterCrash and backend waits for Runtime.runIfWaitingForDebugger\n    // from any attached client. If we do not resume, shared worker will stall.\n    session.detach().catch(() => {});\n  }\n\n  _onDetachedFromTarget(payload: Protocol.Target.detachedFromTargetPayload) {\n    const targetId = payload.targetId!;\n    const crPage = this._crPages.get(targetId);\n    if (crPage) {\n      this._crPages.delete(targetId);\n      crPage.didClose();\n      return;\n    }\n    const backgroundPage = this._backgroundPages.get(targetId);\n    if (backgroundPage) {\n      this._backgroundPages.delete(targetId);\n      backgroundPage.didClose();\n      return;\n    }\n    const serviceWorker = this._serviceWorkers.get(targetId);\n    if (serviceWorker) {\n      this._serviceWorkers.delete(targetId);\n      serviceWorker.didClose();\n      return;\n    }\n  }\n\n  private _didDisconnect() {\n    for (const crPage of this._crPages.values())\n      crPage.didClose();\n    this._crPages.clear();\n    for (const backgroundPage of this._backgroundPages.values())\n      backgroundPage.didClose();\n    this._backgroundPages.clear();\n    for (const serviceWorker of this._serviceWorkers.values())\n      serviceWorker.didClose();\n    this._serviceWorkers.clear();\n    this._didClose();\n  }\n\n  private _findOwningPage(frameId: string) {\n    for (const crPage of this._crPages.values()) {\n      const frame = crPage._page._frameManager.frame(frameId);\n      if (frame)\n        return crPage;\n    }\n    return null;\n  }\n\n  _onDownloadWillBegin(payload: Protocol.Browser.downloadWillBeginPayload) {\n    const page = this._findOwningPage(payload.frameId);\n    if (!page) {\n      // There might be no page when download originates from something unusual, like\n      // a DevTools window or maybe an extension page.\n      // See https://github.com/microsoft/playwright/issues/22551.\n      return;\n    }\n    page.willBeginDownload();\n\n    let originPage = page._initializedPage;\n    // If it's a new window download, report it on the opener page.\n    if (!originPage && page._opener)\n      originPage = page._opener._initializedPage;\n    if (!originPage)\n      return;\n    this._downloadCreated(originPage, payload.guid, payload.url, payload.suggestedFilename);\n  }\n\n  _onDownloadProgress(payload: any) {\n    if (payload.state === 'completed')\n      this._downloadFinished(payload.guid, '');\n    if (payload.state === 'canceled')\n      this._downloadFinished(payload.guid, this._closeReason || 'canceled');\n  }\n\n  async _closePage(crPage: CRPage) {\n    await this._session.send('Target.closeTarget', { targetId: crPage._targetId });\n  }\n\n  async newBrowserCDPSession(): Promise<CDPSession> {\n    return await this._connection.createBrowserSession();\n  }\n\n  async startTracing(page?: Page, options: { screenshots?: boolean; categories?: string[]; } = {}) {\n    assert(!this._tracingRecording, 'Cannot start recording trace while already recording trace.');\n    this._tracingClient = page ? (page._delegate as CRPage)._mainFrameSession._client : this._session;\n\n    const defaultCategories = [\n      '-*', 'devtools.timeline', 'v8.execute', 'disabled-by-default-devtools.timeline',\n      'disabled-by-default-devtools.timeline.frame', 'toplevel',\n      'blink.console', 'blink.user_timing', 'latencyInfo', 'disabled-by-default-devtools.timeline.stack',\n      'disabled-by-default-v8.cpu_profiler', 'disabled-by-default-v8.cpu_profiler.hires'\n    ];\n    const {\n      screenshots = false,\n      categories = defaultCategories,\n    } = options;\n\n    if (screenshots)\n      categories.push('disabled-by-default-devtools.screenshot');\n\n    this._tracingRecording = true;\n    await this._tracingClient.send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      categories: categories.join(',')\n    });\n  }\n\n  async stopTracing(): Promise<Artifact> {\n    assert(this._tracingClient, 'Tracing was not started.');\n    const [event] = await Promise.all([\n      new Promise(f => this._tracingClient!.once('Tracing.tracingComplete', f)),\n      this._tracingClient.send('Tracing.end')\n    ]);\n    const tracingPath = path.join(this.options.artifactsDir, createGuid() + '.crtrace');\n    await saveProtocolStream(this._tracingClient, (event as any).stream!, tracingPath);\n    this._tracingRecording = false;\n    const artifact = new Artifact(this, tracingPath);\n    artifact.reportFinished();\n    return artifact;\n  }\n\n  isConnected(): boolean {\n    return !this._connection._closed;\n  }\n\n  async _clientRootSession(): Promise<CDPSession> {\n    if (!this._clientRootSessionPromise)\n      this._clientRootSessionPromise = this._connection.createBrowserSession();\n    return this._clientRootSessionPromise;\n  }\n}\n\nexport class CRBrowserContext extends BrowserContext {\n  static CREvents = {\n    BackgroundPage: 'backgroundpage',\n    ServiceWorker: 'serviceworker',\n  };\n\n  declare readonly _browser: CRBrowser;\n\n  constructor(browser: CRBrowser, browserContextId: string | undefined, options: channels.BrowserNewContextParams) {\n    super(browser, options, browserContextId);\n    this._authenticateProxyViaCredentials();\n  }\n\n  override async _initialize() {\n    assert(!Array.from(this._browser._crPages.values()).some(page => page._browserContext === this));\n    const promises: Promise<any>[] = [super._initialize()];\n    if (this._browser.options.name !== 'clank' && this._options.acceptDownloads !== 'internal-browser-default') {\n      promises.push(this._browser._session.send('Browser.setDownloadBehavior', {\n        behavior: this._options.acceptDownloads === 'accept' ? 'allowAndName' : 'deny',\n        browserContextId: this._browserContextId,\n        downloadPath: this._browser.options.downloadsPath,\n        eventsEnabled: true,\n      }));\n    }\n    await Promise.all(promises);\n  }\n\n  private _crPages() {\n    return [...this._browser._crPages.values()].filter(crPage => crPage._browserContext === this);\n  }\n\n  pages(): Page[] {\n    return this._crPages().map(crPage => crPage._initializedPage).filter(Boolean) as Page[];\n  }\n\n  async newPageDelegate(): Promise<PageDelegate> {\n    assertBrowserContextIsNotOwned(this);\n\n    const oldKeys = this._browser.isClank() ? new Set(this._browser._crPages.keys()) : undefined;\n\n    let { targetId } = await this._browser._session.send('Target.createTarget', { url: 'about:blank', browserContextId: this._browserContextId });\n\n    if (oldKeys) {\n      // Chrome for Android returns tab ids (1, 2, 3, 4, 5) instead of content target ids here, work around it via the\n      // heuristic assuming that there is only one page created at a time.\n      const newKeys = new Set(this._browser._crPages.keys());\n      // Remove old keys.\n      for (const key of oldKeys)\n        newKeys.delete(key);\n      // Remove potential concurrent popups.\n      for (const key of newKeys) {\n        const page = this._browser._crPages.get(key)!;\n        if (page._opener)\n          newKeys.delete(key);\n      }\n      assert(newKeys.size === 1);\n      [targetId] = [...newKeys];\n    }\n    return this._browser._crPages.get(targetId)!;\n  }\n\n  async doGetCookies(urls: string[]): Promise<channels.NetworkCookie[]> {\n    const { cookies } = await this._browser._session.send('Storage.getCookies', { browserContextId: this._browserContextId });\n    return network.filterCookies(cookies.map(c => {\n      const copy: any = { sameSite: 'Lax', ...c };\n      delete copy.size;\n      delete copy.priority;\n      delete copy.session;\n      delete copy.sameParty;\n      delete copy.sourceScheme;\n      delete copy.sourcePort;\n      return copy as channels.NetworkCookie;\n    }), urls);\n  }\n\n  async addCookies(cookies: channels.SetNetworkCookie[]) {\n    await this._browser._session.send('Storage.setCookies', { cookies: network.rewriteCookies(cookies), browserContextId: this._browserContextId });\n  }\n\n  async doClearCookies() {\n    await this._browser._session.send('Storage.clearCookies', { browserContextId: this._browserContextId });\n  }\n\n  async doGrantPermissions(origin: string, permissions: string[]) {\n    const webPermissionToProtocol = new Map<string, Protocol.Browser.PermissionType>([\n      ['geolocation', 'geolocation'],\n      ['midi', 'midi'],\n      ['notifications', 'notifications'],\n      ['camera', 'videoCapture'],\n      ['microphone', 'audioCapture'],\n      ['background-sync', 'backgroundSync'],\n      ['ambient-light-sensor', 'sensors'],\n      ['accelerometer', 'sensors'],\n      ['gyroscope', 'sensors'],\n      ['magnetometer', 'sensors'],\n      ['accessibility-events', 'accessibilityEvents'],\n      ['clipboard-read', 'clipboardReadWrite'],\n      ['clipboard-write', 'clipboardSanitizedWrite'],\n      ['payment-handler', 'paymentHandler'],\n      // chrome-specific permissions we have.\n      ['midi-sysex', 'midiSysex'],\n      ['storage-access', 'storageAccess'],\n    ]);\n    const filtered = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._browser._session.send('Browser.grantPermissions', { origin: origin === '*' ? undefined : origin, browserContextId: this._browserContextId, permissions: filtered });\n  }\n\n  async doClearPermissions() {\n    await this._browser._session.send('Browser.resetPermissions', { browserContextId: this._browserContextId });\n  }\n\n  async setGeolocation(geolocation?: types.Geolocation): Promise<void> {\n    verifyGeolocation(geolocation);\n    this._options.geolocation = geolocation;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateGeolocation();\n  }\n\n  async setExtraHTTPHeaders(headers: types.HeadersArray): Promise<void> {\n    this._options.extraHTTPHeaders = headers;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateExtraHTTPHeaders();\n    for (const sw of this.serviceWorkers())\n      await (sw as CRServiceWorker).updateExtraHTTPHeaders();\n  }\n\n  async setUserAgent(userAgent: string | undefined): Promise<void> {\n    this._options.userAgent = userAgent;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateUserAgent();\n    // TODO: service workers don't have Emulation domain?\n  }\n\n  async setOffline(offline: boolean): Promise<void> {\n    this._options.offline = offline;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateOffline();\n    for (const sw of this.serviceWorkers())\n      await (sw as CRServiceWorker).updateOffline();\n  }\n\n  async doSetHTTPCredentials(httpCredentials?: types.Credentials): Promise<void> {\n    this._options.httpCredentials = httpCredentials;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateHttpCredentials();\n    for (const sw of this.serviceWorkers())\n      await (sw as CRServiceWorker).updateHttpCredentials();\n  }\n\n  async doAddInitScript(initScript: InitScript) {\n    for (const page of this.pages())\n      await (page._delegate as CRPage).addInitScript(initScript);\n  }\n\n  async doRemoveNonInternalInitScripts() {\n    for (const page of this.pages())\n      await (page._delegate as CRPage).removeNonInternalInitScripts();\n  }\n\n  async doUpdateRequestInterception(): Promise<void> {\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateRequestInterception();\n    for (const sw of this.serviceWorkers())\n      await (sw as CRServiceWorker).updateRequestInterception();\n  }\n\n  async doClose(reason: string | undefined) {\n    // Headful chrome cannot dispose browser context with opened 'beforeunload'\n    // dialogs, so we should close all that are currently opened.\n    // We also won't get new ones since `Target.disposeBrowserContext` does not trigger\n    // beforeunload.\n    const openedBeforeUnloadDialogs: Dialog[] = [];\n    for (const crPage of this._crPages()) {\n      const dialogs = [...crPage._page._frameManager._openedDialogs].filter(dialog => dialog.type() === 'beforeunload');\n      openedBeforeUnloadDialogs.push(...dialogs);\n    }\n    await Promise.all(openedBeforeUnloadDialogs.map(dialog => dialog.dismiss()));\n\n    if (!this._browserContextId) {\n      await this.stopVideoRecording();\n      // Closing persistent context should close the browser.\n      await this._browser.close({ reason });\n      return;\n    }\n\n    await this._browser._session.send('Target.disposeBrowserContext', { browserContextId: this._browserContextId });\n    this._browser._contexts.delete(this._browserContextId);\n    for (const [targetId, serviceWorker] of this._browser._serviceWorkers) {\n      if (serviceWorker._browserContext !== this)\n        continue;\n      // When closing a browser context, service workers are shutdown\n      // asynchronously and we get detached from them later.\n      // To avoid the wrong order of notifications, we manually fire\n      // \"close\" event here and forget about the service worker.\n      serviceWorker.didClose();\n      this._browser._serviceWorkers.delete(targetId);\n    }\n  }\n\n  async stopVideoRecording() {\n    await Promise.all(this._crPages().map(crPage => crPage._mainFrameSession._stopVideoRecording()));\n  }\n\n  onClosePersistent() {\n    // When persistent context is closed, we do not necessary get Target.detachedFromTarget\n    // for all the background pages.\n    for (const [targetId, backgroundPage] of this._browser._backgroundPages.entries()) {\n      if (backgroundPage._browserContext === this && backgroundPage._initializedPage) {\n        backgroundPage.didClose();\n        this._browser._backgroundPages.delete(targetId);\n      }\n    }\n  }\n\n  override async clearCache(): Promise<void> {\n    for (const page of this._crPages())\n      await page._networkManager.clearCache();\n  }\n\n  async cancelDownload(guid: string) {\n    // The upstream CDP method is implemented in a way that no explicit error would be given\n    // regarding the requested `guid`, even if the download is in a state not suitable for\n    // cancellation (finished, cancelled, etc.) or the guid is invalid at all.\n    await this._browser._session.send('Browser.cancelDownload', {\n      guid: guid,\n      browserContextId: this._browserContextId,\n    });\n  }\n\n  backgroundPages(): Page[] {\n    const result: Page[] = [];\n    for (const backgroundPage of this._browser._backgroundPages.values()) {\n      if (backgroundPage._browserContext === this && backgroundPage._initializedPage)\n        result.push(backgroundPage._initializedPage);\n    }\n    return result;\n  }\n\n  serviceWorkers(): Worker[] {\n    return Array.from(this._browser._serviceWorkers.values()).filter(serviceWorker => serviceWorker._browserContext === this);\n  }\n\n  async newCDPSession(page: Page | Frame): Promise<CDPSession> {\n    let targetId: string | null = null;\n    if (page instanceof Page) {\n      targetId = (page._delegate as CRPage)._targetId;\n    } else if (page instanceof Frame) {\n      const session = (page._page._delegate as CRPage)._sessions.get(page._id);\n      if (!session)\n        throw new Error(`This frame does not have a separate CDP session, it is a part of the parent frame's session`);\n      targetId = session._targetId;\n    } else {\n      throw new Error('page: expected Page or Frame');\n    }\n\n    const rootSession = await this._browser._clientRootSession();\n    return rootSession.attachToTarget(targetId);\n  }\n}\n"],"mappings":"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"}