{"version":3,"file":"crInput.js","names":["input","_interopRequireWildcard","require","_macEditingCommands","_utils","_crProtocolHelper","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","RawKeyboardImpl","constructor","_client","_isMac","_dragManger","_commandsForCode","code","modifiers","parts","modifier","push","shortcut","join","commands","macEditingCommands","isString","filter","x","startsWith","map","c","substring","length","keydown","keyCode","keyCodeWithoutLocation","key","location","autoRepeat","text","cancelDrag","send","type","toModifiersMask","windowsVirtualKeyCode","unmodifiedText","isKeypad","keypadLocation","keyup","sendText","exports","RawMouseImpl","page","client","dragManager","_page","_dragManager","move","y","button","buttons","forClick","actualMove","toButtonsMask","interceptDragCausedByMove","down","clickCount","isDragging","up","drop","wheel","deltaX","deltaY","RawTouchscreenImpl","tap","Promise","all","touchPoints"],"sources":["../../../src/server/chromium/crInput.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as input from '../input';\nimport type * as types from '../types';\nimport type { CRSession } from './crConnection';\nimport { macEditingCommands } from '../macEditingCommands';\nimport { isString } from '../../utils';\nimport type { DragManager } from './crDragDrop';\nimport type { CRPage } from './crPage';\nimport { toButtonsMask, toModifiersMask } from './crProtocolHelper';\n\nexport class RawKeyboardImpl implements input.RawKeyboard {\n  constructor(\n    private _client: CRSession,\n    private _isMac: boolean,\n    private _dragManger: DragManager,\n  ) { }\n\n  _commandsForCode(code: string, modifiers: Set<types.KeyboardModifier>) {\n    if (!this._isMac)\n      return [];\n    const parts = [];\n    for (const modifier of (['Shift', 'Control', 'Alt', 'Meta']) as types.KeyboardModifier[]) {\n      if (modifiers.has(modifier))\n        parts.push(modifier);\n    }\n    parts.push(code);\n    const shortcut = parts.join('+');\n    let commands = macEditingCommands[shortcut] || [];\n    if (isString(commands))\n      commands = [commands];\n    // Commands that insert text are not supported\n    commands = commands.filter(x => !x.startsWith('insert'));\n    // remove the trailing : to match the Chromium command names.\n    return commands.map(c => c.substring(0, c.length - 1));\n  }\n\n  async keydown(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number, autoRepeat: boolean, text: string | undefined): Promise<void> {\n    if (code === 'Escape' && await this._dragManger.cancelDrag())\n      return;\n    const commands = this._commandsForCode(code, modifiers);\n    await this._client.send('Input.dispatchKeyEvent', {\n      type: text ? 'keyDown' : 'rawKeyDown',\n      modifiers: toModifiersMask(modifiers),\n      windowsVirtualKeyCode: keyCodeWithoutLocation,\n      code,\n      commands,\n      key,\n      text,\n      unmodifiedText: text,\n      autoRepeat,\n      location,\n      isKeypad: location === input.keypadLocation\n    });\n  }\n\n  async keyup(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number): Promise<void> {\n    await this._client.send('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      modifiers: toModifiersMask(modifiers),\n      key,\n      windowsVirtualKeyCode: keyCodeWithoutLocation,\n      code,\n      location\n    });\n  }\n\n  async sendText(text: string): Promise<void> {\n    await this._client.send('Input.insertText', { text });\n  }\n}\n\nexport class RawMouseImpl implements input.RawMouse {\n  private _client: CRSession;\n  private _page: CRPage;\n  private _dragManager: DragManager;\n\n  constructor(page: CRPage, client: CRSession, dragManager: DragManager) {\n    this._page = page;\n    this._client = client;\n    this._dragManager = dragManager;\n  }\n\n  async move(x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, forClick: boolean): Promise<void> {\n    const actualMove = async () => {\n      await this._client.send('Input.dispatchMouseEvent', {\n        type: 'mouseMoved',\n        button,\n        buttons: toButtonsMask(buttons),\n        x,\n        y,\n        modifiers: toModifiersMask(modifiers)\n      });\n    };\n    if (forClick) {\n      // Avoid extra protocol calls related to drag and drop, because click relies on\n      // move-down-up protocol commands being sent synchronously.\n      return actualMove();\n    }\n    await this._dragManager.interceptDragCausedByMove(x, y, button, buttons, modifiers, actualMove);\n  }\n\n  async down(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    if (this._dragManager.isDragging())\n      return;\n    await this._client.send('Input.dispatchMouseEvent', {\n      type: 'mousePressed',\n      button,\n      buttons: toButtonsMask(buttons),\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n      clickCount\n    });\n  }\n\n  async up(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    if (this._dragManager.isDragging()) {\n      await this._dragManager.drop(x, y, modifiers);\n      return;\n    }\n    await this._client.send('Input.dispatchMouseEvent', {\n      type: 'mouseReleased',\n      button,\n      buttons: toButtonsMask(buttons),\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n      clickCount\n    });\n  }\n\n  async wheel(x: number, y: number, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, deltaX: number, deltaY: number): Promise<void> {\n    await this._client.send('Input.dispatchMouseEvent', {\n      type: 'mouseWheel',\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n      deltaX,\n      deltaY,\n    });\n  }\n}\n\nexport class RawTouchscreenImpl implements input.RawTouchscreen {\n  private _client: CRSession;\n\n  constructor(client: CRSession) {\n    this._client = client;\n  }\n  async tap(x: number, y: number, modifiers: Set<types.KeyboardModifier>) {\n    await Promise.all([\n      this._client.send('Input.dispatchTouchEvent', {\n        type: 'touchStart',\n        modifiers: toModifiersMask(modifiers),\n        touchPoints: [{\n          x, y\n        }]\n      }),\n      this._client.send('Input.dispatchTouchEvent', {\n        type: 'touchEnd',\n        modifiers: toModifiersMask(modifiers),\n        touchPoints: []\n      }),\n    ]);\n  }\n}\n"],"mappings":"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"}