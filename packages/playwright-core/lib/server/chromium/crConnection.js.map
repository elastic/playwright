{"version":3,"file":"crConnection.js","names":["_utils","require","_events","_debugLogger","_helper","_protocolError","ConnectionEvents","exports","Disconnected","Symbol","kBrowserCloseMessageId","CRConnection","EventEmitter","constructor","transport","protocolLogger","browserLogsCollector","_lastId","_transport","_sessions","Map","_protocolLogger","_browserLogsCollector","_browserDisconnectedLogs","rootSession","_closed","setMaxListeners","CRSession","set","onmessage","_onMessage","bind","onclose","_onClose","_rawSend","sessionId","method","params","id","message","send","session","get","reason","undefined","helper","formatBrowserLogs","recentLogs","dispose","Promise","resolve","then","emit","close","createBrowserSession","CDPSession","connection","parentSession","eventListener","_connection","_eventListener","_callbacks","_sessionId","_parentSession","_crashed","on","addListener","off","removeListener","once","_markAsCrashed","createChildSession","ProtocolError","reject","error","_sendMayFail","catch","debugLogger","log","object","_object$error","has","callback","delete","setMessage","result","code","_object$error2","assert","detach","Error","values","type","logs","clear","guid","_session","_listeners","Events","Event","eventsHelper","addEventListener","event","attachToTarget","targetId","flatten","removeEventListeners","Closed"],"sources":["../../../src/server/chromium/crConnection.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type RegisteredListener, assert, eventsHelper } from '../../utils';\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from '../transport';\nimport type { Protocol } from './protocol';\nimport { EventEmitter } from 'events';\nimport type { RecentLogsCollector } from '../../utils/debugLogger';\nimport { debugLogger } from '../../utils/debugLogger';\nimport type { ProtocolLogger } from '../types';\nimport { helper } from '../helper';\nimport { ProtocolError } from '../protocolError';\n\nexport const ConnectionEvents = {\n  Disconnected: Symbol('ConnectionEvents.Disconnected')\n};\n\n// CRPlaywright uses this special id to issue Browser.close command which we\n// should ignore.\nexport const kBrowserCloseMessageId = -9999;\n\nexport class CRConnection extends EventEmitter {\n  private _lastId = 0;\n  private readonly _transport: ConnectionTransport;\n  readonly _sessions = new Map<string, CRSession>();\n  private readonly _protocolLogger: ProtocolLogger;\n  private readonly _browserLogsCollector: RecentLogsCollector;\n  _browserDisconnectedLogs: string | undefined;\n  readonly rootSession: CRSession;\n  _closed = false;\n\n  constructor(transport: ConnectionTransport, protocolLogger: ProtocolLogger, browserLogsCollector: RecentLogsCollector) {\n    super();\n    this.setMaxListeners(0);\n    this._transport = transport;\n    this._protocolLogger = protocolLogger;\n    this._browserLogsCollector = browserLogsCollector;\n    this.rootSession = new CRSession(this, null, '');\n    this._sessions.set('', this.rootSession);\n    this._transport.onmessage = this._onMessage.bind(this);\n    // onclose should be set last, since it can be immediately called.\n    this._transport.onclose = this._onClose.bind(this);\n  }\n\n  _rawSend(sessionId: string, method: string, params: any): number {\n    const id = ++this._lastId;\n    const message: ProtocolRequest = { id, method, params };\n    if (sessionId)\n      message.sessionId = sessionId;\n    this._protocolLogger('send', message);\n    this._transport.send(message);\n    return id;\n  }\n\n  async _onMessage(message: ProtocolResponse) {\n    this._protocolLogger('receive', message);\n    if (message.id === kBrowserCloseMessageId)\n      return;\n    const session = this._sessions.get(message.sessionId || '');\n    if (session)\n      session._onMessage(message);\n  }\n\n  _onClose(reason?: string) {\n    this._closed = true;\n    this._transport.onmessage = undefined;\n    this._transport.onclose = undefined;\n    this._browserDisconnectedLogs = helper.formatBrowserLogs(this._browserLogsCollector.recentLogs(), reason);\n    this.rootSession.dispose();\n    Promise.resolve().then(() => this.emit(ConnectionEvents.Disconnected));\n  }\n\n  close() {\n    if (!this._closed)\n      this._transport.close();\n  }\n\n  async createBrowserSession(): Promise<CDPSession> {\n    const { sessionId } = await this.rootSession.send('Target.attachToBrowserTarget');\n    return new CDPSession(this.rootSession, sessionId);\n  }\n}\n\ntype SessionEventListener = (method: string, params?: Object) => void;\n\nexport class CRSession extends EventEmitter {\n  private readonly _connection: CRConnection;\n  private _eventListener?: SessionEventListener;\n  private readonly _callbacks = new Map<number, { resolve: (o: any) => void, reject: (e: ProtocolError) => void, error: ProtocolError }>();\n  private readonly _sessionId: string;\n  private readonly _parentSession: CRSession | null;\n  private _crashed: boolean = false;\n  private _closed = false;\n  override on: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override addListener: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override off: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override removeListener: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override once: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n\n  constructor(connection: CRConnection, parentSession: CRSession | null, sessionId: string, eventListener?: SessionEventListener) {\n    super();\n    this.setMaxListeners(0);\n    this._connection = connection;\n    this._parentSession = parentSession;\n    this._sessionId = sessionId;\n    this._eventListener = eventListener;\n\n    this.on = super.on;\n    this.addListener = super.addListener;\n    this.off = super.removeListener;\n    this.removeListener = super.removeListener;\n    this.once = super.once;\n  }\n\n  _markAsCrashed() {\n    this._crashed = true;\n  }\n\n  createChildSession(sessionId: string, eventListener?: SessionEventListener): CRSession {\n    const session = new CRSession(this._connection, this, sessionId, eventListener);\n    this._connection._sessions.set(sessionId, session);\n    return session;\n  }\n\n  async send<T extends keyof Protocol.CommandParameters>(\n    method: T,\n    params?: Protocol.CommandParameters[T]\n  ): Promise<Protocol.CommandReturnValues[T]> {\n    if (this._crashed || this._closed || this._connection._closed || this._connection._browserDisconnectedLogs)\n      throw new ProtocolError(this._crashed ? 'crashed' : 'closed', undefined, this._connection._browserDisconnectedLogs);\n    const id = this._connection._rawSend(this._sessionId, method, params);\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, { resolve, reject, error: new ProtocolError('error', method) });\n    });\n  }\n\n  _sendMayFail<T extends keyof Protocol.CommandParameters>(method: T, params?: Protocol.CommandParameters[T]): Promise<Protocol.CommandReturnValues[T] | void> {\n    return this.send(method, params).catch((error: ProtocolError) => debugLogger.log('error', error));\n  }\n\n  _onMessage(object: ProtocolResponse) {\n    if (object.id && this._callbacks.has(object.id)) {\n      const callback = this._callbacks.get(object.id)!;\n      this._callbacks.delete(object.id);\n      if (object.error) {\n        callback.error.setMessage(object.error.message);\n        callback.reject(callback.error);\n      } else {\n        callback.resolve(object.result);\n      }\n    } else if (object.id && object.error?.code === -32001) {\n      // Message to a closed session, just ignore it.\n    } else {\n      assert(!object.id, object?.error?.message || undefined);\n      Promise.resolve().then(() => {\n        if (this._eventListener)\n          this._eventListener(object.method!, object.params);\n        this.emit(object.method!, object.params);\n      });\n    }\n  }\n\n  async detach() {\n    if (this._closed)\n      throw new Error(`Session already detached. Most likely the page has been closed.`);\n    if (!this._parentSession)\n      throw new Error('Root session cannot be closed');\n    // Ideally, detaching should resume any target, but there is a bug in the backend,\n    // so we must Runtime.runIfWaitingForDebugger first.\n    await this._sendMayFail('Runtime.runIfWaitingForDebugger');\n    await this._parentSession.send('Target.detachFromTarget', { sessionId: this._sessionId });\n    this.dispose();\n  }\n\n  dispose() {\n    this._closed = true;\n    this._connection._sessions.delete(this._sessionId);\n    for (const callback of this._callbacks.values()) {\n      callback.error.setMessage(`Internal server error, session closed.`);\n      callback.error.type = this._crashed ? 'crashed' : 'closed';\n      callback.error.logs = this._connection._browserDisconnectedLogs;\n      callback.reject(callback.error);\n    }\n    this._callbacks.clear();\n  }\n}\n\nexport class CDPSession extends EventEmitter {\n  static Events = {\n    Event: 'event',\n    Closed: 'close',\n  };\n\n  readonly guid: string;\n  private _session: CRSession;\n  private _listeners: RegisteredListener[] = [];\n\n  constructor(parentSession: CRSession, sessionId: string) {\n    super();\n    this.guid = `cdp-session@${sessionId}`;\n    this._session = parentSession.createChildSession(sessionId, (method, params) => this.emit(CDPSession.Events.Event, { method, params }));\n    this._listeners = [eventsHelper.addEventListener(parentSession, 'Target.detachedFromTarget', (event: Protocol.Target.detachedFromTargetPayload) => {\n      if (event.sessionId === sessionId)\n        this._onClose();\n    })];\n  }\n\n  async send(method: string, params?: any) {\n    return await this._session.send(method as any, params);\n  }\n\n  async detach() {\n    return await this._session.detach();\n  }\n\n  async attachToTarget(targetId: string) {\n    const { sessionId } = await this.send('Target.attachToTarget', { targetId, flatten: true });\n    return new CDPSession(this._session, sessionId);\n  }\n\n  private _onClose() {\n    eventsHelper.removeEventListeners(this._listeners);\n    this._session.dispose();\n    this.emit(CDPSession.Events.Closed);\n  }\n}\n"],"mappings":"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"}