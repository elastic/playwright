{"version":3,"file":"input.js","names":["_utils","require","keyboardLayout","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","keypadLocation","exports","kModifiers","Keyboard","constructor","raw","_pressedModifiers","Set","_pressedKeys","_raw","down","key","description","_keyDescriptionForString","autoRepeat","code","add","includes","text","keydown","keyCode","keyCodeWithoutLocation","location","str","keyString","resolveSmartModifierString","usKeyboardLayout","assert","shift","shifted","size","up","delete","keyup","insertText","sendText","type","options","delay","undefined","char","press","Promise","f","setTimeout","split","keys","building","push","tokens","length","ensureModifiers","mm","modifiers","map","resolveSmartModifier","modifier","Error","restore","Array","from","needDown","isDown","_modifiers","process","platform","m","Mouse","page","_keyboard","_x","_y","_lastButton","_buttons","_page","keyboard","move","x","y","metadata","point","steps","fromX","fromY","middleX","middleY","forClick","button","clickCount","click","cc","promises","all","dblclick","wheel","deltaX","deltaY","aliases","Map","buildLayoutClosure","USKeyboardLayout","layout","result","definition","shiftedDescription","shiftKey","shiftKeyCode","alias","Touchscreen","tap","_browserContext","_options","hasTouch"],"sources":["../../src/server/input.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../utils';\nimport * as keyboardLayout from './usKeyboardLayout';\nimport type * as types from './types';\nimport type { Page } from './page';\nimport type { CallMetadata } from './instrumentation';\n\nexport const keypadLocation = keyboardLayout.keypadLocation;\n\ntype KeyDescription = {\n  keyCode: number,\n  keyCodeWithoutLocation: number,\n  key: string,\n  text: string,\n  code: string,\n  location: number,\n  shifted?: KeyDescription;\n};\n\nconst kModifiers: types.KeyboardModifier[] = ['Alt', 'Control', 'Meta', 'Shift'];\n\nexport interface RawKeyboard {\n  keydown(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number, autoRepeat: boolean, text: string | undefined): Promise<void>;\n  keyup(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number): Promise<void>;\n  sendText(text: string): Promise<void>;\n}\n\nexport class Keyboard {\n  private _pressedModifiers = new Set<types.KeyboardModifier>();\n  private _pressedKeys = new Set<string>();\n  private _raw: RawKeyboard;\n\n  constructor(raw: RawKeyboard) {\n    this._raw = raw;\n  }\n\n  async down(key: string) {\n    const description = this._keyDescriptionForString(key);\n    const autoRepeat = this._pressedKeys.has(description.code);\n    this._pressedKeys.add(description.code);\n    if (kModifiers.includes(description.key as types.KeyboardModifier))\n      this._pressedModifiers.add(description.key as types.KeyboardModifier);\n    const text = description.text;\n    await this._raw.keydown(this._pressedModifiers, description.code, description.keyCode, description.keyCodeWithoutLocation, description.key, description.location, autoRepeat, text);\n  }\n\n  private _keyDescriptionForString(str: string): KeyDescription {\n    const keyString = resolveSmartModifierString(str);\n    let description = usKeyboardLayout.get(keyString);\n    assert(description, `Unknown key: \"${keyString}\"`);\n    const shift = this._pressedModifiers.has('Shift');\n    description = shift && description.shifted ? description.shifted : description;\n\n    // if any modifiers besides shift are pressed, no text should be sent\n    if (this._pressedModifiers.size > 1 || (!this._pressedModifiers.has('Shift') && this._pressedModifiers.size === 1))\n      return { ...description, text: '' };\n    return description;\n  }\n\n  async up(key: string) {\n    const description = this._keyDescriptionForString(key);\n    if (kModifiers.includes(description.key as types.KeyboardModifier))\n      this._pressedModifiers.delete(description.key as types.KeyboardModifier);\n    this._pressedKeys.delete(description.code);\n    await this._raw.keyup(this._pressedModifiers, description.code, description.keyCode, description.keyCodeWithoutLocation, description.key, description.location);\n  }\n\n  async insertText(text: string) {\n    await this._raw.sendText(text);\n  }\n\n  async type(text: string, options?: { delay?: number }) {\n    const delay = (options && options.delay) || undefined;\n    for (const char of text) {\n      if (usKeyboardLayout.has(char)) {\n        await this.press(char, { delay });\n      } else {\n        if (delay)\n          await new Promise(f => setTimeout(f, delay));\n        await this.insertText(char);\n      }\n    }\n  }\n\n  async press(key: string, options: { delay?: number } = {}) {\n    function split(keyString: string) {\n      const keys = [];\n      let building = '';\n      for (const char of keyString) {\n        if (char === '+' && building) {\n          keys.push(building);\n          building = '';\n        } else {\n          building += char;\n        }\n      }\n      keys.push(building);\n      return keys;\n    }\n\n    const tokens = split(key);\n    key = tokens[tokens.length - 1];\n    for (let i = 0; i < tokens.length - 1; ++i)\n      await this.down(tokens[i]);\n    await this.down(key);\n    if (options.delay)\n      await new Promise(f => setTimeout(f, options.delay));\n    await this.up(key);\n    for (let i = tokens.length - 2; i >= 0; --i)\n      await this.up(tokens[i]);\n  }\n\n  async ensureModifiers(mm: types.SmartKeyboardModifier[]): Promise<types.KeyboardModifier[]> {\n    const modifiers = mm.map(resolveSmartModifier);\n    for (const modifier of modifiers) {\n      if (!kModifiers.includes(modifier))\n        throw new Error('Unknown modifier ' + modifier);\n    }\n    const restore: types.KeyboardModifier[] = Array.from(this._pressedModifiers);\n    for (const key of kModifiers) {\n      const needDown = modifiers.includes(key);\n      const isDown = this._pressedModifiers.has(key);\n      if (needDown && !isDown)\n        await this.down(key);\n      else if (!needDown && isDown)\n        await this.up(key);\n    }\n    return restore;\n  }\n\n  _modifiers(): Set<types.KeyboardModifier> {\n    return this._pressedModifiers;\n  }\n}\n\nexport function resolveSmartModifierString(key: string): string {\n  if (key === 'ControlOrMeta')\n    return process.platform === 'darwin' ? 'Meta' : 'Control';\n  return key;\n}\n\nexport function resolveSmartModifier(m: types.SmartKeyboardModifier): types.KeyboardModifier {\n  return resolveSmartModifierString(m) as types.KeyboardModifier;\n}\n\nexport interface RawMouse {\n  move(x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, forClick: boolean): Promise<void>;\n  down(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void>;\n  up(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void>;\n  click?(x: number, y: number, options: { delay?: number, button?: types.MouseButton, clickCount?: number }): Promise<void>;\n  wheel(x: number, y: number, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, deltaX: number, deltaY: number): Promise<void>;\n}\n\nexport class Mouse {\n  private _keyboard: Keyboard;\n  private _x = 0;\n  private _y = 0;\n  private _lastButton: 'none' | types.MouseButton = 'none';\n  private _buttons = new Set<types.MouseButton>();\n  private _raw: RawMouse;\n  private _page: Page;\n\n  constructor(raw: RawMouse, page: Page) {\n    this._raw = raw;\n    this._page = page;\n    this._keyboard = this._page.keyboard;\n  }\n\n  async move(x: number, y: number, options: { steps?: number, forClick?: boolean } = {}, metadata?: CallMetadata) {\n    if (metadata)\n      metadata.point = { x, y };\n    const { steps = 1 } = options;\n    const fromX = this._x;\n    const fromY = this._y;\n    this._x = x;\n    this._y = y;\n    for (let i = 1; i <= steps; i++) {\n      const middleX = fromX + (x - fromX) * (i / steps);\n      const middleY = fromY + (y - fromY) * (i / steps);\n      await this._raw.move(middleX, middleY, this._lastButton, this._buttons, this._keyboard._modifiers(), !!options.forClick);\n    }\n  }\n\n  async down(options: { button?: types.MouseButton, clickCount?: number } = {}, metadata?: CallMetadata) {\n    if (metadata)\n      metadata.point = { x: this._x, y: this._y };\n    const { button = 'left', clickCount = 1 } = options;\n    this._lastButton = button;\n    this._buttons.add(button);\n    await this._raw.down(this._x, this._y, this._lastButton, this._buttons, this._keyboard._modifiers(), clickCount);\n  }\n\n  async up(options: { button?: types.MouseButton, clickCount?: number } = {}, metadata?: CallMetadata) {\n    if (metadata)\n      metadata.point = { x: this._x, y: this._y };\n    const { button = 'left', clickCount = 1 } = options;\n    this._lastButton = 'none';\n    this._buttons.delete(button);\n    await this._raw.up(this._x, this._y, button, this._buttons, this._keyboard._modifiers(), clickCount);\n  }\n\n  async click(x: number, y: number, options: { delay?: number, button?: types.MouseButton, clickCount?: number } = {}, metadata?: CallMetadata) {\n    if (metadata)\n      metadata.point = { x, y };\n    if (this._raw.click)\n      return await this._raw.click(x, y, options);\n    const { delay = null, clickCount = 1 } = options;\n    if (delay) {\n      this.move(x, y, { forClick: true });\n      for (let cc = 1; cc <= clickCount; ++cc) {\n        await this.down({ ...options, clickCount: cc });\n        await new Promise(f => setTimeout(f, delay));\n        await this.up({ ...options, clickCount: cc });\n        if (cc < clickCount)\n          await new Promise(f => setTimeout(f, delay));\n      }\n    } else {\n      const promises = [];\n      promises.push(this.move(x, y, { forClick: true }));\n      for (let cc = 1; cc <= clickCount; ++cc) {\n        promises.push(this.down({ ...options, clickCount: cc }));\n        promises.push(this.up({ ...options, clickCount: cc }));\n      }\n      await Promise.all(promises);\n    }\n  }\n\n  async dblclick(x: number, y: number, options: { delay?: number, button?: types.MouseButton } = {}) {\n    await this.click(x, y, { ...options, clickCount: 2 });\n  }\n\n  async wheel(deltaX: number, deltaY: number) {\n    await this._raw.wheel(this._x, this._y, this._buttons, this._keyboard._modifiers(), deltaX, deltaY);\n  }\n}\n\nconst aliases = new Map<string, string[]>([\n  ['ShiftLeft', ['Shift']],\n  ['ControlLeft', ['Control']],\n  ['AltLeft', ['Alt']],\n  ['MetaLeft', ['Meta']],\n  ['Enter', ['\\n', '\\r']],\n]);\n\nconst usKeyboardLayout = buildLayoutClosure(keyboardLayout.USKeyboardLayout);\n\nfunction buildLayoutClosure(layout: keyboardLayout.KeyboardLayout): Map<string, KeyDescription> {\n  const result = new Map<string, KeyDescription>();\n  for (const code in layout) {\n    const definition = layout[code];\n    const description: KeyDescription = {\n      key: definition.key || '',\n      keyCode: definition.keyCode || 0,\n      keyCodeWithoutLocation: definition.keyCodeWithoutLocation || definition.keyCode || 0,\n      code,\n      text: definition.text || '',\n      location: definition.location || 0,\n    };\n    if (definition.key.length === 1)\n      description.text = description.key;\n\n    // Generate shifted definition.\n    let shiftedDescription: KeyDescription | undefined;\n    if (definition.shiftKey) {\n      assert(definition.shiftKey.length === 1);\n      shiftedDescription = { ...description };\n      shiftedDescription.key = definition.shiftKey;\n      shiftedDescription.text = definition.shiftKey;\n      if (definition.shiftKeyCode)\n        shiftedDescription.keyCode = definition.shiftKeyCode;\n    }\n\n    // Map from code: Digit3 -> { ... description, shifted }\n    result.set(code, { ...description, shifted: shiftedDescription });\n\n    // Map from aliases: Shift -> non-shiftable definition\n    if (aliases.has(code)) {\n      for (const alias of aliases.get(code)!)\n        result.set(alias, description);\n    }\n\n    // Do not use numpad when converting keys to codes.\n    if (definition.location)\n      continue;\n\n    // Map from key, no shifted\n    if (description.key.length === 1)\n      result.set(description.key, description);\n\n    // Map from shiftKey, no shifted\n    if (shiftedDescription)\n      result.set(shiftedDescription.key, { ...shiftedDescription, shifted: undefined });\n  }\n  return result;\n}\n\nexport interface RawTouchscreen {\n  tap(x: number, y: number, modifiers: Set<types.KeyboardModifier>): Promise<void>;\n}\n\nexport class Touchscreen {\n  private _raw: RawTouchscreen;\n  private _page: Page;\n\n  constructor(raw: RawTouchscreen, page: Page) {\n    this._raw = raw;\n    this._page = page;\n  }\n\n  async tap(x: number, y: number, metadata?: CallMetadata) {\n    if (metadata)\n      metadata.point = { x, y };\n    if (!this._page._browserContext._options.hasTouch)\n      throw new Error('hasTouch must be enabled on the browser context before using the touchscreen.');\n    await this._raw.tap(x, y, this._page.keyboard._modifiers());\n  }\n}\n"],"mappings":"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"}