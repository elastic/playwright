{"version":3,"file":"debugController.js","names":["_processLauncher","require","_instrumentation","_recorder","_recorderApp","_utils","internalMetadata","serverSideCallMetadata","DebugController","SdkObject","constructor","playwright","attribution","isInternalPlaywright","instrumentation","createInstrumentation","undefined","_autoCloseTimer","_autoCloseAllowed","_trackHierarchyListener","_playwright","_sdkLanguage","_codegenId","initialize","codegenId","sdkLanguage","setAutoCloseAllowed","allowed","dispose","setReportStateChanged","enabled","onPageOpen","_emitSnapshot","onPageClose","addListener","removeListener","resetForReuse","contexts","Set","page","allPages","add","context","navigate","url","p","mainFrame","goto","setRecorderMode","params","_closeBrowsersWithoutPages","mode","recorder","_allRecorders","hideHighlightedSelector","setMode","setAutoCloseEnabled","allBrowsers","length","chromium","launch","headless","process","env","PW_DEBUG_CONTROLLER_HEADLESS","pages","browser","newContextForReuse","newPage","testIdAttributeName","selectors","setTestIdAttributeName","setOutput","file","clearTimeout","heartBeat","gracefullyProcessExitDoNotHang","setTimeout","highlight","selector","setHighlightedSelector","hideHighlight","resume","kill","closeAllBrowsers","Promise","all","map","close","reason","browsers","pageCount","b","push","c","emit","Events","StateChanged","result","Recorder","show","resolve","InspectingRecorderApp","omitCallTracking","filter","Boolean","exports","InspectRequested","SourceChanged","Paused","SetModeRequested","EmptyRecorderApp","debugController","_debugController","setSelector","locator","asLocator","setSources","sources","source","find","s","id","text","header","footer","actions","setPaused","paused"],"sources":["../../src/server/debugController.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Mode, Source } from '@recorder/recorderTypes';\nimport { gracefullyProcessExitDoNotHang } from '../utils/processLauncher';\nimport type { Browser } from './browser';\nimport type { BrowserContext } from './browserContext';\nimport { createInstrumentation, SdkObject, serverSideCallMetadata } from './instrumentation';\nimport type { InstrumentationListener } from './instrumentation';\nimport type { Playwright } from './playwright';\nimport { Recorder } from './recorder';\nimport { EmptyRecorderApp } from './recorder/recorderApp';\nimport { asLocator, type Language } from '../utils';\n\nconst internalMetadata = serverSideCallMetadata();\n\nexport class DebugController extends SdkObject {\n  static Events = {\n    StateChanged: 'stateChanged',\n    InspectRequested: 'inspectRequested',\n    SourceChanged: 'sourceChanged',\n    Paused: 'paused',\n    SetModeRequested: 'setModeRequested',\n  };\n\n  private _autoCloseTimer: NodeJS.Timeout | undefined;\n  // TODO: remove in 1.27\n  private _autoCloseAllowed = false;\n  private _trackHierarchyListener: InstrumentationListener | undefined;\n  private _playwright: Playwright;\n  _sdkLanguage: Language = 'javascript';\n  _codegenId: string = 'playwright-test';\n\n  constructor(playwright: Playwright) {\n    super({ attribution: { isInternalPlaywright: true }, instrumentation: createInstrumentation() } as any, undefined, 'DebugController');\n    this._playwright = playwright;\n  }\n\n  initialize(codegenId: string, sdkLanguage: Language) {\n    this._codegenId = codegenId;\n    this._sdkLanguage = sdkLanguage;\n  }\n\n  setAutoCloseAllowed(allowed: boolean) {\n    this._autoCloseAllowed = allowed;\n  }\n\n  dispose() {\n    this.setReportStateChanged(false);\n    this.setAutoCloseAllowed(false);\n  }\n\n  setReportStateChanged(enabled: boolean) {\n    if (enabled && !this._trackHierarchyListener) {\n      this._trackHierarchyListener = {\n        onPageOpen: () => this._emitSnapshot(),\n        onPageClose: () => this._emitSnapshot(),\n      };\n      this._playwright.instrumentation.addListener(this._trackHierarchyListener, null);\n    } else if (!enabled && this._trackHierarchyListener) {\n      this._playwright.instrumentation.removeListener(this._trackHierarchyListener);\n      this._trackHierarchyListener = undefined;\n    }\n  }\n\n  async resetForReuse() {\n    const contexts = new Set<BrowserContext>();\n    for (const page of this._playwright.allPages())\n      contexts.add(page.context());\n    for (const context of contexts)\n      await context.resetForReuse(internalMetadata, null);\n  }\n\n  async navigate(url: string) {\n    for (const p of this._playwright.allPages())\n      await p.mainFrame().goto(internalMetadata, url);\n  }\n\n  async setRecorderMode(params: { mode: Mode, file?: string, testIdAttributeName?: string }) {\n    // TODO: |file| is only used in the legacy mode.\n    await this._closeBrowsersWithoutPages();\n\n    if (params.mode === 'none') {\n      for (const recorder of await this._allRecorders()) {\n        recorder.hideHighlightedSelector();\n        recorder.setMode('none');\n      }\n      this.setAutoCloseEnabled(true);\n      return;\n    }\n\n    if (!this._playwright.allBrowsers().length)\n      await this._playwright.chromium.launch(internalMetadata, { headless: !!process.env.PW_DEBUG_CONTROLLER_HEADLESS });\n    // Create page if none.\n    const pages = this._playwright.allPages();\n    if (!pages.length) {\n      const [browser] = this._playwright.allBrowsers();\n      const { context } = await browser.newContextForReuse({}, internalMetadata);\n      await context.newPage(internalMetadata);\n    }\n    // Update test id attribute.\n    if (params.testIdAttributeName) {\n      for (const page of this._playwright.allPages())\n        page.context().selectors().setTestIdAttributeName(params.testIdAttributeName);\n    }\n    // Toggle the mode.\n    for (const recorder of await this._allRecorders()) {\n      recorder.hideHighlightedSelector();\n      if (params.mode !== 'inspecting')\n        recorder.setOutput(this._codegenId, params.file);\n      recorder.setMode(params.mode);\n    }\n    this.setAutoCloseEnabled(true);\n  }\n\n  async setAutoCloseEnabled(enabled: boolean) {\n    if (!this._autoCloseAllowed)\n      return;\n    if (this._autoCloseTimer)\n      clearTimeout(this._autoCloseTimer);\n    if (!enabled)\n      return;\n    const heartBeat = () => {\n      if (!this._playwright.allPages().length)\n        gracefullyProcessExitDoNotHang(0);\n      else\n        this._autoCloseTimer = setTimeout(heartBeat, 5000);\n    };\n    this._autoCloseTimer = setTimeout(heartBeat, 30000);\n  }\n\n  async highlight(selector: string) {\n    for (const recorder of await this._allRecorders())\n      recorder.setHighlightedSelector(this._sdkLanguage, selector);\n  }\n\n  async hideHighlight() {\n    // Hide all active recorder highlights.\n    for (const recorder of await this._allRecorders())\n      recorder.hideHighlightedSelector();\n    // Hide all locator.highlight highlights.\n    await this._playwright.hideHighlight();\n  }\n\n  allBrowsers(): Browser[] {\n    return [...this._playwright.allBrowsers()];\n  }\n\n  async resume() {\n    for (const recorder of await this._allRecorders())\n      recorder.resume();\n  }\n\n  async kill() {\n    gracefullyProcessExitDoNotHang(0);\n  }\n\n  async closeAllBrowsers() {\n    await Promise.all(this.allBrowsers().map(browser => browser.close({ reason: 'Close all browsers requested' })));\n  }\n\n  private _emitSnapshot() {\n    const browsers = [];\n    let pageCount = 0;\n    for (const browser of this._playwright.allBrowsers()) {\n      const b = {\n        contexts: [] as any[]\n      };\n      browsers.push(b);\n      for (const context of browser.contexts()) {\n        const c = {\n          pages: [] as any[]\n        };\n        b.contexts.push(c);\n        for (const page of context.pages())\n          c.pages.push(page.mainFrame().url());\n        pageCount += context.pages().length;\n      }\n    }\n    this.emit(DebugController.Events.StateChanged, { pageCount });\n  }\n\n  private async _allRecorders(): Promise<Recorder[]> {\n    const contexts = new Set<BrowserContext>();\n    for (const page of this._playwright.allPages())\n      contexts.add(page.context());\n    const result = await Promise.all([...contexts].map(c => Recorder.show(c, () => Promise.resolve(new InspectingRecorderApp(this)), { omitCallTracking: true })));\n    return result.filter(Boolean) as Recorder[];\n  }\n\n  private async _closeBrowsersWithoutPages() {\n    for (const browser of this._playwright.allBrowsers()) {\n      for (const context of browser.contexts()) {\n        if (!context.pages().length)\n          await context.close({ reason: 'Browser collected' });\n      }\n      if (!browser.contexts())\n        await browser.close({ reason: 'Browser collected' });\n    }\n  }\n}\n\nclass InspectingRecorderApp extends EmptyRecorderApp {\n  private _debugController: DebugController;\n\n  constructor(debugController: DebugController) {\n    super();\n    this._debugController = debugController;\n  }\n\n  override async setSelector(selector: string): Promise<void> {\n    const locator: string = asLocator(this._debugController._sdkLanguage, selector);\n    this._debugController.emit(DebugController.Events.InspectRequested, { selector, locator });\n  }\n\n  override async setSources(sources: Source[]): Promise<void> {\n    const source = sources.find(s => s.id === this._debugController._codegenId);\n    const { text, header, footer, actions } = source || { text: '' };\n    this._debugController.emit(DebugController.Events.SourceChanged, { text, header, footer, actions });\n  }\n\n  override async setPaused(paused: boolean) {\n    this._debugController.emit(DebugController.Events.Paused, { paused });\n  }\n\n  override async setMode(mode: Mode) {\n    this._debugController.emit(DebugController.Events.SetModeRequested, { mode });\n  }\n}\n"],"mappings":"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"}