{"version":3,"file":"electron.js","names":["_fs","_interopRequireDefault","require","_os","_path","_crBrowser","_crConnection","_crExecutionContext","js","_interopRequireWildcard","_timeoutSettings","_utils","_transport","_processLauncher","_browserContext","_progress","_helper","_eventsHelper","readline","_debugLogger","_instrumentation","_crProtocolHelper","_console","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","ARTIFACTS_FOLDER","path","join","os","tmpdir","ElectronApplication","SdkObject","constructor","parent","browser","nodeConnection","process","_nodeConnection","_nodeSession","_nodeExecutionContext","_nodeElectronHandlePromise","ManualPromise","TimeoutSettings","_process","_defaultContext","rootSession","on","event","context","auxData","isDefault","crExecutionContext","CRExecutionContext","ExecutionContext","result","remoteObject","_client","send","expression","contextId","id","includeCommandLineAPI","resolve","JSHandle","objectId","_onConsoleAPI","appClosePromise","Promise","f","once","Events","Close","setCustomCloseHandler","stopVideoRecording","electronHandle","evaluate","app","quit","catch","close","executionContextId","args","map","arg","createHandle","message","ConsoleMessage","type","undefined","toConsoleMessageLocation","stackTrace","emit","Console","initialize","reason","browserWindow","page","targetId","_delegate","_targetId","evaluateHandle","BrowserWindow","webContents","wc","fromDevToolsTargetId","fromWebContents","exports","Electron","playwright","launch","options","controller","ProgressController","serverSideCallMetadata","setLogName","run","progress","electronArguments","platform","runningAsRoot","geteuid","indexOf","unshift","artifactsDir","fs","promises","mkdtemp","browserLogsCollector","RecentLogsCollector","env","envArrayToObject","command","executablePath","error","code","Error","wrapInASCIIBox","shell","NODE_OPTIONS","launchedProcess","gracefullyClose","kill","launchProcess","log","stdio","cwd","tempDirectories","attemptToGracefullyClose","handleSIGINT","handleSIGTERM","handleSIGHUP","onExit","_app","waitForXserverError","reject","waitForLine","then","metadata","nodeMatchPromise","chromeMatchPromise","debuggerDisconnectPromise","nodeMatch","nodeTransport","WebSocketTransport","connect","CRConnection","helper","debugProtocolLogger","chromeMatch","race","chromeTransport","browserProcess","onclose","contextOptions","noDefaultViewport","browserOptions","name","isChromium","headful","persistent","protocolLogger","downloadsPath","tracesDir","originalLaunchOptions","validateBrowserContextOptions","CRBrowser","attribution","launchTimeout","regex","rl","createInterface","input","stderr","failError","listeners","eventsHelper","addEventListener","onLine","bind","cleanupWhenAborted","cleanup","line","match","removeEventListeners"],"sources":["../../../src/server/electron/electron.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport type { CRBrowserContext } from '../chromium/crBrowser';\nimport { CRBrowser } from '../chromium/crBrowser';\nimport type { CRSession } from '../chromium/crConnection';\nimport { CRConnection } from '../chromium/crConnection';\nimport type { CRPage } from '../chromium/crPage';\nimport { CRExecutionContext } from '../chromium/crExecutionContext';\nimport type { Protocol } from '../chromium/protocol';\nimport * as js from '../javascript';\nimport type { Page } from '../page';\nimport { TimeoutSettings } from '../../common/timeoutSettings';\nimport { ManualPromise, wrapInASCIIBox } from '../../utils';\nimport { WebSocketTransport } from '../transport';\nimport { launchProcess, envArrayToObject } from '../../utils/processLauncher';\nimport type { BrowserContext } from '../browserContext';\nimport { validateBrowserContextOptions } from '../browserContext';\nimport type { BrowserWindow } from 'electron';\nimport type { Progress } from '../progress';\nimport { ProgressController } from '../progress';\nimport { helper } from '../helper';\nimport { eventsHelper } from '../../utils/eventsHelper';\nimport type { BrowserOptions, BrowserProcess } from '../browser';\nimport type { Playwright } from '../playwright';\nimport type * as childProcess from 'child_process';\nimport * as readline from 'readline';\nimport { RecentLogsCollector } from '../../utils/debugLogger';\nimport { serverSideCallMetadata, SdkObject } from '../instrumentation';\nimport type * as channels from '@protocol/channels';\nimport { toConsoleMessageLocation } from '../chromium/crProtocolHelper';\nimport { ConsoleMessage } from '../console';\n\nconst ARTIFACTS_FOLDER = path.join(os.tmpdir(), 'playwright-artifacts-');\n\nexport class ElectronApplication extends SdkObject {\n  static Events = {\n    Close: 'close',\n    Console: 'console',\n  };\n\n  private _browserContext: CRBrowserContext;\n  private _nodeConnection: CRConnection;\n  private _nodeSession: CRSession;\n  private _nodeExecutionContext: js.ExecutionContext | undefined;\n  _nodeElectronHandlePromise: ManualPromise<js.JSHandle<typeof import('electron')>> = new ManualPromise();\n  readonly _timeoutSettings = new TimeoutSettings();\n  private _process: childProcess.ChildProcess;\n\n  constructor(parent: SdkObject, browser: CRBrowser, nodeConnection: CRConnection, process: childProcess.ChildProcess) {\n    super(parent, 'electron-app');\n    this._process = process;\n    this._browserContext = browser._defaultContext as CRBrowserContext;\n    this._nodeConnection = nodeConnection;\n    this._nodeSession = nodeConnection.rootSession;\n    this._nodeSession.on('Runtime.executionContextCreated', async (event: Protocol.Runtime.executionContextCreatedPayload) => {\n      if (!event.context.auxData || !event.context.auxData.isDefault)\n        return;\n      const crExecutionContext = new CRExecutionContext(this._nodeSession, event.context);\n      this._nodeExecutionContext = new js.ExecutionContext(this, crExecutionContext, 'electron');\n      const { result: remoteObject } = await crExecutionContext._client.send('Runtime.evaluate', {\n        expression: `require('electron')`,\n        contextId: event.context.id,\n        // Needed after Electron 28 to get access to require: https://github.com/microsoft/playwright/issues/28048\n        includeCommandLineAPI: true,\n      });\n      this._nodeElectronHandlePromise.resolve(new js.JSHandle(this._nodeExecutionContext!, 'object', 'ElectronModule', remoteObject.objectId!));\n    });\n    this._nodeSession.on('Runtime.consoleAPICalled', event => this._onConsoleAPI(event));\n    const appClosePromise = new Promise(f => this.once(ElectronApplication.Events.Close, f));\n    this._browserContext.setCustomCloseHandler(async () => {\n      await this._browserContext.stopVideoRecording();\n      const electronHandle = await this._nodeElectronHandlePromise;\n      await electronHandle.evaluate(({ app }) => app.quit()).catch(() => {});\n      this._nodeConnection.close();\n      await appClosePromise;\n    });\n  }\n\n  async _onConsoleAPI(event: Protocol.Runtime.consoleAPICalledPayload) {\n    if (event.executionContextId === 0) {\n      // DevTools protocol stores the last 1000 console messages. These\n      // messages are always reported even for removed execution contexts. In\n      // this case, they are marked with executionContextId = 0 and are\n      // reported upon enabling Runtime agent.\n      //\n      // Ignore these messages since:\n      // - there's no execution context we can use to operate with message\n      //   arguments\n      // - these messages are reported before Playwright clients can subscribe\n      //   to the 'console'\n      //   page event.\n      //\n      // @see https://github.com/GoogleChrome/puppeteer/issues/3865\n      return;\n    }\n    if (!this._nodeExecutionContext)\n      return;\n    const args = event.args.map(arg => this._nodeExecutionContext!.createHandle(arg));\n    const message = new ConsoleMessage(null, event.type, undefined, args, toConsoleMessageLocation(event.stackTrace));\n    this.emit(ElectronApplication.Events.Console, message);\n  }\n\n  async initialize() {\n    await this._nodeSession.send('Runtime.enable', {});\n    // Delay loading the app until browser is started and the browser targets are configured to auto-attach.\n    await this._nodeSession.send('Runtime.evaluate', { expression: '__playwright_run()' });\n  }\n\n  process(): childProcess.ChildProcess {\n    return this._process;\n  }\n\n  context(): BrowserContext {\n    return this._browserContext;\n  }\n\n  async close() {\n    // This will call BrowserContext.setCustomCloseHandler.\n    await this._browserContext.close({ reason: 'Application exited' });\n  }\n\n  async browserWindow(page: Page): Promise<js.JSHandle<BrowserWindow>> {\n    // Assume CRPage as Electron is always Chromium.\n    const targetId = (page._delegate as CRPage)._targetId;\n    const electronHandle = await this._nodeElectronHandlePromise;\n    return await electronHandle.evaluateHandle(({ BrowserWindow, webContents }, targetId) => {\n      const wc = webContents.fromDevToolsTargetId(targetId);\n      return BrowserWindow.fromWebContents(wc!)!;\n    }, targetId);\n  }\n}\n\nexport class Electron extends SdkObject {\n  constructor(playwright: Playwright) {\n    super(playwright, 'electron');\n  }\n\n  async launch(options: channels.ElectronLaunchParams): Promise<ElectronApplication> {\n    const {\n      args = [],\n    } = options;\n    const controller = new ProgressController(serverSideCallMetadata(), this);\n    controller.setLogName('browser');\n    return controller.run(async progress => {\n      let app: ElectronApplication | undefined = undefined;\n      // --remote-debugging-port=0 must be the last playwright's argument, loader.ts relies on it.\n      let electronArguments = ['--inspect=0', '--remote-debugging-port=0', ...args];\n\n      if (os.platform() === 'linux') {\n        const runningAsRoot = process.geteuid && process.geteuid() === 0;\n        if (runningAsRoot && electronArguments.indexOf('--no-sandbox') === -1)\n          electronArguments.unshift('--no-sandbox');\n      }\n\n      const artifactsDir = await fs.promises.mkdtemp(ARTIFACTS_FOLDER);\n\n      const browserLogsCollector = new RecentLogsCollector();\n      const env = options.env ? envArrayToObject(options.env) : process.env;\n\n      let command: string;\n      if (options.executablePath) {\n        command = options.executablePath;\n      } else {\n        try {\n          // By default we fallback to the Electron App executable path.\n          // 'electron/index.js' resolves to the actual Electron App.\n          command = require('electron/index.js');\n        } catch (error: any) {\n          if ((error as NodeJS.ErrnoException)?.code === 'MODULE_NOT_FOUND') {\n            throw new Error('\\n' + wrapInASCIIBox([\n              'Electron executablePath not found!',\n              'Please install it using `npm install -D electron` or set the executablePath to your Electron executable.',\n            ].join('\\n'), 1));\n          }\n          throw error;\n        }\n        // Only use our own loader for non-packaged apps.\n        // Packaged apps might have their own command line handling.\n        electronArguments.unshift('-r', require.resolve('./loader'));\n      }\n      let shell = false;\n      if (process.platform === 'win32') {\n        // On Windows in order to run .cmd files, shell: true is required.\n        // https://github.com/nodejs/node/issues/52554\n        shell = true;\n        // On Windows, we need to quote the executable path due to shell: true.\n        command = `\"${command}\"`;\n        // On Windows, we need to quote the arguments due to shell: true.\n        electronArguments = electronArguments.map(arg => `\"${arg}\"`);\n      }\n\n      // When debugging Playwright test that runs Electron, NODE_OPTIONS\n      // will make the debugger attach to Electron's Node. But Playwright\n      // also needs to attach to drive the automation. Disable external debugging.\n      delete env.NODE_OPTIONS;\n      const { launchedProcess, gracefullyClose, kill } = await launchProcess({\n        command,\n        args: electronArguments,\n        env,\n        log: (message: string) => {\n          progress.log(message);\n          browserLogsCollector.log(message);\n        },\n        shell,\n        stdio: 'pipe',\n        cwd: options.cwd,\n        tempDirectories: [artifactsDir],\n        attemptToGracefullyClose: () => app!.close(),\n        handleSIGINT: true,\n        handleSIGTERM: true,\n        handleSIGHUP: true,\n        onExit: () => app?.emit(ElectronApplication.Events.Close),\n      });\n\n      // All waitForLines must be started immediately.\n      // Otherwise the lines might come before we are ready.\n      const waitForXserverError = new Promise(async (resolve, reject) => {\n        waitForLine(progress, launchedProcess, /Unable to open X display/).then(() => reject(new Error([\n          'Unable to open X display!',\n          `================================`,\n          'Most likely this is because there is no X server available.',\n          \"Use 'xvfb-run' on Linux to launch your tests with an emulated display server.\",\n          \"For example: 'xvfb-run npm run test:e2e'\",\n          `================================`,\n          progress.metadata.log\n        ].join('\\n')))).catch(() => {});\n      });\n      const nodeMatchPromise = waitForLine(progress, launchedProcess, /^Debugger listening on (ws:\\/\\/.*)$/);\n      const chromeMatchPromise = waitForLine(progress, launchedProcess, /^DevTools listening on (ws:\\/\\/.*)$/);\n      const debuggerDisconnectPromise = waitForLine(progress, launchedProcess, /Waiting for the debugger to disconnect\\.\\.\\./);\n\n      const nodeMatch = await nodeMatchPromise;\n      const nodeTransport = await WebSocketTransport.connect(progress, nodeMatch[1]);\n      const nodeConnection = new CRConnection(nodeTransport, helper.debugProtocolLogger(), browserLogsCollector);\n\n      // Immediately release exiting process under debug.\n      debuggerDisconnectPromise.then(() => {\n        nodeTransport.close();\n      }).catch(() => {});\n      const chromeMatch = await Promise.race([\n        chromeMatchPromise,\n        waitForXserverError,\n      ]) as RegExpMatchArray;\n      const chromeTransport = await WebSocketTransport.connect(progress, chromeMatch[1]);\n      const browserProcess: BrowserProcess = {\n        onclose: undefined,\n        process: launchedProcess,\n        close: gracefullyClose,\n        kill\n      };\n      const contextOptions: channels.BrowserNewContextParams = {\n        ...options,\n        noDefaultViewport: true,\n      };\n      const browserOptions: BrowserOptions = {\n        name: 'electron',\n        isChromium: true,\n        headful: true,\n        persistent: contextOptions,\n        browserProcess,\n        protocolLogger: helper.debugProtocolLogger(),\n        browserLogsCollector,\n        artifactsDir,\n        downloadsPath: artifactsDir,\n        tracesDir: options.tracesDir || artifactsDir,\n        originalLaunchOptions: {},\n      };\n      validateBrowserContextOptions(contextOptions, browserOptions);\n      const browser = await CRBrowser.connect(this.attribution.playwright, chromeTransport, browserOptions);\n      app = new ElectronApplication(this, browser, nodeConnection, launchedProcess);\n      await app.initialize();\n      return app;\n    }, TimeoutSettings.launchTimeout(options));\n  }\n}\n\nfunction waitForLine(progress: Progress, process: childProcess.ChildProcess, regex: RegExp): Promise<RegExpMatchArray> {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({ input: process.stderr! });\n    const failError = new Error('Process failed to launch!');\n    const listeners = [\n      eventsHelper.addEventListener(rl, 'line', onLine),\n      eventsHelper.addEventListener(rl, 'close', reject.bind(null, failError)),\n      eventsHelper.addEventListener(process, 'exit', reject.bind(null, failError)),\n      // It is Ok to remove error handler because we did not create process and there is another listener.\n      eventsHelper.addEventListener(process, 'error', reject.bind(null, failError))\n    ];\n\n    progress.cleanupWhenAborted(cleanup);\n\n    function onLine(line: string) {\n      const match = line.match(regex);\n      if (!match)\n        return;\n      cleanup();\n      resolve(match);\n    }\n\n    function cleanup() {\n      eventsHelper.removeEventListeners(listeners);\n    }\n  });\n}\n"],"mappings":"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"}