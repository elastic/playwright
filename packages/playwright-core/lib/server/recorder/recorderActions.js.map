{"version":3,"file":"recorderActions.js","names":[],"sources":["../../../src/server/recorder/recorderActions.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Point } from '../../common/types';\n\nexport type ActionName =\n  'check' |\n  'click' |\n  'closePage' |\n  'fill' |\n  'navigate' |\n  'openPage' |\n  'press' |\n  'select' |\n  'uncheck' |\n  'setInputFiles' |\n  'assertText' |\n  'assertValue' |\n  'assertChecked' |\n  'assertVisible';\n\nexport type ActionBase = {\n  name: ActionName,\n  signals: Signal[],\n};\n\nexport type ActionWithSelector = ActionBase & {\n  selector: string,\n};\n\nexport type ClickAction = ActionWithSelector & {\n  name: 'click',\n  button: 'left' | 'middle' | 'right',\n  modifiers: number,\n  clickCount: number,\n  position?: Point,\n};\n\nexport type CheckAction = ActionWithSelector & {\n  name: 'check',\n};\n\nexport type UncheckAction = ActionWithSelector & {\n  name: 'uncheck',\n};\n\nexport type FillAction = ActionWithSelector & {\n  name: 'fill',\n  text: string,\n};\n\nexport type NavigateAction = ActionBase & {\n  name: 'navigate',\n  url: string,\n};\n\nexport type OpenPageAction = ActionBase & {\n  name: 'openPage',\n  url: string,\n};\n\nexport type ClosesPageAction = ActionBase & {\n  name: 'closePage',\n};\n\nexport type PressAction = ActionBase & {\n  name: 'press',\n  selector: string,\n  key: string,\n  modifiers: number,\n};\n\nexport type SelectAction = ActionWithSelector & {\n  name: 'select',\n  options: string[],\n};\n\nexport type SetInputFilesAction = ActionWithSelector & {\n  name: 'setInputFiles',\n  files: string[],\n};\n\nexport type AssertTextAction = ActionWithSelector & {\n  name: 'assertText',\n  text: string,\n  substring: boolean,\n};\n\nexport type AssertValueAction = ActionWithSelector & {\n  name: 'assertValue',\n  value: string,\n};\n\nexport type AssertCheckedAction = ActionWithSelector & {\n  name: 'assertChecked',\n  checked: boolean,\n};\n\nexport type AssertVisibleAction = ActionWithSelector & {\n  name: 'assertVisible',\n};\n\nexport type Action = ClickAction | CheckAction | ClosesPageAction | OpenPageAction | UncheckAction | FillAction | NavigateAction | PressAction | SelectAction | SetInputFilesAction | AssertTextAction | AssertValueAction | AssertCheckedAction | AssertVisibleAction;\nexport type AssertAction = AssertCheckedAction | AssertValueAction | AssertTextAction | AssertVisibleAction;\nexport type PerformOnRecordAction = ClickAction | CheckAction | UncheckAction | PressAction | SelectAction;\n\n// Signals.\n\nexport type BaseSignal = {\n};\n\nexport type NavigationSignal = BaseSignal & {\n  name: 'navigation',\n  url: string,\n};\n\nexport type PopupSignal = BaseSignal & {\n  name: 'popup',\n  popupAlias: string,\n};\n\nexport type DownloadSignal = BaseSignal & {\n  name: 'download',\n  downloadAlias: string,\n};\n\nexport type DialogSignal = BaseSignal & {\n  name: 'dialog',\n  dialogAlias: string,\n};\n\nexport type Signal = NavigationSignal | PopupSignal | DownloadSignal | DialogSignal;\n"],"mappings":""}