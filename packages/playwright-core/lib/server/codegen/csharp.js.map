{"version":3,"file":"csharp.js","names":["_language","require","_utils","_deviceDescriptors","CSharpLanguageGenerator","constructor","mode","id","groupName","name","highlighter","_mode","Error","generateAction","actionInContext","action","_generateActionInner","pageAlias","frame","replace","formatter","CSharpFormatter","add","url","quote","format","locators","framePath","map","selector","_asLocator","subject","join","signals","toSignalMap","dialog","dialogAlias","lines","push","_generateActionCall","download","unshift","downloadAlias","popup","popupAlias","line","method","clickCount","options","toClickOptions","Object","entries","length","optionsString","formatObject","text","files","modifiers","toKeyboardModifiers","shortcut","key","substring","checked","assertion","value","asLocator","generateHeader","generateStandaloneHeader","generateTestRunnerHeader","toPascal","browserName","launchOptions","formatContextOptions","contextOptions","deviceName","newLine","formattedContextOptions","generateFooter","saveStorage","offset","storageStateLine","exports","indent","includes","getClassName","Array","isArray","o","keys","filter","undefined","sort","tokens","property","getPropertyName","String","toUpperCase","slice","convertContextOptions","result","recordHar","path","content","omitContent","urlFilter","device","deviceDescriptors","sanitizeDeviceOptions","_baseIndent","_baseOffset","_lines","repeat","prepend","trim","split","concat","spaces","previousLine","startsWith","extraSpaces","test","endsWith","escapeWithQuotes"],"sources":["../../../src/server/codegen/csharp.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BrowserContextOptions } from '../../../types/types';\nimport type { ActionInContext, Language, LanguageGenerator, LanguageGeneratorOptions } from './types';\nimport { sanitizeDeviceOptions, toClickOptions, toKeyboardModifiers, toSignalMap } from './language';\nimport { escapeWithQuotes, asLocator } from '../../utils';\nimport { deviceDescriptors } from '../deviceDescriptors';\n\ntype CSharpLanguageMode = 'library' | 'mstest' | 'nunit';\n\nexport class CSharpLanguageGenerator implements LanguageGenerator {\n  id: string;\n  groupName = '.NET C#';\n  name: string;\n  highlighter = 'csharp' as Language;\n  _mode: CSharpLanguageMode;\n\n  constructor(mode: CSharpLanguageMode) {\n    if (mode === 'library') {\n      this.name = 'Library';\n      this.id = 'csharp';\n    } else if (mode === 'mstest') {\n      this.name = 'MSTest';\n      this.id = 'csharp-mstest';\n    } else if (mode === 'nunit') {\n      this.name = 'NUnit';\n      this.id = 'csharp-nunit';\n    } else {\n      throw new Error(`Unknown C# language mode: ${mode}`);\n    }\n    this._mode = mode;\n  }\n\n  generateAction(actionInContext: ActionInContext): string {\n    const action = this._generateActionInner(actionInContext);\n    if (action)\n      return action;\n    return '';\n  }\n\n  _generateActionInner(actionInContext: ActionInContext): string {\n    const action = actionInContext.action;\n    if (this._mode !== 'library' && (action.name === 'openPage' || action.name === 'closePage'))\n      return '';\n    let pageAlias = actionInContext.frame.pageAlias;\n    if (this._mode !== 'library')\n      pageAlias = pageAlias.replace('page', 'Page');\n    const formatter = new CSharpFormatter(this._mode === 'library' ? 0 : 8);\n\n    if (action.name === 'openPage') {\n      formatter.add(`var ${pageAlias} = await context.NewPageAsync();`);\n      if (action.url && action.url !== 'about:blank' && action.url !== 'chrome://newtab/')\n        formatter.add(`await ${pageAlias}.GotoAsync(${quote(action.url)});`);\n      return formatter.format();\n    }\n\n    const locators = actionInContext.frame.framePath.map(selector => `.${this._asLocator(selector)}.ContentFrame()`);\n    const subject = `${pageAlias}${locators.join('')}`;\n    const signals = toSignalMap(action);\n\n    if (signals.dialog) {\n      formatter.add(`    void ${pageAlias}_Dialog${signals.dialog.dialogAlias}_EventHandler(object sender, IDialog dialog)\n      {\n          Console.WriteLine($\"Dialog message: {dialog.Message}\");\n          dialog.DismissAsync();\n          ${pageAlias}.Dialog -= ${pageAlias}_Dialog${signals.dialog.dialogAlias}_EventHandler;\n      }\n      ${pageAlias}.Dialog += ${pageAlias}_Dialog${signals.dialog.dialogAlias}_EventHandler;`);\n    }\n\n    const lines: string[] = [];\n    lines.push(this._generateActionCall(subject, actionInContext));\n\n    if (signals.download) {\n      lines.unshift(`var download${signals.download.downloadAlias} = await ${pageAlias}.RunAndWaitForDownloadAsync(async () =>\\n{`);\n      lines.push(`});`);\n    }\n\n    if (signals.popup) {\n      lines.unshift(`var ${signals.popup.popupAlias} = await ${pageAlias}.RunAndWaitForPopupAsync(async () =>\\n{`);\n      lines.push(`});`);\n    }\n\n    for (const line of lines)\n      formatter.add(line);\n\n    return formatter.format();\n  }\n\n  private _generateActionCall(subject: string, actionInContext: ActionInContext): string {\n    const action = actionInContext.action;\n    switch (action.name) {\n      case 'openPage':\n        throw Error('Not reached');\n      case 'closePage':\n        return `await ${subject}.CloseAsync();`;\n      case 'click': {\n        let method = 'Click';\n        if (action.clickCount === 2)\n          method = 'DblClick';\n        const options = toClickOptions(action);\n        if (!Object.entries(options).length)\n          return `await ${subject}.${this._asLocator(action.selector)}.${method}Async();`;\n        const optionsString = formatObject(options, '    ', 'Locator' + method + 'Options');\n        return `await ${subject}.${this._asLocator(action.selector)}.${method}Async(${optionsString});`;\n      }\n      case 'check':\n        return `await ${subject}.${this._asLocator(action.selector)}.CheckAsync();`;\n      case 'uncheck':\n        return `await ${subject}.${this._asLocator(action.selector)}.UncheckAsync();`;\n      case 'fill':\n        return `await ${subject}.${this._asLocator(action.selector)}.FillAsync(${quote(action.text)});`;\n      case 'setInputFiles':\n        return `await ${subject}.${this._asLocator(action.selector)}.SetInputFilesAsync(${formatObject(action.files)});`;\n      case 'press': {\n        const modifiers = toKeyboardModifiers(action.modifiers);\n        const shortcut = [...modifiers, action.key].join('+');\n        return `await ${subject}.${this._asLocator(action.selector)}.PressAsync(${quote(shortcut)});`;\n      }\n      case 'navigate':\n        return `await ${subject}.GotoAsync(${quote(action.url)});`;\n      case 'select':\n        return `await ${subject}.${this._asLocator(action.selector)}.SelectOptionAsync(${formatObject(action.options)});`;\n      case 'assertText':\n        return `await Expect(${subject}.${this._asLocator(action.selector)}).${action.substring ? 'ToContainTextAsync' : 'ToHaveTextAsync'}(${quote(action.text)});`;\n      case 'assertChecked':\n        return `await Expect(${subject}.${this._asLocator(action.selector)})${action.checked ? '' : '.Not'}.ToBeCheckedAsync();`;\n      case 'assertVisible':\n        return `await Expect(${subject}.${this._asLocator(action.selector)}).ToBeVisibleAsync();`;\n      case 'assertValue': {\n        const assertion = action.value ? `ToHaveValueAsync(${quote(action.value)})` : `ToBeEmptyAsync()`;\n        return `await Expect(${subject}.${this._asLocator(action.selector)}).${assertion};`;\n      }\n    }\n  }\n\n  private _asLocator(selector: string) {\n    return asLocator('csharp', selector);\n  }\n\n  generateHeader(options: LanguageGeneratorOptions): string {\n    if (this._mode === 'library')\n      return this.generateStandaloneHeader(options);\n    return this.generateTestRunnerHeader(options);\n  }\n\n  generateStandaloneHeader(options: LanguageGeneratorOptions): string {\n    const formatter = new CSharpFormatter(0);\n    formatter.add(`\n      using Microsoft.Playwright;\n      using System;\n      using System.Threading.Tasks;\n\n      using var playwright = await Playwright.CreateAsync();\n      await using var browser = await playwright.${toPascal(options.browserName)}.LaunchAsync(${formatObject(options.launchOptions, '    ', 'BrowserTypeLaunchOptions')});\n      var context = await browser.NewContextAsync(${formatContextOptions(options.contextOptions, options.deviceName)});`);\n    formatter.newLine();\n    return formatter.format();\n  }\n\n  generateTestRunnerHeader(options: LanguageGeneratorOptions): string {\n    const formatter = new CSharpFormatter(0);\n    formatter.add(`\n      using Microsoft.Playwright.${this._mode === 'nunit' ? 'NUnit' : 'MSTest'};\n      using Microsoft.Playwright;\n\n      ${this._mode === 'nunit' ? `[Parallelizable(ParallelScope.Self)]\n      [TestFixture]` : '[TestClass]'}\n      public class Tests : PageTest\n      {`);\n    const formattedContextOptions = formatContextOptions(options.contextOptions, options.deviceName);\n    if (formattedContextOptions) {\n      formatter.add(`public override BrowserNewContextOptions ContextOptions()\n      {\n          return ${formattedContextOptions};\n      }`);\n      formatter.newLine();\n    }\n    formatter.add(`    [${this._mode === 'nunit' ? 'Test' : 'TestMethod'}]\n    public async Task MyTest()\n    {`);\n    return formatter.format();\n  }\n\n  generateFooter(saveStorage: string | undefined): string {\n    const offset = this._mode === 'library' ? '' : '        ';\n    let storageStateLine = saveStorage ? `\\n${offset}await context.StorageStateAsync(new BrowserContextStorageStateOptions\\n${offset}{\\n${offset}    Path = ${quote(saveStorage)}\\n${offset}});\\n` : '';\n    if (this._mode !== 'library')\n      storageStateLine += `    }\\n}\\n`;\n    return storageStateLine;\n  }\n}\n\nfunction formatObject(value: any, indent = '    ', name = ''): string {\n  if (typeof value === 'string') {\n    if (['permissions', 'colorScheme', 'modifiers', 'button', 'recordHarContent', 'recordHarMode', 'serviceWorkers'].includes(name))\n      return `${getClassName(name)}.${toPascal(value)}`;\n    return quote(value);\n  }\n  if (Array.isArray(value))\n    return `new[] { ${value.map(o => formatObject(o, indent, name)).join(', ')} }`;\n  if (typeof value === 'object') {\n    const keys = Object.keys(value).filter(key => value[key] !== undefined).sort();\n    if (!keys.length)\n      return name ? `new ${getClassName(name)}` : '';\n    const tokens: string[] = [];\n    for (const key of keys) {\n      const property = getPropertyName(key);\n      tokens.push(`${property} = ${formatObject(value[key], indent, key)},`);\n    }\n    if (name)\n      return `new ${getClassName(name)}\\n{\\n${indent}${tokens.join(`\\n${indent}`)}\\n${indent}}`;\n    return `{\\n${indent}${tokens.join(`\\n${indent}`)}\\n${indent}}`;\n  }\n  if (name === 'latitude' || name === 'longitude')\n    return String(value) + 'm';\n\n  return String(value);\n}\n\nfunction getClassName(value: string): string {\n  switch (value) {\n    case 'viewport': return 'ViewportSize';\n    case 'proxy': return 'ProxySettings';\n    case 'permissions': return 'ContextPermission';\n    case 'modifiers': return 'KeyboardModifier';\n    case 'button': return 'MouseButton';\n    case 'recordHarMode': return 'HarMode';\n    case 'recordHarContent': return 'HarContentPolicy';\n    case 'serviceWorkers': return 'ServiceWorkerPolicy';\n    default: return toPascal(value);\n  }\n}\n\nfunction getPropertyName(key: string): string {\n  switch (key) {\n    case 'storageState': return 'StorageStatePath';\n    case 'viewport': return 'ViewportSize';\n    default: return toPascal(key);\n  }\n}\n\nfunction toPascal(value: string): string {\n  return value[0].toUpperCase() + value.slice(1);\n}\n\nfunction convertContextOptions(options: BrowserContextOptions): any {\n  const result: any = { ...options };\n  if (options.recordHar) {\n    result['recordHarPath'] = options.recordHar.path;\n    result['recordHarContent'] = options.recordHar.content;\n    result['recordHarMode'] = options.recordHar.mode;\n    result['recordHarOmitContent'] = options.recordHar.omitContent;\n    result['recordHarUrlFilter'] = options.recordHar.urlFilter;\n    delete result.recordHar;\n  }\n  return result;\n}\n\nfunction formatContextOptions(options: BrowserContextOptions, deviceName: string | undefined): string {\n  const device = deviceName && deviceDescriptors[deviceName];\n  if (!device) {\n    if (!Object.entries(options).length)\n      return '';\n    return formatObject(convertContextOptions(options), '    ', 'BrowserNewContextOptions');\n  }\n\n  options = sanitizeDeviceOptions(device, options);\n  if (!Object.entries(options).length)\n    return `playwright.Devices[${quote(deviceName!)}]`;\n\n  return formatObject(convertContextOptions(options), '    ', `BrowserNewContextOptions(playwright.Devices[${quote(deviceName!)}])`);\n}\n\nclass CSharpFormatter {\n  private _baseIndent: string;\n  private _baseOffset: string;\n  private _lines: string[] = [];\n\n  constructor(offset = 0) {\n    this._baseIndent = ' '.repeat(4);\n    this._baseOffset = ' '.repeat(offset);\n  }\n\n  prepend(text: string) {\n    this._lines = text.trim().split('\\n').map(line => line.trim()).concat(this._lines);\n  }\n\n  add(text: string) {\n    this._lines.push(...text.trim().split('\\n').map(line => line.trim()));\n  }\n\n  newLine() {\n    this._lines.push('');\n  }\n\n  format(): string {\n    let spaces = '';\n    let previousLine = '';\n    return this._lines.map((line: string) => {\n      if (line === '')\n        return line;\n      if (line.startsWith('}') || line.startsWith(']') || line.includes('});') || line === ');')\n        spaces = spaces.substring(this._baseIndent.length);\n\n      const extraSpaces = /^(for|while|if).*\\(.*\\)$/.test(previousLine) ? this._baseIndent : '';\n      previousLine = line;\n\n      line = spaces + extraSpaces + line;\n      if (line.endsWith('{') || line.endsWith('[') || line.endsWith('('))\n        spaces += this._baseIndent;\n      if (line.endsWith('));'))\n        spaces = spaces.substring(this._baseIndent.length);\n\n      return this._baseOffset + line;\n    }).join('\\n');\n  }\n}\n\nfunction quote(text: string) {\n  return escapeWithQuotes(text, '\\\"');\n}\n"],"mappings":"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"}