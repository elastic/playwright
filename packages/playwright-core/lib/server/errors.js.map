{"version":3,"file":"errors.js","names":["_utils","require","_serializers","CustomError","Error","constructor","message","name","TimeoutError","exports","TargetClosedError","cause","logs","isTargetClosedError","error","serializeError","e","isError","stack","value","serializeValue","fallThrough","parseError","undefined","parseSerializedValue"],"sources":["../../src/server/errors.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { SerializedError } from '@protocol/channels';\nimport { isError } from '../utils';\nimport { parseSerializedValue, serializeValue } from '../protocol/serializers';\n\nclass CustomError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = this.constructor.name;\n  }\n}\n\nexport class TimeoutError extends CustomError {}\n\nexport class TargetClosedError extends CustomError {\n  constructor(cause?: string, logs?: string) {\n    super((cause || 'Target page, context or browser has been closed') + (logs || ''));\n  }\n}\n\nexport function isTargetClosedError(error: Error) {\n  return error instanceof TargetClosedError || error.name === 'TargetClosedError';\n}\n\nexport function serializeError(e: any): SerializedError {\n  if (isError(e))\n    return { error: { message: e.message, stack: e.stack, name: e.name } };\n  return { value: serializeValue(e, value => ({ fallThrough: value })) };\n}\n\nexport function parseError(error: SerializedError): Error {\n  if (!error.error) {\n    if (error.value === undefined)\n      throw new Error('Serialized error must have either an error or a value');\n    return parseSerializedValue(error.value, undefined);\n  }\n  const e = new Error(error.error.message);\n  e.stack = error.error.stack || '';\n  e.name = error.error.name;\n  return e;\n}\n"],"mappings":";;;;;;;;;AAiBA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,MAAME,WAAW,SAASC,KAAK,CAAC;EAC9BC,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACE,IAAI;EACnC;AACF;AAEO,MAAMC,YAAY,SAASL,WAAW,CAAC;AAAEM,OAAA,CAAAD,YAAA,GAAAA,YAAA;AAEzC,MAAME,iBAAiB,SAASP,WAAW,CAAC;EACjDE,WAAWA,CAACM,KAAc,EAAEC,IAAa,EAAE;IACzC,KAAK,CAAC,CAACD,KAAK,IAAI,iDAAiD,KAAKC,IAAI,IAAI,EAAE,CAAC,CAAC;EACpF;AACF;AAACH,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAEM,SAASG,mBAAmBA,CAACC,KAAY,EAAE;EAChD,OAAOA,KAAK,YAAYJ,iBAAiB,IAAII,KAAK,CAACP,IAAI,KAAK,mBAAmB;AACjF;AAEO,SAASQ,cAAcA,CAACC,CAAM,EAAmB;EACtD,IAAI,IAAAC,cAAO,EAACD,CAAC,CAAC,EACZ,OAAO;IAAEF,KAAK,EAAE;MAAER,OAAO,EAAEU,CAAC,CAACV,OAAO;MAAEY,KAAK,EAAEF,CAAC,CAACE,KAAK;MAAEX,IAAI,EAAES,CAAC,CAACT;IAAK;EAAE,CAAC;EACxE,OAAO;IAAEY,KAAK,EAAE,IAAAC,2BAAc,EAACJ,CAAC,EAAEG,KAAK,KAAK;MAAEE,WAAW,EAAEF;IAAM,CAAC,CAAC;EAAE,CAAC;AACxE;AAEO,SAASG,UAAUA,CAACR,KAAsB,EAAS;EACxD,IAAI,CAACA,KAAK,CAACA,KAAK,EAAE;IAChB,IAAIA,KAAK,CAACK,KAAK,KAAKI,SAAS,EAC3B,MAAM,IAAInB,KAAK,CAAC,uDAAuD,CAAC;IAC1E,OAAO,IAAAoB,iCAAoB,EAACV,KAAK,CAACK,KAAK,EAAEI,SAAS,CAAC;EACrD;EACA,MAAMP,CAAC,GAAG,IAAIZ,KAAK,CAACU,KAAK,CAACA,KAAK,CAACR,OAAO,CAAC;EACxCU,CAAC,CAACE,KAAK,GAAGJ,KAAK,CAACA,KAAK,CAACI,KAAK,IAAI,EAAE;EACjCF,CAAC,CAACT,IAAI,GAAGO,KAAK,CAACA,KAAK,CAACP,IAAI;EACzB,OAAOS,CAAC;AACV"}