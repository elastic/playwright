{"version":3,"file":"network.js","names":["_utils","require","_manualPromise","_instrumentation","_fetch","_browserContext","filterCookies","cookies","urls","parsedURLs","map","s","URL","filter","c","length","parsedURL","domain","startsWith","hostname","endsWith","pathname","path","protocol","secure","kMaxCookieExpiresDateInSeconds","exports","rewriteCookies","assert","url","expires","copy","name","substring","lastIndexOf","e","stripFragmentFromUrl","includes","indexOf","Request","SdkObject","constructor","context","frame","serviceWorker","redirectedFrom","documentId","resourceType","method","postData","headers","_response","_redirectedFrom","_redirectedTo","_documentId","_isFavicon","_failureText","_url","_resourceType","_method","_postData","_headers","_headersMap","Map","_frame","_serviceWorker","_context","_rawRequestHeadersPromise","ManualPromise","_waitForResponsePromise","_responseEndTiming","_overrides","_bodySize","_updateHeadersMap","_setFailureText","failureText","resolve","_setOverrides","overrides","value","set","toLowerCase","_hasOverrides","_this$_overrides","_this$_overrides2","postDataBuffer","_this$_overrides3","_this$_overrides4","headerValue","get","setRawRequestHeaders","isDone","rawRequestHeaders","_this$_overrides5","response","_existingResponse","_setResponse","_finalRequest","isNavigationRequest","failure","errorText","_setBodySize","size","bodySize","_this$postDataBuffer","requestHeadersSize","headersSize","header","Route","request","delegate","_request","_delegate","_handled","addRouteInFlight","abort","errorCode","_startHandling","emit","BrowserContext","Events","RequestAborted","_endHandling","redirectNavigationRequest","redirectNavigation","fulfill","body","isBase64","undefined","fetchResponseUid","buffer","fetchRequest","fetchResponses","APIRequestContext","findResponseBody","toString","_maybeAddCorsHeaders","RequestFulfilled","status","origin","requestUrl","trim","corsHeader","find","push","continue","newUrl","oldUrl","Error","isFallback","RequestContinued","removeRouteInFlight","Response","statusText","timing","getResponseBodyCallback","fromServiceWorker","httpVersion","_contentPromise","_finishedPromise","_status","_statusText","_getResponseBodyCallback","_timing","_serverAddrPromise","_securityDetailsPromise","_rawResponseHeadersPromise","_httpVersion","_fromServiceWorker","_encodedBodySizePromise","_transferSizePromise","_responseHeadersSizePromise","_serverAddrFinished","addr","_securityDetailsFinished","securityDetails","_requestFinished","responseEndTiming","Math","max","responseStart","requestStart","_setHttpVersion","rawResponseHeaders","setRawResponseHeaders","setTransferSize","setEncodedBodySize","setResponseHeadersSize","serverAddr","then","responseHeadersSize","availableSize","sizes","encodedBodySize","_headers$find","contentLength","h","transferSize","requestBodySize","responseBodySize","WebSocket","parent","_notified","markAsNotified","frameSent","opcode","data","FrameSent","frameReceived","FrameReceived","error","errorMessage","SocketError","closed","Close","STATUS_TEXTS","String","singleHeader","mergeHeaders","lowerCaseToValue","lowerCaseToOriginalCase","lower","result"],"sources":["../../src/server/network.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as contexts from './browserContext';\nimport type * as pages from './page';\nimport type * as frames from './frames';\nimport type * as types from './types';\nimport type * as channels from '@protocol/channels';\nimport { assert } from '../utils';\nimport { ManualPromise } from '../utils/manualPromise';\nimport { SdkObject } from './instrumentation';\nimport type { HeadersArray, NameValue } from '../common/types';\nimport { APIRequestContext } from './fetch';\nimport type { NormalizedContinueOverrides } from './types';\nimport { BrowserContext } from './browserContext';\n\nexport function filterCookies(cookies: channels.NetworkCookie[], urls: string[]): channels.NetworkCookie[] {\n  const parsedURLs = urls.map(s => new URL(s));\n  // Chromiums's cookies are missing sameSite when it is 'None'\n  return cookies.filter(c => {\n    if (!parsedURLs.length)\n      return true;\n    for (const parsedURL of parsedURLs) {\n      let domain = c.domain;\n      if (!domain.startsWith('.'))\n        domain = '.' + domain;\n      if (!('.' + parsedURL.hostname).endsWith(domain))\n        continue;\n      if (!parsedURL.pathname.startsWith(c.path))\n        continue;\n      if (parsedURL.protocol !== 'https:' && parsedURL.hostname !== 'localhost' && c.secure)\n        continue;\n      return true;\n    }\n    return false;\n  });\n}\n\n// Rollover to 5-digit year:\n// 253402300799 == Fri, 31 Dec 9999 23:59:59 +0000 (UTC)\n// 253402300800 == Sat,  1 Jan 1000 00:00:00 +0000 (UTC)\nexport const kMaxCookieExpiresDateInSeconds = 253402300799;\n\nexport function rewriteCookies(cookies: channels.SetNetworkCookie[]): channels.SetNetworkCookie[] {\n  return cookies.map(c => {\n    assert(c.url || (c.domain && c.path), 'Cookie should have a url or a domain/path pair');\n    assert(!(c.url && c.domain), 'Cookie should have either url or domain');\n    assert(!(c.url && c.path), 'Cookie should have either url or path');\n    assert(!(c.expires && c.expires < 0 && c.expires !== -1), 'Cookie should have a valid expires, only -1 or a positive number for the unix timestamp in seconds is allowed');\n    assert(!(c.expires && c.expires > 0 && c.expires > kMaxCookieExpiresDateInSeconds), 'Cookie should have a valid expires, only -1 or a positive number for the unix timestamp in seconds is allowed');\n    const copy = { ...c };\n    if (copy.url) {\n      assert(copy.url !== 'about:blank', `Blank page can not have cookie \"${c.name}\"`);\n      assert(!copy.url.startsWith('data:'), `Data URL page can not have cookie \"${c.name}\"`);\n      const url = new URL(copy.url);\n      copy.domain = url.hostname;\n      copy.path = url.pathname.substring(0, url.pathname.lastIndexOf('/') + 1);\n      copy.secure = url.protocol === 'https:';\n    }\n    return copy;\n  });\n}\n\nexport function parsedURL(url: string): URL | null {\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function stripFragmentFromUrl(url: string): string {\n  if (!url.includes('#'))\n    return url;\n  return url.substring(0, url.indexOf('#'));\n}\n\nexport class Request extends SdkObject {\n  private _response: Response | null = null;\n  private _redirectedFrom: Request | null;\n  _redirectedTo: Request | null = null;\n  readonly _documentId?: string;\n  readonly _isFavicon: boolean;\n  _failureText: string | null = null;\n  private _url: string;\n  private _resourceType: string;\n  private _method: string;\n  private _postData: Buffer | null;\n  readonly _headers: HeadersArray;\n  private _headersMap = new Map<string, string>();\n  readonly _frame: frames.Frame | null = null;\n  readonly _serviceWorker: pages.Worker | null = null;\n  readonly _context: contexts.BrowserContext;\n  private _rawRequestHeadersPromise = new ManualPromise<HeadersArray>();\n  private _waitForResponsePromise = new ManualPromise<Response | null>();\n  _responseEndTiming = -1;\n  private _overrides: NormalizedContinueOverrides | undefined;\n  private _bodySize: number | undefined;\n\n  constructor(context: contexts.BrowserContext, frame: frames.Frame | null, serviceWorker: pages.Worker | null, redirectedFrom: Request | null, documentId: string | undefined,\n    url: string, resourceType: string, method: string, postData: Buffer | null, headers: HeadersArray) {\n    super(frame || context, 'request');\n    assert(!url.startsWith('data:'), 'Data urls should not fire requests');\n    this._context = context;\n    this._frame = frame;\n    this._serviceWorker = serviceWorker;\n    this._redirectedFrom = redirectedFrom;\n    if (redirectedFrom)\n      redirectedFrom._redirectedTo = this;\n    this._documentId = documentId;\n    this._url = stripFragmentFromUrl(url);\n    this._resourceType = resourceType;\n    this._method = method;\n    this._postData = postData;\n    this._headers = headers;\n    this._updateHeadersMap();\n    this._isFavicon = url.endsWith('/favicon.ico') || !!redirectedFrom?._isFavicon;\n  }\n\n  _setFailureText(failureText: string) {\n    this._failureText = failureText;\n    this._waitForResponsePromise.resolve(null);\n  }\n\n  _setOverrides(overrides: types.NormalizedContinueOverrides) {\n    this._overrides = overrides;\n    this._updateHeadersMap();\n  }\n\n  private _updateHeadersMap() {\n    for (const { name, value } of this.headers())\n      this._headersMap.set(name.toLowerCase(), value);\n  }\n\n  _hasOverrides() {\n    return !!this._overrides;\n  }\n\n  url(): string {\n    return this._overrides?.url || this._url;\n  }\n\n  resourceType(): string {\n    return this._resourceType;\n  }\n\n  method(): string {\n    return this._overrides?.method || this._method;\n  }\n\n  postDataBuffer(): Buffer | null {\n    return this._overrides?.postData || this._postData;\n  }\n\n  headers(): HeadersArray {\n    return this._overrides?.headers || this._headers;\n  }\n\n  headerValue(name: string): string | undefined {\n    return this._headersMap.get(name);\n  }\n\n  // \"null\" means no raw headers available - we'll use provisional headers as raw headers.\n  setRawRequestHeaders(headers: HeadersArray | null) {\n    if (!this._rawRequestHeadersPromise.isDone())\n      this._rawRequestHeadersPromise.resolve(headers || this._headers);\n  }\n\n  async rawRequestHeaders(): Promise<HeadersArray> {\n    return this._overrides?.headers || this._rawRequestHeadersPromise;\n  }\n\n  response(): PromiseLike<Response | null> {\n    return this._waitForResponsePromise;\n  }\n\n  _existingResponse(): Response | null {\n    return this._response;\n  }\n\n  _setResponse(response: Response) {\n    this._response = response;\n    this._waitForResponsePromise.resolve(response);\n  }\n\n  _finalRequest(): Request {\n    return this._redirectedTo ? this._redirectedTo._finalRequest() : this;\n  }\n\n  frame(): frames.Frame | null {\n    return this._frame;\n  }\n\n  serviceWorker(): pages.Worker | null {\n    return this._serviceWorker;\n  }\n\n  isNavigationRequest(): boolean {\n    return !!this._documentId;\n  }\n\n  redirectedFrom(): Request | null {\n    return this._redirectedFrom;\n  }\n\n  failure(): { errorText: string } | null {\n    if (this._failureText === null)\n      return null;\n    return {\n      errorText: this._failureText\n    };\n  }\n\n  // TODO(bidi): remove once post body is available.\n  _setBodySize(size: number) {\n    this._bodySize = size;\n  }\n\n  bodySize(): number {\n    return this._bodySize || this.postDataBuffer()?.length || 0;\n  }\n\n  async requestHeadersSize(): Promise<number> {\n    let headersSize = 4; // 4 = 2 spaces + 2 line breaks (GET /path \\r\\n)\n    headersSize += this.method().length;\n    headersSize += (new URL(this.url())).pathname.length;\n    headersSize += 8; // httpVersion\n    const headers = await this.rawRequestHeaders();\n    for (const header of headers)\n      headersSize += header.name.length + header.value.length + 4; // 4 = ': ' + '\\r\\n'\n    return headersSize;\n  }\n}\n\nexport class Route extends SdkObject {\n  private readonly _request: Request;\n  private readonly _delegate: RouteDelegate;\n  private _handled = false;\n\n  constructor(request: Request, delegate: RouteDelegate) {\n    super(request._frame || request._context, 'route');\n    this._request = request;\n    this._delegate = delegate;\n    this._request._context.addRouteInFlight(this);\n  }\n\n  request(): Request {\n    return this._request;\n  }\n\n  async abort(errorCode: string = 'failed') {\n    this._startHandling();\n    this._request._context.emit(BrowserContext.Events.RequestAborted, this._request);\n    await this._delegate.abort(errorCode);\n    this._endHandling();\n  }\n\n  async redirectNavigationRequest(url: string) {\n    this._startHandling();\n    assert(this._request.isNavigationRequest());\n    this._request.frame()!.redirectNavigation(url, this._request._documentId!, this._request.headerValue('referer'));\n  }\n\n  async fulfill(overrides: channels.RouteFulfillParams) {\n    this._startHandling();\n    let body = overrides.body;\n    let isBase64 = overrides.isBase64 || false;\n    if (body === undefined) {\n      if (overrides.fetchResponseUid) {\n        const buffer = this._request._context.fetchRequest.fetchResponses.get(overrides.fetchResponseUid) || APIRequestContext.findResponseBody(overrides.fetchResponseUid);\n        assert(buffer, 'Fetch response has been disposed');\n        body = buffer.toString('base64');\n        isBase64 = true;\n      } else {\n        body = '';\n        isBase64 = false;\n      }\n    }\n    const headers = [...(overrides.headers || [])];\n    this._maybeAddCorsHeaders(headers);\n    this._request._context.emit(BrowserContext.Events.RequestFulfilled, this._request);\n    await this._delegate.fulfill({\n      status: overrides.status || 200,\n      headers,\n      body: body!,\n      isBase64,\n    });\n    this._endHandling();\n  }\n\n  // See https://github.com/microsoft/playwright/issues/12929\n  private _maybeAddCorsHeaders(headers: NameValue[]) {\n    const origin = this._request.headerValue('origin');\n    if (!origin)\n      return;\n    const requestUrl = new URL(this._request.url());\n    if (!requestUrl.protocol.startsWith('http'))\n      return;\n    if (requestUrl.origin === origin.trim())\n      return;\n    const corsHeader = headers.find(({ name }) => name === 'access-control-allow-origin');\n    if (corsHeader)\n      return;\n    headers.push({ name: 'access-control-allow-origin', value: origin });\n    headers.push({ name: 'access-control-allow-credentials', value: 'true' });\n    headers.push({ name: 'vary', value: 'Origin' });\n  }\n\n  async continue(overrides: types.NormalizedContinueOverrides) {\n    this._startHandling();\n    if (overrides.url) {\n      const newUrl = new URL(overrides.url);\n      const oldUrl = new URL(this._request.url());\n      if (oldUrl.protocol !== newUrl.protocol)\n        throw new Error('New URL must have same protocol as overridden URL');\n    }\n    this._request._setOverrides(overrides);\n    if (!overrides.isFallback)\n      this._request._context.emit(BrowserContext.Events.RequestContinued, this._request);\n    await this._delegate.continue(overrides);\n    this._endHandling();\n  }\n\n  private _startHandling() {\n    assert(!this._handled, 'Route is already handled!');\n    this._handled = true;\n  }\n\n  private _endHandling() {\n    this._request._context.removeRouteInFlight(this);\n  }\n}\n\nexport type RouteHandler = (route: Route, request: Request) => boolean;\n\ntype GetResponseBodyCallback = () => Promise<Buffer>;\n\nexport type ResourceTiming = {\n  startTime: number;\n  domainLookupStart: number;\n  domainLookupEnd: number;\n  connectStart: number;\n  secureConnectionStart: number;\n  connectEnd: number;\n  requestStart: number;\n  responseStart: number;\n};\n\nexport type ResourceSizes = {\n  requestBodySize: number,\n  requestHeadersSize: number,\n  responseBodySize: number,\n  responseHeadersSize: number,\n  transferSize: number,\n};\n\nexport type RemoteAddr = {\n  ipAddress: string;\n  port: number;\n};\n\nexport type SecurityDetails = {\n  protocol?: string;\n  subjectName?: string;\n  issuer?: string;\n  validFrom?: number;\n  validTo?: number;\n};\n\nexport class Response extends SdkObject {\n  private _request: Request;\n  private _contentPromise: Promise<Buffer> | null = null;\n  _finishedPromise = new ManualPromise<void>();\n  private _status: number;\n  private _statusText: string;\n  private _url: string;\n  private _headers: HeadersArray;\n  private _headersMap = new Map<string, string>();\n  private _getResponseBodyCallback: GetResponseBodyCallback;\n  private _timing: ResourceTiming;\n  private _serverAddrPromise = new ManualPromise<RemoteAddr | undefined>();\n  private _securityDetailsPromise = new ManualPromise<SecurityDetails | undefined>();\n  private _rawResponseHeadersPromise = new ManualPromise<HeadersArray>();\n  private _httpVersion: string | undefined;\n  private _fromServiceWorker: boolean;\n  private _encodedBodySizePromise = new ManualPromise<number | null>();\n  private _transferSizePromise = new ManualPromise<number | null>();\n  private _responseHeadersSizePromise = new ManualPromise<number | null>();\n\n  constructor(request: Request, status: number, statusText: string, headers: HeadersArray, timing: ResourceTiming, getResponseBodyCallback: GetResponseBodyCallback, fromServiceWorker: boolean, httpVersion?: string) {\n    super(request.frame() || request._context, 'response');\n    this._request = request;\n    this._timing = timing;\n    this._status = status;\n    this._statusText = statusText;\n    this._url = request.url();\n    this._headers = headers;\n    for (const { name, value } of this._headers)\n      this._headersMap.set(name.toLowerCase(), value);\n    this._getResponseBodyCallback = getResponseBodyCallback;\n    this._request._setResponse(this);\n    this._httpVersion = httpVersion;\n    this._fromServiceWorker = fromServiceWorker;\n  }\n\n  _serverAddrFinished(addr?: RemoteAddr) {\n    this._serverAddrPromise.resolve(addr);\n  }\n\n  _securityDetailsFinished(securityDetails?: SecurityDetails) {\n    this._securityDetailsPromise.resolve(securityDetails);\n  }\n\n  _requestFinished(responseEndTiming: number) {\n    this._request._responseEndTiming = Math.max(responseEndTiming, this._timing.responseStart);\n    // Set start time equal to end when request is served from memory cache.\n    if (this._timing.requestStart === -1)\n      this._timing.requestStart = this._request._responseEndTiming;\n    this._finishedPromise.resolve();\n  }\n\n  _setHttpVersion(httpVersion: string) {\n    this._httpVersion = httpVersion;\n  }\n\n  url(): string {\n    return this._url;\n  }\n\n  status(): number {\n    return this._status;\n  }\n\n  statusText(): string {\n    return this._statusText;\n  }\n\n  headers(): HeadersArray {\n    return this._headers;\n  }\n\n  headerValue(name: string): string | undefined {\n    return this._headersMap.get(name);\n  }\n\n  async rawResponseHeaders(): Promise<NameValue[]> {\n    return this._rawResponseHeadersPromise;\n  }\n\n  // \"null\" means no raw headers available - we'll use provisional headers as raw headers.\n  setRawResponseHeaders(headers: HeadersArray | null) {\n    if (!this._rawResponseHeadersPromise.isDone())\n      this._rawResponseHeadersPromise.resolve(headers || this._headers);\n  }\n\n  setTransferSize(size: number | null) {\n    this._transferSizePromise.resolve(size);\n  }\n\n  setEncodedBodySize(size: number | null) {\n    this._encodedBodySizePromise.resolve(size);\n  }\n\n  setResponseHeadersSize(size: number | null) {\n    this._responseHeadersSizePromise.resolve(size);\n  }\n\n  timing(): ResourceTiming {\n    return this._timing;\n  }\n\n  async serverAddr(): Promise<RemoteAddr|null> {\n    return await this._serverAddrPromise || null;\n  }\n\n  async securityDetails(): Promise<SecurityDetails|null> {\n    return await this._securityDetailsPromise || null;\n  }\n\n  body(): Promise<Buffer> {\n    if (!this._contentPromise) {\n      this._contentPromise = this._finishedPromise.then(async () => {\n        if (this._status >= 300 && this._status <= 399)\n          throw new Error('Response body is unavailable for redirect responses');\n        return this._getResponseBodyCallback();\n      });\n    }\n    return this._contentPromise;\n  }\n\n  request(): Request {\n    return this._request;\n  }\n\n  frame(): frames.Frame | null {\n    return this._request.frame();\n  }\n\n  httpVersion(): string {\n    if (!this._httpVersion)\n      return 'HTTP/1.1';\n    if (this._httpVersion === 'http/1.1')\n      return 'HTTP/1.1';\n    if (this._httpVersion === 'h2')\n      return 'HTTP/2.0';\n    return this._httpVersion;\n  }\n\n  fromServiceWorker(): boolean {\n    return this._fromServiceWorker;\n  }\n\n  async responseHeadersSize(): Promise<number> {\n    const availableSize = await this._responseHeadersSizePromise;\n    if (availableSize !== null)\n      return availableSize;\n\n    // Fallback to calculating it manually.\n    let headersSize = 4; // 4 = 2 spaces + 2 line breaks (HTTP/1.1 200 Ok\\r\\n)\n    headersSize += 8; // httpVersion;\n    headersSize += 3; // statusCode;\n    headersSize += this.statusText().length;\n    const headers = await this._rawResponseHeadersPromise;\n    for (const header of headers)\n      headersSize += header.name.length + header.value.length + 4; // 4 = ': ' + '\\r\\n'\n    headersSize += 2; // '\\r\\n'\n    return headersSize;\n  }\n\n  async sizes(): Promise<ResourceSizes> {\n    const requestHeadersSize = await this._request.requestHeadersSize();\n    const responseHeadersSize = await this.responseHeadersSize();\n\n    let encodedBodySize = await this._encodedBodySizePromise;\n    if (encodedBodySize === null) {\n      // Fallback to calculating it manually.\n      const headers = await this._rawResponseHeadersPromise;\n      const contentLength = headers.find(h => h.name.toLowerCase() === 'content-length')?.value;\n      encodedBodySize = contentLength ? +contentLength : 0;\n    }\n\n    let transferSize = await this._transferSizePromise;\n    if (transferSize === null) {\n      // Fallback to calculating it manually.\n      transferSize = responseHeadersSize + encodedBodySize;\n    }\n\n    return {\n      requestBodySize: this._request.bodySize(),\n      requestHeadersSize,\n      responseBodySize: encodedBodySize,\n      responseHeadersSize,\n      transferSize,\n    };\n  }\n}\n\nexport class WebSocket extends SdkObject {\n  private _url: string;\n  private _notified = false;\n\n  static Events = {\n    Close: 'close',\n    SocketError: 'socketerror',\n    FrameReceived: 'framereceived',\n    FrameSent: 'framesent',\n  };\n\n  constructor(parent: SdkObject, url: string) {\n    super(parent, 'ws');\n    this._url = url;\n  }\n\n  markAsNotified() {\n    // Sometimes we get \"onWebSocketRequest\" twice, at least in Chromium.\n    // Perhaps websocket is restarted because of chrome.webRequest extensions api?\n    // Or maybe the handshake response was a redirect?\n    if (this._notified)\n      return false;\n    this._notified = true;\n    return true;\n  }\n\n  url(): string {\n    return this._url;\n  }\n\n  frameSent(opcode: number, data: string) {\n    this.emit(WebSocket.Events.FrameSent, { opcode, data });\n  }\n\n  frameReceived(opcode: number, data: string) {\n    this.emit(WebSocket.Events.FrameReceived, { opcode, data });\n  }\n\n  error(errorMessage: string) {\n    this.emit(WebSocket.Events.SocketError, errorMessage);\n  }\n\n  closed() {\n    this.emit(WebSocket.Events.Close);\n  }\n}\n\nexport interface RouteDelegate {\n  abort(errorCode: string): Promise<void>;\n  fulfill(response: types.NormalizedFulfillResponse): Promise<void>;\n  continue(overrides: types.NormalizedContinueOverrides): Promise<void>;\n}\n\n// List taken from https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml with extra 306 and 418 codes.\nconst STATUS_TEXTS: { [status: string]: string } = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '103': 'Early Hints',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '205': 'Reset Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '226': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': 'I\\'m a teapot',\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '425': 'Too Early',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required',\n};\n\nexport function statusText(status: number): string {\n  return STATUS_TEXTS[String(status)] || 'Unknown';\n}\n\nexport function singleHeader(name: string, value: string): HeadersArray {\n  return [{ name, value }];\n}\n\nexport function mergeHeaders(headers: (HeadersArray | undefined | null)[]): HeadersArray {\n  const lowerCaseToValue = new Map<string, string>();\n  const lowerCaseToOriginalCase = new Map<string, string>();\n  for (const h of headers) {\n    if (!h)\n      continue;\n    for (const { name, value } of h) {\n      const lower = name.toLowerCase();\n      lowerCaseToOriginalCase.set(lower, name);\n      lowerCaseToValue.set(lower, value);\n    }\n  }\n  const result: HeadersArray = [];\n  for (const [lower, value] of lowerCaseToValue)\n    result.push({ name: lowerCaseToOriginalCase.get(lower)!, value });\n  return result;\n}\n"],"mappings":"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"}