{"version":3,"file":"dependencies.js","names":["_fs","_interopRequireDefault","require","_path","os","_interopRequireWildcard","_child_process","utils","_spawnAsync","_hostPlatform","_","_nativeDeps","_userAgent","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","BIN_DIRECTORY","path","join","__dirname","languageBindingVersion","process","env","PW_CLI_DISPLAY_VERSION","version","dockerVersionFilePath","writeDockerVersion","dockerImageNameTemplate","fs","promises","mkdir","dirname","recursive","writeFile","JSON","stringify","dockerVersion","chmod","driverVersion","dockerImageName","replace","readDockerVersionSync","data","parse","readFileSync","checkExecutable","filePath","platform","endsWith","access","constants","X_OK","then","catch","isSupportedWindowsVersion","arch","major","minor","release","split","map","token","parseInt","installDependenciesWindows","targets","dryRun","command","args","console","log","quoteProcessArgs","code","spawnAsync","cwd","stdio","Error","installDependenciesLinux","libraries","hostPlatform","isOfficiallySupportedPlatform","warn","target","info","deps","push","uniqueLibraries","Array","from","Set","commands","elevatedPermissions","transformCommandsForRoot","child","childProcess","spawn","Promise","resolve","reject","on","validateDependenciesWindows","windowsExeAndDllDirectories","directoryPaths","lddPaths","directoryPath","executablesOrSharedLibraries","allMissingDeps","all","lddPath","missingFileDependenciesWindows","missingDeps","dep","add","size","isCrtMissing","isMediaFoundationMissing","startsWith","details","message","validateDependenciesLinux","sdkLanguage","linuxLddDirectories","dlOpenLibraries","_deps$hostPlatform","_process$getuid","_process","missingDepsPerFile","missingFileDependencies","missingDLOPENLibraries","missingPackages","libraryToPackageNameMapping","lib2package","MANUAL_LIBRARY_TO_PACKAGE_NAME_UBUNTU","missingDep","packageName","delete","maybeSudo","getuid","dockerInfo","errorLines","getPlaywrightVersion","pwVersion","requiredDockerImage","buildPlaywrightCLICommand","wrapInASCIIBox","isSharedLib","basename","includes","existsSync","allPaths","readdir","file","allStats","aPath","stat","filePaths","filter","index","isFile","executablersOrLibraries","toLowerCase","Boolean","executable","stdout","LD_LIBRARY_PATH","line","trim","extraLDPaths","length","error","isLibraryAvailable","library","arg","_process$getuid2","_process2","isRoot","sudoExists"],"sources":["../../../src/server/registry/dependencies.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport * as os from 'os';\nimport childProcess from 'child_process';\nimport * as utils from '../../utils';\nimport { spawnAsync } from '../../utils/spawnAsync';\nimport { hostPlatform, isOfficiallySupportedPlatform } from '../../utils/hostPlatform';\nimport { buildPlaywrightCLICommand } from '.';\nimport { deps } from './nativeDeps';\nimport { getPlaywrightVersion } from '../../utils/userAgent';\n\nconst BIN_DIRECTORY = path.join(__dirname, '..', '..', '..', 'bin');\nconst languageBindingVersion = process.env.PW_CLI_DISPLAY_VERSION || require('../../../package.json').version;\n\nconst dockerVersionFilePath = '/ms-playwright/.docker-info';\nexport async function writeDockerVersion(dockerImageNameTemplate: string) {\n  await fs.promises.mkdir(path.dirname(dockerVersionFilePath), { recursive: true });\n  await fs.promises.writeFile(dockerVersionFilePath, JSON.stringify(dockerVersion(dockerImageNameTemplate), null, 2), 'utf8');\n  // Make sure version file is globally accessible.\n  await fs.promises.chmod(dockerVersionFilePath, 0o777);\n}\n\nexport function dockerVersion(dockerImageNameTemplate: string): { driverVersion: string, dockerImageName: string } {\n  return {\n    driverVersion: languageBindingVersion,\n    dockerImageName: dockerImageNameTemplate.replace('%version%', languageBindingVersion),\n  };\n}\n\nexport function readDockerVersionSync(): null | { driverVersion: string, dockerImageName: string, dockerImageNameTemplate: string } {\n  try {\n    const data = JSON.parse(fs.readFileSync(dockerVersionFilePath, 'utf8'));\n    return {\n      ...data,\n      dockerImageNameTemplate: data.dockerImageName.replace(data.driverVersion, '%version%'),\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\nconst checkExecutable = (filePath: string) => {\n  if (process.platform === 'win32')\n    return filePath.endsWith('.exe');\n  return fs.promises.access(filePath, fs.constants.X_OK).then(() => true).catch(() => false);\n};\n\nfunction isSupportedWindowsVersion(): boolean {\n  if (os.platform() !== 'win32' || os.arch() !== 'x64')\n    return false;\n  const [major, minor] = os.release().split('.').map(token => parseInt(token, 10));\n  // This is based on: https://stackoverflow.com/questions/42524606/how-to-get-windows-version-using-node-js/44916050#44916050\n  // The table with versions is taken from: https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-osversioninfoexw#remarks\n  // Windows 7 is not supported and is encoded as `6.1`.\n  return major > 6 || (major === 6 && minor > 1);\n}\n\nexport type DependencyGroup = 'chromium' | 'firefox' | 'webkit' | 'tools';\n\nexport async function installDependenciesWindows(targets: Set<DependencyGroup>, dryRun: boolean): Promise<void> {\n  if (targets.has('chromium')) {\n    const command = 'powershell.exe';\n    const args = ['-ExecutionPolicy', 'Bypass', '-File', path.join(BIN_DIRECTORY, 'install_media_pack.ps1')];\n    if (dryRun) {\n      console.log(`${command} ${quoteProcessArgs(args).join(' ')}`); // eslint-disable-line no-console\n      return;\n    }\n    const { code } = await spawnAsync(command, args, { cwd: BIN_DIRECTORY, stdio: 'inherit' });\n    if (code !== 0)\n      throw new Error('Failed to install windows dependencies!');\n  }\n}\n\nexport async function installDependenciesLinux(targets: Set<DependencyGroup>, dryRun: boolean) {\n  const libraries: string[] = [];\n  const platform = hostPlatform;\n  if (!isOfficiallySupportedPlatform)\n    console.warn(`BEWARE: your OS is not officially supported by Playwright; installing dependencies for ${platform} as a fallback.`); // eslint-disable-line no-console\n  for (const target of targets) {\n    const info = deps[platform];\n    if (!info) {\n      console.warn(`Cannot install dependencies for ${platform}!`);  // eslint-disable-line no-console\n      return;\n    }\n    libraries.push(...info[target]);\n  }\n  const uniqueLibraries = Array.from(new Set(libraries));\n  if (!dryRun)\n    console.log(`Installing dependencies...`);  // eslint-disable-line no-console\n  const commands: string[] = [];\n  commands.push('apt-get update');\n  commands.push(['apt-get', 'install', '-y', '--no-install-recommends',\n    ...uniqueLibraries,\n  ].join(' '));\n  const { command, args, elevatedPermissionsÂ } = await transformCommandsForRoot(commands);\n  if (dryRun) {\n    console.log(`${command} ${quoteProcessArgs(args).join(' ')}`); // eslint-disable-line no-console\n    return;\n  }\n  if (elevatedPermissions)\n    console.log('Switching to root user to install dependencies...'); // eslint-disable-line no-console\n  const child = childProcess.spawn(command, args, { stdio: 'inherit' });\n  await new Promise<void>((resolve, reject) => {\n    child.on('exit', (code: number) => code === 0 ? resolve() : reject(new Error(`Installation process exited with code: ${code}`)));\n    child.on('error', reject);\n  });\n}\n\nexport async function validateDependenciesWindows(windowsExeAndDllDirectories: string[]) {\n  const directoryPaths = windowsExeAndDllDirectories;\n  const lddPaths: string[] = [];\n  for (const directoryPath of directoryPaths)\n    lddPaths.push(...(await executablesOrSharedLibraries(directoryPath)));\n  const allMissingDeps = await Promise.all(lddPaths.map(lddPath => missingFileDependenciesWindows(lddPath)));\n  const missingDeps: Set<string> = new Set();\n  for (const deps of allMissingDeps) {\n    for (const dep of deps)\n      missingDeps.add(dep);\n  }\n\n  if (!missingDeps.size)\n    return;\n\n  let isCrtMissing = false;\n  let isMediaFoundationMissing = false;\n  for (const dep of missingDeps) {\n    if (dep.startsWith('api-ms-win-crt') || dep === 'vcruntime140.dll' || dep === 'vcruntime140_1.dll' || dep === 'msvcp140.dll')\n      isCrtMissing = true;\n    else if (dep === 'mf.dll' || dep === 'mfplat.dll' ||  dep === 'msmpeg2vdec.dll' || dep === 'evr.dll' || dep === 'avrt.dll')\n      isMediaFoundationMissing = true;\n  }\n\n  const details = [];\n\n  if (isCrtMissing) {\n    details.push(\n        `Some of the Universal C Runtime files cannot be found on the system. You can fix`,\n        `that by installing Microsoft Visual C++ Redistributable for Visual Studio from:`,\n        `https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads`,\n        ``);\n  }\n\n  if (isMediaFoundationMissing) {\n    details.push(\n        `Some of the Media Foundation files cannot be found on the system. If you are`,\n        `on Windows Server try fixing this by running the following command in PowerShell`,\n        `as Administrator:`,\n        ``,\n        `    Install-WindowsFeature Server-Media-Foundation`,\n        ``,\n        `For Windows N editions visit:`,\n        `https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions`,\n        ``);\n  }\n\n  details.push(\n      `Full list of missing libraries:`,\n      `    ${[...missingDeps].join('\\n    ')}`,\n      ``);\n\n  const message = `Host system is missing dependencies!\\n\\n${details.join('\\n')}`;\n  if (isSupportedWindowsVersion()) {\n    throw new Error(message);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(`WARNING: running on unsupported windows version!`);\n    // eslint-disable-next-line no-console\n    console.warn(message);\n  }\n}\n\nexport async function validateDependenciesLinux(sdkLanguage: string, linuxLddDirectories: string[], dlOpenLibraries: string[]) {\n  const directoryPaths = linuxLddDirectories;\n  const lddPaths: string[] = [];\n  for (const directoryPath of directoryPaths)\n    lddPaths.push(...(await executablesOrSharedLibraries(directoryPath)));\n  const missingDepsPerFile = await Promise.all(lddPaths.map(lddPath => missingFileDependencies(lddPath, directoryPaths)));\n  const missingDeps: Set<string> = new Set();\n  for (const deps of missingDepsPerFile) {\n    for (const dep of deps)\n      missingDeps.add(dep);\n  }\n  for (const dep of (await missingDLOPENLibraries(dlOpenLibraries)))\n    missingDeps.add(dep);\n  if (!missingDeps.size)\n    return;\n  const allMissingDeps = new Set(missingDeps);\n  // Check Ubuntu version.\n  const missingPackages = new Set();\n\n  const libraryToPackageNameMapping = deps[hostPlatform] ? {\n    ...(deps[hostPlatform]?.lib2package || {}),\n    ...MANUAL_LIBRARY_TO_PACKAGE_NAME_UBUNTU,\n  } : {};\n  // Translate missing dependencies to package names to install with apt.\n  for (const missingDep of missingDeps) {\n    const packageName = libraryToPackageNameMapping[missingDep];\n    if (packageName) {\n      missingPackages.add(packageName);\n      missingDeps.delete(missingDep);\n    }\n  }\n\n  const maybeSudo = process.getuid?.() && os.platform() !== 'win32' ? 'sudo ' : '';\n  const dockerInfo = readDockerVersionSync();\n  const errorLines = [\n    `Host system is missing dependencies to run browsers.`,\n  ];\n  // Ignore patch versions when comparing docker container version and Playwright version:\n  // we **NEVER** roll browsers in patch releases, so native dependencies do not change.\n  if (dockerInfo && !dockerInfo.driverVersion.startsWith(getPlaywrightVersion(true /* majorMinorOnly */) + '.')) {\n    // We are running in a docker container with unmatching version.\n    // In this case, we know how to install dependencies in it.\n    const pwVersion = getPlaywrightVersion();\n    const requiredDockerImage = dockerInfo.dockerImageName.replace(dockerInfo.driverVersion, pwVersion);\n    errorLines.push(...[\n      `This is most likely due to Docker image version not matching Playwright version:`,\n      `- Playwright  : ${pwVersion}`,\n      `- Docker image: ${dockerInfo.driverVersion}`,\n      ``,\n      `Either:`,\n      `- (recommended) use Docker image \"${requiredDockerImage}\"`,\n      `- (alternative 1) run the following command inside Docker to install missing dependencies:`,\n      ``,\n      `    ${maybeSudo}${buildPlaywrightCLICommand(sdkLanguage, 'install-deps')}`,\n      ``,\n      `- (alternative 2) use apt inside Docker:`,\n      ``,\n      `    ${maybeSudo}apt-get install ${[...missingPackages].join('\\\\\\n        ')}`,\n      ``,\n      `<3 Playwright Team`,\n    ]);\n  } else if (missingPackages.size && !missingDeps.size) {\n    // Only known dependencies are missing for browsers.\n    // Suggest installation with a Playwright CLI.\n    errorLines.push(...[\n      `Please install them with the following command:`,\n      ``,\n      `    ${maybeSudo}${buildPlaywrightCLICommand(sdkLanguage, 'install-deps')}`,\n      ``,\n      `Alternatively, use apt:`,\n      `    ${maybeSudo}apt-get install ${[...missingPackages].join('\\\\\\n        ')}`,\n      ``,\n      `<3 Playwright Team`,\n    ]);\n  } else {\n    // Unhappy path: we either run on unknown distribution, or we failed to resolve all missing\n    // libraries to package names.\n    // Print missing libraries only:\n    errorLines.push(...[\n      `Missing libraries:`,\n      ...[...allMissingDeps].map(dep => '    ' + dep),\n    ]);\n  }\n\n  throw new Error('\\n' + utils.wrapInASCIIBox(errorLines.join('\\n'), 1));\n}\n\nfunction isSharedLib(basename: string) {\n  switch (os.platform()) {\n    case 'linux':\n      return basename.endsWith('.so') || basename.includes('.so.');\n    case 'win32':\n      return basename.endsWith('.dll');\n    default:\n      return false;\n  }\n}\n\nasync function executablesOrSharedLibraries(directoryPath: string): Promise<string[]> {\n  if (!fs.existsSync(directoryPath))\n    return [];\n  const allPaths = (await fs.promises.readdir(directoryPath)).map(file => path.resolve(directoryPath, file));\n  const allStats = await Promise.all(allPaths.map(aPath => fs.promises.stat(aPath)));\n  const filePaths = allPaths.filter((aPath, index) => (allStats[index] as any).isFile());\n\n  const executablersOrLibraries = (await Promise.all(filePaths.map(async filePath => {\n    const basename = path.basename(filePath).toLowerCase();\n    if (isSharedLib(basename))\n      return filePath;\n    if (await checkExecutable(filePath))\n      return filePath;\n    return false;\n  }))).filter(Boolean);\n\n  return executablersOrLibraries as string[];\n}\n\nasync function missingFileDependenciesWindows(filePath: string): Promise<Array<string>> {\n  const executable = path.join(__dirname, '..', '..', '..', 'bin', 'PrintDeps.exe');\n  const dirname = path.dirname(filePath);\n  const { stdout, code } = await spawnAsync(executable, [filePath], {\n    cwd: dirname,\n    env: {\n      ...process.env,\n      LD_LIBRARY_PATH: process.env.LD_LIBRARY_PATH ? `${process.env.LD_LIBRARY_PATH}:${dirname}` : dirname,\n    },\n  });\n  if (code !== 0)\n    return [];\n  const missingDeps = stdout.split('\\n').map(line => line.trim()).filter(line => line.endsWith('not found') && line.includes('=>')).map(line => line.split('=>')[0].trim().toLowerCase());\n  return missingDeps;\n}\n\nasync function missingFileDependencies(filePath: string, extraLDPaths: string[]): Promise<Array<string>> {\n  const dirname = path.dirname(filePath);\n  let LD_LIBRARY_PATH = extraLDPaths.join(':');\n  if (process.env.LD_LIBRARY_PATH)\n    LD_LIBRARY_PATH = `${process.env.LD_LIBRARY_PATH}:${LD_LIBRARY_PATH}`;\n  const { stdout, code } = await spawnAsync('ldd', [filePath], {\n    cwd: dirname,\n    env: {\n      ...process.env,\n      LD_LIBRARY_PATH,\n    },\n  });\n  if (code !== 0)\n    return [];\n  const missingDeps = stdout.split('\\n').map(line => line.trim()).filter(line => line.endsWith('not found') && line.includes('=>')).map(line => line.split('=>')[0].trim());\n  return missingDeps;\n}\n\nasync function missingDLOPENLibraries(libraries: string[]): Promise<string[]> {\n  if (!libraries.length)\n    return [];\n  // NOTE: Using full-qualified path to `ldconfig` since `/sbin` is not part of the\n  // default PATH in CRON.\n  // @see https://github.com/microsoft/playwright/issues/3397\n  const { stdout, code, error } = await spawnAsync('/sbin/ldconfig', ['-p'], {});\n  if (code !== 0 || error)\n    return [];\n  const isLibraryAvailable = (library: string) => stdout.toLowerCase().includes(library.toLowerCase());\n  return libraries.filter(library => !isLibraryAvailable(library));\n}\n\nconst MANUAL_LIBRARY_TO_PACKAGE_NAME_UBUNTU: { [s: string]: string} = {\n  // libgstlibav.so (the only actual library provided by gstreamer1.0-libav) is not\n  // in the ldconfig cache, so we detect the actual library required for playing h.264\n  // and if it's missing recommend installing missing gstreamer lib.\n  // gstreamer1.0-libav -> libavcodec57 -> libx264-152\n  'libx264.so': 'gstreamer1.0-libav',\n};\n\nfunction quoteProcessArgs(args: string[]): string[] {\n  return args.map(arg => {\n    if (arg.includes(' '))\n      return `\"${arg}\"`;\n    return arg;\n  });\n}\n\nexport async function transformCommandsForRoot(commands: string[]): Promise<{ command: string, args: string[], elevatedPermissions: boolean}> {\n  const isRoot = process.getuid?.() === 0;\n  if (isRoot)\n    return { command: 'sh', args: ['-c', `${commands.join('&& ')}`], elevatedPermissions: false };\n  const sudoExists = await spawnAsync('which', ['sudo']);\n  if (sudoExists.code === 0)\n    return { command: 'sudo', args: ['--', 'sh', '-c', `${commands.join('&& ')}`], elevatedPermissions: true };\n  return { command: 'su', args: ['root', '-c', `${commands.join('&& ')}`], elevatedPermissions: true };\n}\n"],"mappings":"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"}