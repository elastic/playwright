{"version":3,"file":"browserFetcher.js","names":["_fs","_interopRequireDefault","require","_os","_path","_child_process","_fileUtils","_debugLogger","_manualPromise","_utilsBundle","_","_userAgent","obj","__esModule","default","downloadBrowserWithProgressBar","title","browserDirectory","executablePath","downloadURLs","downloadFileName","downloadConnectionTimeout","existsAsync","browserDirectoryToMarkerFilePath","debugLogger","log","zipPath","path","join","os","tmpdir","retryCount","attempt","url","length","logPolitely","colors","dim","error","downloadBrowserWithProgressBarOutOfProcess","fs","promises","unlink","rmdir","recursive","errorMessage","message","e","process","exitCode","connectionTimeout","cp","childProcess","fork","__dirname","promise","ManualPromise","progress","getDownloadProgress","on","method","params","done","total","code","resolve","Error","existsSync","downloadParams","userAgent","getUserAgent","send","toBeLogged","logLevel","env","npm_config_loglevel","logLevelDisplay","indexOf","console","stdout","isTTY","getAnimatedDownloadProgress","getBasicDownloadProgress","progressBar","lastDownloadedBytes","downloadedBytes","totalBytes","ProgressBar","toMegabytes","complete","incomplete","width","delta","tick","totalRows","stepWidth","lastRow","percentage","row","Math","floor","percentageString","String","padStart","repeat","bytes","mb","round"],"sources":["../../../src/server/registry/browserFetcher.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport childProcess from 'child_process';\nimport { existsAsync } from '../../utils/fileUtils';\nimport { debugLogger } from '../../utils/debugLogger';\nimport { ManualPromise } from '../../utils/manualPromise';\nimport { colors, progress as ProgressBar } from '../../utilsBundle';\nimport { browserDirectoryToMarkerFilePath } from '.';\nimport { getUserAgent } from '../../utils/userAgent';\nimport type { DownloadParams } from './oopDownloadBrowserMain';\n\nexport async function downloadBrowserWithProgressBar(title: string, browserDirectory: string, executablePath: string | undefined, downloadURLs: string[], downloadFileName: string, downloadConnectionTimeout: number): Promise<boolean> {\n  if (await existsAsync(browserDirectoryToMarkerFilePath(browserDirectory))) {\n    // Already downloaded.\n    debugLogger.log('install', `${title} is already downloaded.`);\n    return false;\n  }\n\n  const zipPath = path.join(os.tmpdir(), downloadFileName);\n  try {\n    const retryCount = 3;\n    for (let attempt = 1; attempt <= retryCount; ++attempt) {\n      debugLogger.log('install', `downloading ${title} - attempt #${attempt}`);\n      const url = downloadURLs[(attempt - 1) % downloadURLs.length];\n      logPolitely(`Downloading ${title}` + colors.dim(` from ${url}`));\n      const { error } = await downloadBrowserWithProgressBarOutOfProcess(title, browserDirectory, url, zipPath, executablePath, downloadConnectionTimeout);\n      if (!error) {\n        debugLogger.log('install', `SUCCESS installing ${title}`);\n        break;\n      }\n      if (await existsAsync(zipPath))\n        await fs.promises.unlink(zipPath);\n      if (await existsAsync(browserDirectory))\n        await fs.promises.rmdir(browserDirectory, { recursive: true });\n      const errorMessage = error?.message || '';\n      debugLogger.log('install', `attempt #${attempt} - ERROR: ${errorMessage}`);\n      if (attempt >= retryCount)\n        throw error;\n    }\n  } catch (e) {\n    debugLogger.log('install', `FAILED installation ${title} with error: ${e}`);\n    process.exitCode = 1;\n    throw e;\n  } finally {\n    if (await existsAsync(zipPath))\n      await fs.promises.unlink(zipPath);\n  }\n  logPolitely(`${title} downloaded to ${browserDirectory}`);\n  return true;\n}\n\n/**\n * Node.js has a bug where the process can exit with 0 code even though there was an uncaught exception.\n * Thats why we execute it in a separate process and check manually if the destination file exists.\n * https://github.com/microsoft/playwright/issues/17394\n */\nfunction downloadBrowserWithProgressBarOutOfProcess(title: string, browserDirectory: string, url: string, zipPath: string, executablePath: string | undefined, connectionTimeout: number): Promise<{ error: Error | null }> {\n  const cp = childProcess.fork(path.join(__dirname, 'oopDownloadBrowserMain.js'));\n  const promise = new ManualPromise<{ error: Error | null }>();\n  const progress = getDownloadProgress();\n  cp.on('message', (message: any) => {\n    if (message?.method === 'log')\n      debugLogger.log('install', message.params.message);\n    if (message?.method === 'progress')\n      progress(message.params.done, message.params.total);\n  });\n  cp.on('exit', code => {\n    if (code !== 0) {\n      promise.resolve({ error: new Error(`Download failure, code=${code}`) });\n      return;\n    }\n    if (!fs.existsSync(browserDirectoryToMarkerFilePath(browserDirectory)))\n      promise.resolve({ error: new Error(`Download failure, ${browserDirectoryToMarkerFilePath(browserDirectory)} does not exist`) });\n    else\n      promise.resolve({ error: null });\n  });\n  cp.on('error', error => {\n    promise.resolve({ error });\n  });\n\n  debugLogger.log('install', `running download:`);\n  debugLogger.log('install', `-- from url: ${url}`);\n  debugLogger.log('install', `-- to location: ${zipPath}`);\n  const downloadParams: DownloadParams = {\n    title,\n    browserDirectory,\n    url,\n    zipPath,\n    executablePath,\n    connectionTimeout,\n    userAgent: getUserAgent(),\n  };\n  cp.send({ method: 'download', params: downloadParams });\n  return promise;\n}\n\nexport function logPolitely(toBeLogged: string) {\n  const logLevel = process.env.npm_config_loglevel;\n  const logLevelDisplay = ['silent', 'error', 'warn'].indexOf(logLevel || '') > -1;\n\n  if (!logLevelDisplay)\n    console.log(toBeLogged);  // eslint-disable-line no-console\n}\n\ntype OnProgressCallback = (downloadedBytes: number, totalBytes: number) => void;\n\nfunction getDownloadProgress(): OnProgressCallback {\n  if (process.stdout.isTTY)\n    return getAnimatedDownloadProgress();\n  return getBasicDownloadProgress();\n}\n\nfunction getAnimatedDownloadProgress(): OnProgressCallback {\n  let progressBar: ProgressBar;\n  let lastDownloadedBytes = 0;\n\n  return (downloadedBytes: number, totalBytes: number) => {\n    if (!progressBar) {\n      progressBar = new ProgressBar(\n          `${toMegabytes(\n              totalBytes\n          )} [:bar] :percent :etas`,\n          {\n            complete: '=',\n            incomplete: ' ',\n            width: 20,\n            total: totalBytes,\n          }\n      );\n    }\n    const delta = downloadedBytes - lastDownloadedBytes;\n    lastDownloadedBytes = downloadedBytes;\n    progressBar.tick(delta);\n  };\n}\n\nfunction getBasicDownloadProgress(): OnProgressCallback {\n  const totalRows = 10;\n  const stepWidth = 8;\n  let lastRow = -1;\n  return (downloadedBytes: number, totalBytes: number) => {\n    const percentage = downloadedBytes / totalBytes;\n    const row = Math.floor(totalRows * percentage);\n    if (row > lastRow) {\n      lastRow = row;\n      const percentageString = String(percentage * 100 | 0).padStart(3);\n      // eslint-disable-next-line no-console\n      console.log(`|${'â– '.repeat(row * stepWidth)}${' '.repeat((totalRows - row) * stepWidth)}| ${percentageString}% of ${toMegabytes(totalBytes)}`);\n    }\n  };\n}\n\nfunction toMegabytes(bytes: number) {\n  const mb = bytes / 1024 / 1024;\n  return `${Math.round(mb * 10) / 10} MiB`;\n}\n"],"mappings":"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"}