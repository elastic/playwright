{"version":3,"file":"screenshotter.js","names":["_helper","require","_utils","_multimap","inPagePrepareForScreenshots","screenshotStyle","hideCaret","disableAnimations","syncAnimations","style","document","createElement","textContent","head","appendChild","documentElement","getBoundingClientRect","remove","collectRoots","root","roots","push","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","node","currentNode","shadowRoot","Element","nextNode","cleanupCallbacks","styleTag","append","elements","Map","querySelectorAll","forEach","element","set","value","getPropertyValue","priority","getPropertyPriority","setProperty","infiniteAnimationsToResume","Set","handleAnimations","animation","getAnimations","effect","playbackRate","has","endTime","getComputedTiming","Number","isFinite","finish","e","cancel","add","handleRootAnimations","bind","addEventListener","removeEventListener","play","window","__pwCleanupScreenshot","cleanupCallback","Screenshotter","constructor","page","_queue","TaskQueue","_page","_originalViewportSize","progress","originalViewportSize","viewportSize","mainFrame","waitForFunctionValueInUtility","width","innerWidth","height","innerHeight","_fullPageSize","fullPageSize","body","Math","max","scrollWidth","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","screenshotPage","options","format","validateScreenshotOptions","postTask","log","_preparePageForScreenshot","caret","animations","throwIfAborted","fullPage","documentRect","x","y","fitsViewport","clip","trimClipToSize","buffer","_screenshot","undefined","_restorePageAfterScreenshot","viewportRect","screenshotElement","handle","_frame","_waitAndScrollIntoViewIfNeeded","boundingBox","assert","scrollOffset","scrollX","scrollY","helper","enclosingIntRect","frame","_delegate","shouldToggleStyleSheetToSyncAnimations","safeNonStallingEvaluateInAllFrames","toString","JSON","stringify","process","env","PW_TEST_SCREENSHOT_NO_FONTS_READY","nonStallingEvaluateInExistingContext","catch","cleanupWhenAborted","_maskElements","framesToParsedSelectors","MultiMap","cleanup","Promise","all","keys","map","hideHighlight","mask","length","selector","pair","selectors","resolveFrameForSelector","info","parsed","maskSelectors","get","maskColor","_options$quality","__testHookBeforeScreenshot","shouldSetDefaultBackground","omitBackground","setBackgroundColor","r","g","b","a","cleanupHighlight","quality","takeScreenshot","scale","__testHookAfterScreenshot","exports","_chain","resolve","task","result","then","size","p1","min","p2","type","isInteger"],"sources":["../../src/server/screenshotter.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as dom from './dom';\nimport type { Rect } from '../common/types';\nimport { helper } from './helper';\nimport type { Page } from './page';\nimport type { Frame } from './frames';\nimport type { ParsedSelector } from '../utils/isomorphic/selectorParser';\nimport type * as types from './types';\nimport type { Progress } from './progress';\nimport { assert } from '../utils';\nimport { MultiMap } from '../utils/multimap';\n\ndeclare global {\n  interface Window {\n    __pwCleanupScreenshot?: () => void;\n  }\n}\n\nexport type ScreenshotOptions = {\n  type?: 'png' | 'jpeg';\n  quality?: number;\n  omitBackground?: boolean;\n  animations?: 'disabled' | 'allow';\n  mask?: { frame: Frame, selector: string}[];\n  maskColor?: string;\n  fullPage?: boolean;\n  clip?: Rect;\n  scale?: 'css' | 'device';\n  caret?: 'hide' | 'initial';\n  style?: string;\n};\n\nfunction inPagePrepareForScreenshots(screenshotStyle: string, hideCaret: boolean, disableAnimations: boolean, syncAnimations: boolean) {\n  // In WebKit, sync the animations.\n  if (syncAnimations) {\n    const style = document.createElement('style');\n    style.textContent = 'body {}';\n    document.head.appendChild(style);\n    document.documentElement.getBoundingClientRect();\n    style.remove();\n  }\n\n  if (!screenshotStyle && !hideCaret && !disableAnimations)\n    return;\n\n  const collectRoots = (root: Document | ShadowRoot, roots: (Document|ShadowRoot)[] = []): (Document|ShadowRoot)[] => {\n    roots.push(root);\n    const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT);\n    do {\n      const node = walker.currentNode;\n      const shadowRoot = node instanceof Element ? node.shadowRoot : null;\n      if (shadowRoot)\n        collectRoots(shadowRoot, roots);\n    } while (walker.nextNode());\n    return roots;\n  };\n\n  const roots = collectRoots(document);\n  const cleanupCallbacks: (() => void)[] = [];\n\n  if (screenshotStyle) {\n    for (const root of roots) {\n      const styleTag = document.createElement('style');\n      styleTag.textContent = screenshotStyle;\n      if (root === document)\n        document.documentElement.append(styleTag);\n      else\n        root.append(styleTag);\n\n      cleanupCallbacks.push(() => {\n        styleTag.remove();\n      });\n    }\n  }\n\n  if (hideCaret) {\n    const elements = new Map<HTMLElement, { value: string, priority: string }>();\n    for (const root of roots) {\n      root.querySelectorAll('input,textarea,[contenteditable]').forEach(element => {\n        elements.set(element as HTMLElement, {\n          value: (element as HTMLElement).style.getPropertyValue('caret-color'),\n          priority: (element as HTMLElement).style.getPropertyPriority('caret-color')\n        });\n        (element as HTMLElement).style.setProperty('caret-color', 'transparent', 'important');\n      });\n    }\n    cleanupCallbacks.push(() => {\n      for (const [element, value] of elements)\n        element.style.setProperty('caret-color', value.value, value.priority);\n    });\n  }\n\n  if (disableAnimations) {\n    const infiniteAnimationsToResume: Set<Animation> = new Set();\n    const handleAnimations = (root: Document|ShadowRoot): void => {\n      for (const animation of root.getAnimations()) {\n        if (!animation.effect || animation.playbackRate === 0 || infiniteAnimationsToResume.has(animation))\n          continue;\n        const endTime = animation.effect.getComputedTiming().endTime;\n        if (Number.isFinite(endTime)) {\n          try {\n            animation.finish();\n          } catch (e) {\n            // animation.finish() should not throw for\n            // finite animations, but we'd like to be on the\n            // safe side.\n          }\n        } else {\n          try {\n            animation.cancel();\n            infiniteAnimationsToResume.add(animation);\n          } catch (e) {\n            // animation.cancel() should not throw for\n            // infinite animations, but we'd like to be on the\n            // safe side.\n          }\n        }\n      }\n    };\n    for (const root of roots) {\n      const handleRootAnimations: (() => void) = handleAnimations.bind(null, root);\n      handleRootAnimations();\n      root.addEventListener('transitionrun', handleRootAnimations);\n      root.addEventListener('animationstart', handleRootAnimations);\n      cleanupCallbacks.push(() => {\n        root.removeEventListener('transitionrun', handleRootAnimations);\n        root.removeEventListener('animationstart', handleRootAnimations);\n      });\n    }\n    cleanupCallbacks.push(() => {\n      for (const animation of infiniteAnimationsToResume) {\n        try {\n          animation.play();\n        } catch (e) {\n          // animation.play() should never throw, but\n          // we'd like to be on the safe side.\n        }\n      }\n    });\n  }\n\n  window.__pwCleanupScreenshot = () => {\n    for (const cleanupCallback of cleanupCallbacks)\n      cleanupCallback();\n    delete window.__pwCleanupScreenshot;\n  };\n}\n\nexport class Screenshotter {\n  private _queue = new TaskQueue();\n  private _page: Page;\n\n  constructor(page: Page) {\n    this._page = page;\n    this._queue = new TaskQueue();\n  }\n\n  private async _originalViewportSize(progress: Progress): Promise<{ viewportSize: types.Size, originalViewportSize: types.Size | null }> {\n    const originalViewportSize = this._page.viewportSize();\n    let viewportSize = originalViewportSize;\n    if (!viewportSize)\n      viewportSize = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => ({ width: window.innerWidth, height: window.innerHeight }));\n    return { viewportSize, originalViewportSize };\n  }\n\n  private async _fullPageSize(progress: Progress): Promise<types.Size> {\n    const fullPageSize = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => {\n      if (!document.body || !document.documentElement)\n        return null;\n      return {\n        width: Math.max(\n            document.body.scrollWidth, document.documentElement.scrollWidth,\n            document.body.offsetWidth, document.documentElement.offsetWidth,\n            document.body.clientWidth, document.documentElement.clientWidth\n        ),\n        height: Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        ),\n      };\n    });\n    return fullPageSize!;\n  }\n\n  async screenshotPage(progress: Progress, options: ScreenshotOptions): Promise<Buffer> {\n    const format = validateScreenshotOptions(options);\n    return this._queue.postTask(async () => {\n      progress.log('taking page screenshot');\n      const { viewportSize } = await this._originalViewportSize(progress);\n      await this._preparePageForScreenshot(progress, this._page.mainFrame(), options.style, options.caret !== 'initial', options.animations === 'disabled');\n      progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n\n      if (options.fullPage) {\n        const fullPageSize = await this._fullPageSize(progress);\n        let documentRect = { x: 0, y: 0, width: fullPageSize.width, height: fullPageSize.height };\n        const fitsViewport = fullPageSize.width <= viewportSize.width && fullPageSize.height <= viewportSize.height;\n        if (options.clip)\n          documentRect = trimClipToSize(options.clip, documentRect);\n        const buffer = await this._screenshot(progress, format, documentRect, undefined, fitsViewport, options);\n        progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n        await this._restorePageAfterScreenshot();\n        return buffer;\n      }\n\n      const viewportRect = options.clip ? trimClipToSize(options.clip, viewportSize) : { x: 0, y: 0, ...viewportSize };\n      const buffer = await this._screenshot(progress, format, undefined, viewportRect, true, options);\n      progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n      await this._restorePageAfterScreenshot();\n      return buffer;\n    });\n  }\n\n  async screenshotElement(progress: Progress, handle: dom.ElementHandle, options: ScreenshotOptions): Promise<Buffer> {\n    const format = validateScreenshotOptions(options);\n    return this._queue.postTask(async () => {\n      progress.log('taking element screenshot');\n      const { viewportSize } = await this._originalViewportSize(progress);\n\n      await this._preparePageForScreenshot(progress, handle._frame, options.style, options.caret !== 'initial', options.animations === 'disabled');\n      progress.throwIfAborted(); // Do not do extra work.\n\n      await handle._waitAndScrollIntoViewIfNeeded(progress, true /* waitForVisible */);\n\n      progress.throwIfAborted(); // Do not do extra work.\n      const boundingBox = await handle.boundingBox();\n      assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n      assert(boundingBox.width !== 0, 'Node has 0 width.');\n      assert(boundingBox.height !== 0, 'Node has 0 height.');\n\n      const fitsViewport = boundingBox.width <= viewportSize.width && boundingBox.height <= viewportSize.height;\n      progress.throwIfAborted(); // Avoid extra work.\n      const scrollOffset = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => ({ x: window.scrollX, y: window.scrollY }));\n      const documentRect = { ...boundingBox };\n      documentRect.x += scrollOffset.x;\n      documentRect.y += scrollOffset.y;\n      const buffer = await this._screenshot(progress, format, helper.enclosingIntRect(documentRect), undefined, fitsViewport, options);\n      progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n      await this._restorePageAfterScreenshot();\n      return buffer;\n    });\n  }\n\n  async _preparePageForScreenshot(progress: Progress, frame: Frame, screenshotStyle: string | undefined, hideCaret: boolean, disableAnimations: boolean) {\n    if (disableAnimations)\n      progress.log('  disabled all CSS animations');\n    const syncAnimations = this._page._delegate.shouldToggleStyleSheetToSyncAnimations();\n    await this._page.safeNonStallingEvaluateInAllFrames('(' + inPagePrepareForScreenshots.toString() + `)(${JSON.stringify(screenshotStyle)}, ${hideCaret}, ${disableAnimations}, ${syncAnimations})`, 'utility');\n    if (!process.env.PW_TEST_SCREENSHOT_NO_FONTS_READY) {\n      progress.log('waiting for fonts to load...');\n      await frame.nonStallingEvaluateInExistingContext('document.fonts.ready', 'utility').catch(() => {});\n      progress.log('fonts loaded');\n    }\n    progress.cleanupWhenAborted(() => this._restorePageAfterScreenshot());\n  }\n\n  async _restorePageAfterScreenshot() {\n    await this._page.safeNonStallingEvaluateInAllFrames('window.__pwCleanupScreenshot && window.__pwCleanupScreenshot()', 'utility');\n  }\n\n  async _maskElements(progress: Progress, options: ScreenshotOptions): Promise<() => Promise<void>> {\n    const framesToParsedSelectors: MultiMap<Frame, ParsedSelector> = new MultiMap();\n\n    const cleanup = async () => {\n      await Promise.all([...framesToParsedSelectors.keys()].map(async frame => {\n        await frame.hideHighlight();\n      }));\n    };\n\n    if (!options.mask || !options.mask.length)\n      return cleanup;\n\n    await Promise.all((options.mask || []).map(async ({ frame, selector }) => {\n      const pair = await frame.selectors.resolveFrameForSelector(selector);\n      if (pair)\n        framesToParsedSelectors.set(pair.frame, pair.info.parsed);\n    }));\n    progress.throwIfAborted(); // Avoid extra work.\n\n    await Promise.all([...framesToParsedSelectors.keys()].map(async frame => {\n      await frame.maskSelectors(framesToParsedSelectors.get(frame), options.maskColor || '#F0F');\n    }));\n    progress.cleanupWhenAborted(cleanup);\n    return cleanup;\n  }\n\n  private async _screenshot(progress: Progress, format: 'png' | 'jpeg', documentRect: types.Rect | undefined, viewportRect: types.Rect | undefined, fitsViewport: boolean, options: ScreenshotOptions): Promise<Buffer> {\n    if ((options as any).__testHookBeforeScreenshot)\n      await (options as any).__testHookBeforeScreenshot();\n    progress.throwIfAborted(); // Screenshotting is expensive - avoid extra work.\n    const shouldSetDefaultBackground = options.omitBackground && format === 'png';\n    if (shouldSetDefaultBackground) {\n      await this._page._delegate.setBackgroundColor({ r: 0, g: 0, b: 0, a: 0 });\n      progress.cleanupWhenAborted(() => this._page._delegate.setBackgroundColor());\n    }\n    progress.throwIfAborted(); // Avoid extra work.\n\n    const cleanupHighlight = await this._maskElements(progress, options);\n    progress.throwIfAborted(); // Avoid extra work.\n\n    const quality = format === 'jpeg' ? options.quality ?? 80 : undefined;\n    const buffer = await this._page._delegate.takeScreenshot(progress, format, documentRect, viewportRect, quality, fitsViewport, options.scale || 'device');\n    progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n\n    await cleanupHighlight();\n    progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n\n    if (shouldSetDefaultBackground)\n      await this._page._delegate.setBackgroundColor();\n    progress.throwIfAborted(); // Avoid side effects.\n    if ((options as any).__testHookAfterScreenshot)\n      await (options as any).__testHookAfterScreenshot();\n    return buffer;\n  }\n}\n\nclass TaskQueue {\n  private _chain: Promise<any>;\n\n  constructor() {\n    this._chain = Promise.resolve();\n  }\n\n  postTask(task: () => any): Promise<any> {\n    const result = this._chain.then(task);\n    this._chain = result.catch(() => {});\n    return result;\n  }\n}\n\nfunction trimClipToSize(clip: types.Rect, size: types.Size): types.Rect {\n  const p1 = {\n    x: Math.max(0, Math.min(clip.x, size.width)),\n    y: Math.max(0, Math.min(clip.y, size.height))\n  };\n  const p2 = {\n    x: Math.max(0, Math.min(clip.x + clip.width, size.width)),\n    y: Math.max(0, Math.min(clip.y + clip.height, size.height))\n  };\n  const result = { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\n  assert(result.width && result.height, 'Clipped area is either empty or outside the resulting image');\n  return result;\n}\n\nexport function validateScreenshotOptions(options: ScreenshotOptions): 'png' | 'jpeg' {\n  let format: 'png' | 'jpeg' | null = null;\n  // options.type takes precedence over inferring the type from options.path\n  // because it may be a 0-length file with no extension created beforehand (i.e. as a temp file).\n  if (options.type) {\n    assert(options.type === 'png' || options.type === 'jpeg', 'Unknown options.type value: ' + options.type);\n    format = options.type;\n  }\n\n  if (!format)\n    format = 'png';\n\n  if (options.quality !== undefined) {\n    assert(format === 'jpeg', 'options.quality is unsupported for the ' + format + ' screenshots');\n    assert(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' + (typeof options.quality));\n    assert(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n    assert(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' + options.quality);\n  }\n  if (options.clip) {\n    assert(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' + (typeof options.clip.x));\n    assert(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' + (typeof options.clip.y));\n    assert(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' + (typeof options.clip.width));\n    assert(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' + (typeof options.clip.height));\n    assert(options.clip.width !== 0, 'Expected options.clip.width not to be 0.');\n    assert(options.clip.height !== 0, 'Expected options.clip.height not to be 0.');\n  }\n  return format;\n}\n"],"mappings":"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"}