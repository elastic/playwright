{"version":3,"file":"ffConnection.js","names":["_events","require","_debugLogger","_helper","_protocolError","ConnectionEvents","exports","Disconnected","Symbol","kBrowserCloseMessageId","FFConnection","EventEmitter","constructor","transport","protocolLogger","browserLogsCollector","_lastId","_transport","_protocolLogger","_browserLogsCollector","_browserDisconnectedLogs","rootSession","_sessions","_closed","setMaxListeners","Map","FFSession","message","_rawSend","set","onmessage","_onMessage","bind","onclose","_onClose","nextMessageId","send","id","session","get","sessionId","dispatchMessage","reason","undefined","helper","formatBrowserLogs","recentLogs","dispose","Promise","resolve","then","emit","close","createSession","connection","rawSend","_connection","_disposed","_callbacks","_sessionId","_crashed","on","addListener","off","removeListener","once","markAsCrashed","method","params","ProtocolError","reject","error","sendMayFail","catch","debugLogger","log","object","callback","delete","setMessage","result","values","type","logs","clear"],"sources":["../../../src/server/firefox/ffConnection.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\nimport type { ConnectionTransport, ProtocolRequest, ProtocolResponse } from '../transport';\nimport type { Protocol } from './protocol';\nimport type { RecentLogsCollector } from '../../utils/debugLogger';\nimport { debugLogger } from '../../utils/debugLogger';\nimport type { ProtocolLogger } from '../types';\nimport { helper } from '../helper';\nimport { ProtocolError } from '../protocolError';\n\nexport const ConnectionEvents = {\n  Disconnected: Symbol('Disconnected'),\n};\n\n// FFPlaywright uses this special id to issue Browser.close command which we\n// should ignore.\nexport const kBrowserCloseMessageId = -9999;\n\nexport class FFConnection extends EventEmitter {\n  private _lastId: number;\n  private _transport: ConnectionTransport;\n  private readonly _protocolLogger: ProtocolLogger;\n  private readonly _browserLogsCollector: RecentLogsCollector;\n  _browserDisconnectedLogs: string | undefined;\n  readonly rootSession: FFSession;\n  readonly _sessions: Map<string, FFSession>;\n  _closed: boolean;\n\n  constructor(transport: ConnectionTransport, protocolLogger: ProtocolLogger, browserLogsCollector: RecentLogsCollector) {\n    super();\n    this.setMaxListeners(0);\n    this._transport = transport;\n    this._protocolLogger = protocolLogger;\n    this._browserLogsCollector = browserLogsCollector;\n    this._lastId = 0;\n    this._sessions = new Map();\n    this._closed = false;\n    this.rootSession = new FFSession(this, '', message => this._rawSend(message));\n    this._sessions.set('', this.rootSession);\n\n    this._transport.onmessage = this._onMessage.bind(this);\n    // onclose should be set last, since it can be immediately called.\n    this._transport.onclose = this._onClose.bind(this);\n  }\n\n  nextMessageId(): number {\n    return ++this._lastId;\n  }\n\n  _rawSend(message: ProtocolRequest) {\n    this._protocolLogger('send', message);\n    this._transport.send(message);\n  }\n\n  async _onMessage(message: ProtocolResponse) {\n    this._protocolLogger('receive', message);\n    if (message.id === kBrowserCloseMessageId)\n      return;\n    const session = this._sessions.get(message.sessionId || '');\n    if (session)\n      session.dispatchMessage(message);\n  }\n\n  _onClose(reason?: string) {\n    this._closed = true;\n    this._transport.onmessage = undefined;\n    this._transport.onclose = undefined;\n    this._browserDisconnectedLogs = helper.formatBrowserLogs(this._browserLogsCollector.recentLogs(), reason);\n    this.rootSession.dispose();\n    Promise.resolve().then(() => this.emit(ConnectionEvents.Disconnected));\n  }\n\n  close() {\n    if (!this._closed)\n      this._transport.close();\n  }\n\n  createSession(sessionId: string): FFSession {\n    const session = new FFSession(this, sessionId, message => this._rawSend({ ...message, sessionId }));\n    this._sessions.set(sessionId, session);\n    return session;\n  }\n}\n\nexport class FFSession extends EventEmitter {\n  _connection: FFConnection;\n  _disposed = false;\n  private _callbacks: Map<number, { resolve: Function, reject: Function, error: ProtocolError }>;\n  private _sessionId: string;\n  private _rawSend: (message: any) => void;\n  private _crashed: boolean = false;\n  override on: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override addListener: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override off: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override removeListener: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n  override once: <T extends keyof Protocol.Events | symbol>(event: T, listener: (payload: T extends symbol ? any : Protocol.Events[T extends keyof Protocol.Events ? T : never]) => void) => this;\n\n  constructor(connection: FFConnection, sessionId: string, rawSend: (message: any) => void) {\n    super();\n    this.setMaxListeners(0);\n    this._callbacks = new Map();\n    this._connection = connection;\n    this._sessionId = sessionId;\n    this._rawSend = rawSend;\n\n    this.on = super.on;\n    this.addListener = super.addListener;\n    this.off = super.removeListener;\n    this.removeListener = super.removeListener;\n    this.once = super.once;\n  }\n\n  markAsCrashed() {\n    this._crashed = true;\n  }\n\n  async send<T extends keyof Protocol.CommandParameters>(\n    method: T,\n    params?: Protocol.CommandParameters[T]\n  ): Promise<Protocol.CommandReturnValues[T]> {\n    if (this._crashed || this._disposed || this._connection._closed || this._connection._browserDisconnectedLogs)\n      throw new ProtocolError(this._crashed ? 'crashed' : 'closed', undefined, this._connection._browserDisconnectedLogs);\n    const id = this._connection.nextMessageId();\n    this._rawSend({ method, params, id });\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, { resolve, reject, error: new ProtocolError('error', method) });\n    });\n  }\n\n  sendMayFail<T extends keyof Protocol.CommandParameters>(method: T, params?: Protocol.CommandParameters[T]): Promise<Protocol.CommandReturnValues[T] | void> {\n    return this.send(method, params).catch(error => debugLogger.log('error', error));\n  }\n\n  dispatchMessage(object: ProtocolResponse) {\n    if (object.id) {\n      const callback = this._callbacks.get(object.id);\n      // Callbacks could be all rejected if someone has called `.dispose()`.\n      if (callback) {\n        this._callbacks.delete(object.id);\n        if (object.error) {\n          callback.error.setMessage(object.error.message);\n          callback.reject(callback.error);\n        } else {\n          callback.resolve(object.result);\n        }\n      }\n    } else {\n      Promise.resolve().then(() => this.emit(object.method!, object.params));\n    }\n  }\n\n  dispose() {\n    this._disposed = true;\n    this._connection._sessions.delete(this._sessionId);\n    for (const callback of this._callbacks.values()) {\n      callback.error.type = this._crashed ? 'crashed' : 'closed';\n      callback.error.logs = this._connection._browserDisconnectedLogs;\n      callback.reject(callback.error);\n    }\n    this._callbacks.clear();\n  }\n}\n"],"mappings":";;;;;;AAiBA,IAAAA,OAAA,GAAAC,OAAA;AAIA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWO,MAAMI,gBAAgB,GAAAC,OAAA,CAAAD,gBAAA,GAAG;EAC9BE,YAAY,EAAEC,MAAM,CAAC,cAAc;AACrC,CAAC;;AAED;AACA;AACO,MAAMC,sBAAsB,GAAAH,OAAA,CAAAG,sBAAA,GAAG,CAAC,IAAI;AAEpC,MAAMC,YAAY,SAASC,oBAAY,CAAC;EAU7CC,WAAWA,CAACC,SAA8B,EAAEC,cAA8B,EAAEC,oBAAyC,EAAE;IACrH,KAAK,CAAC,CAAC;IAAC,KAVFC,OAAO;IAAA,KACPC,UAAU;IAAA,KACDC,eAAe;IAAA,KACfC,qBAAqB;IAAA,KACtCC,wBAAwB;IAAA,KACfC,WAAW;IAAA,KACXC,SAAS;IAAA,KAClBC,OAAO;IAIL,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;IACvB,IAAI,CAACP,UAAU,GAAGJ,SAAS;IAC3B,IAAI,CAACK,eAAe,GAAGJ,cAAc;IACrC,IAAI,CAACK,qBAAqB,GAAGJ,oBAAoB;IACjD,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACM,SAAS,GAAG,IAAIG,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACF,OAAO,GAAG,KAAK;IACpB,IAAI,CAACF,WAAW,GAAG,IAAIK,SAAS,CAAC,IAAI,EAAE,EAAE,EAAEC,OAAO,IAAI,IAAI,CAACC,QAAQ,CAACD,OAAO,CAAC,CAAC;IAC7E,IAAI,CAACL,SAAS,CAACO,GAAG,CAAC,EAAE,EAAE,IAAI,CAACR,WAAW,CAAC;IAExC,IAAI,CAACJ,UAAU,CAACa,SAAS,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD;IACA,IAAI,CAACf,UAAU,CAACgB,OAAO,GAAG,IAAI,CAACC,QAAQ,CAACF,IAAI,CAAC,IAAI,CAAC;EACpD;EAEAG,aAAaA,CAAA,EAAW;IACtB,OAAO,EAAE,IAAI,CAACnB,OAAO;EACvB;EAEAY,QAAQA,CAACD,OAAwB,EAAE;IACjC,IAAI,CAACT,eAAe,CAAC,MAAM,EAAES,OAAO,CAAC;IACrC,IAAI,CAACV,UAAU,CAACmB,IAAI,CAACT,OAAO,CAAC;EAC/B;EAEA,MAAMI,UAAUA,CAACJ,OAAyB,EAAE;IAC1C,IAAI,CAACT,eAAe,CAAC,SAAS,EAAES,OAAO,CAAC;IACxC,IAAIA,OAAO,CAACU,EAAE,KAAK5B,sBAAsB,EACvC;IACF,MAAM6B,OAAO,GAAG,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAACZ,OAAO,CAACa,SAAS,IAAI,EAAE,CAAC;IAC3D,IAAIF,OAAO,EACTA,OAAO,CAACG,eAAe,CAACd,OAAO,CAAC;EACpC;EAEAO,QAAQA,CAACQ,MAAe,EAAE;IACxB,IAAI,CAACnB,OAAO,GAAG,IAAI;IACnB,IAAI,CAACN,UAAU,CAACa,SAAS,GAAGa,SAAS;IACrC,IAAI,CAAC1B,UAAU,CAACgB,OAAO,GAAGU,SAAS;IACnC,IAAI,CAACvB,wBAAwB,GAAGwB,cAAM,CAACC,iBAAiB,CAAC,IAAI,CAAC1B,qBAAqB,CAAC2B,UAAU,CAAC,CAAC,EAAEJ,MAAM,CAAC;IACzG,IAAI,CAACrB,WAAW,CAAC0B,OAAO,CAAC,CAAC;IAC1BC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC9C,gBAAgB,CAACE,YAAY,CAAC,CAAC;EACxE;EAEA6C,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAAC7B,OAAO,EACf,IAAI,CAACN,UAAU,CAACmC,KAAK,CAAC,CAAC;EAC3B;EAEAC,aAAaA,CAACb,SAAiB,EAAa;IAC1C,MAAMF,OAAO,GAAG,IAAIZ,SAAS,CAAC,IAAI,EAAEc,SAAS,EAAEb,OAAO,IAAI,IAAI,CAACC,QAAQ,CAAC;MAAE,GAAGD,OAAO;MAAEa;IAAU,CAAC,CAAC,CAAC;IACnG,IAAI,CAAClB,SAAS,CAACO,GAAG,CAACW,SAAS,EAAEF,OAAO,CAAC;IACtC,OAAOA,OAAO;EAChB;AACF;AAAChC,OAAA,CAAAI,YAAA,GAAAA,YAAA;AAEM,MAAMgB,SAAS,SAASf,oBAAY,CAAC;EAa1CC,WAAWA,CAAC0C,UAAwB,EAAEd,SAAiB,EAAEe,OAA+B,EAAE;IACxF,KAAK,CAAC,CAAC;IAAC,KAbVC,WAAW;IAAA,KACXC,SAAS,GAAG,KAAK;IAAA,KACTC,UAAU;IAAA,KACVC,UAAU;IAAA,KACV/B,QAAQ;IAAA,KACRgC,QAAQ,GAAY,KAAK;IAAA,KACxBC,EAAE;IAAA,KACFC,WAAW;IAAA,KACXC,GAAG;IAAA,KACHC,cAAc;IAAA,KACdC,IAAI;IAIX,IAAI,CAACzC,eAAe,CAAC,CAAC,CAAC;IACvB,IAAI,CAACkC,UAAU,GAAG,IAAIjC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAAC+B,WAAW,GAAGF,UAAU;IAC7B,IAAI,CAACK,UAAU,GAAGnB,SAAS;IAC3B,IAAI,CAACZ,QAAQ,GAAG2B,OAAO;IAEvB,IAAI,CAACM,EAAE,GAAG,KAAK,CAACA,EAAE;IAClB,IAAI,CAACC,WAAW,GAAG,KAAK,CAACA,WAAW;IACpC,IAAI,CAACC,GAAG,GAAG,KAAK,CAACC,cAAc;IAC/B,IAAI,CAACA,cAAc,GAAG,KAAK,CAACA,cAAc;IAC1C,IAAI,CAACC,IAAI,GAAG,KAAK,CAACA,IAAI;EACxB;EAEAC,aAAaA,CAAA,EAAG;IACd,IAAI,CAACN,QAAQ,GAAG,IAAI;EACtB;EAEA,MAAMxB,IAAIA,CACR+B,MAAS,EACTC,MAAsC,EACI;IAC1C,IAAI,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACH,SAAS,IAAI,IAAI,CAACD,WAAW,CAACjC,OAAO,IAAI,IAAI,CAACiC,WAAW,CAACpC,wBAAwB,EAC1G,MAAM,IAAIiD,4BAAa,CAAC,IAAI,CAACT,QAAQ,GAAG,SAAS,GAAG,QAAQ,EAAEjB,SAAS,EAAE,IAAI,CAACa,WAAW,CAACpC,wBAAwB,CAAC;IACrH,MAAMiB,EAAE,GAAG,IAAI,CAACmB,WAAW,CAACrB,aAAa,CAAC,CAAC;IAC3C,IAAI,CAACP,QAAQ,CAAC;MAAEuC,MAAM;MAAEC,MAAM;MAAE/B;IAAG,CAAC,CAAC;IACrC,OAAO,IAAIW,OAAO,CAAC,CAACC,OAAO,EAAEqB,MAAM,KAAK;MACtC,IAAI,CAACZ,UAAU,CAAC7B,GAAG,CAACQ,EAAE,EAAE;QAAEY,OAAO;QAAEqB,MAAM;QAAEC,KAAK,EAAE,IAAIF,4BAAa,CAAC,OAAO,EAAEF,MAAM;MAAE,CAAC,CAAC;IACzF,CAAC,CAAC;EACJ;EAEAK,WAAWA,CAA6CL,MAAS,EAAEC,MAAsC,EAAmD;IAC1J,OAAO,IAAI,CAAChC,IAAI,CAAC+B,MAAM,EAAEC,MAAM,CAAC,CAACK,KAAK,CAACF,KAAK,IAAIG,wBAAW,CAACC,GAAG,CAAC,OAAO,EAAEJ,KAAK,CAAC,CAAC;EAClF;EAEA9B,eAAeA,CAACmC,MAAwB,EAAE;IACxC,IAAIA,MAAM,CAACvC,EAAE,EAAE;MACb,MAAMwC,QAAQ,GAAG,IAAI,CAACnB,UAAU,CAACnB,GAAG,CAACqC,MAAM,CAACvC,EAAE,CAAC;MAC/C;MACA,IAAIwC,QAAQ,EAAE;QACZ,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAACF,MAAM,CAACvC,EAAE,CAAC;QACjC,IAAIuC,MAAM,CAACL,KAAK,EAAE;UAChBM,QAAQ,CAACN,KAAK,CAACQ,UAAU,CAACH,MAAM,CAACL,KAAK,CAAC5C,OAAO,CAAC;UAC/CkD,QAAQ,CAACP,MAAM,CAACO,QAAQ,CAACN,KAAK,CAAC;QACjC,CAAC,MAAM;UACLM,QAAQ,CAAC5B,OAAO,CAAC2B,MAAM,CAACI,MAAM,CAAC;QACjC;MACF;IACF,CAAC,MAAM;MACLhC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,IAAI,CAACC,IAAI,CAACyB,MAAM,CAACT,MAAM,EAAGS,MAAM,CAACR,MAAM,CAAC,CAAC;IACxE;EACF;EAEArB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACU,SAAS,GAAG,IAAI;IACrB,IAAI,CAACD,WAAW,CAAClC,SAAS,CAACwD,MAAM,CAAC,IAAI,CAACnB,UAAU,CAAC;IAClD,KAAK,MAAMkB,QAAQ,IAAI,IAAI,CAACnB,UAAU,CAACuB,MAAM,CAAC,CAAC,EAAE;MAC/CJ,QAAQ,CAACN,KAAK,CAACW,IAAI,GAAG,IAAI,CAACtB,QAAQ,GAAG,SAAS,GAAG,QAAQ;MAC1DiB,QAAQ,CAACN,KAAK,CAACY,IAAI,GAAG,IAAI,CAAC3B,WAAW,CAACpC,wBAAwB;MAC/DyD,QAAQ,CAACP,MAAM,CAACO,QAAQ,CAACN,KAAK,CAAC;IACjC;IACA,IAAI,CAACb,UAAU,CAAC0B,KAAK,CAAC,CAAC;EACzB;AACF;AAAC9E,OAAA,CAAAoB,SAAA,GAAAA,SAAA"}