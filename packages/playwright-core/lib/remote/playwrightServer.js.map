{"version":3,"file":"playwrightServer.js","names":["_playwright","require","_playwrightConnection","_semaphore","_debugLogger","_utils","_wsServer","PlaywrightServer","constructor","options","_preLaunchedPlaywright","_options","preLaunchedBrowser","attribution","playwright","preLaunchedAndroidDevice","_android","browserSemaphore","Semaphore","maxConnections","controllerSemaphore","reuseBrowserSemaphore","WSServer","onUpgrade","request","socket","uaError","userAgentVersionMatchesErrorMessage","headers","error","httpVersion","onHeaders","process","env","PWTEST_SERVER_WS_HEADERS","push","onConnection","url","ws","id","browserHeader","browserName","searchParams","get","Array","isArray","proxyHeader","proxyValue","launchOptionsHeader","launchOptionsHeaderValue","launchOptionsParam","launchOptions","JSON","parse","e","isExtension","mode","createPlaywright","sdkLanguage","isServer","clientType","semaphore","has","PlaywrightConnection","acquire","socksProxyPattern","browser","androidDevice","socksProxy","preLaunchedSocksProxy","release","onClose","debugLogger","log","Promise","all","allBrowsers","map","close","reason","listen","port","hostname","path","exports"],"sources":["../../src/remote/playwrightServer.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Browser } from '../server/browser';\nimport type { Playwright } from '../server/playwright';\nimport { createPlaywright } from '../server/playwright';\nimport { PlaywrightConnection } from './playwrightConnection';\nimport type { ClientType } from './playwrightConnection';\nimport type  { LaunchOptions } from '../server/types';\nimport { Semaphore } from '../utils/semaphore';\nimport type { AndroidDevice } from '../server/android/android';\nimport type { SocksProxy } from '../common/socksProxy';\nimport { debugLogger } from '../utils/debugLogger';\nimport { userAgentVersionMatchesErrorMessage } from '../utils';\nimport { WSServer } from '../utils/wsServer';\n\ntype ServerOptions = {\n  path: string;\n  maxConnections: number;\n  mode: 'default' | 'launchServer' | 'extension';\n  preLaunchedBrowser?: Browser;\n  preLaunchedAndroidDevice?: AndroidDevice;\n  preLaunchedSocksProxy?: SocksProxy;\n};\n\nexport class PlaywrightServer {\n  private _preLaunchedPlaywright: Playwright | undefined;\n  private _options: ServerOptions;\n  private _wsServer: WSServer;\n\n  constructor(options: ServerOptions) {\n    this._options = options;\n    if (options.preLaunchedBrowser)\n      this._preLaunchedPlaywright = options.preLaunchedBrowser.attribution.playwright;\n    if (options.preLaunchedAndroidDevice)\n      this._preLaunchedPlaywright = options.preLaunchedAndroidDevice._android.attribution.playwright;\n\n    const browserSemaphore = new Semaphore(this._options.maxConnections);\n    const controllerSemaphore = new Semaphore(1);\n    const reuseBrowserSemaphore = new Semaphore(1);\n\n    this._wsServer = new WSServer({\n      onUpgrade: (request, socket) => {\n        const uaError = userAgentVersionMatchesErrorMessage(request.headers['user-agent'] || '');\n        if (uaError)\n          return { error: `HTTP/${request.httpVersion} 428 Precondition Required\\r\\n\\r\\n${uaError}` };\n      },\n\n      onHeaders: headers => {\n        if (process.env.PWTEST_SERVER_WS_HEADERS)\n          headers.push(process.env.PWTEST_SERVER_WS_HEADERS!);\n      },\n\n      onConnection: (request, url, ws, id) => {\n        const browserHeader = request.headers['x-playwright-browser'];\n        const browserName = url.searchParams.get('browser') || (Array.isArray(browserHeader) ? browserHeader[0] : browserHeader) || null;\n        const proxyHeader = request.headers['x-playwright-proxy'];\n        const proxyValue = url.searchParams.get('proxy') || (Array.isArray(proxyHeader) ? proxyHeader[0] : proxyHeader);\n\n        const launchOptionsHeader = request.headers['x-playwright-launch-options'] || '';\n        const launchOptionsHeaderValue = Array.isArray(launchOptionsHeader) ? launchOptionsHeader[0] : launchOptionsHeader;\n        const launchOptionsParam = url.searchParams.get('launch-options');\n        let launchOptions: LaunchOptions = {};\n        try {\n          launchOptions = JSON.parse(launchOptionsParam || launchOptionsHeaderValue);\n        } catch (e) {\n        }\n\n        // Instantiate playwright for the extension modes.\n        const isExtension = this._options.mode === 'extension';\n        if (isExtension) {\n          if (!this._preLaunchedPlaywright)\n            this._preLaunchedPlaywright = createPlaywright({ sdkLanguage: 'javascript', isServer: true });\n        }\n\n        let clientType: ClientType = 'launch-browser';\n        let semaphore: Semaphore = browserSemaphore;\n        if (isExtension && url.searchParams.has('debug-controller')) {\n          clientType = 'controller';\n          semaphore = controllerSemaphore;\n        } else if (isExtension) {\n          clientType = 'reuse-browser';\n          semaphore = reuseBrowserSemaphore;\n        } else if (this._options.mode === 'launchServer') {\n          clientType = 'pre-launched-browser-or-android';\n          semaphore = browserSemaphore;\n        }\n\n        return new PlaywrightConnection(\n            semaphore.acquire(),\n            clientType, ws,\n            { socksProxyPattern: proxyValue, browserName, launchOptions },\n            {\n              playwright: this._preLaunchedPlaywright,\n              browser: this._options.preLaunchedBrowser,\n              androidDevice: this._options.preLaunchedAndroidDevice,\n              socksProxy: this._options.preLaunchedSocksProxy,\n            },\n            id, () => semaphore.release());\n      },\n\n      onClose: async () => {\n        debugLogger.log('server', 'closing browsers');\n        if (this._preLaunchedPlaywright)\n          await Promise.all(this._preLaunchedPlaywright.allBrowsers().map(browser => browser.close({ reason: 'Playwright Server stopped' })));\n        debugLogger.log('server', 'closed browsers');\n      }\n    });\n  }\n\n  async listen(port: number = 0, hostname?: string): Promise<string> {\n    return this._wsServer.listen(port, hostname, this._options.path);\n  }\n\n  async close() {\n    await this._wsServer.close();\n  }\n}\n"],"mappings":"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"}