{"version":3,"file":"playwrightConnection.js","names":["_server","require","_browser","_instrumentation","_socksProxy","_utils","_android","_debugControllerDispatcher","_debugLogger","PlaywrightConnection","constructor","lock","clientType","ws","options","preLaunched","id","onClose","_ws","_onClose","_dispatcherConnection","_cleanups","_id","_disconnected","_preLaunched","_options","_root","_profileName","launchOptions","filterLaunchOptions","assert","playwright","browser","androidDevice","Date","toISOString","DispatcherConnection","onmessage","message","readyState","CLOSING","messageString","JSON","stringify","debugLogger","isEnabled","log","monotonicTime","logServerMetadata","send","on","Buffer","from","toString","jsonMessage","parse","dispatch","_onDisconnect","error","_initDebugControllerMode","RootDispatcher","scope","startProfiling","_initReuseBrowsersMode","_initPreLaunchedBrowserMode","_initPreLaunchedAndroidMode","_initLaunchBrowserMode","Error","browserName","createPlaywright","sdkLanguage","isServer","ownedSocksProxy","_createOwnedSocksProxy","launch","serverSideCallMetadata","push","allBrowsers","close","reason","Browser","Events","Disconnected","code","PlaywrightDispatcher","_this$_preLaunched$so","socksProxy","setPattern","socksProxyPattern","playwrightDispatcher","b","cleanup","AndroidDevice","Close","undefined","DebugControllerDispatcher","debugController","requestedOptions","launchOptionsHash","find","name","existingOptions","originalLaunchOptions","channel","headless","process","env","PW_DEBUG_CONTROLLER_HEADLESS","context","contexts","pages","length","stopPendingOperations","SocksProxy","socksProxyPort","listen","_dispose","catch","stopProfiling","direction","serverLogMetadata","wallTime","now","guid","method","payloadSizeInBytes","byteLength","e","exports","copy","k","Object","keys","key","defaultLaunchOptions","optionsThatAllowBrowserReuse","args","ignoreAllDefaultArgs","ignoreDefaultArgs","timeout","proxy","chromiumSandbox","firefoxUserPrefs","slowMo","executablePath","isUnderTest","handleSIGINT","handleSIGTERM","handleSIGHUP","devtools"],"sources":["../../src/remote/playwrightConnection.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { WebSocket } from '../utilsBundle';\nimport type { DispatcherScope, Playwright } from '../server';\nimport type * as channels from '@protocol/channels';\nimport { createPlaywright, DispatcherConnection, RootDispatcher, PlaywrightDispatcher } from '../server';\nimport { Browser } from '../server/browser';\nimport { serverSideCallMetadata } from '../server/instrumentation';\nimport { SocksProxy } from '../common/socksProxy';\nimport { assert, isUnderTest } from '../utils';\nimport type { LaunchOptions } from '../server/types';\nimport { AndroidDevice } from '../server/android/android';\nimport { DebugControllerDispatcher } from '../server/dispatchers/debugControllerDispatcher';\nimport { startProfiling, stopProfiling } from '../utils';\nimport { monotonicTime } from '../utils';\nimport { debugLogger } from '../utils/debugLogger';\n\nexport type ClientType = 'controller' | 'launch-browser' | 'reuse-browser' | 'pre-launched-browser-or-android';\n\ntype Options = {\n  socksProxyPattern: string | undefined,\n  browserName: string | null,\n  launchOptions: LaunchOptions,\n};\n\ntype PreLaunched = {\n  playwright?: Playwright | undefined;\n  browser?: Browser | undefined;\n  androidDevice?: AndroidDevice | undefined;\n  socksProxy?: SocksProxy | undefined;\n};\n\nexport class PlaywrightConnection {\n  private _ws: WebSocket;\n  private _onClose: () => void;\n  private _dispatcherConnection: DispatcherConnection;\n  private _cleanups: (() => Promise<void>)[] = [];\n  private _id: string;\n  private _disconnected = false;\n  private _preLaunched: PreLaunched;\n  private _options: Options;\n  private _root: DispatcherScope;\n  private _profileName: string;\n\n  constructor(lock: Promise<void>, clientType: ClientType, ws: WebSocket, options: Options, preLaunched: PreLaunched, id: string, onClose: () => void) {\n    this._ws = ws;\n    this._preLaunched = preLaunched;\n    this._options = options;\n    options.launchOptions = filterLaunchOptions(options.launchOptions);\n    if (clientType === 'reuse-browser' || clientType === 'pre-launched-browser-or-android')\n      assert(preLaunched.playwright);\n    if (clientType === 'pre-launched-browser-or-android')\n      assert(preLaunched.browser || preLaunched.androidDevice);\n    this._onClose = onClose;\n    this._id = id;\n    this._profileName = `${new Date().toISOString()}-${clientType}`;\n\n    this._dispatcherConnection = new DispatcherConnection();\n    this._dispatcherConnection.onmessage = async message => {\n      await lock;\n      if (ws.readyState !== ws.CLOSING) {\n        const messageString = JSON.stringify(message);\n        if (debugLogger.isEnabled('server:channel'))\n          debugLogger.log('server:channel', `[${this._id}] ${monotonicTime() * 1000} SEND ► ${messageString}`);\n        if (debugLogger.isEnabled('server:metadata'))\n          this.logServerMetadata(message, messageString, 'SEND');\n        ws.send(messageString);\n      }\n    };\n    ws.on('message', async (message: string) => {\n      await lock;\n      const messageString = Buffer.from(message).toString();\n      const jsonMessage = JSON.parse(messageString);\n      if (debugLogger.isEnabled('server:channel'))\n        debugLogger.log('server:channel', `[${this._id}] ${monotonicTime() * 1000} ◀ RECV ${messageString}`);\n      if (debugLogger.isEnabled('server:metadata'))\n        this.logServerMetadata(jsonMessage, messageString, 'RECV');\n      this._dispatcherConnection.dispatch(jsonMessage);\n    });\n\n    ws.on('close', () => this._onDisconnect());\n    ws.on('error', (error: Error) => this._onDisconnect(error));\n\n    if (clientType === 'controller') {\n      this._root = this._initDebugControllerMode();\n      return;\n    }\n\n    this._root = new RootDispatcher(this._dispatcherConnection, async (scope, options) => {\n      await startProfiling();\n      if (clientType === 'reuse-browser')\n        return await this._initReuseBrowsersMode(scope);\n      if (clientType === 'pre-launched-browser-or-android')\n        return this._preLaunched.browser ? await this._initPreLaunchedBrowserMode(scope) : await this._initPreLaunchedAndroidMode(scope);\n      if (clientType === 'launch-browser')\n        return await this._initLaunchBrowserMode(scope, options);\n      throw new Error('Unsupported client type: ' + clientType);\n    });\n  }\n\n  private async _initLaunchBrowserMode(scope: RootDispatcher, options: channels.RootInitializeParams) {\n    debugLogger.log('server', `[${this._id}] engaged launch mode for \"${this._options.browserName}\"`);\n    const playwright = createPlaywright({ sdkLanguage: options.sdkLanguage, isServer: true });\n\n    const ownedSocksProxy = await this._createOwnedSocksProxy(playwright);\n    const browser = await playwright[this._options.browserName as 'chromium'].launch(serverSideCallMetadata(), this._options.launchOptions);\n\n    this._cleanups.push(async () => {\n      for (const browser of playwright.allBrowsers())\n        await browser.close({ reason: 'Connection terminated' });\n    });\n    browser.on(Browser.Events.Disconnected, () => {\n      // Underlying browser did close for some reason - force disconnect the client.\n      this.close({ code: 1001, reason: 'Browser closed' });\n    });\n\n    return new PlaywrightDispatcher(scope, playwright, ownedSocksProxy, browser);\n  }\n\n  private async _initPreLaunchedBrowserMode(scope: RootDispatcher) {\n    debugLogger.log('server', `[${this._id}] engaged pre-launched (browser) mode`);\n    const playwright = this._preLaunched.playwright!;\n\n    // Note: connected client owns the socks proxy and configures the pattern.\n    this._preLaunched.socksProxy?.setPattern(this._options.socksProxyPattern);\n\n    const browser = this._preLaunched.browser!;\n    browser.on(Browser.Events.Disconnected, () => {\n      // Underlying browser did close for some reason - force disconnect the client.\n      this.close({ code: 1001, reason: 'Browser closed' });\n    });\n\n    const playwrightDispatcher = new PlaywrightDispatcher(scope, playwright, this._preLaunched.socksProxy, browser);\n    // In pre-launched mode, keep only the pre-launched browser.\n    for (const b of playwright.allBrowsers()) {\n      if (b !== browser)\n        await b.close({ reason: 'Connection terminated' });\n    }\n    this._cleanups.push(() => playwrightDispatcher.cleanup());\n    return playwrightDispatcher;\n  }\n\n  private async _initPreLaunchedAndroidMode(scope: RootDispatcher) {\n    debugLogger.log('server', `[${this._id}] engaged pre-launched (Android) mode`);\n    const playwright = this._preLaunched.playwright!;\n    const androidDevice = this._preLaunched.androidDevice!;\n    androidDevice.on(AndroidDevice.Events.Close, () => {\n      // Underlying browser did close for some reason - force disconnect the client.\n      this.close({ code: 1001, reason: 'Android device disconnected' });\n    });\n    const playwrightDispatcher = new PlaywrightDispatcher(scope, playwright, undefined, undefined, androidDevice);\n    this._cleanups.push(() => playwrightDispatcher.cleanup());\n    return playwrightDispatcher;\n  }\n\n  private _initDebugControllerMode(): DebugControllerDispatcher {\n    debugLogger.log('server', `[${this._id}] engaged reuse controller mode`);\n    const playwright = this._preLaunched.playwright!;\n    // Always create new instance based on the reused Playwright instance.\n    return new DebugControllerDispatcher(this._dispatcherConnection, playwright.debugController);\n  }\n\n  private async _initReuseBrowsersMode(scope: RootDispatcher) {\n    // Note: reuse browser mode does not support socks proxy, because\n    // clients come and go, while the browser stays the same.\n\n    debugLogger.log('server', `[${this._id}] engaged reuse browsers mode for ${this._options.browserName}`);\n    const playwright = this._preLaunched.playwright!;\n\n    const requestedOptions = launchOptionsHash(this._options.launchOptions);\n    let browser = playwright.allBrowsers().find(b => {\n      if (b.options.name !== this._options.browserName)\n        return false;\n      const existingOptions = launchOptionsHash(b.options.originalLaunchOptions);\n      return existingOptions === requestedOptions;\n    });\n\n    // Close remaining browsers of this type+channel. Keep different browser types for the speed.\n    for (const b of playwright.allBrowsers()) {\n      if (b === browser)\n        continue;\n      if (b.options.name === this._options.browserName && b.options.channel === this._options.launchOptions.channel)\n        await b.close({ reason: 'Connection terminated' });\n    }\n\n    if (!browser) {\n      browser = await playwright[(this._options.browserName || 'chromium') as 'chromium'].launch(serverSideCallMetadata(), {\n        ...this._options.launchOptions,\n        headless: !!process.env.PW_DEBUG_CONTROLLER_HEADLESS,\n      });\n      browser.on(Browser.Events.Disconnected, () => {\n        // Underlying browser did close for some reason - force disconnect the client.\n        this.close({ code: 1001, reason: 'Browser closed' });\n      });\n    }\n\n    this._cleanups.push(async () => {\n      // Don't close the pages so that user could debug them,\n      // but close all the empty browsers and contexts to clean up.\n      for (const browser of playwright.allBrowsers()) {\n        for (const context of browser.contexts()) {\n          if (!context.pages().length)\n            await context.close({ reason: 'Connection terminated' });\n          else\n            await context.stopPendingOperations('Connection closed');\n        }\n        if (!browser.contexts())\n          await browser.close({ reason: 'Connection terminated' });\n      }\n    });\n\n    const playwrightDispatcher = new PlaywrightDispatcher(scope, playwright, undefined, browser);\n    return playwrightDispatcher;\n  }\n\n  private async _createOwnedSocksProxy(playwright: Playwright): Promise<SocksProxy | undefined> {\n    if (!this._options.socksProxyPattern)\n      return;\n    const socksProxy = new SocksProxy();\n    socksProxy.setPattern(this._options.socksProxyPattern);\n    playwright.options.socksProxyPort = await socksProxy.listen(0);\n    debugLogger.log('server', `[${this._id}] started socks proxy on port ${playwright.options.socksProxyPort}`);\n    this._cleanups.push(() => socksProxy.close());\n    return socksProxy;\n  }\n\n  private async _onDisconnect(error?: Error) {\n    this._disconnected = true;\n    debugLogger.log('server', `[${this._id}] disconnected. error: ${error}`);\n    this._root._dispose();\n    debugLogger.log('server', `[${this._id}] starting cleanup`);\n    for (const cleanup of this._cleanups)\n      await cleanup().catch(() => {});\n    await stopProfiling(this._profileName);\n    this._onClose();\n    debugLogger.log('server', `[${this._id}] finished cleanup`);\n  }\n\n  private logServerMetadata(message: object, messageString: string, direction: 'SEND' | 'RECV') {\n    const serverLogMetadata = {\n      wallTime: Date.now(),\n      id: (message as any).id,\n      guid: (message as any).guid,\n      method: (message as any).method,\n      payloadSizeInBytes: Buffer.byteLength(messageString, 'utf-8')\n    };\n    debugLogger.log('server:metadata', (direction === 'SEND' ? 'SEND ► ' : '◀ RECV ') + JSON.stringify(serverLogMetadata));\n  }\n\n  async close(reason?: { code: number, reason: string }) {\n    if (this._disconnected)\n      return;\n    debugLogger.log('server', `[${this._id}] force closing connection: ${reason?.reason || ''} (${reason?.code || 0})`);\n    try {\n      this._ws.close(reason?.code, reason?.reason);\n    } catch (e) {\n    }\n  }\n}\n\nfunction launchOptionsHash(options: LaunchOptions) {\n  const copy = { ...options };\n  for (const k of Object.keys(copy)) {\n    const key = k as keyof LaunchOptions;\n    if (copy[key] === defaultLaunchOptions[key])\n      delete copy[key];\n  }\n  for (const key of optionsThatAllowBrowserReuse)\n    delete copy[key];\n  return JSON.stringify(copy);\n}\n\nfunction filterLaunchOptions(options: LaunchOptions): LaunchOptions {\n  return {\n    channel: options.channel,\n    args: options.args,\n    ignoreAllDefaultArgs: options.ignoreAllDefaultArgs,\n    ignoreDefaultArgs: options.ignoreDefaultArgs,\n    timeout: options.timeout,\n    headless: options.headless,\n    proxy: options.proxy,\n    chromiumSandbox: options.chromiumSandbox,\n    firefoxUserPrefs: options.firefoxUserPrefs,\n    slowMo: options.slowMo,\n    executablePath: isUnderTest() ? options.executablePath : undefined,\n  };\n}\n\nconst defaultLaunchOptions: LaunchOptions = {\n  ignoreAllDefaultArgs: false,\n  handleSIGINT: false,\n  handleSIGTERM: false,\n  handleSIGHUP: false,\n  headless: true,\n  devtools: false,\n};\n\nconst optionsThatAllowBrowserReuse: (keyof LaunchOptions)[] = [\n  'headless',\n  'tracesDir',\n];\n"],"mappings":"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"}