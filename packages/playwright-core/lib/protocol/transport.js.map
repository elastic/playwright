{"version":3,"file":"transport.js","names":["_utils","require","PipeTransport","constructor","pipeWrite","pipeRead","closeable","endian","_pipeWrite","_data","Buffer","from","_waitForNextTask","makeWaitForNextTask","_closed","_bytesLeft","onmessage","onclose","_endian","_closeableStream","on","buffer","_dispatch","undefined","send","message","Error","data","dataLength","alloc","writeUInt32BE","length","writeUInt32LE","write","close","concat","readUInt32BE","readUInt32LE","slice","toString","exports"],"sources":["../../src/protocol/transport.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeWaitForNextTask } from '../utils';\n\nexport interface WritableStream {\n  write(data: Buffer): void;\n}\n\nexport interface ReadableStream {\n  on(event: 'data', callback: (b: Buffer) => void): void;\n  on(event: 'close', callback: () => void): void;\n}\n\nexport interface ClosableStream {\n  close(): void;\n}\n\nexport class PipeTransport {\n  private _pipeWrite: WritableStream;\n  private _data = Buffer.from([]);\n  private _waitForNextTask = makeWaitForNextTask();\n  private _closed = false;\n  private _bytesLeft = 0;\n\n  onmessage?: (message: string) => void;\n  onclose?: () => void;\n\n  private _endian: 'be' | 'le';\n  private _closeableStream: ClosableStream | undefined;\n\n  constructor(pipeWrite: WritableStream, pipeRead: ReadableStream, closeable?: ClosableStream, endian: 'be' | 'le' = 'le') {\n    this._pipeWrite = pipeWrite;\n    this._endian = endian;\n    this._closeableStream = closeable;\n    pipeRead.on('data', buffer => this._dispatch(buffer));\n    pipeRead.on('close', () => {\n      this._closed = true;\n      if (this.onclose)\n        this.onclose();\n    });\n    this.onmessage = undefined;\n    this.onclose = undefined;\n  }\n\n  send(message: string) {\n    if (this._closed)\n      throw new Error('Pipe has been closed');\n    const data = Buffer.from(message, 'utf-8');\n    const dataLength = Buffer.alloc(4);\n    if (this._endian === 'be')\n      dataLength.writeUInt32BE(data.length, 0);\n    else\n      dataLength.writeUInt32LE(data.length, 0);\n    this._pipeWrite.write(dataLength);\n    this._pipeWrite.write(data);\n  }\n\n  close() {\n    // Let it throw.\n    this._closeableStream!.close();\n  }\n\n  _dispatch(buffer: Buffer) {\n    this._data = Buffer.concat([this._data, buffer]);\n    while (true) {\n      if (!this._bytesLeft && this._data.length < 4) {\n        // Need more data.\n        break;\n      }\n\n      if (!this._bytesLeft) {\n        this._bytesLeft = this._endian === 'be' ? this._data.readUInt32BE(0) : this._data.readUInt32LE(0);\n        this._data = this._data.slice(4);\n      }\n\n      if (!this._bytesLeft || this._data.length < this._bytesLeft) {\n        // Need more data.\n        break;\n      }\n\n      const message = this._data.slice(0, this._bytesLeft);\n      this._data = this._data.slice(this._bytesLeft);\n      this._bytesLeft = 0;\n      this._waitForNextTask(() => {\n        if (this.onmessage)\n          this.onmessage(message.toString('utf-8'));\n      });\n    }\n  }\n}\n"],"mappings":"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"}