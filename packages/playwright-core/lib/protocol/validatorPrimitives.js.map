{"version":3,"file":"validatorPrimitives.js","names":["_utils","require","ValidationError","Error","exports","scheme","findValidator","type","method","kind","validator","maybeFindValidator","schemeName","toUpperCase","substring","createMetadataValidator","tOptional","tNumber","arg","path","context","Number","valueOf","tBoolean","Boolean","tString","String","tBinary","binary","Buffer","from","toString","tUndefined","Object","is","undefined","tAny","v","tArray","Array","isArray","map","x","index","tObject","s","result","key","entries","value","isUnderTest","startsWith","tEnum","e","includes","join","tChannel","names","tChannelImpl","tType","name"],"sources":["../../src/protocol/validatorPrimitives.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isUnderTest } from '../utils';\n\nexport class ValidationError extends Error {}\nexport type Validator = (arg: any, path: string, context: ValidatorContext) => any;\nexport type ValidatorContext = {\n  tChannelImpl: (names: '*' | string[], arg: any, path: string, context: ValidatorContext) => any,\n  binary: 'toBase64' | 'fromBase64' | 'buffer',\n};\nexport const scheme: { [key: string]: Validator } = {};\n\nexport function findValidator(type: string, method: string, kind: 'Initializer' | 'Event' | 'Params' | 'Result'): Validator {\n  const validator = maybeFindValidator(type, method, kind);\n  if (!validator)\n    throw new ValidationError(`Unknown scheme for ${kind}: ${type}.${method}`);\n  return validator;\n}\nexport function maybeFindValidator(type: string, method: string, kind: 'Initializer' | 'Event' | 'Params' | 'Result'): Validator | undefined {\n  const schemeName = type + (kind === 'Initializer' ? '' : method[0].toUpperCase() + method.substring(1)) + kind;\n  return scheme[schemeName];\n}\nexport function createMetadataValidator(): Validator {\n  return tOptional(scheme['Metadata']);\n}\n\nexport const tNumber: Validator = (arg: any, path: string, context: ValidatorContext) => {\n  if (arg instanceof Number)\n    return arg.valueOf();\n  if (typeof arg === 'number')\n    return arg;\n  throw new ValidationError(`${path}: expected number, got ${typeof arg}`);\n};\nexport const tBoolean: Validator = (arg: any, path: string, context: ValidatorContext) => {\n  if (arg instanceof Boolean)\n    return arg.valueOf();\n  if (typeof arg === 'boolean')\n    return arg;\n  throw new ValidationError(`${path}: expected boolean, got ${typeof arg}`);\n};\nexport const tString: Validator = (arg: any, path: string, context: ValidatorContext) => {\n  if (arg instanceof String)\n    return arg.valueOf();\n  if (typeof arg === 'string')\n    return arg;\n  throw new ValidationError(`${path}: expected string, got ${typeof arg}`);\n};\nexport const tBinary: Validator = (arg: any, path: string, context: ValidatorContext) => {\n  if (context.binary === 'fromBase64') {\n    if (arg instanceof String)\n      return Buffer.from(arg.valueOf(), 'base64');\n    if (typeof arg === 'string')\n      return Buffer.from(arg, 'base64');\n    throw new ValidationError(`${path}: expected base64-encoded buffer, got ${typeof arg}`);\n  }\n  if (context.binary === 'toBase64') {\n    if (!(arg instanceof Buffer))\n      throw new ValidationError(`${path}: expected Buffer, got ${typeof arg}`);\n    return (arg as Buffer).toString('base64');\n  }\n  if (context.binary === 'buffer') {\n    if (!(arg instanceof Buffer))\n      throw new ValidationError(`${path}: expected Buffer, got ${typeof arg}`);\n    return arg;\n  }\n  throw new ValidationError(`Unsupported binary behavior \"${context.binary}\"`);\n};\nexport const tUndefined: Validator = (arg: any, path: string, context: ValidatorContext) => {\n  if (Object.is(arg, undefined))\n    return arg;\n  throw new ValidationError(`${path}: expected undefined, got ${typeof arg}`);\n};\nexport const tAny: Validator = (arg: any, path: string, context: ValidatorContext) => {\n  return arg;\n};\nexport const tOptional = (v: Validator): Validator => {\n  return (arg: any, path: string, context: ValidatorContext) => {\n    if (Object.is(arg, undefined))\n      return arg;\n    return v(arg, path, context);\n  };\n};\nexport const tArray = (v: Validator): Validator => {\n  return (arg: any, path: string, context: ValidatorContext) => {\n    if (!Array.isArray(arg))\n      throw new ValidationError(`${path}: expected array, got ${typeof arg}`);\n    return arg.map((x, index) => v(x, path + '[' + index + ']', context));\n  };\n};\nexport const tObject = (s: { [key: string]: Validator }): Validator => {\n  return (arg: any, path: string, context: ValidatorContext) => {\n    if (Object.is(arg, null))\n      throw new ValidationError(`${path}: expected object, got null`);\n    if (typeof arg !== 'object')\n      throw new ValidationError(`${path}: expected object, got ${typeof arg}`);\n    const result: any = {};\n    for (const [key, v] of Object.entries(s)) {\n      const value = v(arg[key], path ? path + '.' + key : key, context);\n      if (!Object.is(value, undefined))\n        result[key] = value;\n    }\n    if (isUnderTest()) {\n      for (const [key, value] of Object.entries(arg)) {\n        if (key.startsWith('__testHook'))\n          result[key] = value;\n      }\n    }\n    return result;\n  };\n};\nexport const tEnum = (e: string[]): Validator => {\n  return (arg: any, path: string, context: ValidatorContext) => {\n    if (!e.includes(arg))\n      throw new ValidationError(`${path}: expected one of (${e.join('|')})`);\n    return arg;\n  };\n};\nexport const tChannel = (names: '*' | string[]): Validator => {\n  return (arg: any, path: string, context: ValidatorContext) => {\n    return context.tChannelImpl(names, arg, path, context);\n  };\n};\nexport const tType = (name: string): Validator => {\n  return (arg: any, path: string, context: ValidatorContext) => {\n    const v = scheme[name];\n    if (!v)\n      throw new ValidationError(path + ': unknown type \"' + name + '\"');\n    return v(arg, path, context);\n  };\n};\n"],"mappings":"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"}