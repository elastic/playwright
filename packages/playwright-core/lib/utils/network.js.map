{"version":3,"file":"network.js","names":["_http","_interopRequireDefault","require","_https","_http2","_utilsBundle","_url","_happyEyeballs","obj","__esModule","default","NET_DEFAULT_TIMEOUT","exports","httpRequest","params","onResponse","onError","_params$timeout","parsedUrl","url","parse","options","agent","protocol","httpsHappyEyeballsAgent","httpHappyEyeballsAgent","method","headers","rejectUnauthorized","undefined","timeout","proxyURL","getProxyForUrl","parsedProxyURL","startsWith","path","href","host","hostname","port","secureProxy","HttpsProxyAgent","requestCallback","res","statusCode","location","URL","toString","request","https","http","on","rejectOnTimeout","Error","abort","setTimeout","end","data","fetchData","Promise","resolve","reject","response","error","body","chunk","createHttpServer","args","server","createServer","decorateServer","createHttpsServer","createHttp2Server","http2","createSecureServer","isURLAvailable","ignoreHTTPSErrors","onLog","onStdErr","httpStatusCode","pathname","indexUrl","Accept","_res$statusCode","resume","code","message","sockets","Set","socket","add","once","delete","close","callback","destroy","clear","call"],"sources":["../../src/utils/network.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport http from 'http';\nimport https from 'https';\nimport http2 from 'http2';\nimport type net from 'net';\nimport { getProxyForUrl } from '../utilsBundle';\nimport { HttpsProxyAgent } from '../utilsBundle';\nimport url from 'url';\nimport { httpHappyEyeballsAgent, httpsHappyEyeballsAgent } from './happy-eyeballs';\n\nexport type HTTPRequestParams = {\n  url: string,\n  method?: string,\n  headers?: http.OutgoingHttpHeaders,\n  data?: string | Buffer,\n  timeout?: number,\n  rejectUnauthorized?: boolean,\n};\n\nexport const NET_DEFAULT_TIMEOUT = 30_000;\n\nexport function httpRequest(params: HTTPRequestParams, onResponse: (r: http.IncomingMessage) => void, onError: (error: Error) => void) {\n  const parsedUrl = url.parse(params.url);\n  let options: https.RequestOptions = {\n    ...parsedUrl,\n    agent: parsedUrl.protocol === 'https:' ? httpsHappyEyeballsAgent : httpHappyEyeballsAgent,\n    method: params.method || 'GET',\n    headers: params.headers,\n  };\n  if (params.rejectUnauthorized !== undefined)\n    options.rejectUnauthorized = params.rejectUnauthorized;\n\n  const timeout = params.timeout ?? NET_DEFAULT_TIMEOUT;\n\n  const proxyURL = getProxyForUrl(params.url);\n  if (proxyURL) {\n    const parsedProxyURL = url.parse(proxyURL);\n    if (params.url.startsWith('http:')) {\n      options = {\n        path: parsedUrl.href,\n        host: parsedProxyURL.hostname,\n        port: parsedProxyURL.port,\n        headers: options.headers,\n        method: options.method\n      };\n    } else {\n      (parsedProxyURL as any).secureProxy = parsedProxyURL.protocol === 'https:';\n\n      options.agent = new HttpsProxyAgent(parsedProxyURL);\n      options.rejectUnauthorized = false;\n    }\n  }\n\n  const requestCallback = (res: http.IncomingMessage) => {\n    const statusCode = res.statusCode || 0;\n    if (statusCode >= 300 && statusCode < 400 && res.headers.location)\n      httpRequest({ ...params, url: new URL(res.headers.location, params.url).toString() }, onResponse, onError);\n    else\n      onResponse(res);\n  };\n  const request = options.protocol === 'https:' ?\n    https.request(options, requestCallback) :\n    http.request(options, requestCallback);\n  request.on('error', onError);\n  if (timeout !== undefined) {\n    const rejectOnTimeout = () =>  {\n      onError(new Error(`Request to ${params.url} timed out after ${timeout}ms`));\n      request.abort();\n    };\n    if (timeout <= 0) {\n      rejectOnTimeout();\n      return;\n    }\n    request.setTimeout(timeout, rejectOnTimeout);\n  }\n  request.end(params.data);\n}\n\nexport function fetchData(params: HTTPRequestParams, onError?: (params: HTTPRequestParams, response: http.IncomingMessage) => Promise<Error>): Promise<string> {\n  return new Promise((resolve, reject) => {\n    httpRequest(params, async response => {\n      if (response.statusCode !== 200) {\n        const error = onError ? await onError(params, response) : new Error(`fetch failed: server returned code ${response.statusCode}. URL: ${params.url}`);\n        reject(error);\n        return;\n      }\n      let body = '';\n      response.on('data', (chunk: string) => body += chunk);\n      response.on('error', (error: any) => reject(error));\n      response.on('end', () => resolve(body));\n    }, reject);\n  });\n}\n\nexport function createHttpServer(requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): http.Server;\nexport function createHttpServer(options: http.ServerOptions, requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): http.Server;\nexport function createHttpServer(...args: any[]): http.Server {\n  const server = http.createServer(...args);\n  decorateServer(server);\n  return server;\n}\n\nexport function createHttpsServer(requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): https.Server;\nexport function createHttpsServer(options: https.ServerOptions, requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): https.Server;\nexport function createHttpsServer(...args: any[]): https.Server {\n  const server = https.createServer(...args);\n  decorateServer(server);\n  return server;\n}\n\nexport function createHttp2Server(  onRequestHandler?: (request: http2.Http2ServerRequest, response: http2.Http2ServerResponse) => void,): http2.Http2SecureServer;\nexport function createHttp2Server(options: http2.SecureServerOptions, onRequestHandler?: (request: http2.Http2ServerRequest, response: http2.Http2ServerResponse) => void,): http2.Http2SecureServer;\nexport function createHttp2Server(...args: any[]): http2.Http2SecureServer {\n  const server = http2.createSecureServer(...args);\n  decorateServer(server);\n  return server;\n}\n\nexport async function isURLAvailable(url: URL, ignoreHTTPSErrors: boolean, onLog?: (data: string) => void, onStdErr?: (data: string) => void) {\n  let statusCode = await httpStatusCode(url, ignoreHTTPSErrors, onLog, onStdErr);\n  if (statusCode === 404 && url.pathname === '/') {\n    const indexUrl = new URL(url);\n    indexUrl.pathname = '/index.html';\n    statusCode = await httpStatusCode(indexUrl, ignoreHTTPSErrors, onLog, onStdErr);\n  }\n  return statusCode >= 200 && statusCode < 404;\n}\n\nasync function httpStatusCode(url: URL, ignoreHTTPSErrors: boolean, onLog?: (data: string) => void, onStdErr?: (data: string) => void): Promise<number> {\n  return new Promise(resolve => {\n    onLog?.(`HTTP GET: ${url}`);\n    httpRequest({\n      url: url.toString(),\n      headers: { Accept: '*/*' },\n      rejectUnauthorized: !ignoreHTTPSErrors\n    }, res => {\n      res.resume();\n      const statusCode = res.statusCode ?? 0;\n      onLog?.(`HTTP Status: ${statusCode}`);\n      resolve(statusCode);\n    }, error => {\n      if ((error as NodeJS.ErrnoException).code === 'DEPTH_ZERO_SELF_SIGNED_CERT')\n        onStdErr?.(`[WebServer] Self-signed certificate detected. Try adding ignoreHTTPSErrors: true to config.webServer.`);\n      onLog?.(`Error while checking if ${url} is available: ${error.message}`);\n      resolve(0);\n    });\n  });\n}\n\nfunction decorateServer(server: net.Server) {\n  const sockets = new Set<net.Socket>();\n  server.on('connection', socket => {\n    sockets.add(socket);\n    socket.once('close', () => sockets.delete(socket));\n  });\n\n  const close = server.close;\n  server.close = (callback?: (err?: Error) => void) => {\n    for (const socket of sockets)\n      socket.destroy();\n    sockets.clear();\n    return close.call(server, callback);\n  };\n}\n"],"mappings":"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"}