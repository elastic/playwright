{"version":3,"file":"linuxUtils.js","names":["_fs","_interopRequireDefault","require","obj","__esModule","default","didFailToReadOSRelease","osRelease","getLinuxDistributionInfo","process","platform","undefined","_fields$get","_fields$get2","osReleaseText","fs","promises","readFile","fields","parseOSReleaseText","id","get","version","e","getLinuxDistributionInfoSync","_fields$get3","_fields$get4","readFileSync","Map","line","split","tokens","name","shift","value","join","trim","startsWith","endsWith","substring","length","set","toLowerCase"],"sources":["../../src/utils/linuxUtils.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\n\nlet didFailToReadOSRelease = false;\nlet osRelease: {\n  id: string,\n  version: string,\n} | undefined;\n\nexport async function getLinuxDistributionInfo(): Promise<{ id: string, version: string } | undefined> {\n  if (process.platform !== 'linux')\n    return undefined;\n  if (!osRelease && !didFailToReadOSRelease) {\n    try {\n      // List of /etc/os-release values for different distributions could be\n      // found here: https://gist.github.com/aslushnikov/8ceddb8288e4cf9db3039c02e0f4fb75\n      const osReleaseText = await fs.promises.readFile('/etc/os-release', 'utf8');\n      const fields = parseOSReleaseText(osReleaseText);\n      osRelease = {\n        id: fields.get('id') ?? '',\n        version: fields.get('version_id') ?? '',\n      };\n    } catch (e) {\n      didFailToReadOSRelease = true;\n    }\n  }\n  return osRelease;\n}\n\nexport function getLinuxDistributionInfoSync(): { id: string, version: string } | undefined {\n  if (process.platform !== 'linux')\n    return undefined;\n  if (!osRelease && !didFailToReadOSRelease) {\n    try {\n      // List of /etc/os-release values for different distributions could be\n      // found here: https://gist.github.com/aslushnikov/8ceddb8288e4cf9db3039c02e0f4fb75\n      const osReleaseText = fs.readFileSync('/etc/os-release', 'utf8');\n      const fields = parseOSReleaseText(osReleaseText);\n      osRelease = {\n        id: fields.get('id') ?? '',\n        version: fields.get('version_id') ?? '',\n      };\n    } catch (e) {\n      didFailToReadOSRelease = true;\n    }\n  }\n  return osRelease;\n}\n\nfunction parseOSReleaseText(osReleaseText: string): Map<string, string> {\n  const fields = new Map();\n  for (const line of osReleaseText.split('\\n')) {\n    const tokens = line.split('=');\n    const name = tokens.shift();\n    let value = tokens.join('=').trim();\n    if (value.startsWith('\"') && value.endsWith('\"'))\n      value = value.substring(1, value.length - 1);\n    if (!name)\n      continue;\n    fields.set(name.toLowerCase(), value);\n  }\n  return fields;\n}\n\n"],"mappings":"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"}