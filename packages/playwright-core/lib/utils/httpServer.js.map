{"version":3,"file":"httpServer.js","names":["_fs","_interopRequireDefault","require","_path","_utilsBundle","_debug","_network","_manualPromise","_crypto","obj","__esModule","default","HttpServer","constructor","_server","_urlPrefixPrecise","_urlPrefixHumanReadable","_port","_started","_routes","_wsGuid","createHttpServer","_onRequest","bind","server","routePrefix","prefix","handler","push","routePath","path","exact","port","_tryStart","host","errorPromise","ManualPromise","errorListener","error","reject","on","listen","Promise","race","cb","once","removeListener","createWebSocket","transport","guid","assert","createGuid","wss","wsServer","ws","sendEvent","method","params","send","JSON","stringify","close","message","id","parse","String","result","dispatch","e","onclose","wsGuid","start","options","preferredPort","includes","undefined","address","resolvedHost","family","stop","urlPrefix","purpose","serveFile","request","response","absoluteFilePath","headers","name","value","Object","entries","setHeader","range","_serveRangeFile","_serveFile","content","fs","readFileSync","statusCode","contentType","mime","getType","extname","byteLength","end","startsWith","filter","char","length","startStr","endStr","replace","split","size","statSync","Number","isNaN","writeHead","readable","createReadStream","pipe","origin","url","URL","route","pathname","exports"],"sources":["../../src/utils/httpServer.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type http from 'http';\nimport fs from 'fs';\nimport path from 'path';\nimport { mime, wsServer } from '../utilsBundle';\nimport { assert } from './debug';\nimport { createHttpServer } from './network';\nimport { ManualPromise } from './manualPromise';\nimport { createGuid } from './crypto';\n\nexport type ServerRouteHandler = (request: http.IncomingMessage, response: http.ServerResponse) => boolean;\n\nexport type Transport = {\n  sendEvent?: (method: string, params: any) => void;\n  dispatch: (method: string, params: any) => Promise<any>;\n  close?: () => void;\n  onclose: () => void;\n};\n\nexport class HttpServer {\n  private _server: http.Server;\n  private _urlPrefixPrecise: string = '';\n  private _urlPrefixHumanReadable: string = '';\n  private _port: number = 0;\n  private _started = false;\n  private _routes: { prefix?: string, exact?: string, handler: ServerRouteHandler }[] = [];\n  private _wsGuid: string | undefined;\n\n  constructor() {\n    this._server = createHttpServer(this._onRequest.bind(this));\n  }\n\n  server() {\n    return this._server;\n  }\n\n  routePrefix(prefix: string, handler: ServerRouteHandler) {\n    this._routes.push({ prefix, handler });\n  }\n\n  routePath(path: string, handler: ServerRouteHandler) {\n    this._routes.push({ exact: path, handler });\n  }\n\n  port(): number {\n    return this._port;\n  }\n\n  private async _tryStart(port: number | undefined, host: string) {\n    const errorPromise = new ManualPromise();\n    const errorListener = (error: Error) => errorPromise.reject(error);\n    this._server.on('error', errorListener);\n\n    try {\n      this._server.listen(port, host);\n      await Promise.race([\n        new Promise(cb => this._server!.once('listening', cb)),\n        errorPromise,\n      ]);\n    } finally {\n      this._server.removeListener('error', errorListener);\n    }\n  }\n\n  createWebSocket(transport: Transport, guid?: string) {\n    assert(!this._wsGuid, 'can only create one main websocket transport per server');\n    this._wsGuid = guid || createGuid();\n    const wss = new wsServer({ server: this._server, path: '/' + this._wsGuid });\n    wss.on('connection', ws => {\n      transport.sendEvent = (method, params)  => ws.send(JSON.stringify({ method, params }));\n      transport.close = () => ws.close();\n      ws.on('message', async message => {\n        const { id, method, params } = JSON.parse(String(message));\n        try {\n          const result = await transport.dispatch(method, params);\n          ws.send(JSON.stringify({ id, result }));\n        } catch (e) {\n          ws.send(JSON.stringify({ id, error: String(e) }));\n        }\n      });\n      ws.on('close', () => transport.onclose());\n      ws.on('error', () => transport.onclose());\n    });\n  }\n\n  wsGuid(): string | undefined {\n    return this._wsGuid;\n  }\n\n  async start(options: { port?: number, preferredPort?: number, host?: string } = {}): Promise<void> {\n    assert(!this._started, 'server already started');\n    this._started = true;\n\n    const host = options.host || 'localhost';\n    if (options.preferredPort) {\n      try {\n        await this._tryStart(options.preferredPort, host);\n      } catch (e) {\n        if (!e || !e.message || !e.message.includes('EADDRINUSE'))\n          throw e;\n        await this._tryStart(undefined, host);\n      }\n    } else {\n      await this._tryStart(options.port, host);\n    }\n\n    const address = this._server.address();\n    assert(address, 'Could not bind server socket');\n    if (typeof address === 'string') {\n      this._urlPrefixPrecise = address;\n      this._urlPrefixHumanReadable = address;\n    } else {\n      this._port = address.port;\n      const resolvedHost = address.family === 'IPv4' ? address.address : `[${address.address}]`;\n      this._urlPrefixPrecise = `http://${resolvedHost}:${address.port}`;\n      this._urlPrefixHumanReadable = `http://${host}:${address.port}`;\n    }\n  }\n\n  async stop() {\n    await new Promise(cb => this._server!.close(cb));\n  }\n\n  urlPrefix(purpose: 'human-readable' | 'precise'): string {\n    return purpose === 'human-readable' ? this._urlPrefixHumanReadable : this._urlPrefixPrecise;\n  }\n\n  serveFile(request: http.IncomingMessage, response: http.ServerResponse, absoluteFilePath: string, headers?: { [name: string]: string }): boolean {\n    try {\n      for (const [name, value] of Object.entries(headers || {}))\n        response.setHeader(name, value);\n      if (request.headers.range)\n        this._serveRangeFile(request, response, absoluteFilePath);\n      else\n        this._serveFile(response, absoluteFilePath);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  _serveFile(response: http.ServerResponse, absoluteFilePath: string) {\n    const content = fs.readFileSync(absoluteFilePath);\n    response.statusCode = 200;\n    const contentType = mime.getType(path.extname(absoluteFilePath)) || 'application/octet-stream';\n    response.setHeader('Content-Type', contentType);\n    response.setHeader('Content-Length', content.byteLength);\n    response.end(content);\n  }\n\n  _serveRangeFile(request: http.IncomingMessage, response: http.ServerResponse, absoluteFilePath: string) {\n    const range = request.headers.range;\n    if (!range || !range.startsWith('bytes=') || range.includes(', ') || [...range].filter(char => char === '-').length !== 1) {\n      response.statusCode = 400;\n      return response.end('Bad request');\n    }\n\n    // Parse the range header: https://datatracker.ietf.org/doc/html/rfc7233#section-2.1\n    const [startStr, endStr] = range.replace(/bytes=/, '').split('-');\n\n    // Both start and end (when passing to fs.createReadStream) and the range header are inclusive and start counting at 0.\n    let start: number;\n    let end: number;\n    const size = fs.statSync(absoluteFilePath).size;\n    if (startStr !== '' && endStr === '') {\n      // No end specified: use the whole file\n      start = +startStr;\n      end = size - 1;\n    } else if (startStr === '' && endStr !== '') {\n      // No start specified: calculate start manually\n      start = size - +endStr;\n      end = size - 1;\n    } else {\n      start = +startStr;\n      end = +endStr;\n    }\n\n    // Handle unavailable range request\n    if (Number.isNaN(start) || Number.isNaN(end) || start >= size || end >= size || start > end) {\n      // Return the 416 Range Not Satisfiable: https://datatracker.ietf.org/doc/html/rfc7233#section-4.4\n      response.writeHead(416, {\n        'Content-Range': `bytes */${size}`\n      });\n      return response.end();\n    }\n\n    // Sending Partial Content: https://datatracker.ietf.org/doc/html/rfc7233#section-4.1\n    response.writeHead(206, {\n      'Content-Range': `bytes ${start}-${end}/${size}`,\n      'Accept-Ranges': 'bytes',\n      'Content-Length': end - start + 1,\n      'Content-Type': mime.getType(path.extname(absoluteFilePath))!,\n    });\n\n    const readable = fs.createReadStream(absoluteFilePath, { start, end });\n    readable.pipe(response);\n  }\n\n  private _onRequest(request: http.IncomingMessage, response: http.ServerResponse) {\n    response.setHeader('Access-Control-Allow-Origin', '*');\n    response.setHeader('Access-Control-Request-Method', '*');\n    response.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET');\n    if (request.headers.origin)\n      response.setHeader('Access-Control-Allow-Headers', request.headers.origin);\n\n    if (request.method === 'OPTIONS') {\n      response.writeHead(200);\n      response.end();\n      return;\n    }\n\n    request.on('error', () => response.end());\n    try {\n      if (!request.url) {\n        response.end();\n        return;\n      }\n      const url = new URL('http://localhost' + request.url);\n      for (const route of this._routes) {\n        if (route.exact && url.pathname === route.exact && route.handler(request, response))\n          return;\n        if (route.prefix && url.pathname.startsWith(route.prefix) && route.handler(request, response))\n          return;\n      }\n      response.statusCode = 404;\n      response.end();\n    } catch (e) {\n      response.end();\n    }\n  }\n}\n"],"mappings":"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"}