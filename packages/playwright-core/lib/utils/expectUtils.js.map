{"version":3,"file":"expectUtils.js","names":["_rtti","require","serializeExpectedTextValues","items","options","map","i","string","isString","undefined","regexSource","isRegExp","source","regexFlags","flags","matchSubstring","ignoreCase","normalizeWhiteSpace"],"sources":["../../src/utils/expectUtils.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ExpectedTextValue } from '@protocol/channels';\nimport { isRegExp, isString } from './rtti';\n\nexport function serializeExpectedTextValues(items: (string | RegExp)[], options: { matchSubstring?: boolean, normalizeWhiteSpace?: boolean, ignoreCase?: boolean } = {}): ExpectedTextValue[] {\n  return items.map(i => ({\n    string: isString(i) ? i : undefined,\n    regexSource: isRegExp(i) ? i.source : undefined,\n    regexFlags: isRegExp(i) ? i.flags : undefined,\n    matchSubstring: options.matchSubstring,\n    ignoreCase: options.ignoreCase,\n    normalizeWhiteSpace: options.normalizeWhiteSpace,\n  }));\n}\n"],"mappings":";;;;;;AAiBA,IAAAA,KAAA,GAAAC,OAAA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKO,SAASC,2BAA2BA,CAACC,KAA0B,EAAEC,OAA0F,GAAG,CAAC,CAAC,EAAuB;EAC5L,OAAOD,KAAK,CAACE,GAAG,CAACC,CAAC,KAAK;IACrBC,MAAM,EAAE,IAAAC,cAAQ,EAACF,CAAC,CAAC,GAAGA,CAAC,GAAGG,SAAS;IACnCC,WAAW,EAAE,IAAAC,cAAQ,EAACL,CAAC,CAAC,GAAGA,CAAC,CAACM,MAAM,GAAGH,SAAS;IAC/CI,UAAU,EAAE,IAAAF,cAAQ,EAACL,CAAC,CAAC,GAAGA,CAAC,CAACQ,KAAK,GAAGL,SAAS;IAC7CM,cAAc,EAAEX,OAAO,CAACW,cAAc;IACtCC,UAAU,EAAEZ,OAAO,CAACY,UAAU;IAC9BC,mBAAmB,EAAEb,OAAO,CAACa;EAC/B,CAAC,CAAC,CAAC;AACL"}