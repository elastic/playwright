{"version":3,"file":"urlMatch.js","names":["_stringUtils","require","escapedChars","Set","globToRegex","glob","tokens","inGroup","i","length","c","char","push","has","beforeDeep","starCount","afterDeep","isDeep","undefined","RegExp","join","isRegExp","obj","Object","prototype","toString","call","urlMatchesEqual","match1","match2","source","flags","urlMatches","baseURL","urlString","match","isString","startsWith","constructURLBasedOnBaseURL","test","url","parsedURL","pathname","Error","URL","e","givenURL"],"sources":["../../../src/utils/isomorphic/urlMatch.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isString } from './stringUtils';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions#escaping\nconst escapedChars = new Set(['$', '^', '+', '.', '*', '(', ')', '|', '\\\\', '?', '{', '}', '[', ']']);\n\nexport function globToRegex(glob: string): RegExp {\n  const tokens = ['^'];\n  let inGroup = false;\n  for (let i = 0; i < glob.length; ++i) {\n    const c = glob[i];\n    if (c === '\\\\' && i + 1 < glob.length) {\n      const char = glob[++i];\n      tokens.push(escapedChars.has(char) ? '\\\\' + char : char);\n      continue;\n    }\n    if (c === '*') {\n      const beforeDeep = glob[i - 1];\n      let starCount = 1;\n      while (glob[i + 1] === '*') {\n        starCount++;\n        i++;\n      }\n      const afterDeep = glob[i + 1];\n      const isDeep = starCount > 1 &&\n          (beforeDeep === '/' || beforeDeep === undefined) &&\n          (afterDeep === '/' || afterDeep === undefined);\n      if (isDeep) {\n        tokens.push('((?:[^/]*(?:\\/|$))*)');\n        i++;\n      } else {\n        tokens.push('([^/]*)');\n      }\n      continue;\n    }\n\n    switch (c) {\n      case '?':\n        tokens.push('.');\n        break;\n      case '[':\n        tokens.push('[');\n        break;\n      case ']':\n        tokens.push(']');\n        break;\n      case '{':\n        inGroup = true;\n        tokens.push('(');\n        break;\n      case '}':\n        inGroup = false;\n        tokens.push(')');\n        break;\n      case ',':\n        if (inGroup) {\n          tokens.push('|');\n          break;\n        }\n        tokens.push('\\\\' + c);\n        break;\n      default:\n        tokens.push(escapedChars.has(c) ? '\\\\' + c : c);\n    }\n  }\n  tokens.push('$');\n  return new RegExp(tokens.join(''));\n}\n\nfunction isRegExp(obj: any): obj is RegExp {\n  return obj instanceof RegExp || Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nexport type URLMatch = string | RegExp | ((url: URL) => boolean);\n\nexport function urlMatchesEqual(match1: URLMatch, match2: URLMatch) {\n  if (isRegExp(match1) && isRegExp(match2))\n    return match1.source === match2.source && match1.flags === match2.flags;\n  return match1 === match2;\n}\n\nexport function urlMatches(baseURL: string | undefined, urlString: string, match: URLMatch | undefined): boolean {\n  if (match === undefined || match === '')\n    return true;\n  if (isString(match) && !match.startsWith('*'))\n    match = constructURLBasedOnBaseURL(baseURL, match);\n  if (isString(match))\n    match = globToRegex(match);\n  if (isRegExp(match))\n    return match.test(urlString);\n  if (typeof match === 'string' && match === urlString)\n    return true;\n  const url = parsedURL(urlString);\n  if (!url)\n    return false;\n  if (typeof match === 'string')\n    return url.pathname === match;\n  if (typeof match !== 'function')\n    throw new Error('url parameter should be string, RegExp or function');\n  return match(url);\n}\n\nfunction parsedURL(url: string): URL | null {\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function constructURLBasedOnBaseURL(baseURL: string | undefined, givenURL: string): string {\n  try {\n    return (new URL(givenURL, baseURL)).toString();\n  } catch (e) {\n    return givenURL;\n  }\n}\n"],"mappings":"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"}