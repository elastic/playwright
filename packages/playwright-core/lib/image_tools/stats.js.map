{"version":3,"file":"stats.js","names":["DYNAMIC_RANGE","ssim","stats","x1","y1","x2","y2","mean1","meanC1","mean2","meanC2","var1","varianceC1","var2","varianceC2","cov","covariance","c1","c2","FastStats","constructor","_partialSumC1","_partialSumC2","_partialSumMult","_partialSumSq1","_partialSumSq2","width","height","Array","recalc","mx","idx","initial","x","y","data","_sum","partialSum","result","N","exports"],"sources":["../../src/image_tools/stats.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ImageChannel } from './imageChannel';\n\nexport interface Stats {\n  c1: ImageChannel;\n  c2: ImageChannel;\n\n  // Compute mean value. See https://en.wikipedia.org/wiki/Mean\n  meanC1(x1: number, y1: number, x2: number, y2: number): number;\n  meanC2(x1: number, y1: number, x2: number, y2: number): number;\n  // Compute **population** (not sample) variance. See https://en.wikipedia.org/wiki/Variance\n  varianceC1(x1: number, y1: number, x2: number, y2: number): number;\n  varianceC2(x1: number, y1: number, x2: number, y2: number): number;\n  // Compute covariance. See https://en.wikipedia.org/wiki/Covariance\n  covariance(x1: number, y1: number, x2: number, y2: number): number;\n}\n\n// Image channel has a 8-bit depth.\nconst DYNAMIC_RANGE = 2 ** 8 - 1;\n\nexport function ssim(stats: Stats, x1: number, y1: number, x2: number, y2: number): number {\n  const mean1 = stats.meanC1(x1, y1, x2, y2);\n  const mean2 = stats.meanC2(x1, y1, x2, y2);\n  const var1 = stats.varianceC1(x1, y1, x2, y2);\n  const var2 = stats.varianceC2(x1, y1, x2, y2);\n  const cov = stats.covariance(x1, y1, x2, y2);\n  const c1 = (0.01 * DYNAMIC_RANGE) ** 2;\n  const c2 = (0.03 * DYNAMIC_RANGE) ** 2;\n  return (2 * mean1 * mean2 + c1) * (2 * cov + c2) / (mean1 ** 2 + mean2 ** 2 + c1) / (var1 + var2 + c2);\n}\n\nexport class FastStats implements Stats {\n  c1: ImageChannel;\n  c2: ImageChannel;\n\n  private _partialSumC1: number[];\n  private _partialSumC2: number[];\n  private _partialSumMult: number[];\n  private _partialSumSq1: number[];\n  private _partialSumSq2: number[];\n\n  constructor(c1: ImageChannel, c2: ImageChannel) {\n    this.c1 = c1;\n    this.c2 = c2;\n    const { width, height } = c1;\n\n    this._partialSumC1 = new Array(width * height);\n    this._partialSumC2 = new Array(width * height);\n    this._partialSumSq1 = new Array(width * height);\n    this._partialSumSq2 = new Array(width * height);\n    this._partialSumMult = new Array(width * height);\n\n    const recalc = (mx: number[], idx: number, initial: number, x: number, y: number) => {\n      mx[idx] = initial;\n      if (y > 0)\n        mx[idx] += mx[(y - 1) * width + x];\n      if (x > 0)\n        mx[idx] += mx[y * width + x - 1];\n      if (x > 0 && y > 0)\n        mx[idx] -= mx[(y - 1) * width + x - 1];\n    };\n\n    for (let y = 0; y < height; ++y) {\n      for (let x = 0; x < width; ++x) {\n        const idx = y * width + x;\n        recalc(this._partialSumC1, idx, this.c1.data[idx], x, y);\n        recalc(this._partialSumC2, idx, this.c2.data[idx], x, y);\n        recalc(this._partialSumSq1, idx, this.c1.data[idx] * this.c1.data[idx], x, y);\n        recalc(this._partialSumSq2, idx, this.c2.data[idx] * this.c2.data[idx], x, y);\n        recalc(this._partialSumMult, idx, this.c1.data[idx] * this.c2.data[idx], x, y);\n      }\n    }\n  }\n\n  _sum(partialSum: number[], x1: number, y1: number, x2: number, y2: number): number {\n    const width = this.c1.width;\n    let result = partialSum[y2 * width + x2];\n    if (y1 > 0)\n      result -= partialSum[(y1 - 1) * width + x2];\n    if (x1 > 0)\n      result -= partialSum[y2 * width + x1 - 1];\n    if (x1 > 0 && y1 > 0)\n      result += partialSum[(y1 - 1) * width + x1 - 1];\n    return result;\n  }\n\n  meanC1(x1: number, y1: number, x2: number, y2: number): number {\n    const N = (y2 - y1 + 1) * (x2 - x1 + 1);\n    return this._sum(this._partialSumC1, x1, y1, x2, y2) / N;\n  }\n\n  meanC2(x1: number, y1: number, x2: number, y2: number): number {\n    const N = (y2 - y1 + 1) * (x2 - x1 + 1);\n    return this._sum(this._partialSumC2, x1, y1, x2, y2) / N;\n  }\n\n  varianceC1(x1: number, y1: number, x2: number, y2: number): number {\n    const N = (y2 - y1 + 1) * (x2 - x1 + 1);\n    return (this._sum(this._partialSumSq1, x1, y1, x2, y2) - (this._sum(this._partialSumC1, x1, y1, x2, y2) ** 2) / N) / N;\n  }\n\n  varianceC2(x1: number, y1: number, x2: number, y2: number): number {\n    const N = (y2 - y1 + 1) * (x2 - x1 + 1);\n    return (this._sum(this._partialSumSq2, x1, y1, x2, y2) - (this._sum(this._partialSumC2, x1, y1, x2, y2) ** 2) / N) / N;\n  }\n\n  covariance(x1: number, y1: number, x2: number, y2: number): number {\n    const N = (y2 - y1 + 1) * (x2 - x1 + 1);\n    return (this._sum(this._partialSumMult, x1, y1, x2, y2) - this._sum(this._partialSumC1, x1, y1, x2, y2) * this._sum(this._partialSumC2, x1, y1, x2, y2) / N) / N;\n  }\n}\n\n"],"mappings":"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"}