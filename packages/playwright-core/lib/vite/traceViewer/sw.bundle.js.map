{"version":3,"file":"sw.bundle.js","sources":["../../../../trace-viewer/src/progress.ts","../../../src/utils/isomorphic/stringUtils.ts","../../../../trace-viewer/src/snapshotRenderer.ts","../../../../trace-viewer/src/snapshotServer.ts","../../../src/utils/isomorphic/traceUtils.ts","../../../../trace-viewer/src/entries.ts","../../../../trace-viewer/src/snapshotStorage.ts","../../../../trace-viewer/src/traceModernizer.ts","../../../../trace-viewer/src/traceModel.ts","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/inflate.js","../../../../../node_modules/@zip.js/zip.js/lib/core/constants.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/stream-adapter.js","../../../../../node_modules/@zip.js/zip.js/lib/core/configuration.js","../../../../../node_modules/@zip.js/zip.js/lib/core/util/default-mime-type.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/crc32.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/crc32-stream.js","../../../../../node_modules/@zip.js/zip.js/lib/core/util/encode-text.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/sjcl.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/common-crypto.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/aes-crypto-stream.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/zip-crypto-stream.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/zip-entry-stream.js","../../../../../node_modules/@zip.js/zip.js/lib/core/streams/codec-stream.js","../../../../../node_modules/@zip.js/zip.js/lib/core/codec-worker.js","../../../../../node_modules/@zip.js/zip.js/lib/core/codec-pool.js","../../../../../node_modules/@zip.js/zip.js/lib/core/io.js","../../../../../node_modules/@zip.js/zip.js/lib/core/util/cp437-decode.js","../../../../../node_modules/@zip.js/zip.js/lib/core/util/decode-text.js","../../../../../node_modules/@zip.js/zip.js/lib/core/zip-entry.js","../../../../../node_modules/@zip.js/zip.js/lib/core/zip-reader.js","../../../../../node_modules/@zip.js/zip.js/lib/zip-no-worker-inflate.js","../../../../trace-viewer/src/traceModelBackends.ts","../../../../trace-viewer/src/sw.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ntype Progress = (done: number, total: number) => undefined;\n\nexport function splitProgress(progress: Progress, weights: number[]): Progress[] {\n  const doneList = new Array(weights.length).fill(0);\n  return new Array(weights.length).fill(0).map((_, i) => {\n    return (done: number, total: number) => {\n      doneList[i] = done / total * weights[i] * 1000;\n      progress(doneList.reduce((a, b) => a + b, 0), 1000);\n    };\n  });\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// NOTE: this function should not be used to escape any selectors.\nexport function escapeWithQuotes(text: string, char: string = '\\'') {\n  const stringified = JSON.stringify(text);\n  const escapedText = stringified.substring(1, stringified.length - 1).replace(/\\\\\"/g, '\"');\n  if (char === '\\'')\n    return char + escapedText.replace(/[']/g, '\\\\\\'') + char;\n  if (char === '\"')\n    return char + escapedText.replace(/[\"]/g, '\\\\\"') + char;\n  if (char === '`')\n    return char + escapedText.replace(/[`]/g, '`') + char;\n  throw new Error('Invalid escape char');\n}\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === 'string' || obj instanceof String;\n}\n\nexport function toTitleCase(name: string) {\n  return name.charAt(0).toUpperCase() + name.substring(1);\n}\n\nexport function toSnakeCase(name: string): string {\n  // E.g. ignoreHTTPSErrors => ignore_https_errors.\n  return name.replace(/([a-z0-9])([A-Z])/g, '$1_$2').replace(/([A-Z])([A-Z][a-z])/g, '$1_$2').toLowerCase();\n}\n\nexport function cssEscape(s: string): string {\n  let result = '';\n  for (let i = 0; i < s.length; i++)\n    result += cssEscapeOne(s, i);\n  return result;\n}\n\nexport function quoteCSSAttributeValue(text: string): string {\n  return `\"${cssEscape(text).replace(/\\\\ /g, ' ')}\"`;\n}\n\nfunction cssEscapeOne(s: string, i: number): string {\n  // https://drafts.csswg.org/cssom/#serialize-an-identifier\n  const c = s.charCodeAt(i);\n  if (c === 0x0000)\n    return '\\uFFFD';\n  if ((c >= 0x0001 && c <= 0x001f) ||\n      (c >= 0x0030 && c <= 0x0039 && (i === 0 || (i === 1 && s.charCodeAt(0) === 0x002d))))\n    return '\\\\' + c.toString(16) + ' ';\n  if (i === 0 && c === 0x002d && s.length === 1)\n    return '\\\\' + s.charAt(i);\n  if (c >= 0x0080 || c === 0x002d || c === 0x005f || (c >= 0x0030 && c <= 0x0039) ||\n      (c >= 0x0041 && c <= 0x005a) || (c >= 0x0061 && c <= 0x007a))\n    return s.charAt(i);\n  return '\\\\' + s.charAt(i);\n}\n\nlet normalizedWhitespaceCache: Map<string, string> | undefined;\n\nexport function cacheNormalizedWhitespaces() {\n  normalizedWhitespaceCache = new Map();\n}\n\nexport function normalizeWhiteSpace(text: string): string {\n  let result = normalizedWhitespaceCache?.get(text);\n  if (result === undefined) {\n    result = text.replace(/\\u200b/g, '').trim().replace(/\\s+/g, ' ');\n    normalizedWhitespaceCache?.set(text, result);\n  }\n  return result;\n}\n\nexport function normalizeEscapedRegexQuotes(source: string) {\n  // This function reverses the effect of escapeRegexForSelector below.\n  // Odd number of backslashes followed by the quote -> remove unneeded backslash.\n  return source.replace(/(^|[^\\\\])(\\\\\\\\)*\\\\(['\"`])/g, '$1$2$3');\n}\n\nfunction escapeRegexForSelector(re: RegExp): string {\n  // Unicode mode does not allow \"identity character escapes\", so we do not escape and\n  // hope that it does not contain quotes and/or >> signs.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Character_escape\n  // TODO: rework RE usages in internal selectors away from literal representation to json, e.g. {source,flags}.\n  if (re.unicode || (re as any).unicodeSets)\n    return String(re);\n  // Even number of backslashes followed by the quote -> insert a backslash.\n  return String(re).replace(/(^|[^\\\\])(\\\\\\\\)*([\"'`])/g, '$1$2\\\\$3').replace(/>>/g, '\\\\>\\\\>');\n}\n\nexport function escapeForTextSelector(text: string | RegExp, exact: boolean): string {\n  if (typeof text !== 'string')\n    return escapeRegexForSelector(text);\n  return `${JSON.stringify(text)}${exact ? 's' : 'i'}`;\n}\n\nexport function escapeForAttributeSelector(value: string | RegExp, exact: boolean): string {\n  if (typeof value !== 'string')\n    return escapeRegexForSelector(value);\n  // TODO: this should actually be\n  //   cssEscape(value).replace(/\\\\ /g, ' ')\n  // However, our attribute selectors do not conform to CSS parsing spec,\n  // so we escape them differently.\n  return `\"${value.replace(/\\\\/g, '\\\\\\\\').replace(/[\"]/g, '\\\\\"')}\"${exact ? 's' : 'i'}`;\n}\n\nexport function trimString(input: string, cap: number, suffix: string = ''): string {\n  if (input.length <= cap)\n    return input;\n  const chars = [...input];\n  if (chars.length > cap)\n    return chars.slice(0, cap - suffix.length).join('') + suffix;\n  return chars.join('');\n}\n\nexport function trimStringWithEllipsis(input: string, cap: number): string {\n  return trimString(input, cap, '\\u2026');\n}\n\nexport function escapeRegExp(s: string) {\n  // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nconst escaped = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '\\'': '&#39;' };\nexport function escapeHTMLAttribute(s: string): string {\n  return s.replace(/[&<>\"']/ug, char => (escaped as any)[char]);\n}\nexport function escapeHTML(s: string): string {\n  return s.replace(/[&<]/ug, char => (escaped as any)[char]);\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { escapeHTMLAttribute, escapeHTML } from '@isomorphic/stringUtils';\nimport type { FrameSnapshot, NodeNameAttributesChildNodesSnapshot, NodeSnapshot, RenderedFrameSnapshot, ResourceSnapshot, SubtreeReferenceSnapshot } from '@trace/snapshot';\n\nfunction isNodeNameAttributesChildNodesSnapshot(n: NodeSnapshot): n is NodeNameAttributesChildNodesSnapshot {\n  return Array.isArray(n) && typeof n[0] === 'string';\n}\n\nfunction isSubtreeReferenceSnapshot(n: NodeSnapshot): n is SubtreeReferenceSnapshot {\n  return Array.isArray(n) && Array.isArray(n[0]);\n}\n\nlet cacheSize = 0;\nconst cache = new Map<SnapshotRenderer, string>();\nconst CACHE_SIZE = 300_000_000; // 300mb\n\nfunction lruCache(key: SnapshotRenderer, compute: () => string): string {\n  if (cache.has(key)) {\n    const value = cache.get(key)!;\n    // reinserting makes this the least recently used entry\n    cache.delete(key);\n    cache.set(key, value);\n    return value;\n  }\n\n\n  const result = compute();\n\n  while (cache.size && cacheSize + result.length > CACHE_SIZE) {\n    const [firstKey, firstValue] = cache.entries().next().value;\n    cacheSize -= firstValue.length;\n    cache.delete(firstKey);\n  }\n\n  cache.set(key, result);\n  cacheSize += result.length;\n\n  return result;\n}\n\nexport class SnapshotRenderer {\n  private _snapshots: FrameSnapshot[];\n  private _index: number;\n  readonly snapshotName: string | undefined;\n  private _resources: ResourceSnapshot[];\n  private _snapshot: FrameSnapshot;\n  private _callId: string;\n\n  constructor(resources: ResourceSnapshot[], snapshots: FrameSnapshot[], index: number) {\n    this._resources = resources;\n    this._snapshots = snapshots;\n    this._index = index;\n    this._snapshot = snapshots[index];\n    this._callId = snapshots[index].callId;\n    this.snapshotName = snapshots[index].snapshotName;\n  }\n\n  snapshot(): FrameSnapshot {\n    return this._snapshots[this._index];\n  }\n\n  viewport(): { width: number, height: number } {\n    return this._snapshots[this._index].viewport;\n  }\n\n  render(): RenderedFrameSnapshot {\n    const result: string[] = [];\n    const visit = (n: NodeSnapshot, snapshotIndex: number, parentTag: string | undefined, parentAttrs: [string, string][] | undefined) => {\n      // Text node.\n      if (typeof n === 'string') {\n        // Best-effort Electron support: rewrite custom protocol in url() links in stylesheets.\n        // Old snapshotter was sending lower-case.\n        if (parentTag === 'STYLE' || parentTag === 'style')\n          result.push(rewriteURLsInStyleSheetForCustomProtocol(n));\n        else\n          result.push(escapeHTML(n));\n        return;\n      }\n\n      if (isSubtreeReferenceSnapshot(n)) {\n        // Node reference.\n        const referenceIndex = snapshotIndex - n[0][0];\n        if (referenceIndex >= 0 && referenceIndex <= snapshotIndex) {\n          const nodes = snapshotNodes(this._snapshots[referenceIndex]);\n          const nodeIndex = n[0][1];\n          if (nodeIndex >= 0 && nodeIndex < nodes.length)\n            return visit(nodes[nodeIndex], referenceIndex, parentTag, parentAttrs);\n        }\n      } else if (isNodeNameAttributesChildNodesSnapshot(n)) {\n        const [name, nodeAttrs, ...children] = n;\n        // Element node.\n        // Note that <noscript> will not be rendered by default in the trace viewer, because\n        // JS is enabled. So rename it to <x-noscript>.\n        const nodeName = name === 'NOSCRIPT' ? 'X-NOSCRIPT' : name;\n        const attrs = Object.entries(nodeAttrs || {});\n        result.push('<', nodeName);\n        const kCurrentSrcAttribute = '__playwright_current_src__';\n        const isFrame = nodeName === 'IFRAME' || nodeName === 'FRAME';\n        const isAnchor = nodeName === 'A';\n        const isImg = nodeName === 'IMG';\n        const isImgWithCurrentSrc = isImg && attrs.some(a => a[0] === kCurrentSrcAttribute);\n        const isSourceInsidePictureWithCurrentSrc = nodeName === 'SOURCE' && parentTag === 'PICTURE' && parentAttrs?.some(a => a[0] === kCurrentSrcAttribute);\n        for (const [attr, value] of attrs) {\n          let attrName = attr;\n          if (isFrame && attr.toLowerCase() === 'src') {\n            // Never set relative URLs as <iframe src> - they start fetching frames immediately.\n            attrName = '__playwright_src__';\n          }\n          if (isImg && attr === kCurrentSrcAttribute) {\n            // Render currentSrc for images, so that trace viewer does not accidentally\n            // resolve srcset to a different source.\n            attrName = 'src';\n          }\n          if (['src', 'srcset'].includes(attr.toLowerCase()) && (isImgWithCurrentSrc || isSourceInsidePictureWithCurrentSrc)) {\n            // Disable actual <img src>, <img srcset>, <source src> and <source srcset> if\n            // we will be using the currentSrc instead.\n            attrName = '_' + attrName;\n          }\n          let attrValue = value;\n          if (isAnchor && attr.toLowerCase() === 'href')\n            attrValue = 'link://' + value;\n          else if (attr.toLowerCase() === 'href' || attr.toLowerCase() === 'src' || attr === kCurrentSrcAttribute)\n            attrValue = rewriteURLForCustomProtocol(value);\n          result.push(' ', attrName, '=\"', escapeHTMLAttribute(attrValue), '\"');\n        }\n        result.push('>');\n        for (const child of children)\n          visit(child, snapshotIndex, nodeName, attrs);\n        if (!autoClosing.has(nodeName))\n          result.push('</', nodeName, '>');\n        return;\n      } else {\n        // Why are we here? Let's not throw, just in case.\n        return;\n      }\n    };\n\n    const snapshot = this._snapshot;\n    const html = lruCache(this, () => {\n      visit(snapshot.html, this._index, undefined, undefined);\n\n      const html = result.join('');\n      // Hide the document in order to prevent flickering. We will unhide once script has processed shadow.\n      const prefix = snapshot.doctype ? `<!DOCTYPE ${snapshot.doctype}>` : '';\n      return prefix + [\n        '<style>*,*::before,*::after { visibility: hidden }</style>',\n        `<script>${snapshotScript(this._callId, this.snapshotName)}</script>`\n      ].join('') + html;\n    });\n\n    return { html, pageId: snapshot.pageId, frameId: snapshot.frameId, index: this._index };\n  }\n\n  resourceByUrl(url: string, method: string): ResourceSnapshot | undefined {\n    const snapshot = this._snapshot;\n    let sameFrameResource: ResourceSnapshot | undefined;\n    let otherFrameResource: ResourceSnapshot | undefined;\n\n    for (const resource of this._resources) {\n      // Only use resources that received response before the snapshot.\n      // Note that both snapshot time and request time are taken in the same Node process.\n      if (typeof resource._monotonicTime === 'number' && resource._monotonicTime >= snapshot.timestamp)\n        break;\n      if (resource.response.status === 304) {\n        // \"Not Modified\" responses are issued when browser requests the same resource\n        // multiple times, meanwhile indicating that it has the response cached.\n        //\n        // When rendering the snapshot, browser most likely will not have the resource cached,\n        // so we should respond with the real content instead, picking the last response that\n        // is not 304.\n        continue;\n      }\n      if (resource.request.url === url && resource.request.method === method) {\n        // Pick the last resource with matching url - most likely it was used\n        // at the time of snapshot, not the earlier aborted resource with the same url.\n        if (resource._frameref === snapshot.frameId)\n          sameFrameResource = resource;\n        else\n          otherFrameResource = resource;\n      }\n    }\n\n    // First try locating exact resource belonging to this frame,\n    // then fall back to resource with this URL to account for memory cache.\n    let result = sameFrameResource ?? otherFrameResource;\n    if (result && method.toUpperCase() === 'GET') {\n      // Patch override if necessary.\n      for (const o of snapshot.resourceOverrides) {\n        if (url === o.url && o.sha1) {\n          result = {\n            ...result,\n            response: {\n              ...result.response,\n              content: {\n                ...result.response.content,\n                _sha1: o.sha1,\n              }\n            },\n          };\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n}\n\nconst autoClosing = new Set(['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'MENUITEM', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR']);\n\nfunction snapshotNodes(snapshot: FrameSnapshot): NodeSnapshot[] {\n  if (!(snapshot as any)._nodes) {\n    const nodes: NodeSnapshot[] = [];\n    const visit = (n: NodeSnapshot) => {\n      if (typeof n === 'string') {\n        nodes.push(n);\n      } else if (isNodeNameAttributesChildNodesSnapshot(n)) {\n        const [,, ...children] = n;\n        for (const child of children)\n          visit(child);\n        nodes.push(n);\n      }\n    };\n    visit(snapshot.html);\n    (snapshot as any)._nodes = nodes;\n  }\n  return (snapshot as any)._nodes;\n}\n\nfunction snapshotScript(...targetIds: (string | undefined)[]) {\n  function applyPlaywrightAttributes(unwrapPopoutUrl: (url: string) => string, ...targetIds: (string | undefined)[]) {\n    const kPointerWarningTitle = 'Recorded click position in absolute coordinates did not' +\n        ' match the center of the clicked element. This is likely due to a difference between' +\n        ' the test runner and the trace viewer operating systems.';\n\n    const scrollTops: Element[] = [];\n    const scrollLefts: Element[] = [];\n    const targetElements: Element[] = [];\n\n    const visit = (root: Document | ShadowRoot) => {\n      // Collect all scrolled elements for later use.\n      for (const e of root.querySelectorAll(`[__playwright_scroll_top_]`))\n        scrollTops.push(e);\n      for (const e of root.querySelectorAll(`[__playwright_scroll_left_]`))\n        scrollLefts.push(e);\n\n      for (const element of root.querySelectorAll(`[__playwright_value_]`)) {\n        const inputElement = element as HTMLInputElement | HTMLTextAreaElement;\n        if (inputElement.type !== 'file')\n          inputElement.value = inputElement.getAttribute('__playwright_value_')!;\n        element.removeAttribute('__playwright_value_');\n      }\n      for (const element of root.querySelectorAll(`[__playwright_checked_]`)) {\n        (element as HTMLInputElement).checked = element.getAttribute('__playwright_checked_') === 'true';\n        element.removeAttribute('__playwright_checked_');\n      }\n      for (const element of root.querySelectorAll(`[__playwright_selected_]`)) {\n        (element as HTMLOptionElement).selected = element.getAttribute('__playwright_selected_') === 'true';\n        element.removeAttribute('__playwright_selected_');\n      }\n\n      for (const targetId of targetIds) {\n        for (const target of root.querySelectorAll(`[__playwright_target__=\"${targetId}\"]`)) {\n          const style = (target as HTMLElement).style;\n          style.outline = '2px solid #006ab1';\n          style.backgroundColor = '#6fa8dc7f';\n          targetElements.push(target);\n        }\n      }\n\n      for (const iframe of root.querySelectorAll('iframe, frame')) {\n        const src = iframe.getAttribute('__playwright_src__');\n        if (!src) {\n          iframe.setAttribute('src', 'data:text/html,<body style=\"background: #ddd\"></body>');\n        } else {\n          // Retain query parameters to inherit name=, time=, pointX=, pointY= and other values from parent.\n          const url = new URL(unwrapPopoutUrl(window.location.href));\n          // We can be loading iframe from within iframe, reset base to be absolute.\n          const index = url.pathname.lastIndexOf('/snapshot/');\n          if (index !== -1)\n            url.pathname = url.pathname.substring(0, index + 1);\n          url.pathname += src.substring(1);\n          iframe.setAttribute('src', url.toString());\n        }\n      }\n\n      {\n        const body = root.querySelector(`body[__playwright_custom_elements__]`);\n        if (body && window.customElements) {\n          const customElements = (body.getAttribute('__playwright_custom_elements__') || '').split(',');\n          for (const elementName of customElements)\n            window.customElements.define(elementName, class extends HTMLElement {});\n        }\n      }\n\n      for (const element of root.querySelectorAll(`template[__playwright_shadow_root_]`)) {\n        const template = element as HTMLTemplateElement;\n        const shadowRoot = template.parentElement!.attachShadow({ mode: 'open' });\n        shadowRoot.appendChild(template.content);\n        template.remove();\n        visit(shadowRoot);\n      }\n\n      if ('adoptedStyleSheets' in (root as any)) {\n        const adoptedSheets: CSSStyleSheet[] = [...(root as any).adoptedStyleSheets];\n        for (const element of root.querySelectorAll(`template[__playwright_style_sheet_]`)) {\n          const template = element as HTMLTemplateElement;\n          const sheet = new CSSStyleSheet();\n          (sheet as any).replaceSync(template.getAttribute('__playwright_style_sheet_'));\n          adoptedSheets.push(sheet);\n        }\n        (root as any).adoptedStyleSheets = adoptedSheets;\n      }\n    };\n\n    const onLoad = () => {\n      window.removeEventListener('load', onLoad);\n      for (const element of scrollTops) {\n        element.scrollTop = +element.getAttribute('__playwright_scroll_top_')!;\n        element.removeAttribute('__playwright_scroll_top_');\n      }\n      for (const element of scrollLefts) {\n        element.scrollLeft = +element.getAttribute('__playwright_scroll_left_')!;\n        element.removeAttribute('__playwright_scroll_left_');\n      }\n\n      document.styleSheets[0].disabled = true;\n\n      const search = new URL(window.location.href).searchParams;\n\n      if (search.get('pointX') && search.get('pointY')) {\n        const pointX = +search.get('pointX')!;\n        const pointY = +search.get('pointY')!;\n        const hasTargetElements = targetElements.length > 0;\n        const roots = document.documentElement ? [document.documentElement] : [];\n        for (const target of (hasTargetElements ? targetElements : roots)) {\n          const pointElement = document.createElement('x-pw-pointer');\n          pointElement.style.position = 'fixed';\n          pointElement.style.backgroundColor = '#f44336';\n          pointElement.style.width = '20px';\n          pointElement.style.height = '20px';\n          pointElement.style.borderRadius = '10px';\n          pointElement.style.margin = '-10px 0 0 -10px';\n          pointElement.style.zIndex = '2147483646';\n          pointElement.style.display = 'flex';\n          pointElement.style.alignItems = 'center';\n          pointElement.style.justifyContent = 'center';\n          if (hasTargetElements) {\n            // Sometimes there are layout discrepancies between recording and rendering, e.g. fonts,\n            // that may place the point at the wrong place. To avoid confusion, we just show the\n            // point in the middle of the target element.\n            const box = target.getBoundingClientRect();\n            const centerX = (box.left + box.width / 2);\n            const centerY = (box.top + box.height / 2);\n            pointElement.style.left = centerX + 'px';\n            pointElement.style.top = centerY + 'px';\n            // \"Warning symbol\" indicates that action point is not 100% correct.\n            if (Math.abs(centerX - pointX) >= 10 || Math.abs(centerY - pointY) >= 10) {\n              const warningElement = document.createElement('x-pw-pointer-warning');\n              warningElement.textContent = '⚠';\n              warningElement.style.fontSize = '19px';\n              warningElement.style.color = 'white';\n              warningElement.style.marginTop = '-3.5px';\n              warningElement.style.userSelect = 'none';\n              pointElement.appendChild(warningElement);\n              pointElement.setAttribute('title', kPointerWarningTitle);\n            }\n          } else {\n            // For actions without a target element, e.g. page.mouse.move(),\n            // show the point at the recorder location.\n            pointElement.style.left = pointX + 'px';\n            pointElement.style.top = pointY + 'px';\n          }\n          document.documentElement.appendChild(pointElement);\n        }\n      }\n    };\n\n    const onDOMContentLoaded = () => visit(document);\n\n    window.addEventListener('load', onLoad);\n    window.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n  }\n\n  return `\\n(${applyPlaywrightAttributes.toString()})(${unwrapPopoutUrl.toString()}${targetIds.map(id => `, \"${id}\"`).join('')})`;\n}\n\n\n/**\n * Best-effort Electron support: rewrite custom protocol in DOM.\n * vscode-file://vscode-app/ -> https://pw-vscode-file--vscode-app/\n */\nconst schemas = ['about:', 'blob:', 'data:', 'file:', 'ftp:', 'http:', 'https:', 'mailto:', 'sftp:', 'ws:', 'wss:'];\nconst kLegacyBlobPrefix = 'http://playwright.bloburl/#';\n\nexport function rewriteURLForCustomProtocol(href: string): string {\n  // Legacy support, we used to prepend this to blobs, strip it away.\n  if (href.startsWith(kLegacyBlobPrefix))\n    href = href.substring(kLegacyBlobPrefix.length);\n\n  try {\n    const url = new URL(href);\n    // Sanitize URL.\n    if (url.protocol === 'javascript:' || url.protocol === 'vbscript:')\n      return 'javascript:void(0)';\n\n    // Pass through if possible.\n    const isBlob = url.protocol === 'blob:';\n    const isFile = url.protocol === 'file:';\n    if (!isBlob && !isFile && schemas.includes(url.protocol))\n      return href;\n\n    // Rewrite blob, file and custom schemas.\n    const prefix = 'pw-' + url.protocol.slice(0, url.protocol.length - 1);\n    if (!isFile)\n      url.protocol = 'https:';\n    url.hostname = url.hostname ? `${prefix}--${url.hostname}` : prefix;\n    if (isFile) {\n      // File URIs can only have their protocol changed after the hostname\n      // is set. (For all other URIs, we must set the protocol first.)\n      url.protocol = 'https:';\n    }\n    return url.toString();\n  } catch {\n    return href;\n  }\n}\n\n/**\n * Best-effort Electron support: rewrite custom protocol in inline stylesheets.\n * vscode-file://vscode-app/ -> https://pw-vscode-file--vscode-app/\n */\nconst urlInCSSRegex = /url\\(['\"]?([\\w-]+:)\\/\\//ig;\n\nfunction rewriteURLsInStyleSheetForCustomProtocol(text: string): string {\n  return text.replace(urlInCSSRegex, (match: string, protocol: string) => {\n    const isBlob = protocol === 'blob:';\n    const isFile = protocol === 'file:';\n    if (!isBlob && !isFile && schemas.includes(protocol))\n      return match;\n    return match.replace(protocol + '//', `https://pw-${protocol.slice(0, -1)}--`);\n  });\n}\n\n// <base>/snapshot.html?r=<snapshotUrl> is used for \"pop out snapshot\" feature.\nexport function unwrapPopoutUrl(url: string) {\n  const u = new URL(url);\n  if (u.pathname.endsWith('/snapshot.html'))\n    return u.searchParams.get('r')!;\n  return url;\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { URLSearchParams } from 'url';\nimport type { SnapshotRenderer } from './snapshotRenderer';\nimport type { SnapshotStorage } from './snapshotStorage';\nimport type { ResourceSnapshot } from '@trace/snapshot';\n\ntype Point = { x: number, y: number };\n\nexport class SnapshotServer {\n  private _snapshotStorage: SnapshotStorage;\n  private _resourceLoader: (sha1: string) => Promise<Blob | undefined>;\n  private _snapshotIds = new Map<string, SnapshotRenderer>();\n\n  constructor(snapshotStorage: SnapshotStorage, resourceLoader: (sha1: string) => Promise<Blob | undefined>) {\n    this._snapshotStorage = snapshotStorage;\n    this._resourceLoader = resourceLoader;\n  }\n\n  serveSnapshot(pathname: string, searchParams: URLSearchParams, snapshotUrl: string): Response {\n    const snapshot = this._snapshot(pathname.substring('/snapshot'.length), searchParams);\n    if (!snapshot)\n      return new Response(null, { status: 404 });\n    const renderedSnapshot = snapshot.render();\n    this._snapshotIds.set(snapshotUrl, snapshot);\n    return new Response(renderedSnapshot.html, { status: 200, headers: { 'Content-Type': 'text/html; charset=utf-8' } });\n  }\n\n  serveSnapshotInfo(pathname: string, searchParams: URLSearchParams): Response {\n    const snapshot = this._snapshot(pathname.substring('/snapshotInfo'.length), searchParams);\n    return this._respondWithJson(snapshot ? {\n      viewport: snapshot.viewport(),\n      url: snapshot.snapshot().frameUrl\n    } : {\n      error: 'No snapshot found'\n    });\n  }\n\n  private _snapshot(pathname: string, params: URLSearchParams) {\n    const name = params.get('name')!;\n    return this._snapshotStorage.snapshotByName(pathname.slice(1), name);\n  }\n\n  private _respondWithJson(object: any): Response {\n    return new Response(JSON.stringify(object), {\n      status: 200,\n      headers: {\n        'Cache-Control': 'public, max-age=31536000',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  async serveResource(requestUrlAlternatives: string[], method: string, snapshotUrl: string): Promise<Response> {\n    let resource: ResourceSnapshot | undefined;\n    const snapshot = this._snapshotIds.get(snapshotUrl)!;\n    for (const requestUrl of requestUrlAlternatives) {\n      resource = snapshot?.resourceByUrl(removeHash(requestUrl), method);\n      if (resource)\n        break;\n    }\n    if (!resource)\n      return new Response(null, { status: 404 });\n\n    const sha1 = resource.response.content._sha1;\n    const content = sha1 ? await this._resourceLoader(sha1) || new Blob([]) : new Blob([]);\n\n    let contentType = resource.response.content.mimeType;\n    const isTextEncoding = /^text\\/|^application\\/(javascript|json)/.test(contentType);\n    if (isTextEncoding && !contentType.includes('charset'))\n      contentType = `${contentType}; charset=utf-8`;\n\n    const headers = new Headers();\n    // \"x-unknown\" in the har means \"no content type\".\n    if (contentType !== 'x-unknown')\n      headers.set('Content-Type', contentType);\n    for (const { name, value } of resource.response.headers)\n      headers.set(name, value);\n    headers.delete('Content-Encoding');\n    headers.delete('Access-Control-Allow-Origin');\n    headers.set('Access-Control-Allow-Origin', '*');\n    headers.delete('Content-Length');\n    headers.set('Content-Length', String(content.size));\n    headers.set('Cache-Control', 'public, max-age=31536000');\n    const { status } = resource.response;\n    const isNullBodyStatus = status === 101 || status === 204 || status === 205 || status === 304;\n    return new Response(isNullBodyStatus ? null : content, {\n      headers,\n      status: resource.response.status,\n      statusText: resource.response.statusText,\n    });\n  }\n}\n\ndeclare global {\n  interface Window {\n    showSnapshot: (url: string, point?: Point) => Promise<void>;\n  }\n}\n\nfunction removeHash(url: string) {\n  try {\n    const u = new URL(url);\n    u.hash = '';\n    return u.toString();\n  } catch (e) {\n    return url;\n  }\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { StackFrame } from '@protocol/channels';\n\nexport type SerializedStackFrame = [number, number, number, string];\nexport type SerializedStack = [number, SerializedStackFrame[]];\n\nexport type SerializedClientSideCallMetadata = {\n  files: string[];\n  stacks: SerializedStack[];\n};\n\nexport function parseClientSideCallMetadata(data: SerializedClientSideCallMetadata): Map<string, StackFrame[]> {\n  const result = new Map<string, StackFrame[]>();\n  const { files, stacks } = data;\n  for (const s of stacks) {\n    const [id, ff] = s;\n    result.set(`call@${id}`, ff.map(f => ({ file: files[f[0]], line: f[1], column: f[2], function: f[3] })));\n  }\n  return result;\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Language } from '../../playwright-core/src/utils/isomorphic/locatorGenerators';\nimport type { ResourceSnapshot } from '@trace/snapshot';\nimport type * as trace from '@trace/trace';\n\nexport type ContextEntry = {\n  origin: 'testRunner'|'library';\n  traceUrl: string;\n  startTime: number;\n  endTime: number;\n  browserName: string;\n  channel?: string;\n  platform?: string;\n  wallTime: number;\n  sdkLanguage?: Language;\n  testIdAttributeName?: string;\n  title?: string;\n  options: trace.BrowserContextEventOptions;\n  pages: PageEntry[];\n  resources: ResourceSnapshot[];\n  actions: ActionEntry[];\n  events: (trace.EventTraceEvent | trace.ConsoleMessageTraceEvent)[];\n  stdio: trace.StdioTraceEvent[];\n  errors: trace.ErrorTraceEvent[];\n  hasSource: boolean;\n};\n\nexport type PageEntry = {\n  screencastFrames: {\n    sha1: string,\n    timestamp: number,\n    width: number,\n    height: number,\n  }[];\n};\n\nexport type ActionEntry = trace.ActionTraceEvent & {\n  log: { time: number, message: string }[];\n};\n\nexport function createEmptyContext(): ContextEntry {\n  return {\n    origin: 'testRunner',\n    traceUrl: '',\n    startTime: Number.MAX_SAFE_INTEGER,\n    wallTime: Number.MAX_SAFE_INTEGER,\n    endTime: 0,\n    browserName: '',\n    options: {\n      deviceScaleFactor: 1,\n      isMobile: false,\n      viewport: { width: 1280, height: 800 },\n    },\n    pages: [],\n    resources: [],\n    actions: [],\n    events: [],\n    errors: [],\n    stdio: [],\n    hasSource: false,\n  };\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FrameSnapshot, ResourceSnapshot } from '@trace/snapshot';\nimport { rewriteURLForCustomProtocol, SnapshotRenderer } from './snapshotRenderer';\n\nexport class SnapshotStorage {\n  private _resources: ResourceSnapshot[] = [];\n  private _frameSnapshots = new Map<string, {\n    raw: FrameSnapshot[],\n    renderers: SnapshotRenderer[]\n  }>();\n\n  addResource(resource: ResourceSnapshot): void {\n    resource.request.url = rewriteURLForCustomProtocol(resource.request.url);\n    this._resources.push(resource);\n  }\n\n  addFrameSnapshot(snapshot: FrameSnapshot) {\n    for (const override of snapshot.resourceOverrides)\n      override.url = rewriteURLForCustomProtocol(override.url);\n    let frameSnapshots = this._frameSnapshots.get(snapshot.frameId);\n    if (!frameSnapshots) {\n      frameSnapshots = {\n        raw: [],\n        renderers: [],\n      };\n      this._frameSnapshots.set(snapshot.frameId, frameSnapshots);\n      if (snapshot.isMainFrame)\n        this._frameSnapshots.set(snapshot.pageId, frameSnapshots);\n    }\n    frameSnapshots.raw.push(snapshot);\n    const renderer = new SnapshotRenderer(this._resources, frameSnapshots.raw, frameSnapshots.raw.length - 1);\n    frameSnapshots.renderers.push(renderer);\n    return renderer;\n  }\n\n  snapshotByName(pageOrFrameId: string, snapshotName: string): SnapshotRenderer | undefined {\n    const snapshot = this._frameSnapshots.get(pageOrFrameId);\n    return snapshot?.renderers.find(r => r.snapshotName === snapshotName);\n  }\n\n  snapshotsForTest() {\n    return [...this._frameSnapshots.keys()];\n  }\n\n  finalize() {\n    // Resources are not necessarily sorted in the trace file, so sort them now.\n    this._resources.sort((a, b) => (a._monotonicTime || 0) - (b._monotonicTime || 0));\n  }\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as trace from '@trace/trace';\nimport type * as traceV3 from './versions/traceV3';\nimport type * as traceV4 from './versions/traceV4';\nimport type * as traceV5 from './versions/traceV5';\nimport type * as traceV6 from './versions/traceV6';\nimport type { ActionEntry, ContextEntry, PageEntry } from './entries';\nimport type { SnapshotStorage } from './snapshotStorage';\n\nexport class TraceVersionError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TraceVersionError';\n  }\n}\n\nconst latestVersion: trace.VERSION = 7;\n\nexport class TraceModernizer {\n  private _contextEntry: ContextEntry;\n  private _snapshotStorage: SnapshotStorage;\n  private _actionMap = new Map<string, ActionEntry>();\n  private _version: number | undefined;\n  private _pageEntries = new Map<string, PageEntry>();\n  private _jsHandles = new Map<string, { preview: string }>();\n  private _consoleObjects = new Map<string, { type: string, text: string, location: { url: string, lineNumber: number, columnNumber: number }, args?: { preview: string, value: string }[] }>();\n\n  constructor(contextEntry: ContextEntry, snapshotStorage: SnapshotStorage) {\n    this._contextEntry = contextEntry;\n    this._snapshotStorage = snapshotStorage;\n  }\n\n  appendTrace(trace: string) {\n    for (const line of trace.split('\\n'))\n      this._appendEvent(line);\n  }\n\n  actions(): ActionEntry[] {\n    return [...this._actionMap.values()];\n  }\n\n  private _pageEntry(pageId: string): PageEntry {\n    let pageEntry = this._pageEntries.get(pageId);\n    if (!pageEntry) {\n      pageEntry = {\n        screencastFrames: [],\n      };\n      this._pageEntries.set(pageId, pageEntry);\n      this._contextEntry.pages.push(pageEntry);\n    }\n    return pageEntry;\n  }\n\n  private _appendEvent(line: string) {\n    if (!line)\n      return;\n    const events = this._modernize(JSON.parse(line));\n    for (const event of events)\n      this._innerAppendEvent(event);\n  }\n\n  private _innerAppendEvent(event: trace.TraceEvent) {\n    const contextEntry = this._contextEntry;\n    switch (event.type) {\n      case 'context-options': {\n        if (event.version > latestVersion)\n          throw new TraceVersionError('The trace was created by a newer version of Playwright and is not supported by this version of the viewer. Please use latest Playwright to open the trace.');\n        this._version = event.version;\n        contextEntry.origin = event.origin;\n        contextEntry.browserName = event.browserName;\n        contextEntry.channel = event.channel;\n        contextEntry.title = event.title;\n        contextEntry.platform = event.platform;\n        contextEntry.wallTime = event.wallTime;\n        contextEntry.startTime = event.monotonicTime;\n        contextEntry.sdkLanguage = event.sdkLanguage;\n        contextEntry.options = event.options;\n        contextEntry.testIdAttributeName = event.testIdAttributeName;\n        break;\n      }\n      case 'screencast-frame': {\n        this._pageEntry(event.pageId).screencastFrames.push(event);\n        break;\n      }\n      case 'before': {\n        this._actionMap.set(event.callId, { ...event, type: 'action', endTime: 0, log: [] });\n        break;\n      }\n      case 'input': {\n        const existing = this._actionMap.get(event.callId);\n        existing!.inputSnapshot = event.inputSnapshot;\n        existing!.point = event.point;\n        break;\n      }\n      case 'log': {\n        const existing = this._actionMap.get(event.callId);\n        // We have some corrupted traces out there, tolerate them.\n        if (!existing)\n          return;\n        existing.log.push({\n          time: event.time,\n          message: event.message,\n        });\n        break;\n      }\n      case 'after': {\n        const existing = this._actionMap.get(event.callId);\n        existing!.afterSnapshot = event.afterSnapshot;\n        existing!.endTime = event.endTime;\n        existing!.result = event.result;\n        existing!.error = event.error;\n        existing!.attachments = event.attachments;\n        if (event.point)\n          existing!.point = event.point;\n        break;\n      }\n      case 'action': {\n        this._actionMap.set(event.callId, { ...event, log: [] });\n        break;\n      }\n      case 'event': {\n        contextEntry.events.push(event);\n        break;\n      }\n      case 'stdout': {\n        contextEntry.stdio.push(event);\n        break;\n      }\n      case 'stderr': {\n        contextEntry.stdio.push(event);\n        break;\n      }\n      case 'error': {\n        contextEntry.errors.push(event);\n        break;\n      }\n      case 'console': {\n        contextEntry.events.push(event);\n        break;\n      }\n      case 'resource-snapshot':\n        this._snapshotStorage.addResource(event.snapshot);\n        contextEntry.resources.push(event.snapshot);\n        break;\n      case 'frame-snapshot':\n        this._snapshotStorage.addFrameSnapshot(event.snapshot);\n        break;\n    }\n    // Make sure there is a page entry for each page, even without screencast frames,\n    // to show in the metadata view.\n    if (('pageId' in event) && event.pageId)\n      this._pageEntry(event.pageId);\n    if (event.type === 'action' || event.type === 'before')\n      contextEntry.startTime = Math.min(contextEntry.startTime, event.startTime);\n    if (event.type === 'action' || event.type === 'after')\n      contextEntry.endTime = Math.max(contextEntry.endTime, event.endTime);\n    if (event.type === 'event') {\n      contextEntry.startTime = Math.min(contextEntry.startTime, event.time);\n      contextEntry.endTime = Math.max(contextEntry.endTime, event.time);\n    }\n    if (event.type === 'screencast-frame') {\n      contextEntry.startTime = Math.min(contextEntry.startTime, event.timestamp);\n      contextEntry.endTime = Math.max(contextEntry.endTime, event.timestamp);\n    }\n  }\n\n  private _processedContextCreatedEvent() {\n    return this._version !== undefined;\n  }\n\n  private _modernize(event: any): trace.TraceEvent[] {\n    // In trace 6->7 we also need to modernize context-options event.\n    let version = this._version || event.version;\n    if (version === undefined)\n      return [event];\n    let events = [event];\n    for (; version < latestVersion; ++version)\n      events = (this as any)[`_modernize_${version}_to_${version + 1}`].call(this, events);\n    return events;\n  }\n\n  _modernize_0_to_1(events: any[]): any[] {\n    for (const event of events) {\n      if (event.type !== 'action')\n        continue;\n      if (typeof event.metadata.error === 'string')\n        event.metadata.error = { error: { name: 'Error', message: event.metadata.error } };\n    }\n    return events;\n  }\n\n  _modernize_1_to_2(events: any[]): any[] {\n    for (const event of events) {\n      if (event.type !== 'frame-snapshot' || !event.snapshot.isMainFrame)\n        continue;\n      // Old versions had completely wrong viewport.\n      event.snapshot.viewport = this._contextEntry.options?.viewport || { width: 1280, height: 720 };\n    }\n    return events;\n  }\n\n  _modernize_2_to_3(events: any[]): any[] {\n    for (const event of events) {\n      if (event.type !== 'resource-snapshot' || event.snapshot.request)\n        continue;\n      // Migrate from old ResourceSnapshot to new har entry format.\n      const resource = event.snapshot;\n      event.snapshot = {\n        _frameref: resource.frameId,\n        request: {\n          url: resource.url,\n          method: resource.method,\n          headers: resource.requestHeaders,\n          postData: resource.requestSha1 ? { _sha1: resource.requestSha1 } : undefined,\n        },\n        response: {\n          status: resource.status,\n          headers: resource.responseHeaders,\n          content: {\n            mimeType: resource.contentType,\n            _sha1: resource.responseSha1,\n          },\n        },\n        _monotonicTime: resource.timestamp,\n      };\n    }\n    return events;\n  }\n\n  _modernize_3_to_4(events: traceV3.TraceEvent[]): traceV4.TraceEvent[] {\n    const result: traceV4.TraceEvent[] = [];\n    for (const event of events) {\n      const e = this._modernize_event_3_to_4(event);\n      if (e)\n        result.push(e);\n    }\n    return result;\n  }\n\n  _modernize_event_3_to_4(event: traceV3.TraceEvent): traceV4.TraceEvent | null {\n    if (event.type !== 'action' && event.type !== 'event') {\n      return event as traceV3.ContextCreatedTraceEvent |\n        traceV3.ScreencastFrameTraceEvent |\n        traceV3.ResourceSnapshotTraceEvent |\n        traceV3.FrameSnapshotTraceEvent;\n    }\n\n    const metadata = event.metadata;\n    if (metadata.internal || metadata.method.startsWith('tracing'))\n      return null;\n\n    if (event.type === 'event') {\n      if (metadata.method === '__create__' && metadata.type === 'ConsoleMessage') {\n        return {\n          type: 'object',\n          class: metadata.type,\n          guid: metadata.params.guid,\n          initializer: metadata.params.initializer,\n        };\n      }\n      return {\n        type: 'event',\n        time: metadata.startTime,\n        class: metadata.type,\n        method: metadata.method,\n        params: metadata.params,\n        pageId: metadata.pageId,\n      };\n    }\n\n    return {\n      type: 'action',\n      callId: metadata.id,\n      startTime: metadata.startTime,\n      endTime: metadata.endTime,\n      apiName: metadata.apiName || metadata.type + '.' + metadata.method,\n      class: metadata.type,\n      method: metadata.method,\n      params: metadata.params,\n      wallTime: metadata.wallTime || Date.now(),\n      log: metadata.log,\n      beforeSnapshot: metadata.snapshots.find(s => s.title === 'before')?.snapshotName,\n      inputSnapshot: metadata.snapshots.find(s => s.title === 'input')?.snapshotName,\n      afterSnapshot: metadata.snapshots.find(s => s.title === 'after')?.snapshotName,\n      error: metadata.error?.error,\n      result: metadata.result,\n      point: metadata.point,\n      pageId: metadata.pageId,\n    };\n  }\n\n  _modernize_4_to_5(events: traceV4.TraceEvent[]): traceV5.TraceEvent[] {\n    const result: traceV5.TraceEvent[] = [];\n    for (const event of events) {\n      const e = this._modernize_event_4_to_5(event);\n      if (e)\n        result.push(e);\n    }\n    return result;\n  }\n\n  _modernize_event_4_to_5(event: traceV4.TraceEvent): traceV5.TraceEvent | null {\n    if (event.type === 'event' && event.method === '__create__' && event.class === 'JSHandle')\n      this._jsHandles.set(event.params.guid, event.params.initializer);\n    if (event.type === 'object') {\n      // We do not expect any other 'object' events.\n      if (event.class !== 'ConsoleMessage')\n        return null;\n      // Older traces might have `args` inherited from the protocol initializer - guid of JSHandle,\n      // but might also have modern `args` with preview and value.\n      const args: { preview: string, value: string }[] = (event.initializer as any).args?.map((arg: any) => {\n        if (arg.guid) {\n          const handle = this._jsHandles.get(arg.guid);\n          return { preview: handle?.preview || '', value: '' };\n        }\n        return { preview: arg.preview || '', value: arg.value || '' };\n      });\n      this._consoleObjects.set(event.guid, {\n        type: event.initializer.type,\n        text: event.initializer.text,\n        location: event.initializer.location,\n        args,\n      });\n      return null;\n    }\n    if (event.type === 'event' && event.method === 'console') {\n      const consoleMessage = this._consoleObjects.get(event.params.message?.guid || '');\n      if (!consoleMessage)\n        return null;\n      return {\n        type: 'console',\n        time: event.time,\n        pageId: event.pageId,\n        messageType: consoleMessage.type,\n        text: consoleMessage.text,\n        args: consoleMessage.args,\n        location: consoleMessage.location,\n      };\n    }\n    return event;\n  }\n\n  _modernize_5_to_6(events: traceV5.TraceEvent[]): traceV6.TraceEvent[] {\n    const result: traceV6.TraceEvent[] = [];\n    for (const event of events) {\n      result.push(event);\n      if (event.type !== 'after' || !event.log.length)\n        continue;\n      for (const log of event.log) {\n        result.push({\n          type: 'log',\n          callId: event.callId,\n          message: log,\n          time: -1,\n        });\n      }\n    }\n    return result;\n  }\n\n  _modernize_6_to_7(events: traceV6.TraceEvent[]): trace.TraceEvent[] {\n    const result: trace.TraceEvent[] = [];\n    if (!this._processedContextCreatedEvent() && events[0].type !== 'context-options') {\n      const event: trace.ContextCreatedTraceEvent = {\n        type: 'context-options',\n        origin: 'testRunner',\n        version: 7,\n        browserName: '',\n        options: {},\n        platform: process.platform,\n        wallTime: 0,\n        monotonicTime: 0,\n        sdkLanguage: 'javascript',\n      };\n      result.push(event);\n    }\n    for (const event of events) {\n      if (event.type === 'context-options') {\n        result.push({ ...event, monotonicTime: 0, origin: 'library' });\n        continue;\n      }\n      // Take wall and monotonic time from the first event.\n      if (!this._contextEntry.wallTime && event.type === 'before')\n        this._contextEntry.wallTime = event.wallTime;\n      if (!this._contextEntry.startTime && event.type === 'before')\n        this._contextEntry.startTime = event.startTime;\n      result.push(event);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseClientSideCallMetadata } from '../../../packages/playwright-core/src/utils/isomorphic/traceUtils';\nimport type { ContextEntry } from './entries';\nimport { createEmptyContext } from './entries';\nimport { SnapshotStorage } from './snapshotStorage';\nimport { TraceModernizer } from './traceModernizer';\n\nexport interface TraceModelBackend {\n  entryNames(): Promise<string[]>;\n  hasEntry(entryName: string): Promise<boolean>;\n  readText(entryName: string): Promise<string | undefined>;\n  readBlob(entryName: string): Promise<Blob | undefined>;\n  isLive(): boolean;\n  traceURL(): string;\n}\n\nexport class TraceModel {\n  contextEntries: ContextEntry[] = [];\n  private _snapshotStorage: SnapshotStorage | undefined;\n  private _backend!: TraceModelBackend;\n  private _resourceToContentType = new Map<string, string>();\n\n  constructor() {\n  }\n\n  async load(backend: TraceModelBackend, unzipProgress: (done: number, total: number) => void) {\n    this._backend = backend;\n\n    const ordinals: string[] = [];\n    let hasSource = false;\n    for (const entryName of await this._backend.entryNames()) {\n      const match = entryName.match(/(.+)\\.trace/);\n      if (match)\n        ordinals.push(match[1] || '');\n      if (entryName.includes('src@'))\n        hasSource = true;\n    }\n    if (!ordinals.length)\n      throw new Error('Cannot find .trace file');\n\n    this._snapshotStorage = new SnapshotStorage();\n\n    // 3 * ordinals progress increments below.\n    const total = ordinals.length * 3;\n    let done = 0;\n    for (const ordinal of ordinals) {\n      const contextEntry = createEmptyContext();\n      contextEntry.traceUrl = backend.traceURL();\n      contextEntry.hasSource = hasSource;\n      const modernizer = new TraceModernizer(contextEntry, this._snapshotStorage);\n\n      const trace = await this._backend.readText(ordinal + '.trace') || '';\n      modernizer.appendTrace(trace);\n      unzipProgress(++done, total);\n\n      const network = await this._backend.readText(ordinal + '.network') || '';\n      modernizer.appendTrace(network);\n      unzipProgress(++done, total);\n\n      contextEntry.actions = modernizer.actions().sort((a1, a2) => a1.startTime - a2.startTime);\n      if (!backend.isLive()) {\n        // Terminate actions w/o after event gracefully.\n        // This would close after hooks event that has not been closed because\n        // the trace is usually saved before after hooks complete.\n        for (const action of contextEntry.actions.slice().reverse()) {\n          if (!action.endTime && !action.error) {\n            for (const a of contextEntry.actions) {\n              if (a.parentId === action.callId && action.endTime < a.endTime)\n                action.endTime = a.endTime;\n            }\n          }\n        }\n      }\n\n      const stacks = await this._backend.readText(ordinal + '.stacks');\n      if (stacks) {\n        const callMetadata = parseClientSideCallMetadata(JSON.parse(stacks));\n        for (const action of contextEntry.actions)\n          action.stack = action.stack || callMetadata.get(action.callId);\n      }\n      unzipProgress(++done, total);\n\n      for (const resource of contextEntry.resources) {\n        if (resource.request.postData?._sha1)\n          this._resourceToContentType.set(resource.request.postData._sha1, stripEncodingFromContentType(resource.request.postData.mimeType));\n        if (resource.response.content?._sha1)\n          this._resourceToContentType.set(resource.response.content._sha1, stripEncodingFromContentType(resource.response.content.mimeType));\n      }\n\n      this.contextEntries.push(contextEntry);\n    }\n\n    this._snapshotStorage!.finalize();\n  }\n\n  async hasEntry(filename: string): Promise<boolean> {\n    return this._backend.hasEntry(filename);\n  }\n\n  async resourceForSha1(sha1: string): Promise<Blob | undefined> {\n    const blob = await this._backend.readBlob('resources/' + sha1);\n    const contentType = this._resourceToContentType.get(sha1);\n    // \"x-unknown\" in the har means \"no content type\".\n    if (!blob || contentType === undefined || contentType === 'x-unknown')\n      return blob;\n    return new Blob([blob], { type: contentType });\n  }\n\n  storage(): SnapshotStorage {\n    return this._snapshotStorage!;\n  }\n}\n\nfunction stripEncodingFromContentType(contentType: string) {\n  const charset = contentType.match(/^(.*);\\s*charset=.*$/);\n  if (charset)\n    return charset[1];\n  return contentType;\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// deno-lint-ignore-file no-this-alias prefer-const\n\n// Global\n\nconst MAX_BITS = 15;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_MEM_ERROR = -4;\nconst Z_BUF_ERROR = -5;\n\nconst inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff,\n\t0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nconst MANY = 1440;\n\n// JZlib version : \"1.0.2\"\nconst Z_NO_FLUSH = 0;\nconst Z_FINISH = 4;\n\n// InfTree\nconst fixed_bl = 9;\nconst fixed_bd = 5;\n\nconst fixed_tl = [96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160, 0, 8, 0,\n\t0, 8, 128, 0, 8, 64, 0, 9, 224, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208, 81, 7, 17, 0, 8, 104, 0, 8, 40,\n\t0, 9, 176, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200, 81, 7, 13,\n\t0, 8, 100, 0, 8, 36, 0, 9, 168, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152, 84, 7, 83, 0, 8, 124, 0, 8, 60,\n\t0, 9, 216, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7,\n\t35, 0, 8, 114, 0, 8, 50, 0, 9, 196, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164, 0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228, 80, 7, 7, 0, 8, 90, 0, 8,\n\t26, 0, 9, 148, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244, 80,\n\t7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172, 0, 8, 6, 0, 8, 134, 0,\n\t8, 70, 0, 9, 236, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188, 0,\n\t8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194, 80, 7, 10, 0, 8, 97,\n\t0, 8, 33, 0, 9, 162, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210,\n\t81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117,\n\t0, 8, 53, 0, 9, 202, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154,\n\t84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186, 0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 250, 80, 7, 3, 0, 8, 83,\n\t0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230,\n\t80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182, 0, 8, 11, 0, 8, 139,\n\t0, 8, 75, 0, 9, 246, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174,\n\t0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 238, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222, 82, 7, 27, 0, 8, 111,\n\t0, 8, 47, 0, 9, 190, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254, 96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9,\n\t193, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145, 83, 7, 59, 0, 8,\n\t120, 0, 8, 56, 0, 9, 209, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 241, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8,\n\t227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233, 80, 7, 8, 0, 8,\n\t92, 0, 8, 28, 0, 9, 153, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9,\n\t249, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165, 0, 8, 2, 0, 8,\n\t130, 0, 8, 66, 0, 9, 229, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9,\n\t181, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205, 81, 7, 15, 0, 8,\n\t102, 0, 8, 38, 0, 9, 173, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9,\n\t221, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189, 0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 253, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0,\n\t8, 113, 0, 8, 49, 0, 9, 195, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9,\n\t147, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243, 80, 7, 4, 0, 8,\n\t85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9,\n\t235, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187, 0, 8, 13, 0, 8,\n\t141, 0, 8, 77, 0, 9, 251, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9,\n\t167, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215, 82, 7, 19, 0, 8,\n\t107, 0, 8, 43, 0, 9, 183, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 247, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9,\n\t207, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175, 0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159, 84, 7, 99, 0, 8,\n\t127, 0, 8, 63, 0, 9, 223, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255];\nconst fixed_td = [80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097, 81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385, 80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5,\n\t8193, 82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577, 80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145, 81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5,\n\t24577, 80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289, 82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577];\n\n// Tables for deflate from PKZIP's appnote.txt.\nconst cplens = [ // Copy lengths for literal codes 257..285\n\t3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\n\n// see note #13 above about 258\nconst cplext = [ // Extra bits for literal codes 257..285\n\t0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112 // 112==invalid\n];\n\nconst cpdist = [ // Copy offsets for distance codes 0..29\n\t1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n\nconst cpdext = [ // Extra bits for distance codes\n\t0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// If BMAX needs to be larger than 16, then h and x[] should be uLong.\nconst BMAX = 15; // maximum bit length of any code\n\nfunction InfTree() {\n\tconst that = this;\n\n\tlet hn; // hufts used in space\n\tlet v; // work area for huft_build\n\tlet c; // bit length count table\n\tlet r; // table entry for structure assignment\n\tlet u; // table stack\n\tlet x; // bit offsets, then code stack\n\n\tfunction huft_build(b, // code lengths in bits (all assumed <=\n\t\t// BMAX)\n\t\tbindex, n, // number of codes (assumed <= 288)\n\t\ts, // number of simple-valued codes (0..s-1)\n\t\td, // list of base values for non-simple codes\n\t\te, // list of extra bits for non-simple codes\n\t\tt, // result: starting table\n\t\tm, // maximum lookup bits, returns actual\n\t\thp,// space for trees\n\t\thn,// hufts used in space\n\t\tv // working area: values in order of bit length\n\t) {\n\t\t// Given a list of code lengths and a maximum table size, make a set of\n\t\t// tables to decode that set of codes. Return Z_OK on success,\n\t\t// Z_BUF_ERROR\n\t\t// if the given code set is incomplete (the tables are still built in\n\t\t// this\n\t\t// case), Z_DATA_ERROR if the input is invalid (an over-subscribed set\n\t\t// of\n\t\t// lengths), or Z_MEM_ERROR if not enough memory.\n\n\t\tlet a; // counter for codes of length k\n\t\tlet f; // i repeats in table every f entries\n\t\tlet g; // maximum code length\n\t\tlet h; // table level\n\t\tlet i; // counter, current code\n\t\tlet j; // counter\n\t\tlet k; // number of bits in current code\n\t\tlet l; // bits per table (returned in m)\n\t\tlet mask; // (1 << w) - 1, to avoid cc -O bug on HP\n\t\tlet p; // pointer into c[], b[], or v[]\n\t\tlet q; // points to current table\n\t\tlet w; // bits before this table == (l * h)\n\t\tlet xp; // pointer into x\n\t\tlet y; // number of dummy codes added\n\t\tlet z; // number of entries in current table\n\n\t\t// Generate counts for each bit length\n\n\t\tp = 0;\n\t\ti = n;\n\t\tdo {\n\t\t\tc[b[bindex + p]]++;\n\t\t\tp++;\n\t\t\ti--; // assume all entries <= BMAX\n\t\t} while (i !== 0);\n\n\t\tif (c[0] == n) { // null input--all zero length codes\n\t\t\tt[0] = -1;\n\t\t\tm[0] = 0;\n\t\t\treturn Z_OK;\n\t\t}\n\n\t\t// Find minimum and maximum length, bound *m by those\n\t\tl = m[0];\n\t\tfor (j = 1; j <= BMAX; j++)\n\t\t\tif (c[j] !== 0)\n\t\t\t\tbreak;\n\t\tk = j; // minimum code length\n\t\tif (l < j) {\n\t\t\tl = j;\n\t\t}\n\t\tfor (i = BMAX; i !== 0; i--) {\n\t\t\tif (c[i] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\tg = i; // maximum code length\n\t\tif (l > i) {\n\t\t\tl = i;\n\t\t}\n\t\tm[0] = l;\n\n\t\t// Adjust last length count to fill out codes, if needed\n\t\tfor (y = 1 << j; j < i; j++, y <<= 1) {\n\t\t\tif ((y -= c[j]) < 0) {\n\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t}\n\t\t}\n\t\tif ((y -= c[i]) < 0) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tc[i] += y;\n\n\t\t// Generate starting offsets into the value table for each length\n\t\tx[1] = j = 0;\n\t\tp = 1;\n\t\txp = 2;\n\t\twhile (--i !== 0) { // note that i == g from above\n\t\t\tx[xp] = (j += c[p]);\n\t\t\txp++;\n\t\t\tp++;\n\t\t}\n\n\t\t// Make a table of values in order of bit lengths\n\t\ti = 0;\n\t\tp = 0;\n\t\tdo {\n\t\t\tif ((j = b[bindex + p]) !== 0) {\n\t\t\t\tv[x[j]++] = i;\n\t\t\t}\n\t\t\tp++;\n\t\t} while (++i < n);\n\t\tn = x[g]; // set n to length of v\n\n\t\t// Generate the Huffman codes and for each, make the table entries\n\t\tx[0] = i = 0; // first Huffman code is zero\n\t\tp = 0; // grab values in bit order\n\t\th = -1; // no tables yet--level -1\n\t\tw = -l; // bits decoded == (l * h)\n\t\tu[0] = 0; // just to keep compilers happy\n\t\tq = 0; // ditto\n\t\tz = 0; // ditto\n\n\t\t// go through the bit lengths (k already is bits in shortest code)\n\t\tfor (; k <= g; k++) {\n\t\t\ta = c[k];\n\t\t\twhile (a-- !== 0) {\n\t\t\t\t// here i is the Huffman code of length k bits for value *p\n\t\t\t\t// make tables up to required level\n\t\t\t\twhile (k > w + l) {\n\t\t\t\t\th++;\n\t\t\t\t\tw += l; // previous table always l bits\n\t\t\t\t\t// compute minimum size table less than or equal to l bits\n\t\t\t\t\tz = g - w;\n\t\t\t\t\tz = (z > l) ? l : z; // table size upper limit\n\t\t\t\t\tif ((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n\t\t\t\t\t\t// too few codes for\n\t\t\t\t\t\t// k-w bit table\n\t\t\t\t\t\tf -= a + 1; // deduct codes from patterns left\n\t\t\t\t\t\txp = k;\n\t\t\t\t\t\tif (j < z) {\n\t\t\t\t\t\t\twhile (++j < z) { // try smaller tables up to z bits\n\t\t\t\t\t\t\t\tif ((f <<= 1) <= c[++xp])\n\t\t\t\t\t\t\t\t\tbreak; // enough codes to use up j bits\n\t\t\t\t\t\t\t\tf -= c[xp]; // else deduct codes from patterns\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tz = 1 << j; // table entries for j-bit table\n\n\t\t\t\t\t// allocate new table\n\t\t\t\t\tif (hn[0] + z > MANY) { // (note: doesn't matter for fixed)\n\t\t\t\t\t\treturn Z_DATA_ERROR; // overflow of MANY\n\t\t\t\t\t}\n\t\t\t\t\tu[h] = q = /* hp+ */hn[0]; // DEBUG\n\t\t\t\t\thn[0] += z;\n\n\t\t\t\t\t// connect to last table, if there is one\n\t\t\t\t\tif (h !== 0) {\n\t\t\t\t\t\tx[h] = i; // save pattern for backing up\n\t\t\t\t\t\tr[0] = /* (byte) */j; // bits in this table\n\t\t\t\t\t\tr[1] = /* (byte) */l; // bits to dump before this table\n\t\t\t\t\t\tj = i >>> (w - l);\n\t\t\t\t\t\tr[2] = /* (int) */(q - u[h - 1] - j); // offset to this table\n\t\t\t\t\t\thp.set(r, (u[h - 1] + j) * 3);\n\t\t\t\t\t\t// to\n\t\t\t\t\t\t// last\n\t\t\t\t\t\t// table\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt[0] = q; // first table is returned result\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set up table entry in r\n\t\t\t\tr[1] = /* (byte) */(k - w);\n\t\t\t\tif (p >= n) {\n\t\t\t\t\tr[0] = 128 + 64; // out of values--invalid code\n\t\t\t\t} else if (v[p] < s) {\n\t\t\t\t\tr[0] = /* (byte) */(v[p] < 256 ? 0 : 32 + 64); // 256 is\n\t\t\t\t\t// end-of-block\n\t\t\t\t\tr[2] = v[p++]; // simple code is just the value\n\t\t\t\t} else {\n\t\t\t\t\tr[0] = /* (byte) */(e[v[p] - s] + 16 + 64); // non-simple--look\n\t\t\t\t\t// up in lists\n\t\t\t\t\tr[2] = d[v[p++] - s];\n\t\t\t\t}\n\n\t\t\t\t// fill code-like entries with r\n\t\t\t\tf = 1 << (k - w);\n\t\t\t\tfor (j = i >>> w; j < z; j += f) {\n\t\t\t\t\thp.set(r, (q + j) * 3);\n\t\t\t\t}\n\n\t\t\t\t// backwards increment the k-bit code i\n\t\t\t\tfor (j = 1 << (k - 1); (i & j) !== 0; j >>>= 1) {\n\t\t\t\t\ti ^= j;\n\t\t\t\t}\n\t\t\t\ti ^= j;\n\n\t\t\t\t// backup over finished tables\n\t\t\t\tmask = (1 << w) - 1; // needed on HP, cc -O bug\n\t\t\t\twhile ((i & mask) != x[h]) {\n\t\t\t\t\th--; // don't need to update q\n\t\t\t\t\tw -= l;\n\t\t\t\t\tmask = (1 << w) - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Return Z_BUF_ERROR if we were given an incomplete table\n\t\treturn y !== 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n\t}\n\n\tfunction initWorkArea(vsize) {\n\t\tlet i;\n\t\tif (!hn) {\n\t\t\thn = []; // []; //new Array(1);\n\t\t\tv = []; // new Array(vsize);\n\t\t\tc = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t\tr = []; // new Array(3);\n\t\t\tu = new Int32Array(BMAX); // new Array(BMAX);\n\t\t\tx = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t}\n\t\tif (v.length < vsize) {\n\t\t\tv = []; // new Array(vsize);\n\t\t}\n\t\tfor (i = 0; i < vsize; i++) {\n\t\t\tv[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < BMAX + 1; i++) {\n\t\t\tc[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\t// for(int i=0; i<BMAX; i++){u[i]=0;}\n\t\tu.set(c.subarray(0, BMAX), 0);\n\t\t// for(int i=0; i<BMAX+1; i++){x[i]=0;}\n\t\tx.set(c.subarray(0, BMAX + 1), 0);\n\t}\n\n\tthat.inflate_trees_bits = function (c, // 19 code lengths\n\t\tbb, // bits tree desired/actual depth\n\t\ttb, // bits tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\t\tinitWorkArea(19);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, 19, 19, null, null, tb, bb, hp, hn, v);\n\n\t\tif (result == Z_DATA_ERROR) {\n\t\t\tz.msg = \"oversubscribed dynamic bit lengths tree\";\n\t\t} else if (result == Z_BUF_ERROR || bb[0] === 0) {\n\t\t\tz.msg = \"incomplete dynamic bit lengths tree\";\n\t\t\tresult = Z_DATA_ERROR;\n\t\t}\n\t\treturn result;\n\t};\n\n\tthat.inflate_trees_dynamic = function (nl, // number of literal/length codes\n\t\tnd, // number of distance codes\n\t\tc, // that many (total) code lengths\n\t\tbl, // literal desired/actual bit depth\n\t\tbd, // distance desired/actual bit depth\n\t\ttl, // literal/length tree result\n\t\ttd, // distance tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\n\t\t// build literal/length tree\n\t\tinitWorkArea(288);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, hn, v);\n\t\tif (result != Z_OK || bl[0] === 0) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed literal/length tree\";\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"incomplete literal/length tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t// build distance tree\n\t\tinitWorkArea(288);\n\t\tresult = huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, hn, v);\n\n\t\tif (result != Z_OK || (bd[0] === 0 && nl > 257)) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed distance tree\";\n\t\t\t} else if (result == Z_BUF_ERROR) {\n\t\t\t\tz.msg = \"incomplete distance tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"empty distance tree with lengths\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\treturn Z_OK;\n\t};\n\n}\n\nInfTree.inflate_trees_fixed = function (bl, // literal desired/actual bit depth\n\tbd, // distance desired/actual bit depth\n\ttl,// literal/length tree result\n\ttd// distance tree result\n) {\n\tbl[0] = fixed_bl;\n\tbd[0] = fixed_bd;\n\ttl[0] = fixed_tl;\n\ttd[0] = fixed_td;\n\treturn Z_OK;\n};\n\n// InfCodes\n\n// waiting for \"i:\"=input,\n// \"o:\"=output,\n// \"x:\"=nothing\nconst START = 0; // x: set up for LEN\nconst LEN = 1; // i: get length/literal/eob next\nconst LENEXT = 2; // i: getting length extra (have base)\nconst DIST = 3; // i: get distance next\nconst DISTEXT = 4;// i: getting distance extra\nconst COPY = 5; // o: copying bytes in win, waiting\n// for space\nconst LIT = 6; // o: got literal, waiting for output\n// space\nconst WASH = 7; // o: got eob, possibly still output\n// waiting\nconst END = 8; // x: got eob and all data flushed\nconst BADCODE = 9;// x: got error\n\nfunction InfCodes() {\n\tconst that = this;\n\n\tlet mode; // current inflate_codes mode\n\n\t// mode dependent information\n\tlet len = 0;\n\n\tlet tree; // pointer into tree\n\tlet tree_index = 0;\n\tlet need = 0; // bits needed\n\n\tlet lit = 0;\n\n\t// if EXT or COPY, where and how much\n\tlet get = 0; // bits to get for extra\n\tlet dist = 0; // distance back to copy from\n\n\tlet lbits = 0; // ltree bits decoded per branch\n\tlet dbits = 0; // dtree bits decoder per branch\n\tlet ltree; // literal/length/eob tree\n\tlet ltree_index = 0; // literal/length/eob tree\n\tlet dtree; // distance tree\n\tlet dtree_index = 0; // distance tree\n\n\t// Called with number of bytes left to write in win at least 258\n\t// (the maximum string length) and number of input bytes available\n\t// at least ten. The ten bytes are six bytes for the longest length/\n\t// distance pair plus four bytes for overloading the bit buffer.\n\n\tfunction inflate_fast(bl, bd, tl, tl_index, td, td_index, s, z) {\n\t\tlet t; // temporary pointer\n\t\tlet tp; // temporary pointer\n\t\tlet tp_index; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet ml; // mask for literal/length tree\n\t\tlet md; // mask for distance tree\n\t\tlet c; // bytes to copy\n\t\tlet d; // distance back to copy from\n\t\tlet r; // copy source pointer\n\n\t\tlet tp_index_t_3; // (tp_index+t)*3\n\n\t\t// load input, output, bit values\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// initialize masks\n\t\tml = inflate_mask[bl];\n\t\tmd = inflate_mask[bd];\n\n\t\t// do until not enough input or output space for fast loop\n\t\tdo { // assume called with m >= 258 && n >= 10\n\t\t\t// get literal/length code\n\t\t\twhile (k < (20)) { // max bits for literal/length code\n\t\t\t\tn--;\n\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\tk += 8;\n\t\t\t}\n\n\t\t\tt = b & ml;\n\t\t\ttp = tl;\n\t\t\ttp_index = tl_index;\n\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\tm--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdo {\n\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\te &= 15;\n\t\t\t\t\tc = tp[tp_index_t_3 + 2] + (/* (int) */b & inflate_mask[e]);\n\n\t\t\t\t\tb >>= e;\n\t\t\t\t\tk -= e;\n\n\t\t\t\t\t// decode distance base of block to copy\n\t\t\t\t\twhile (k < (15)) { // max bits for distance code\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tt = b & md;\n\t\t\t\t\ttp = td;\n\t\t\t\t\ttp_index = td_index;\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\te = tp[tp_index_t_3];\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\t\t\t// get extra bits to add to distance base\n\t\t\t\t\t\t\te &= 15;\n\t\t\t\t\t\t\twhile (k < (e)) { // get extra bits (up to 13)\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\td = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n\t\t\t\t\t\t\tb >>= (e);\n\t\t\t\t\t\t\tk -= (e);\n\n\t\t\t\t\t\t\t// do the copy\n\t\t\t\t\t\t\tm -= c;\n\t\t\t\t\t\t\tif (q >= d) { // offset before dest\n\t\t\t\t\t\t\t\t// just copy\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tif (q - r > 0 && 2 > (q - r)) {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // minimum\n\t\t\t\t\t\t\t\t\t// count is\n\t\t\t\t\t\t\t\t\t// three,\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // so unroll\n\t\t\t\t\t\t\t\t\t// loop a\n\t\t\t\t\t\t\t\t\t// little\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + 2), q);\n\t\t\t\t\t\t\t\t\tq += 2;\n\t\t\t\t\t\t\t\t\tr += 2;\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // else offset after destination\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tr += s.end; // force pointer in win\n\t\t\t\t\t\t\t\t} while (r < 0); // covers invalid distances\n\t\t\t\t\t\t\t\te = s.end - r;\n\t\t\t\t\t\t\t\tif (c > e) { // if source crosses,\n\t\t\t\t\t\t\t\t\tc -= e; // wrapped copy\n\t\t\t\t\t\t\t\t\tif (q - r > 0 && e > (q - r)) {\n\t\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t\t\t} while (--e !== 0);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + e), q);\n\t\t\t\t\t\t\t\t\t\tq += e;\n\t\t\t\t\t\t\t\t\t\tr += e;\n\t\t\t\t\t\t\t\t\t\te = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tr = 0; // copy rest from start of win\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy all or what's left\n\t\t\t\t\t\t\tif (q - r > 0 && c > (q - r)) {\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t} while (--c !== 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + c), q);\n\t\t\t\t\t\t\t\tq += c;\n\t\t\t\t\t\t\t\tr += c;\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if ((e & 64) === 0) {\n\t\t\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\t\t\te = tp[tp_index_t_3];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tz.msg = \"invalid distance code\";\n\n\t\t\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\t\t\tn += c;\n\t\t\t\t\t\t\tp -= c;\n\t\t\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\n\t\t\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t} while (true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ((e & 64) === 0) {\n\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\t\t\tm--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if ((e & 32) !== 0) {\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\t} else {\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t} while (true);\n\t\t} while (m >= 258 && n >= 10);\n\n\t\t// not enough input or output--restore pointers and return\n\t\tc = z.avail_in - n;\n\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\tn += c;\n\t\tp -= c;\n\t\tk -= c << 3;\n\n\t\ts.bitb = b;\n\t\ts.bitk = k;\n\t\tz.avail_in = n;\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\ts.write = q;\n\n\t\treturn Z_OK;\n\t}\n\n\tthat.init = function (bl, bd, tl, tl_index, td, td_index) {\n\t\tmode = START;\n\t\tlbits = /* (byte) */bl;\n\t\tdbits = /* (byte) */bd;\n\t\tltree = tl;\n\t\tltree_index = tl_index;\n\t\tdtree = td;\n\t\tdtree_index = td_index;\n\t\ttree = null;\n\t};\n\n\tthat.proc = function (s, z, r) {\n\t\tlet j; // temporary storage\n\t\tlet tindex; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b = 0; // bit buffer\n\t\tlet k = 0; // bits in bit buffer\n\t\tlet p = 0; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet f; // pointer to copy strings from\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// process input and output based on current state\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (mode) {\n\t\t\t\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n\t\t\t\tcase START: // x: set up for LEN\n\t\t\t\t\tif (m >= 258 && n >= 10) {\n\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\tr = inflate_fast(lbits, dbits, ltree, ltree_index, dtree, dtree_index, s, z);\n\n\t\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\t\tb = s.bitb;\n\t\t\t\t\t\tk = s.bitk;\n\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\tif (r != Z_OK) {\n\t\t\t\t\t\t\tmode = r == Z_STREAM_END ? WASH : BADCODE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tneed = lbits;\n\t\t\t\t\ttree = ltree;\n\t\t\t\t\ttree_index = ltree_index;\n\n\t\t\t\t\tmode = LEN;\n\t\t\t\t/* falls through */\n\t\t\t\tcase LEN: // i: get length/literal/eob next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>>= (tree[tindex + 1]);\n\t\t\t\t\tk -= (tree[tindex + 1]);\n\n\t\t\t\t\te = tree[tindex];\n\n\t\t\t\t\tif (e === 0) { // literal\n\t\t\t\t\t\tlit = tree[tindex + 2];\n\t\t\t\t\t\tmode = LIT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 16) !== 0) { // length\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tlen = tree[tindex + 2];\n\t\t\t\t\t\tmode = LENEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 32) !== 0) { // end of block\n\t\t\t\t\t\tmode = WASH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase LENEXT: // i: getting length extra (have base)\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tneed = dbits;\n\t\t\t\t\ttree = dtree;\n\t\t\t\t\ttree_index = dtree_index;\n\t\t\t\t\tmode = DIST;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DIST: // i: get distance next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>= tree[tindex + 1];\n\t\t\t\t\tk -= tree[tindex + 1];\n\n\t\t\t\t\te = (tree[tindex]);\n\t\t\t\t\tif ((e & 16) !== 0) { // distance\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tdist = tree[tindex + 2];\n\t\t\t\t\t\tmode = DISTEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid distance code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase DISTEXT: // i: getting distance extra\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tdist += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tmode = COPY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase COPY: // o: copying bytes in win, waiting for space\n\t\t\t\t\tf = q - dist;\n\t\t\t\t\twhile (f < 0) { // modulo win size-\"while\" instead\n\t\t\t\t\t\tf += s.end; // of \"if\" handles invalid distances\n\t\t\t\t\t}\n\t\t\t\t\twhile (len !== 0) {\n\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.win[q++] = s.win[f++];\n\t\t\t\t\t\tm--;\n\n\t\t\t\t\t\tif (f == s.end)\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\tlen--;\n\t\t\t\t\t}\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LIT: // o: got literal, waiting for output space\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\ts.win[q++] = /* (byte) */lit;\n\t\t\t\t\tm--;\n\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase WASH: // o: got eob, possibly more output\n\t\t\t\t\tif (k > 7) { // return unused byte, if any\n\t\t\t\t\t\tk -= 8;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t\tp--; // can always return one\n\t\t\t\t\t}\n\n\t\t\t\t\ts.write = q;\n\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\tq = s.write;\n\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\tif (s.read != s.write) {\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = END;\n\t\t\t\t/* falls through */\n\t\t\t\tcase END:\n\t\t\t\t\tr = Z_STREAM_END;\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase BADCODE: // x: got error\n\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function () {\n\t\t// ZFREE(z, c);\n\t};\n\n}\n\n// InfBlocks\n\n// Table for deflate from PKZIP's appnote.txt.\nconst border = [ // Order of the bit length code lengths\n\t16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nconst TYPE = 0; // get type bits (3, including end bit)\nconst LENS = 1; // get lengths for stored\nconst STORED = 2;// processing stored block\nconst TABLE = 3; // get table lengths\nconst BTREE = 4; // get bit lengths tree for a dynamic\n// block\nconst DTREE = 5; // get length, distance trees for a\n// dynamic block\nconst CODES = 6; // processing fixed or dynamic block\nconst DRY = 7; // output remaining win bytes\nconst DONELOCKS = 8; // finished last block, done\nconst BADBLOCKS = 9; // ot a data error--stuck here\n\nfunction InfBlocks(z, w) {\n\tconst that = this;\n\n\tlet mode = TYPE; // current inflate_block mode\n\n\tlet left = 0; // if STORED, bytes left to copy\n\n\tlet table = 0; // table lengths (14 bits)\n\tlet index = 0; // index into blens (or border)\n\tlet blens; // bit lengths of codes\n\tconst bb = [0]; // bit length tree depth\n\tconst tb = [0]; // bit length decoding tree\n\n\tconst codes = new InfCodes(); // if CODES, current state\n\n\tlet last = 0; // true if this block is the last block\n\n\tlet hufts = new Int32Array(MANY * 3); // single malloc for tree space\n\tconst check = 0; // check on output\n\tconst inftree = new InfTree();\n\n\tthat.bitk = 0; // bits in bit buffer\n\tthat.bitb = 0; // bit buffer\n\tthat.win = new Uint8Array(w); // sliding win\n\tthat.end = w; // one byte after sliding win\n\tthat.read = 0; // win read pointer\n\tthat.write = 0; // win write pointer\n\n\tthat.reset = function (z, c) {\n\t\tif (c)\n\t\t\tc[0] = check;\n\t\t// if (mode == BTREE || mode == DTREE) {\n\t\t// }\n\t\tif (mode == CODES) {\n\t\t\tcodes.free(z);\n\t\t}\n\t\tmode = TYPE;\n\t\tthat.bitk = 0;\n\t\tthat.bitb = 0;\n\t\tthat.read = that.write = 0;\n\t};\n\n\tthat.reset(z, null);\n\n\t// copy as much as possible from the sliding win to the output area\n\tthat.inflate_flush = function (z, r) {\n\t\tlet n;\n\t\tlet p;\n\t\tlet q;\n\n\t\t// local copies of source and destination pointers\n\t\tp = z.next_out_index;\n\t\tq = that.read;\n\n\t\t// compute number of bytes to copy as far as end of win\n\t\tn = /* (int) */((q <= that.write ? that.write : that.end) - q);\n\t\tif (n > z.avail_out)\n\t\t\tn = z.avail_out;\n\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\tr = Z_OK;\n\n\t\t// update counters\n\t\tz.avail_out -= n;\n\t\tz.total_out += n;\n\n\t\t// copy as far as end of win\n\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\tp += n;\n\t\tq += n;\n\n\t\t// see if more to copy at beginning of win\n\t\tif (q == that.end) {\n\t\t\t// wrap pointers\n\t\t\tq = 0;\n\t\t\tif (that.write == that.end)\n\t\t\t\tthat.write = 0;\n\n\t\t\t// compute bytes to copy\n\t\t\tn = that.write - q;\n\t\t\tif (n > z.avail_out)\n\t\t\t\tn = z.avail_out;\n\t\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\t\tr = Z_OK;\n\n\t\t\t// update counters\n\t\t\tz.avail_out -= n;\n\t\t\tz.total_out += n;\n\n\t\t\t// copy\n\t\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\t\tp += n;\n\t\t\tq += n;\n\t\t}\n\n\t\t// update pointers\n\t\tz.next_out_index = p;\n\t\tthat.read = q;\n\n\t\t// done\n\t\treturn r;\n\t};\n\n\tthat.proc = function (z, r) {\n\t\tlet t; // temporary storage\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\n\t\tlet i;\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\t// {\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = that.bitb;\n\t\tk = that.bitk;\n\t\t// }\n\t\t// {\n\t\tq = that.write;\n\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t// }\n\n\t\t// process input based on current state\n\t\t// DEBUG dtree\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tlet bl, bd, tl, td, bl_, bd_, tl_, td_;\n\t\t\tswitch (mode) {\n\t\t\t\tcase TYPE:\n\n\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\t\t\t\t\tt = /* (int) */(b & 7);\n\t\t\t\t\tlast = t & 1;\n\n\t\t\t\t\tswitch (t >>> 1) {\n\t\t\t\t\t\tcase 0: // stored\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tt = k & 7; // go to byte boundary\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = LENS; // get length of stored block\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // fixed\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tbl = []; // new Array(1);\n\t\t\t\t\t\t\tbd = []; // new Array(1);\n\t\t\t\t\t\t\ttl = [[]]; // new Array(1);\n\t\t\t\t\t\t\ttd = [[]]; // new Array(1);\n\n\t\t\t\t\t\t\tInfTree.inflate_trees_fixed(bl, bd, tl, td);\n\t\t\t\t\t\t\tcodes.init(bl[0], bd[0], tl[0], 0, td[0], 0);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = CODES;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // dynamic\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = TABLE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: // illegal\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\tz.msg = \"invalid block type\";\n\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase LENS:\n\n\t\t\t\t\twhile (k < (32)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"invalid stored block lengths\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tleft = (b & 0xffff);\n\t\t\t\t\tb = k = 0; // dump bits\n\t\t\t\t\tmode = left !== 0 ? STORED : (last !== 0 ? DRY : TYPE);\n\t\t\t\t\tbreak;\n\t\t\t\tcase STORED:\n\t\t\t\t\tif (n === 0) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = that.write;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\tt = left;\n\t\t\t\t\tif (t > n)\n\t\t\t\t\t\tt = n;\n\t\t\t\t\tif (t > m)\n\t\t\t\t\t\tt = m;\n\t\t\t\t\tthat.win.set(z.read_buf(p, t), q);\n\t\t\t\t\tp += t;\n\t\t\t\t\tn -= t;\n\t\t\t\t\tq += t;\n\t\t\t\t\tm -= t;\n\t\t\t\t\tif ((left -= t) !== 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tmode = last !== 0 ? DRY : TYPE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TABLE:\n\n\t\t\t\t\twhile (k < (14)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttable = t = (b & 0x3fff);\n\t\t\t\t\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"too many length or distance symbols\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\t\t\t\t\tif (!blens || blens.length < t) {\n\t\t\t\t\t\tblens = []; // new Array(t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (i = 0; i < t; i++) {\n\t\t\t\t\t\t\tblens[i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// {\n\t\t\t\t\tb >>>= (14);\n\t\t\t\t\tk -= (14);\n\t\t\t\t\t// }\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = BTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase BTREE:\n\t\t\t\t\twhile (index < 4 + (table >>> 10)) {\n\t\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tblens[border[index++]] = b & 7;\n\n\t\t\t\t\t\t// {\n\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (index < 19) {\n\t\t\t\t\t\tblens[border[index++]] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbb[0] = 7;\n\t\t\t\t\tt = inftree.inflate_trees_bits(blens, bb, tb, hufts, z);\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tr = t;\n\t\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = DTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DTREE:\n\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tt = table;\n\t\t\t\t\t\tif (index >= 258 + (t & 0x1f) + ((t >> 5) & 0x1f)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet j, c;\n\n\t\t\t\t\t\tt = bb[0];\n\n\t\t\t\t\t\twhile (k < (t)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if (tb[0] == -1) {\n\t\t\t\t\t\t// System.err.println(\"null...\");\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tt = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 1];\n\t\t\t\t\t\tc = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 2];\n\n\t\t\t\t\t\tif (c < 16) {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\tblens[index++] = c;\n\t\t\t\t\t\t} else { // c == 16..18\n\t\t\t\t\t\t\ti = c == 18 ? 7 : c - 14;\n\t\t\t\t\t\t\tj = c == 18 ? 11 : 3;\n\n\t\t\t\t\t\t\twhile (k < (t + i)) {\n\t\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\n\t\t\t\t\t\t\tj += (b & inflate_mask[i]);\n\n\t\t\t\t\t\t\tb >>>= (i);\n\t\t\t\t\t\t\tk -= (i);\n\n\t\t\t\t\t\t\ti = index;\n\t\t\t\t\t\t\tt = table;\n\t\t\t\t\t\t\tif (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) || (c == 16 && i < 1)) {\n\t\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\t\tz.msg = \"invalid bit length repeat\";\n\t\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc = c == 16 ? blens[i - 1] : 0;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tblens[i++] = c;\n\t\t\t\t\t\t\t} while (--j !== 0);\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttb[0] = -1;\n\t\t\t\t\t// {\n\t\t\t\t\tbl_ = []; // new Array(1);\n\t\t\t\t\tbd_ = []; // new Array(1);\n\t\t\t\t\ttl_ = []; // new Array(1);\n\t\t\t\t\ttd_ = []; // new Array(1);\n\t\t\t\t\tbl_[0] = 9; // must be <= 9 for lookahead assumptions\n\t\t\t\t\tbd_[0] = 6; // must be <= 9 for lookahead assumptions\n\n\t\t\t\t\tt = table;\n\t\t\t\t\tt = inftree.inflate_trees_dynamic(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f), blens, bl_, bd_, tl_, td_, hufts, z);\n\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tif (t == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr = t;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tcodes.init(bl_[0], bd_[0], hufts, tl_[0], hufts, td_[0]);\n\t\t\t\t\t// }\n\t\t\t\t\tmode = CODES;\n\t\t\t\t/* falls through */\n\t\t\t\tcase CODES:\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\n\t\t\t\t\tif ((r = codes.proc(that, z, r)) != Z_STREAM_END) {\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\t\t\t\t\tcodes.free(z);\n\n\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\tb = that.bitb;\n\t\t\t\t\tk = that.bitk;\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\n\t\t\t\t\tif (last === 0) {\n\t\t\t\t\t\tmode = TYPE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = DRY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DRY:\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\tif (that.read != that.write) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = DONELOCKS;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONELOCKS:\n\t\t\t\t\tr = Z_STREAM_END;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\tcase BADBLOCKS:\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function (z) {\n\t\tthat.reset(z, null);\n\t\tthat.win = null;\n\t\thufts = null;\n\t\t// ZFREE(z, s);\n\t};\n\n\tthat.set_dictionary = function (d, start, n) {\n\t\tthat.win.set(d.subarray(start, start + n), 0);\n\t\tthat.read = that.write = n;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH.\n\tthat.sync_point = function () {\n\t\treturn mode == LENS ? 1 : 0;\n\t};\n\n}\n\n// Inflate\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst Z_DEFLATED = 8;\n\nconst METHOD = 0; // waiting for method byte\nconst FLAG = 1; // waiting for flag byte\nconst DICT4 = 2; // four dictionary check bytes to go\nconst DICT3 = 3; // three dictionary check bytes to go\nconst DICT2 = 4; // two dictionary check bytes to go\nconst DICT1 = 5; // one dictionary check byte to go\nconst DICT0 = 6; // waiting for inflateSetDictionary\nconst BLOCKS = 7; // decompressing blocks\nconst DONE = 12; // finished check, done\nconst BAD = 13; // got an error--stay here\n\nconst mark = [0, 0, 0xff, 0xff];\n\nfunction Inflate() {\n\tconst that = this;\n\n\tthat.mode = 0; // current inflate mode\n\n\t// mode dependent information\n\tthat.method = 0; // if FLAGS, method byte\n\n\t// if CHECK, check values to compare\n\tthat.was = [0]; // new Array(1); // computed check value\n\tthat.need = 0; // stream check value\n\n\t// if BAD, inflateSync's marker bytes count\n\tthat.marker = 0;\n\n\t// mode independent information\n\tthat.wbits = 0; // log2(win size) (8..15, defaults to 15)\n\n\t// this.blocks; // current inflate_blocks state\n\n\tfunction inflateReset(z) {\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tz.total_in = z.total_out = 0;\n\t\tz.msg = null;\n\t\tz.istate.mode = BLOCKS;\n\t\tz.istate.blocks.reset(z, null);\n\t\treturn Z_OK;\n\t}\n\n\tthat.inflateEnd = function (z) {\n\t\tif (that.blocks)\n\t\t\tthat.blocks.free(z);\n\t\tthat.blocks = null;\n\t\t// ZFREE(z, z->state);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateInit = function (z, w) {\n\t\tz.msg = null;\n\t\tthat.blocks = null;\n\n\t\t// set win size\n\t\tif (w < 8 || w > 15) {\n\t\t\tthat.inflateEnd(z);\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tthat.wbits = w;\n\n\t\tz.istate.blocks = new InfBlocks(z, 1 << w);\n\n\t\t// reset state\n\t\tinflateReset(z);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflate = function (z, f) {\n\t\tlet r;\n\t\tlet b;\n\n\t\tif (!z || !z.istate || !z.next_in)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tf = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n\t\tr = Z_BUF_ERROR;\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (istate.mode) {\n\t\t\t\tcase METHOD:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tif (((istate.method = z.read_byte(z.next_in_index++)) & 0xf) != Z_DEFLATED) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"unknown compression method\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((istate.method >> 4) + 8 > istate.wbits) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"invalid win size\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = FLAG;\n\t\t\t\t/* falls through */\n\t\t\t\tcase FLAG:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tb = (z.read_byte(z.next_in_index++)) & 0xff;\n\n\t\t\t\t\tif ((((istate.method << 8) + b) % 31) !== 0) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"incorrect header check\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((b & PRESET_DICT) === 0) {\n\t\t\t\t\t\tistate.mode = BLOCKS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = DICT4;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT4:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need = ((z.read_byte(z.next_in_index++) & 0xff) << 24) & 0xff000000;\n\t\t\t\t\tistate.mode = DICT3;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT3:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 16) & 0xff0000;\n\t\t\t\t\tistate.mode = DICT2;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT2:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 8) & 0xff00;\n\t\t\t\t\tistate.mode = DICT1;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT1:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += (z.read_byte(z.next_in_index++) & 0xff);\n\t\t\t\t\tistate.mode = DICT0;\n\t\t\t\t\treturn Z_NEED_DICT;\n\t\t\t\tcase DICT0:\n\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\tz.msg = \"need dictionary\";\n\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t\tcase BLOCKS:\n\n\t\t\t\t\tr = istate.blocks.proc(z, r);\n\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (r == Z_OK) {\n\t\t\t\t\t\tr = f;\n\t\t\t\t\t}\n\t\t\t\t\tif (r != Z_STREAM_END) {\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t\tr = f;\n\t\t\t\t\tistate.blocks.reset(z, istate.was);\n\t\t\t\t\tistate.mode = DONE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONE:\n\t\t\t\t\tz.avail_in = 0;\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\tcase BAD:\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\tdefault:\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.inflateSetDictionary = function (z, dictionary, dictLength) {\n\t\tlet index = 0, length = dictLength;\n\t\tif (!z || !z.istate || z.istate.mode != DICT0)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (length >= (1 << istate.wbits)) {\n\t\t\tlength = (1 << istate.wbits) - 1;\n\t\t\tindex = dictLength - length;\n\t\t}\n\t\tistate.blocks.set_dictionary(dictionary, index, length);\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateSync = function (z) {\n\t\tlet n; // number of bytes to look at\n\t\tlet p; // pointer to bytes\n\t\tlet m; // number of marker bytes found in a row\n\t\tlet r, w; // temporaries to save total_in and total_out\n\n\t\t// set up\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (istate.mode != BAD) {\n\t\t\tistate.mode = BAD;\n\t\t\tistate.marker = 0;\n\t\t}\n\t\tif ((n = z.avail_in) === 0)\n\t\t\treturn Z_BUF_ERROR;\n\t\tp = z.next_in_index;\n\t\tm = istate.marker;\n\n\t\t// search\n\t\twhile (n !== 0 && m < 4) {\n\t\t\tif (z.read_byte(p) == mark[m]) {\n\t\t\t\tm++;\n\t\t\t} else if (z.read_byte(p) !== 0) {\n\t\t\t\tm = 0;\n\t\t\t} else {\n\t\t\t\tm = 4 - m;\n\t\t\t}\n\t\t\tp++;\n\t\t\tn--;\n\t\t}\n\n\t\t// restore\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\tz.avail_in = n;\n\t\tistate.marker = m;\n\n\t\t// return no joy or set up to restart on a new block\n\t\tif (m != 4) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tr = z.total_in;\n\t\tw = z.total_out;\n\t\tinflateReset(z);\n\t\tz.total_in = r;\n\t\tz.total_out = w;\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n\t// implementation to provide an additional safety check. PPP uses\n\t// Z_SYNC_FLUSH\n\t// but removes the length bytes of the resulting empty stored block. When\n\t// decompressing, PPP checks that at the end of input packet, inflate is\n\t// waiting for these length bytes.\n\tthat.inflateSyncPoint = function (z) {\n\t\tif (!z || !z.istate || !z.istate.blocks)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn z.istate.blocks.sync_point();\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n}\n\nZStream.prototype = {\n\tinflateInit(bits) {\n\t\tconst that = this;\n\t\tthat.istate = new Inflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.istate.inflateInit(that, bits);\n\t},\n\n\tinflate(f) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflate(that, f);\n\t},\n\n\tinflateEnd() {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.istate.inflateEnd(that);\n\t\tthat.istate = null;\n\t\treturn ret;\n\t},\n\n\tinflateSync() {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSync(that);\n\t},\n\tinflateSetDictionary(dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSetDictionary(that, dictionary, dictLength);\n\t},\n\tread_byte(start) {\n\t\tconst that = this;\n\t\treturn that.next_in[start];\n\t},\n\tread_buf(start, size) {\n\t\tconst that = this;\n\t\treturn that.next_in.subarray(start, start + size);\n\t}\n};\n\n// Inflater\n\nfunction ZipInflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = options && options.chunkSize ? Math.floor(options.chunkSize * 2) : 128 * 1024;\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet nomoreinput = false;\n\n\tz.inflateInit();\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tconst buffers = [];\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tif (data.length === 0)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\tif ((z.avail_in === 0) && (!nomoreinput)) { // if buffer is empty and more input is available, refill it\n\t\t\t\tz.next_in_index = 0;\n\t\t\t\tnomoreinput = true;\n\t\t\t}\n\t\t\terr = z.inflate(flush);\n\t\t\tif (nomoreinput && (err === Z_BUF_ERROR)) {\n\t\t\t\tif (z.avail_in !== 0)\n\t\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\t} else if (err !== Z_OK && err !== Z_STREAM_END)\n\t\t\t\tthrow new Error(\"inflating: \" + z.msg);\n\t\t\tif ((nomoreinput || err === Z_STREAM_END) && (z.avail_in === data.length))\n\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index === bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.subarray(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] ? new Uint8Array(buffers[0]) : new Uint8Array();\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tz.inflateEnd();\n\t};\n}\n\nexport {\n\tZipInflate as Inflate\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MAX_32_BITS = 0xffffffff;\nconst MAX_16_BITS = 0xffff;\nconst COMPRESSION_METHOD_DEFLATE = 0x08;\nconst COMPRESSION_METHOD_STORE = 0x00;\nconst COMPRESSION_METHOD_AES = 0x63;\n\nconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\nconst SPLIT_ZIP_FILE_SIGNATURE = 0x08074b50;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE = SPLIT_ZIP_FILE_SIGNATURE;\nconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\nconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\nconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\nconst END_OF_CENTRAL_DIR_LENGTH = 22;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\nconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\nconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\nconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\nconst EXTRAFIELD_TYPE_AES = 0x9901;\nconst EXTRAFIELD_TYPE_NTFS = 0x000a;\nconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\nconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\nconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\nconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\nconst EXTRAFIELD_TYPE_USDZ = 0x1986;\n\nconst BITFLAG_ENCRYPTED = 0x01;\nconst BITFLAG_LEVEL = 0x06;\nconst BITFLAG_DATA_DESCRIPTOR = 0x0008;\nconst BITFLAG_LANG_ENCODING_FLAG = 0x0800;\nconst FILE_ATTR_MSDOS_DIR_MASK = 0x10;\n\nconst VERSION_DEFLATE = 0x14;\nconst VERSION_ZIP64 = 0x2D;\nconst VERSION_AES = 0x33;\n\nconst DIRECTORY_SIGNATURE = \"/\";\n\nconst MAX_DATE = new Date(2107, 11, 31);\nconst MIN_DATE = new Date(1980, 0, 1);\n\nconst UNDEFINED_VALUE = undefined;\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n\nexport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nexport {\n\tStreamAdapter\n};\n\nclass StreamAdapter {\n\n\tconstructor(Codec) {\n\t\treturn class extends TransformStream {\n\t\t\tconstructor(_format, options) {\n\t\t\t\tconst codec = new Codec(options);\n\t\t\t\tsuper({\n\t\t\t\t\ttransform(chunk, controller) {\n\t\t\t\t\t\tcontroller.enqueue(codec.append(chunk));\n\t\t\t\t\t},\n\t\t\t\t\tflush(controller) {\n\t\t\t\t\t\tconst chunk = codec.flush();\n\t\t\t\t\t\tif (chunk) {\n\t\t\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport {\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE\n} from \"./constants.js\";\nimport { StreamAdapter } from \"./streams/stream-adapter.js\";\n\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n\tif (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n\t\tmaxWorkers = navigator.hardwareConcurrency;\n\t}\n} catch (_error) {\n\t// ignored\n}\nconst DEFAULT_CONFIGURATION = {\n\tchunkSize: 512 * 1024,\n\tmaxWorkers,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tuseCompressionStream: true,\n\tworkerScripts: UNDEFINED_VALUE,\n\tCompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n\tDecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration,\n\tgetChunkSize\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction getChunkSize(config) {\n\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\n\nfunction configure(configuration) {\n\tconst {\n\t\tbaseURL,\n\t\tchunkSize,\n\t\tmaxWorkers,\n\t\tterminateWorkerTimeout,\n\t\tuseCompressionStream,\n\t\tuseWebWorkers,\n\t\tDeflate,\n\t\tInflate,\n\t\tCompressionStream,\n\t\tDecompressionStream,\n\t\tworkerScripts\n\t} = configuration;\n\tsetIfDefined(\"baseURL\", baseURL);\n\tsetIfDefined(\"chunkSize\", chunkSize);\n\tsetIfDefined(\"maxWorkers\", maxWorkers);\n\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\n\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\n\tif (Deflate) {\n\t\tconfig.CompressionStream = new StreamAdapter(Deflate);\n\t}\n\tif (Inflate) {\n\t\tconfig.DecompressionStream = new StreamAdapter(Inflate);\n\t}\n\tsetIfDefined(\"CompressionStream\", CompressionStream);\n\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\n\tif (workerScripts !== UNDEFINED_VALUE) {\n\t\tconst { deflate, inflate } = workerScripts;\n\t\tif (deflate || inflate) {\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t}\n\t\tif (deflate) {\n\t\t\tif (!Array.isArray(deflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.deflate = deflate;\n\t\t}\n\t\tif (inflate) {\n\t\t\tif (!Array.isArray(inflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.inflate = inflate;\n\t\t}\n\t}\n}\n\nfunction setIfDefined(propertyName, propertyValue) {\n\tif (propertyValue !== UNDEFINED_VALUE) {\n\t\tconfig[propertyName] = propertyValue;\n\t}\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst mimeTypes = {};\n\nexport {\n\tmimeTypes,\n\tgetMimeType\n};\n\nfunction getMimeType() {\n\treturn \"application/octet-stream\";\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = [];\nfor (let i = 0; i < 256; i++) {\n\tlet t = i;\n\tfor (let j = 0; j < 8; j++) {\n\t\tif (t & 1) {\n\t\t\tt = (t >>> 1) ^ 0xEDB88320;\n\t\t} else {\n\t\t\tt = t >>> 1;\n\t\t}\n\t}\n\ttable[i] = t;\n}\n\nclass Crc32 {\n\n\tconstructor(crc) {\n\t\tthis.crc = crc || -1;\n\t}\n\n\tappend(data) {\n\t\tlet crc = this.crc | 0;\n\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n\t\t}\n\t\tthis.crc = crc;\n\t}\n\n\tget() {\n\t\treturn ~this.crc;\n\t}\n}\n\nexport {\n\tCrc32\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nimport { Crc32 } from \"./codecs/crc32.js\";\n\nclass Crc32Stream extends TransformStream {\n\n\tconstructor() {\n\t\tlet stream;\n\t\tconst crc32 = new Crc32();\n\t\tsuper({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tcrc32.append(chunk);\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst value = new Uint8Array(4);\n\t\t\t\tconst dataView = new DataView(value.buffer);\n\t\t\t\tdataView.setUint32(0, crc32.get());\n\t\t\t\tstream.value = value;\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tCrc32Stream\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextEncoder */\n\nexport {\n\tencodeText\n};\n\nfunction encodeText(value) {\n\tif (typeof TextEncoder == \"undefined\") {\n\t\tvalue = unescape(encodeURIComponent(value));\n\t\tconst result = new Uint8Array(value.length);\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tresult[i] = value.charCodeAt(i);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextEncoder().encode(value);\n\t}\n}","// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js and https://github.com/bitwiseshiftleft/sjcl\n\n// deno-lint-ignore-file no-this-alias\n\n/*\n * SJCL is open. You can use, modify and redistribute it under a BSD\n * license or under the GNU GPL, version 2.0.\n */\n\n/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nconst bitArray = {\n\t/**\n\t * Concatenate two bit arrays.\n\t * @param {bitArray} a1 The first array.\n\t * @param {bitArray} a2 The second array.\n\t * @return {bitArray} The concatenation of a1 and a2.\n\t */\n\tconcat(a1, a2) {\n\t\tif (a1.length === 0 || a2.length === 0) {\n\t\t\treturn a1.concat(a2);\n\t\t}\n\n\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\n\t\tif (shift === 32) {\n\t\t\treturn a1.concat(a2);\n\t\t} else {\n\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\n\t\t}\n\t},\n\n\t/**\n\t * Find the length of an array of bits.\n\t * @param {bitArray} a The array.\n\t * @return {Number} The length of a, in bits.\n\t */\n\tbitLength(a) {\n\t\tconst l = a.length;\n\t\tif (l === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst x = a[l - 1];\n\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\n\t},\n\n\t/**\n\t * Truncate an array.\n\t * @param {bitArray} a The array.\n\t * @param {Number} len The length to truncate to, in bits.\n\t * @return {bitArray} A new array, truncated to len bits.\n\t */\n\tclamp(a, len) {\n\t\tif (a.length * 32 < len) {\n\t\t\treturn a;\n\t\t}\n\t\ta = a.slice(0, Math.ceil(len / 32));\n\t\tconst l = a.length;\n\t\tlen = len & 31;\n\t\tif (l > 0 && len) {\n\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t * Make a partial word for a bit array.\n\t * @param {Number} len The number of bits in the word.\n\t * @param {Number} x The bits.\n\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n\t * @return {Number} The partial word.\n\t */\n\tpartial(len, x, _end) {\n\t\tif (len === 32) {\n\t\t\treturn x;\n\t\t}\n\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\n\t},\n\n\t/**\n\t * Get the number of bits used by a partial word.\n\t * @param {Number} x The partial word.\n\t * @return {Number} The number of bits used by the partial word.\n\t */\n\tgetPartial(x) {\n\t\treturn Math.round(x / 0x10000000000) || 32;\n\t},\n\n\t/** Shift an array right.\n\t * @param {bitArray} a The array to shift.\n\t * @param {Number} shift The number of bits to shift.\n\t * @param {Number} [carry=0] A byte to carry in\n\t * @param {bitArray} [out=[]] An array to prepend to the output.\n\t * @private\n\t */\n\t_shiftRight(a, shift, carry, out) {\n\t\tif (out === undefined) {\n\t\t\tout = [];\n\t\t}\n\n\t\tfor (; shift >= 32; shift -= 32) {\n\t\t\tout.push(carry);\n\t\t\tcarry = 0;\n\t\t}\n\t\tif (shift === 0) {\n\t\t\treturn out.concat(a);\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tout.push(carry | a[i] >>> shift);\n\t\t\tcarry = a[i] << (32 - shift);\n\t\t}\n\t\tconst last2 = a.length ? a[a.length - 1] : 0;\n\t\tconst shift2 = bitArray.getPartial(last2);\n\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\n\t\treturn out;\n\t}\n};\n\n/** @fileOverview Bit array codec implementations.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bytes\n * @namespace\n */\nconst codec = {\n\tbytes: {\n\t\t/** Convert from a bitArray to an array of bytes. */\n\t\tfromBits(arr) {\n\t\t\tconst bl = bitArray.bitLength(arr);\n\t\t\tconst byteLength = bl / 8;\n\t\t\tconst out = new Uint8Array(byteLength);\n\t\t\tlet tmp;\n\t\t\tfor (let i = 0; i < byteLength; i++) {\n\t\t\t\tif ((i & 3) === 0) {\n\t\t\t\t\ttmp = arr[i / 4];\n\t\t\t\t}\n\t\t\t\tout[i] = tmp >>> 24;\n\t\t\t\ttmp <<= 8;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\t/** Convert from an array of bytes to a bitArray. */\n\t\ttoBits(bytes) {\n\t\t\tconst out = [];\n\t\t\tlet i;\n\t\t\tlet tmp = 0;\n\t\t\tfor (i = 0; i < bytes.length; i++) {\n\t\t\t\ttmp = tmp << 8 | bytes[i];\n\t\t\t\tif ((i & 3) === 3) {\n\t\t\t\t\tout.push(tmp);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i & 3) {\n\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n};\n\nconst hash = {};\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nhash.sha1 = class {\n\tconstructor(hash) {\n\t\tconst sha1 = this;\n\t\t/**\n\t\t * The hash's block size, in bits.\n\t\t * @constant\n\t\t */\n\t\tsha1.blockSize = 512;\n\t\t/**\n\t\t * The SHA-1 initialization vector.\n\t\t * @private\n\t\t */\n\t\tsha1._init = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\n\t\t/**\n\t\t * The SHA-1 hash key.\n\t\t * @private\n\t\t */\n\t\tsha1._key = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\t\tif (hash) {\n\t\t\tsha1._h = hash._h.slice(0);\n\t\t\tsha1._buffer = hash._buffer.slice(0);\n\t\t\tsha1._length = hash._length;\n\t\t} else {\n\t\t\tsha1.reset();\n\t\t}\n\t}\n\n\t/**\n\t * Reset the hash state.\n\t * @return this\n\t */\n\treset() {\n\t\tconst sha1 = this;\n\t\tsha1._h = sha1._init.slice(0);\n\t\tsha1._buffer = [];\n\t\tsha1._length = 0;\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Input several words to the hash.\n\t * @param {bitArray|String} data the data to hash.\n\t * @return this\n\t */\n\tupdate(data) {\n\t\tconst sha1 = this;\n\t\tif (typeof data === \"string\") {\n\t\t\tdata = codec.utf8String.toBits(data);\n\t\t}\n\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\n\t\tconst ol = sha1._length;\n\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\n\t\tif (nl > 9007199254740991) {\n\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\n\t\t}\n\t\tconst c = new Uint32Array(b);\n\t\tlet j = 0;\n\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\n\t\t\ti += sha1.blockSize) {\n\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\n\t\t\tj += 1;\n\t\t}\n\t\tb.splice(0, 16 * j);\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Complete hashing and output the hash value.\n\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n\t */\n\tfinalize() {\n\t\tconst sha1 = this;\n\t\tlet b = sha1._buffer;\n\t\tconst h = sha1._h;\n\n\t\t// Round out and push the buffer\n\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\n\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\n\t\tfor (let i = b.length + 2; i & 15; i++) {\n\t\t\tb.push(0);\n\t\t}\n\n\t\t// append the length\n\t\tb.push(Math.floor(sha1._length / 0x100000000));\n\t\tb.push(sha1._length | 0);\n\n\t\twhile (b.length) {\n\t\t\tsha1._block(b.splice(0, 16));\n\t\t}\n\n\t\tsha1.reset();\n\t\treturn h;\n\t}\n\n\t/**\n\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\n\t * @private\n\t */\n\t_f(t, b, c, d) {\n\t\tif (t <= 19) {\n\t\t\treturn (b & c) | (~b & d);\n\t\t} else if (t <= 39) {\n\t\t\treturn b ^ c ^ d;\n\t\t} else if (t <= 59) {\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\t} else if (t <= 79) {\n\t\t\treturn b ^ c ^ d;\n\t\t}\n\t}\n\n\t/**\n\t * Circular left-shift operator.\n\t * @private\n\t */\n\t_S(n, x) {\n\t\treturn (x << n) | (x >>> 32 - n);\n\t}\n\n\t/**\n\t * Perform one cycle of SHA-1.\n\t * @param {Uint32Array|bitArray} words one block of words.\n\t * @private\n\t */\n\t_block(words) {\n\t\tconst sha1 = this;\n\t\tconst h = sha1._h;\n\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\n\t\t// function extends words with new elements (at the end there are 80 elements). \n\t\t// The problem is that if we use Uint32Array instead of Array, \n\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t\t// normal Array here.\n\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\n\t\tfor (let j = 0; j < 16; j++) {\n\t\t\tw[j] = words[j];\n\t\t}\n\n\t\tlet a = h[0];\n\t\tlet b = h[1];\n\t\tlet c = h[2];\n\t\tlet d = h[3];\n\t\tlet e = h[4];\n\n\t\tfor (let t = 0; t <= 79; t++) {\n\t\t\tif (t >= 16) {\n\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\n\t\t\t}\n\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\n\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = sha1._S(30, b);\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\n\t\th[0] = (h[0] + a) | 0;\n\t\th[1] = (h[1] + b) | 0;\n\t\th[2] = (h[2] + c) | 0;\n\t\th[3] = (h[3] + d) | 0;\n\t\th[4] = (h[4] + e) | 0;\n\t}\n};\n\n/** @fileOverview Low-level AES implementation.\n *\n * This file contains a low-level implementation of AES, optimized for\n * size and for efficiency on several browsers.  It is based on\n * OpenSSL's aes_core.c, a public-domain implementation by Vincent\n * Rijmen, Antoon Bosselaers and Paulo Barreto.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\nconst cipher = {};\n\n/**\n * Schedule out an AES key for both encryption and decryption.  This\n * is a low-level class.  Use a cipher mode to do bulk encryption.\n *\n * @constructor\n * @param {Array} key The key as an array of 4, 6 or 8 words.\n */\ncipher.aes = class {\n\tconstructor(key) {\n\t\t/**\n\t\t * The expanded S-box and inverse S-box tables.  These will be computed\n\t\t * on the client so that we don't have to send them down the wire.\n\t\t *\n\t\t * There are two tables, _tables[0] is for encryption and\n\t\t * _tables[1] is for decryption.\n\t\t *\n\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n\t\t * last (_tables[01][4]) is the S-box itself.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tconst aes = this;\n\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\n\t\tif (!aes._tables[0][0][0]) {\n\t\t\taes._precompute();\n\t\t}\n\n\t\tconst sbox = aes._tables[0][4];\n\t\tconst decTable = aes._tables[1];\n\t\tconst keyLen = key.length;\n\n\t\tlet i, encKey, decKey, rcon = 1;\n\n\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t\t\tthrow new Error(\"invalid aes key size\");\n\t\t}\n\n\t\taes._key = [encKey = key.slice(0), decKey = []];\n\n\t\t// schedule encryption keys\n\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t\t\tlet tmp = encKey[i - 1];\n\n\t\t\t// apply sbox\n\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n\t\t\t\t// shift rows and add rcon\n\t\t\t\tif (i % keyLen === 0) {\n\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\n\t\t}\n\n\t\t// schedule decryption keys\n\t\tfor (let j = 0; i; j++, i--) {\n\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\n\t\t\tif (i <= 4 || j < 4) {\n\t\t\t\tdecKey[j] = tmp;\n\t\t\t} else {\n\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\n\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\n\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\n\t\t\t}\n\t\t}\n\t}\n\t// public\n\t/* Something like this might appear here eventually\n\tname: \"AES\",\n\tblockSize: 4,\n\tkeySizes: [4,6,8],\n\t*/\n\n\t/**\n\t * Encrypt an array of 4 big-endian words.\n\t * @param {Array} data The plaintext.\n\t * @return {Array} The ciphertext.\n\t */\n\tencrypt(data) {\n\t\treturn this._crypt(data, 0);\n\t}\n\n\t/**\n\t * Decrypt an array of 4 big-endian words.\n\t * @param {Array} data The ciphertext.\n\t * @return {Array} The plaintext.\n\t */\n\tdecrypt(data) {\n\t\treturn this._crypt(data, 1);\n\t}\n\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t_precompute() {\n\t\tconst encTable = this._tables[0];\n\t\tconst decTable = this._tables[1];\n\t\tconst sbox = encTable[4];\n\t\tconst sboxInv = decTable[4];\n\t\tconst d = [];\n\t\tconst th = [];\n\t\tlet xInv, x2, x4, x8;\n\n\t\t// Compute double and third tables\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t\t}\n\n\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t\t\t// Compute sbox\n\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t\t\ts = s >> 8 ^ s & 255 ^ 99;\n\t\t\tsbox[x] = s;\n\t\t\tsboxInv[s] = x;\n\n\t\t\t// Compute MixColumns\n\t\t\tx8 = d[x4 = d[x2 = d[x]]];\n\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t\t\t}\n\t\t}\n\n\t\t// Compactify.  Considerable speedup on Firefox.\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tencTable[i] = encTable[i].slice(0);\n\t\t\tdecTable[i] = decTable[i].slice(0);\n\t\t}\n\t}\n\n\t/**\n\t * Encryption and decryption core.\n\t * @param {Array} input Four words to be encrypted or decrypted.\n\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\n\t * @return {Array} The four encrypted or decrypted words.\n\t * @private\n\t */\n\t_crypt(input, dir) {\n\t\tif (input.length !== 4) {\n\t\t\tthrow new Error(\"invalid aes block size\");\n\t\t}\n\n\t\tconst key = this._key[dir];\n\n\t\tconst nInnerRounds = key.length / 4 - 2;\n\t\tconst out = [0, 0, 0, 0];\n\t\tconst table = this._tables[dir];\n\n\t\t// load up the tables\n\t\tconst t0 = table[0];\n\t\tconst t1 = table[1];\n\t\tconst t2 = table[2];\n\t\tconst t3 = table[3];\n\t\tconst sbox = table[4];\n\n\t\t// state variables a,b,c,d are loaded with pre-whitened data\n\t\tlet a = input[0] ^ key[0];\n\t\tlet b = input[dir ? 3 : 1] ^ key[1];\n\t\tlet c = input[2] ^ key[2];\n\t\tlet d = input[dir ? 1 : 3] ^ key[3];\n\t\tlet kIndex = 4;\n\t\tlet a2, b2, c2;\n\n\t\t// Inner rounds.  Cribbed from OpenSSL.\n\t\tfor (let i = 0; i < nInnerRounds; i++) {\n\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\n\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n\t\t\tkIndex += 4;\n\t\t\ta = a2; b = b2; c = c2;\n\t\t}\n\n\t\t// Last round.\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tout[dir ? 3 & -i : i] =\n\t\t\t\tsbox[a >>> 24] << 24 ^\n\t\t\t\tsbox[b >> 16 & 255] << 16 ^\n\t\t\t\tsbox[c >> 8 & 255] << 8 ^\n\t\t\t\tsbox[d & 255] ^\n\t\t\t\tkey[kIndex++];\n\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\n\t\t}\n\n\t\treturn out;\n\t}\n};\n\n/**\n * Random values\n * @namespace\n */\nconst random = {\n\t/** \n\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\n\t * @param {TypedArray} typedArray The array to fill.\n\t * @return {TypedArray} The random values.\n\t */\n\tgetRandomValues(typedArray) {\n\t\tconst words = new Uint32Array(typedArray.buffer);\n\t\tconst r = (m_w) => {\n\t\t\tlet m_z = 0x3ade68b1;\n\t\t\tconst mask = 0xffffffff;\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t};\n\t\t};\n\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\n\t\t\tconst _r = r((rcache || Math.random()) * 0x100000000);\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\n\t\t}\n\t\treturn typedArray;\n\t}\n};\n\n/** @fileOverview CTR mode implementation.\n *\n * Special thanks to Roy Nicholson for pointing out a bug in our\n * implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** Brian Gladman's CTR Mode.\n* @constructor\n* @param {Object} _prf The aes instance to generate key.\n* @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\n*/\n\nconst mode = {};\n\n/**\n * Brian Gladman's CTR Mode.\n * @namespace\n */\nmode.ctrGladman = class {\n\tconstructor(prf, iv) {\n\t\tthis._prf = prf;\n\t\tthis._initIv = iv;\n\t\tthis._iv = iv;\n\t}\n\n\treset() {\n\t\tthis._iv = this._initIv;\n\t}\n\n\t/** Input some data to calculate.\n\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\n\t */\n\tupdate(data) {\n\t\treturn this.calculate(this._prf, data, this._iv);\n\t}\n\n\tincWord(word) {\n\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tlet b1 = (word >> 16) & 0xff;\n\t\t\tlet b2 = (word >> 8) & 0xff;\n\t\t\tlet b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) { // overflow b1   \n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff) {\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff) {\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t} else {\n\t\t\tword += (0x01 << 24);\n\t\t}\n\t\treturn word;\n\t}\n\n\tincCounter(counter) {\n\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\n\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\tcounter[1] = this.incWord(counter[1]);\n\t\t}\n\t}\n\n\tcalculate(prf, data, iv) {\n\t\tlet l;\n\t\tif (!(l = data.length)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst bl = bitArray.bitLength(data);\n\t\tfor (let i = 0; i < l; i += 4) {\n\t\t\tthis.incCounter(iv);\n\t\t\tconst e = prf.encrypt(iv);\n\t\t\tdata[i] ^= e[0];\n\t\t\tdata[i + 1] ^= e[1];\n\t\t\tdata[i + 2] ^= e[2];\n\t\t\tdata[i + 3] ^= e[3];\n\t\t}\n\t\treturn bitArray.clamp(data, bl);\n\t}\n};\n\nconst misc = {\n\timportKey(password) {\n\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\n\t},\n\tpbkdf2(prf, salt, count, length) {\n\t\tcount = count || 10000;\n\t\tif (length < 0 || count < 0) {\n\t\t\tthrow new Error(\"invalid params to pbkdf2\");\n\t\t}\n\t\tconst byteLength = ((length >> 5) + 1) << 2;\n\t\tlet u, ui, i, j, k;\n\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\n\t\tconst out = new DataView(arrayBuffer);\n\t\tlet outLength = 0;\n\t\tconst b = bitArray;\n\t\tsalt = codec.bytes.toBits(salt);\n\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\n\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\n\t\t\tfor (i = 1; i < count; i++) {\n\t\t\t\tui = prf.encrypt(ui);\n\t\t\t\tfor (j = 0; j < ui.length; j++) {\n\t\t\t\t\tu[j] ^= ui[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\n\t\t\t\tout.setInt32(outLength, u[i]);\n\t\t\t\toutLength += 4;\n\t\t\t}\n\t\t}\n\t\treturn arrayBuffer.slice(0, length / 8);\n\t}\n};\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=hash.sha1] The hash function to use.\n */\nmisc.hmacSha1 = class {\n\n\tconstructor(key) {\n\t\tconst hmac = this;\n\t\tconst Hash = hmac._hash = hash.sha1;\n\t\tconst exKey = [[], []];\n\t\thmac._baseHash = [new Hash(), new Hash()];\n\t\tconst bs = hmac._baseHash[0].blockSize / 32;\n\n\t\tif (key.length > bs) {\n\t\t\tkey = new Hash().update(key).finalize();\n\t\t}\n\n\t\tfor (let i = 0; i < bs; i++) {\n\t\t\texKey[0][i] = key[i] ^ 0x36363636;\n\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\thmac._baseHash[0].update(exKey[0]);\n\t\thmac._baseHash[1].update(exKey[1]);\n\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\n\t}\n\treset() {\n\t\tconst hmac = this;\n\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\n\t\thmac._updated = false;\n\t}\n\n\tupdate(data) {\n\t\tconst hmac = this;\n\t\thmac._updated = true;\n\t\thmac._resultHash.update(data);\n\t}\n\n\tdigest() {\n\t\tconst hmac = this;\n\t\tconst w = hmac._resultHash.finalize();\n\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\n\n\t\thmac.reset();\n\n\t\treturn result;\n\t}\n\n\tencrypt(data) {\n\t\tif (!this._updated) {\n\t\t\tthis.update(data);\n\t\t\treturn this.digest(data);\n\t\t} else {\n\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\n\t\t}\n\t}\n};\n\nexport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode,\n\trandom\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nimport {\n\trandom\n} from \"./codecs/sjcl.js\";\n\nconst GET_RANDOM_VALUES_SUPPORTED = typeof crypto != \"undefined\" && typeof crypto.getRandomValues == \"function\";\n\nconst ERR_INVALID_PASSWORD = \"Invalid password\";\nconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\nconst ERR_ABORT_CHECK_PASSWORD = \"zipjs-abort-check-password\";\n\nexport {\n\tgetRandomValues,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction getRandomValues(array) {\n\tif (GET_RANDOM_VALUES_SUPPORTED) {\n\t\treturn crypto.getRandomValues(array);\n\t} else {\n\t\treturn random.getRandomValues(array);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto, TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { encodeText } from \"./../util/encode-text.js\";\nimport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode\n} from \"./codecs/sjcl.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst BLOCK_LENGTH = 16;\nconst RAW_FORMAT = \"raw\";\nconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\nconst HASH_ALGORITHM = { name: \"HMAC\" };\nconst HASH_FUNCTION = \"SHA-1\";\nconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_USAGE = [\"deriveBits\"];\nconst SALT_LENGTH = [8, 12, 16];\nconst KEY_LENGTH = [16, 24, 32];\nconst SIGNATURE_LENGTH = 10;\nconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n// deno-lint-ignore valid-typeof\nconst CRYPTO_API_SUPPORTED = typeof crypto != UNDEFINED_TYPE;\nconst subtle = CRYPTO_API_SUPPORTED && crypto.subtle;\nconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof subtle != UNDEFINED_TYPE;\nconst codecBytes = codec.bytes;\nconst Aes = cipher.aes;\nconst CtrGladman = mode.ctrGladman;\nconst HmacSha1 = misc.hmacSha1;\n\nlet IMPORT_KEY_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.importKey == FUNCTION_TYPE;\nlet DERIVE_BITS_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.deriveBits == FUNCTION_TYPE;\n\nclass AESDecryptionStream extends TransformStream {\n\n\tconstructor({ password, signed, encryptionStrength, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword,\n\t\t\t\t\tsigned,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tif (password) {\n\t\t\t\t\tawait createDecryptionKeys(aesCrypto, strength, password, subarray(chunk, 0, SALT_LENGTH[strength] + 2));\n\t\t\t\t\tchunk = subarray(chunk, SALT_LENGTH[strength] + 2);\n\t\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveReady();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(chunk.length - SIGNATURE_LENGTH - ((chunk.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, 0, SIGNATURE_LENGTH, true));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tsigned,\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tconst chunkToDecrypt = subarray(pending, 0, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tconst originalSignature = subarray(pending, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tlet decryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (chunkToDecrypt.length) {\n\t\t\t\t\t\tconst encryptedChunk = toBits(codecBytes, chunkToDecrypt);\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tconst decryptedChunk = ctr.update(encryptedChunk);\n\t\t\t\t\t\tdecryptedChunkArray = fromBits(codecBytes, decryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tif (signed) {\n\t\t\t\t\t\tconst signature = subarray(fromBits(codecBytes, hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\t\t\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\n\t\t\t\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\n\t\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.enqueue(decryptedChunkArray);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass AESEncryptionStream extends TransformStream {\n\n\tconstructor({ password, encryptionStrength }) {\n\t\t// deno-lint-ignore prefer-const\n\t\tlet stream;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tlet preamble = new Uint8Array();\n\t\t\t\tif (password) {\n\t\t\t\t\tpreamble = await createEncryptionKeys(aesCrypto, strength, password);\n\t\t\t\t\tresolveReady();\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(preamble.length + chunk.length - (chunk.length % BLOCK_LENGTH));\n\t\t\t\toutput.set(preamble, 0);\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, preamble.length, 0));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tlet encryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (pending.length) {\n\t\t\t\t\t\tconst encryptedChunk = ctr.update(toBits(codecBytes, pending));\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tencryptedChunkArray = fromBits(codecBytes, encryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tstream.signature = fromBits(codecBytes, hmac.digest()).slice(0, SIGNATURE_LENGTH);\n\t\t\t\t\tcontroller.enqueue(concat(encryptedChunkArray, stream.signature));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tAESDecryptionStream,\n\tAESEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\n\tconst {\n\t\tctr,\n\t\thmac,\n\t\tpending\n\t} = aesCrypto;\n\tconst inputLength = input.length - paddingEnd;\n\tif (pending.length) {\n\t\tinput = concat(pending, input);\n\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\n\t}\n\tlet offset;\n\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\n\t\tconst inputChunk = toBits(codecBytes, subarray(input, offset, offset + BLOCK_LENGTH));\n\t\tif (verifySignature) {\n\t\t\thmac.update(inputChunk);\n\t\t}\n\t\tconst outputChunk = ctr.update(inputChunk);\n\t\tif (!verifySignature) {\n\t\t\thmac.update(outputChunk);\n\t\t}\n\t\toutput.set(fromBits(codecBytes, outputChunk), offset + paddingStart);\n\t}\n\taesCrypto.pending = subarray(input, offset);\n\treturn output;\n}\n\nasync function createDecryptionKeys(decrypt, strength, password, preamble) {\n\tconst passwordVerificationKey = await createKeys(decrypt, strength, password, subarray(preamble, 0, SALT_LENGTH[strength]));\n\tconst passwordVerification = subarray(preamble, SALT_LENGTH[strength]);\n\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\n\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t}\n}\n\nasync function createEncryptionKeys(encrypt, strength, password) {\n\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[strength]));\n\tconst passwordVerification = await createKeys(encrypt, strength, password, salt);\n\treturn concat(salt, passwordVerification);\n}\n\nasync function createKeys(aesCrypto, strength, password, salt) {\n\taesCrypto.password = null;\n\tconst encodedPassword = encodeText(password);\n\tconst baseKey = await importKey(RAW_FORMAT, encodedPassword, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\n\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), baseKey, 8 * ((KEY_LENGTH[strength] * 2) + 2));\n\tconst compositeKey = new Uint8Array(derivedBits);\n\tconst key = toBits(codecBytes, subarray(compositeKey, 0, KEY_LENGTH[strength]));\n\tconst authentication = toBits(codecBytes, subarray(compositeKey, KEY_LENGTH[strength], KEY_LENGTH[strength] * 2));\n\tconst passwordVerification = subarray(compositeKey, KEY_LENGTH[strength] * 2);\n\tObject.assign(aesCrypto, {\n\t\tkeys: {\n\t\t\tkey,\n\t\t\tauthentication,\n\t\t\tpasswordVerification\n\t\t},\n\t\tctr: new CtrGladman(new Aes(key), Array.from(COUNTER_DEFAULT_VALUE)),\n\t\thmac: new HmacSha1(authentication)\n\t});\n\treturn passwordVerification;\n}\n\nasync function importKey(format, password, algorithm, extractable, keyUsages) {\n\tif (IMPORT_KEY_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.importKey(format, password, algorithm, extractable, keyUsages);\n\t\t} catch (_error) {\n\t\t\tIMPORT_KEY_SUPPORTED = false;\n\t\t\treturn misc.importKey(password);\n\t\t}\n\t} else {\n\t\treturn misc.importKey(password);\n\t}\n}\n\nasync function deriveBits(algorithm, baseKey, length) {\n\tif (DERIVE_BITS_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.deriveBits(algorithm, baseKey, length);\n\t\t} catch (_error) {\n\t\t\tDERIVE_BITS_SUPPORTED = false;\n\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t\t}\n\t} else {\n\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t}\n}\n\nfunction concat(leftArray, rightArray) {\n\tlet array = leftArray;\n\tif (leftArray.length + rightArray.length) {\n\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\n\t\tarray.set(leftArray, 0);\n\t\tarray.set(rightArray, leftArray.length);\n\t}\n\treturn array;\n}\n\nfunction expand(inputArray, length) {\n\tif (length && length > inputArray.length) {\n\t\tconst array = inputArray;\n\t\tinputArray = new Uint8Array(length);\n\t\tinputArray.set(array, 0);\n\t}\n\treturn inputArray;\n}\n\nfunction subarray(array, begin, end) {\n\treturn array.subarray(begin, end);\n}\n\nfunction fromBits(codecBytes, chunk) {\n\treturn codecBytes.fromBits(chunk);\n}\nfunction toBits(codecBytes, chunk) {\n\treturn codecBytes.toBits(chunk);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32 } from \"./codecs/crc32.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst HEADER_LENGTH = 12;\n\nclass ZipCryptoDecryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tconst decryptedHeader = decrypt(zipCrypto, chunk.subarray(0, HEADER_LENGTH));\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tif (decryptedHeader[HEADER_LENGTH - 1] != zipCrypto.passwordVerification) {\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t\t\t\t\t}\n\t\t\t\t\tchunk = chunk.subarray(HEADER_LENGTH);\n\t\t\t\t}\n\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(decrypt(zipCrypto, chunk));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ZipCryptoEncryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tlet output;\n\t\t\t\tlet offset;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tconst header = getRandomValues(new Uint8Array(HEADER_LENGTH));\n\t\t\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\n\t\t\t\t\toutput = new Uint8Array(chunk.length + header.length);\n\t\t\t\t\toutput.set(encrypt(zipCrypto, header), 0);\n\t\t\t\t\toffset = HEADER_LENGTH;\n\t\t\t\t} else {\n\t\t\t\t\toutput = new Uint8Array(chunk.length);\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\t\t\t\toutput.set(encrypt(zipCrypto, chunk), offset);\n\t\t\t\tcontroller.enqueue(output);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tZipCryptoDecryptionStream,\n\tZipCryptoEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction decrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, output[index]);\n\t}\n\treturn output;\n}\n\nfunction encrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, input[index]);\n\t}\n\treturn output;\n}\n\nfunction createKeys(target, password) {\n\tconst keys = [0x12345678, 0x23456789, 0x34567890];\n\tObject.assign(target, {\n\t\tkeys,\n\t\tcrcKey0: new Crc32(keys[0]),\n\t\tcrcKey2: new Crc32(keys[2]),\n\t});\n\tfor (let index = 0; index < password.length; index++) {\n\t\tupdateKeys(target, password.charCodeAt(index));\n\t}\n}\n\nfunction updateKeys(target, byte) {\n\tlet [key0, key1, key2] = target.keys;\n\ttarget.crcKey0.append([byte]);\n\tkey0 = ~target.crcKey0.get();\n\tkey1 = getInt32(Math.imul(getInt32(key1 + getInt8(key0)), 134775813) + 1);\n\ttarget.crcKey2.append([key1 >>> 24]);\n\tkey2 = ~target.crcKey2.get();\n\ttarget.keys = [key0, key1, key2];\n}\n\nfunction getByte(target) {\n\tconst temp = target.keys[2] | 2;\n\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\n}\n\nfunction getInt8(number) {\n\treturn number & 0xFF;\n}\n\nfunction getInt32(number) {\n\treturn number & 0xFFFFFFFF;\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32Stream } from \"./crc32-stream.js\";\nimport {\n\tAESEncryptionStream,\n\tAESDecryptionStream\n} from \"./aes-crypto-stream.js\";\nimport {\n\tZipCryptoEncryptionStream,\n\tZipCryptoDecryptionStream\n} from \"./zip-crypto-stream.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./common-crypto.js\";\n\nconst COMPRESSION_FORMAT = \"deflate-raw\";\n\nclass DeflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, CompressionStream, CompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { compressed, encrypted, useCompressionStream, zipCrypto, signed, level } = options;\n\t\tconst stream = this;\n\t\tlet crc32Stream, encryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { level, chunkSize }, CompressionStreamNative, CompressionStream);\n\t\t}\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoEncryptionStream(options));\n\t\t\t} else {\n\t\t\t\tencryptionStream = new AESEncryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, encryptionStream);\n\t\t\t}\n\t\t}\n\t\tsetReadable(stream, readable, () => {\n\t\t\tlet signature;\n\t\t\tif (encrypted && !zipCrypto) {\n\t\t\t\tsignature = encryptionStream.signature;\n\t\t\t}\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tsignature = new DataView(crc32Stream.value.buffer).getUint32(0);\n\t\t\t}\n\t\t\tstream.signature = signature;\n\t\t});\n\t}\n}\n\nclass InflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, DecompressionStream, DecompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { zipCrypto, encrypted, signed, signature, compressed, useCompressionStream } = options;\n\t\tlet crc32Stream, decryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoDecryptionStream(options));\n\t\t\t} else {\n\t\t\t\tdecryptionStream = new AESDecryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, decryptionStream);\n\t\t\t}\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { chunkSize }, DecompressionStreamNative, DecompressionStream);\n\t\t}\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tsetReadable(this, readable, () => {\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tconst dataViewSignature = new DataView(crc32Stream.value.buffer);\n\t\t\t\tif (signature != dataViewSignature.getUint32(0, false)) {\n\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tDeflateStream,\n\tInflateStream,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction filterEmptyChunks(readable) {\n\treturn pipeThrough(readable, new TransformStream({\n\t\ttransform(chunk, controller) {\n\t\t\tif (chunk && chunk.length) {\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t}\n\t\t}\n\t}));\n}\n\nfunction setReadable(stream, readable, flush) {\n\treadable = pipeThrough(readable, new TransformStream({ flush }));\n\tObject.defineProperty(stream, \"readable\", {\n\t\tget() {\n\t\t\treturn readable;\n\t\t}\n\t});\n}\n\nfunction pipeThroughCommpressionStream(readable, useCompressionStream, options, CodecStreamNative, CodecStream) {\n\ttry {\n\t\tconst CompressionStream = useCompressionStream && CodecStreamNative ? CodecStreamNative : CodecStream;\n\t\treadable = pipeThrough(readable, new CompressionStream(COMPRESSION_FORMAT, options));\n\t} catch (error) {\n\t\tif (useCompressionStream) {\n\t\t\treadable = pipeThrough(readable, new CodecStream(COMPRESSION_FORMAT, options));\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n\treturn readable;\n}\n\nfunction pipeThrough(readable, transformStream) {\n\treturn readable.pipeThrough(transformStream);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tInflateStream,\n\tDeflateStream\n} from \"./zip-entry-stream.js\";\n\nconst MESSAGE_EVENT_TYPE = \"message\";\nconst MESSAGE_START = \"start\";\nconst MESSAGE_PULL = \"pull\";\nconst MESSAGE_DATA = \"data\";\nconst MESSAGE_ACK_DATA = \"ack\";\nconst MESSAGE_CLOSE = \"close\";\nconst CODEC_DEFLATE = \"deflate\";\nconst CODEC_INFLATE = \"inflate\";\n\nexport {\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tCodecStream\n};\n\nclass CodecStream extends TransformStream {\n\n\tconstructor(options, config) {\n\t\tsuper({});\n\t\tconst codec = this;\n\t\tconst { codecType } = options;\n\t\tlet Stream;\n\t\tif (codecType.startsWith(CODEC_DEFLATE)) {\n\t\t\tStream = DeflateStream;\n\t\t} else if (codecType.startsWith(CODEC_INFLATE)) {\n\t\t\tStream = InflateStream;\n\t\t}\n\t\tlet size = 0;\n\t\tconst stream = new Stream(options, config);\n\t\tconst readable = super.readable;\n\t\tconst transformStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\tsize += chunk.length;\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst { signature } = stream;\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tsignature,\n\t\t\t\t\tsize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(codec, \"readable\", {\n\t\t\tget() {\n\t\t\t\treturn readable.pipeThrough(stream).pipeThrough(transformStream);\n\t\t\t}\n\t\t});\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Worker, URL, TransformStream, WritableStream */\n\nimport {\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport {\n\tCodecStream,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE\n} from \"./streams/codec-stream.js\";\n\n// deno-lint-ignore valid-typeof\nconst WEB_WORKERS_SUPPORTED = typeof Worker != UNDEFINED_TYPE;\n\nexport {\n\tCodecWorker\n};\n\nclass CodecWorker {\n\n\tconstructor(workerData, { readable, writable }, { options, config, streamOptions, useWebWorkers, transferStreams, scripts }, onTaskFinished) {\n\t\tconst { signal } = streamOptions;\n\t\tObject.assign(workerData, {\n\t\t\tbusy: true,\n\t\t\treadable: readable.pipeThrough(new ProgressWatcherStream(readable, streamOptions, config), { signal }),\n\t\t\twritable,\n\t\t\toptions: Object.assign({}, options),\n\t\t\tscripts,\n\t\t\ttransferStreams,\n\t\t\tterminate() {\n\t\t\t\tconst { worker, busy } = workerData;\n\t\t\t\tif (worker && !busy) {\n\t\t\t\t\tworker.terminate();\n\t\t\t\t\tworkerData.interface = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTaskFinished() {\n\t\t\t\tworkerData.busy = false;\n\t\t\t\tonTaskFinished(workerData);\n\t\t\t}\n\t\t});\n\t\treturn (useWebWorkers && WEB_WORKERS_SUPPORTED ? createWebWorkerInterface : createWorkerInterface)(workerData, config);\n\t}\n}\n\nclass ProgressWatcherStream extends TransformStream {\n\n\tconstructor(readableSource, { onstart, onprogress, size, onend }, { chunkSize }) {\n\t\tlet chunkOffset = 0;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tif (onstart) {\n\t\t\t\t\tcallHandler(onstart, size);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tchunkOffset += chunk.length;\n\t\t\t\tif (onprogress) {\n\t\t\t\t\tawait callHandler(onprogress, chunkOffset, size);\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\treadableSource.size = chunkOffset;\n\t\t\t\tif (onend) {\n\t\t\t\t\tcallHandler(onend, chunkOffset);\n\t\t\t\t}\n\t\t\t}\n\t\t}, { highWaterMark: 1, size: () => chunkSize });\n\t}\n}\n\nasync function callHandler(handler, ...parameters) {\n\ttry {\n\t\tawait handler(...parameters);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction createWorkerInterface(workerData, config) {\n\treturn {\n\t\trun: () => runWorker(workerData, config)\n\t};\n}\n\nfunction createWebWorkerInterface(workerData, { baseURL, chunkSize }) {\n\tif (!workerData.interface) {\n\t\tObject.assign(workerData, {\n\t\t\tworker: getWebWorker(workerData.scripts[0], baseURL, workerData),\n\t\t\tinterface: {\n\t\t\t\trun: () => runWebWorker(workerData, { chunkSize })\n\t\t\t}\n\t\t});\n\t}\n\treturn workerData.interface;\n}\n\nasync function runWorker({ options, readable, writable, onTaskFinished }, config) {\n\tconst codecStream = new CodecStream(options, config);\n\ttry {\n\t\tawait readable.pipeThrough(codecStream).pipeTo(writable, { preventClose: true, preventAbort: true });\n\t\tconst {\n\t\t\tsignature,\n\t\t\tsize\n\t\t} = codecStream;\n\t\treturn {\n\t\t\tsignature,\n\t\t\tsize\n\t\t};\n\t} finally {\n\t\tonTaskFinished();\n\t}\n}\n\nasync function runWebWorker(workerData, config) {\n\tlet resolveResult, rejectResult;\n\tconst result = new Promise((resolve, reject) => {\n\t\tresolveResult = resolve;\n\t\trejectResult = reject;\n\t});\n\tObject.assign(workerData, {\n\t\treader: null,\n\t\twriter: null,\n\t\tresolveResult,\n\t\trejectResult,\n\t\tresult\n\t});\n\tconst { readable, options, scripts } = workerData;\n\tconst { writable, closed } = watchClosedStream(workerData.writable);\n\tconst streamsTransferred = sendMessage({\n\t\ttype: MESSAGE_START,\n\t\tscripts: scripts.slice(1),\n\t\toptions,\n\t\tconfig,\n\t\treadable,\n\t\twritable\n\t}, workerData);\n\tif (!streamsTransferred) {\n\t\tObject.assign(workerData, {\n\t\t\treader: readable.getReader(),\n\t\t\twriter: writable.getWriter()\n\t\t});\n\t}\n\tconst resultValue = await result;\n\ttry {\n\t\tawait writable.getWriter().close();\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\tawait closed;\n\treturn resultValue;\n}\n\nfunction watchClosedStream(writableSource) {\n\tconst writer = writableSource.getWriter();\n\tlet resolveStreamClosed;\n\tconst closed = new Promise(resolve => resolveStreamClosed = resolve);\n\tconst writable = new WritableStream({\n\t\tasync write(chunk) {\n\t\t\tawait writer.ready;\n\t\t\tawait writer.write(chunk);\n\t\t},\n\t\tclose() {\n\t\t\twriter.releaseLock();\n\t\t\tresolveStreamClosed();\n\t\t},\n\t\tabort(reason) {\n\t\t\treturn writer.abort(reason);\n\t\t}\n\t});\n\treturn { writable, closed };\n}\n\nlet classicWorkersSupported = true;\nlet transferStreamsSupported = true;\n\nfunction getWebWorker(url, baseURL, workerData) {\n\tconst workerOptions = { type: \"module\" };\n\tlet scriptUrl, worker;\n\t// deno-lint-ignore valid-typeof\n\tif (typeof url == FUNCTION_TYPE) {\n\t\turl = url();\n\t}\n\ttry {\n\t\tscriptUrl = new URL(url, baseURL);\n\t} catch (_error) {\n\t\tscriptUrl = url;\n\t}\n\tif (classicWorkersSupported) {\n\t\ttry {\n\t\t\tworker = new Worker(scriptUrl);\n\t\t} catch (_error) {\n\t\t\tclassicWorkersSupported = false;\n\t\t\tworker = new Worker(scriptUrl, workerOptions);\n\t\t}\n\t} else {\n\t\tworker = new Worker(scriptUrl, workerOptions);\n\t}\n\tworker.addEventListener(MESSAGE_EVENT_TYPE, event => onMessage(event, workerData));\n\treturn worker;\n}\n\nfunction sendMessage(message, { worker, writer, onTaskFinished, transferStreams }) {\n\ttry {\n\t\tlet { value, readable, writable } = message;\n\t\tconst transferables = [];\n\t\tif (value) {\n\t\t\tif (value.byteLength < value.buffer.byteLength) {\n\t\t\t\tmessage.value = value.buffer.slice(0, value.byteLength);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmessage.value = value.buffer;\n\t\t\t}\n\t\t\ttransferables.push(message.value);\n\t\t}\n\t\tif (transferStreams && transferStreamsSupported) {\n\t\t\tif (readable) {\n\t\t\t\ttransferables.push(readable);\n\t\t\t}\n\t\t\tif (writable) {\n\t\t\t\ttransferables.push(writable);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage.readable = message.writable = null;\n\t\t}\n\t\tif (transferables.length) {\n\t\t\ttry {\n\t\t\t\tworker.postMessage(message, transferables);\n\t\t\t\treturn true;\n\t\t\t} catch (_error) {\n\t\t\t\ttransferStreamsSupported = false;\n\t\t\t\tmessage.readable = message.writable = null;\n\t\t\t\tworker.postMessage(message);\n\t\t\t}\n\t\t} else {\n\t\t\tworker.postMessage(message);\n\t\t}\n\t} catch (error) {\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t\tthrow error;\n\t}\n}\n\nasync function onMessage({ data }, workerData) {\n\tconst { type, value, messageId, result, error } = data;\n\tconst { reader, writer, resolveResult, rejectResult, onTaskFinished } = workerData;\n\ttry {\n\t\tif (error) {\n\t\t\tconst { message, stack, code, name } = error;\n\t\t\tconst responseError = new Error(message);\n\t\t\tObject.assign(responseError, { stack, code, name });\n\t\t\tclose(responseError);\n\t\t} else {\n\t\t\tif (type == MESSAGE_PULL) {\n\t\t\t\tconst { value, done } = await reader.read();\n\t\t\t\tsendMessage({ type: MESSAGE_DATA, value, done, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_DATA) {\n\t\t\t\tawait writer.ready;\n\t\t\t\tawait writer.write(new Uint8Array(value));\n\t\t\t\tsendMessage({ type: MESSAGE_ACK_DATA, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_CLOSE) {\n\t\t\t\tclose(null, result);\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tclose(error);\n\t}\n\n\tfunction close(error, result) {\n\t\tif (error) {\n\t\t\trejectResult(error);\n\t\t} else {\n\t\t\tresolveResult(result);\n\t\t}\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global setTimeout, clearTimeout */\n\nimport { UNDEFINED_VALUE } from \"./constants.js\";\nimport {\n\tCODEC_INFLATE,\n\tCODEC_DEFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./streams/codec-stream.js\";\nimport { CodecWorker } from \"./codec-worker.js\";\n\nlet pool = [];\nconst pendingRequests = [];\n\nexport {\n\trunWorker,\n\tterminateWorkers,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nlet indexWorker = 0;\n\nasync function runWorker(stream, workerOptions) {\n\tconst { options, config } = workerOptions;\n\tconst { transferStreams, useWebWorkers, useCompressionStream, codecType, compressed, signed, encrypted } = options;\n\tconst { workerScripts, maxWorkers, terminateWorkerTimeout } = config;\n\tworkerOptions.transferStreams = transferStreams || transferStreams === UNDEFINED_VALUE;\n\tconst streamCopy = !compressed && !signed && !encrypted && !workerOptions.transferStreams;\n\tworkerOptions.useWebWorkers = !streamCopy && (useWebWorkers || (useWebWorkers === UNDEFINED_VALUE && config.useWebWorkers));\n\tworkerOptions.scripts = workerOptions.useWebWorkers && workerScripts ? workerScripts[codecType] : [];\n\toptions.useCompressionStream = useCompressionStream || (useCompressionStream === UNDEFINED_VALUE && config.useCompressionStream);\n\tlet worker;\n\tconst workerData = pool.find(workerData => !workerData.busy);\n\tif (workerData) {\n\t\tclearTerminateTimeout(workerData);\n\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t} else if (pool.length < maxWorkers) {\n\t\tconst workerData = { indexWorker };\n\t\tindexWorker++;\n\t\tpool.push(workerData);\n\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t} else {\n\t\tworker = await new Promise(resolve => pendingRequests.push({ resolve, stream, workerOptions }));\n\t}\n\treturn worker.run();\n\n\tfunction onTaskFinished(workerData) {\n\t\tif (pendingRequests.length) {\n\t\t\tconst [{ resolve, stream, workerOptions }] = pendingRequests.splice(0, 1);\n\t\t\tresolve(new CodecWorker(workerData, stream, workerOptions, onTaskFinished));\n\t\t} else if (workerData.worker) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\tif (Number.isFinite(terminateWorkerTimeout) && terminateWorkerTimeout >= 0) {\n\t\t\t\tworkerData.terminateTimeout = setTimeout(() => {\n\t\t\t\t\tpool = pool.filter(data => data != workerData);\n\t\t\t\t\tworkerData.terminate();\n\t\t\t\t}, terminateWorkerTimeout);\n\t\t\t}\n\t\t} else {\n\t\t\tpool = pool.filter(data => data != workerData);\n\t\t}\n\t}\n}\n\nfunction clearTerminateTimeout(workerData) {\n\tconst { terminateTimeout } = workerData;\n\tif (terminateTimeout) {\n\t\tclearTimeout(terminateTimeout);\n\t\tworkerData.terminateTimeout = null;\n\t}\n}\n\nfunction terminateWorkers() {\n\tpool.forEach(workerData => {\n\t\tclearTerminateTimeout(workerData);\n\t\tworkerData.terminate();\n\t});\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Blob, atob, btoa, XMLHttpRequest, URL, fetch, ReadableStream, WritableStream, FileReader, TransformStream, Response */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tUNDEFINED_VALUE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\n\nconst ERR_HTTP_STATUS = \"HTTP error \";\nconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\nconst ERR_ITERATOR_COMPLETED_TOO_SOON = \"Writer iterator completed too soon\";\n\nconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\nconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\nconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\nconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\nconst HTTP_HEADER_RANGE = \"Range\";\nconst HTTP_HEADER_CONTENT_TYPE = \"Content-Type\";\nconst HTTP_METHOD_HEAD = \"HEAD\";\nconst HTTP_METHOD_GET = \"GET\";\nconst HTTP_RANGE_UNIT = \"bytes\";\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst PROPERTY_NAME_WRITABLE = \"writable\";\n\nclass Stream {\n\n\tconstructor() {\n\t\tthis.size = 0;\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\t}\n}\n\nclass Reader extends Stream {\n\n\tget readable() {\n\t\tconst reader = this;\n\t\tconst { chunkSize = DEFAULT_CHUNK_SIZE } = reader;\n\t\tconst readable = new ReadableStream({\n\t\t\tstart() {\n\t\t\t\tthis.chunkOffset = 0;\n\t\t\t},\n\t\t\tasync pull(controller) {\n\t\t\t\tconst { offset = 0, size, diskNumberStart } = readable;\n\t\t\t\tconst { chunkOffset } = this;\n\t\t\t\tcontroller.enqueue(await readUint8Array(reader, offset + chunkOffset, Math.min(chunkSize, size - chunkOffset), diskNumberStart));\n\t\t\t\tif (chunkOffset + chunkSize > size) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} else {\n\t\t\t\t\tthis.chunkOffset += chunkSize;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn readable;\n\t}\n}\n\nclass Writer extends Stream {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst writable = new WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\treturn writer.writeUint8Array(chunk);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\t}\n\n\twriteUint8Array() {\n\t\t// abstract\n\t}\n}\n\nclass Data64URIReader extends Reader {\n\n\tconstructor(dataURI) {\n\t\tsuper();\n\t\tlet dataEnd = dataURI.length;\n\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\n\t\t\tdataEnd--;\n\t\t}\n\t\tconst dataStart = dataURI.indexOf(\",\") + 1;\n\t\tObject.assign(this, {\n\t\t\tdataURI,\n\t\t\tdataStart,\n\t\t\tsize: Math.floor((dataEnd - dataStart) * 0.75)\n\t\t});\n\t}\n\n\treadUint8Array(offset, length) {\n\t\tconst {\n\t\t\tdataStart,\n\t\t\tdataURI\n\t\t} = this;\n\t\tconst dataArray = new Uint8Array(length);\n\t\tconst start = Math.floor(offset / 3) * 4;\n\t\tconst bytes = atob(dataURI.substring(start + dataStart, Math.ceil((offset + length) / 3) * 4 + dataStart));\n\t\tconst delta = offset - Math.floor(start / 4) * 3;\n\t\tfor (let indexByte = delta; indexByte < delta + length; indexByte++) {\n\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\n\t\t}\n\t\treturn dataArray;\n\t}\n}\n\nclass Data64URIWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tdata: \"data:\" + (contentType || \"\") + \";base64,\",\n\t\t\tpending: []\n\t\t});\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tlet indexArray = 0;\n\t\tlet dataString = writer.pending;\n\t\tconst delta = writer.pending.length;\n\t\twriter.pending = \"\";\n\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\n\t\t\tdataString += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tfor (; indexArray < array.length; indexArray++) {\n\t\t\twriter.pending += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tif (dataString.length > 2) {\n\t\t\twriter.data += btoa(dataString);\n\t\t} else {\n\t\t\twriter.pending = dataString;\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.data + btoa(this.pending);\n\t}\n}\n\nclass BlobReader extends Reader {\n\n\tconstructor(blob) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tblob,\n\t\t\tsize: blob.size\n\t\t});\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tconst reader = this;\n\t\tconst offsetEnd = offset + length;\n\t\tconst blob = offset || offsetEnd < reader.size ? reader.blob.slice(offset, offsetEnd) : reader.blob;\n\t\tlet arrayBuffer = await blob.arrayBuffer();\n\t\tif (arrayBuffer.byteLength > length) {\n\t\t\tarrayBuffer = arrayBuffer.slice(offset, offsetEnd);\n\t\t}\n\t\treturn new Uint8Array(arrayBuffer);\n\t}\n}\n\nclass BlobWriter extends Stream {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst transformStream = new TransformStream();\n\t\tconst headers = [];\n\t\tif (contentType) {\n\t\t\theaders.push([HTTP_HEADER_CONTENT_TYPE, contentType]);\n\t\t}\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn transformStream.writable;\n\t\t\t}\n\t\t});\n\t\twriter.blob = new Response(transformStream.readable, { headers }).blob();\n\t}\n\n\tgetData() {\n\t\treturn this.blob;\n\t}\n}\n\nclass TextReader extends BlobReader {\n\n\tconstructor(text) {\n\t\tsuper(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\n\t}\n}\n\nclass TextWriter extends BlobWriter {\n\n\tconstructor(encoding) {\n\t\tsuper(encoding);\n\t\tObject.assign(this, {\n\t\t\tencoding,\n\t\t\tutf8: !encoding || encoding.toLowerCase() == \"utf-8\"\n\t\t});\n\t}\n\n\tasync getData() {\n\t\tconst {\n\t\t\tencoding,\n\t\t\tutf8\n\t\t} = this;\n\t\tconst blob = await super.getData();\n\t\tif (blob.text && utf8) {\n\t\t\treturn blob.text();\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tObject.assign(reader, {\n\t\t\t\t\tonload: ({ target }) => resolve(target.result),\n\t\t\t\t\tonerror: () => reject(reader.error)\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, encoding);\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass FetchReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHtpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\n\t}\n}\n\nclass XHRReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHtpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n}\n\nfunction createHtpReader(httpReader, url, options) {\n\tconst {\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t} = options;\n\toptions = Object.assign({}, options);\n\tdelete options.preventHeadRequest;\n\tdelete options.useRangeHeader;\n\tdelete options.forceRangeRequests;\n\tdelete options.useXHR;\n\tObject.assign(httpReader, {\n\t\turl,\n\t\toptions,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t});\n}\n\nasync function initHttpReader(httpReader, sendRequest, getRequestData) {\n\tconst {\n\t\turl,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t} = httpReader;\n\tif (isHttpFamily(url) && (useRangeHeader || forceRangeRequests)) {\n\t\tconst { headers } = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader));\n\t\tif (!forceRangeRequests && headers.get(HTTP_HEADER_ACCEPT_RANGES) != HTTP_RANGE_UNIT) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t} else {\n\t\t\tlet contentSize;\n\t\t\tconst contentRangeHeader = headers.get(HTTP_HEADER_CONTENT_RANGE);\n\t\t\tif (contentRangeHeader) {\n\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\n\t\t\t\tif (splitHeader.length) {\n\t\t\t\t\tconst headerValue = splitHeader[1];\n\t\t\t\t\tif (headerValue && headerValue != \"*\") {\n\t\t\t\t\t\tcontentSize = Number(headerValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentSize === UNDEFINED_VALUE) {\n\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t\t\t} else {\n\t\t\t\thttpReader.size = contentSize;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t}\n}\n\nasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\n\tconst {\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\toptions\n\t} = httpReader;\n\tif (useRangeHeader || forceRangeRequests) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\n\t\tif (response.status != 206) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t}\n\t\treturn new Uint8Array(await response.arrayBuffer());\n\t} else {\n\t\tconst { data } = httpReader;\n\t\tif (!data) {\n\t\t\tawait getRequestData(httpReader, options);\n\t\t}\n\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\n\t}\n}\n\nfunction getRangeHeaders(httpReader, index = 0, length = 1) {\n\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + index + \"-\" + (index + length - 1) });\n}\n\nfunction getHeaders({ options }) {\n\tconst { headers } = options;\n\tif (headers) {\n\t\tif (Symbol.iterator in headers) {\n\t\t\treturn Object.fromEntries(headers);\n\t\t} else {\n\t\t\treturn headers;\n\t\t}\n\t}\n}\n\nasync function getFetchRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendFetchRequest);\n}\n\nasync function getXMLHttpRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendXMLHttpRequest);\n}\n\nasync function getRequestData(httpReader, sendRequest) {\n\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\n\thttpReader.data = new Uint8Array(await response.arrayBuffer());\n\tif (!httpReader.size) {\n\t\thttpReader.size = httpReader.data.length;\n\t}\n}\n\nasync function getContentLength(httpReader, sendRequest, getRequestData) {\n\tif (httpReader.preventHeadRequest) {\n\t\tawait getRequestData(httpReader, httpReader.options);\n\t} else {\n\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\n\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\n\t\tif (contentLength) {\n\t\t\thttpReader.size = Number(contentLength);\n\t\t} else {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t}\n}\n\nasync function sendFetchRequest(method, { options, url }, headers) {\n\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\n\tif (response.status < 400) {\n\t\treturn response;\n\t} else {\n\t\tthrow response.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\n\t}\n}\n\nfunction sendXMLHttpRequest(method, { url }, headers) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.addEventListener(\"load\", () => {\n\t\t\tif (request.status < 400) {\n\t\t\t\tconst headers = [];\n\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\n\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\n\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\n\t\t\t\t\theaders.push(splitHeader);\n\t\t\t\t});\n\t\t\t\tresolve({\n\t\t\t\t\tstatus: request.status,\n\t\t\t\t\tarrayBuffer: () => request.response,\n\t\t\t\t\theaders: new Map(headers)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(request.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\n\t\t\t}\n\t\t}, false);\n\t\trequest.addEventListener(\"error\", event => reject(event.detail ? event.detail.error : new Error(\"Network error\")), false);\n\t\trequest.open(method, url);\n\t\tif (headers) {\n\t\t\tfor (const entry of Object.entries(headers)) {\n\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t\trequest.responseType = \"arraybuffer\";\n\t\trequest.send();\n\t});\n}\n\nclass HttpReader extends Reader {\n\n\tconstructor(url, options = {}) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\turl,\n\t\t\treader: options.useXHR ? new XHRReader(url, options) : new FetchReader(url, options)\n\t\t});\n\t}\n\n\tset size(value) {\n\t\t// ignored\n\t}\n\n\tget size() {\n\t\treturn this.reader.size;\n\t}\n\n\tasync init() {\n\t\tawait this.reader.init();\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.reader.readUint8Array(index, length);\n\t}\n}\n\nclass HttpRangeReader extends HttpReader {\n\n\tconstructor(url, options = {}) {\n\t\toptions.useRangeHeader = true;\n\t\tsuper(url, options);\n\t}\n}\n\n\nclass Uint8ArrayReader extends Reader {\n\n\tconstructor(array) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tarray,\n\t\t\tsize: array.length\n\t\t});\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.array.slice(index, index + length);\n\t}\n}\n\nclass Uint8ArrayWriter extends Writer {\n\n\tinit(initSize = 0) {\n\t\tObject.assign(this, {\n\t\t\toffset: 0,\n\t\t\tarray: new Uint8Array(initSize)\n\t\t});\n\t\tsuper.init();\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tif (writer.offset + array.length > writer.array.length) {\n\t\t\tconst previousArray = writer.array;\n\t\t\twriter.array = new Uint8Array(previousArray.length + array.length);\n\t\t\twriter.array.set(previousArray);\n\t\t}\n\t\twriter.array.set(array, writer.offset);\n\t\twriter.offset += array.length;\n\t}\n\n\tgetData() {\n\t\treturn this.array;\n\t}\n}\n\nclass SplitDataReader extends Reader {\n\n\tconstructor(readers) {\n\t\tsuper();\n\t\tthis.readers = readers;\n\t}\n\n\tasync init() {\n\t\tconst reader = this;\n\t\tconst { readers } = reader;\n\t\treader.lastDiskNumber = 0;\n\t\treader.lastDiskOffset = 0;\n\t\tawait Promise.all(readers.map(async (diskReader, indexDiskReader) => {\n\t\t\tawait diskReader.init();\n\t\t\tif (indexDiskReader != readers.length - 1) {\n\t\t\t\treader.lastDiskOffset += diskReader.size;\n\t\t\t}\n\t\t\treader.size += diskReader.size;\n\t\t}));\n\t\tsuper.init();\n\t}\n\n\tasync readUint8Array(offset, length, diskNumber = 0) {\n\t\tconst reader = this;\n\t\tconst { readers } = this;\n\t\tlet result;\n\t\tlet currentDiskNumber = diskNumber;\n\t\tif (currentDiskNumber == -1) {\n\t\t\tcurrentDiskNumber = readers.length - 1;\n\t\t}\n\t\tlet currentReaderOffset = offset;\n\t\twhile (currentReaderOffset >= readers[currentDiskNumber].size) {\n\t\t\tcurrentReaderOffset -= readers[currentDiskNumber].size;\n\t\t\tcurrentDiskNumber++;\n\t\t}\n\t\tconst currentReader = readers[currentDiskNumber];\n\t\tconst currentReaderSize = currentReader.size;\n\t\tif (currentReaderOffset + length <= currentReaderSize) {\n\t\t\tresult = await readUint8Array(currentReader, currentReaderOffset, length);\n\t\t} else {\n\t\t\tconst chunkLength = currentReaderSize - currentReaderOffset;\n\t\t\tresult = new Uint8Array(length);\n\t\t\tresult.set(await readUint8Array(currentReader, currentReaderOffset, chunkLength));\n\t\t\tresult.set(await reader.readUint8Array(offset + chunkLength, length - chunkLength, diskNumber), chunkLength);\n\t\t}\n\t\treader.lastDiskNumber = Math.max(currentDiskNumber, reader.lastDiskNumber);\n\t\treturn result;\n\t}\n}\n\nclass SplitDataWriter extends Stream {\n\n\tconstructor(writerGenerator, maxSize = 4294967295) {\n\t\tsuper();\n\t\tconst zipWriter = this;\n\t\tObject.assign(zipWriter, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tsize: 0,\n\t\t\tmaxSize,\n\t\t\tavailableSize: maxSize\n\t\t});\n\t\tlet diskSourceWriter, diskWritable, diskWriter;\n\t\tconst writable = new WritableStream({\n\t\t\tasync write(chunk) {\n\t\t\t\tconst { availableSize } = zipWriter;\n\t\t\t\tif (!diskWriter) {\n\t\t\t\t\tconst { value, done } = await writerGenerator.next();\n\t\t\t\t\tif (done && !value) {\n\t\t\t\t\t\tthrow new Error(ERR_ITERATOR_COMPLETED_TOO_SOON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiskSourceWriter = value;\n\t\t\t\t\t\tdiskSourceWriter.size = 0;\n\t\t\t\t\t\tif (diskSourceWriter.maxSize) {\n\t\t\t\t\t\t\tzipWriter.maxSize = diskSourceWriter.maxSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tzipWriter.availableSize = zipWriter.maxSize;\n\t\t\t\t\t\tawait initStream(diskSourceWriter);\n\t\t\t\t\t\tdiskWritable = value.writable;\n\t\t\t\t\t\tdiskWriter = diskWritable.getWriter();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.write(chunk);\n\t\t\t\t} else if (chunk.length >= availableSize) {\n\t\t\t\t\tawait writeChunk(chunk.slice(0, availableSize));\n\t\t\t\t\tawait closeDisk();\n\t\t\t\t\tzipWriter.diskOffset += diskSourceWriter.size;\n\t\t\t\t\tzipWriter.diskNumber++;\n\t\t\t\t\tdiskWriter = null;\n\t\t\t\t\tawait this.write(chunk.slice(availableSize));\n\t\t\t\t} else {\n\t\t\t\t\tawait writeChunk(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync close() {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait closeDisk();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(zipWriter, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\n\t\tasync function writeChunk(chunk) {\n\t\t\tconst chunkLength = chunk.length;\n\t\t\tif (chunkLength) {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait diskWriter.write(chunk);\n\t\t\t\tdiskSourceWriter.size += chunkLength;\n\t\t\t\tzipWriter.size += chunkLength;\n\t\t\t\tzipWriter.availableSize -= chunkLength;\n\t\t\t}\n\t\t}\n\n\t\tasync function closeDisk() {\n\t\t\tdiskWritable.size = diskSourceWriter.size;\n\t\t\tawait diskWriter.close();\n\t\t}\n\t}\n}\n\nfunction isHttpFamily(url) {\n\tconst { baseURL } = getConfiguration();\n\tconst { protocol } = new URL(url, baseURL);\n\treturn protocol == \"http:\" || protocol == \"https:\";\n}\n\nasync function initStream(stream, initSize) {\n\tif (stream.init && !stream.initialized) {\n\t\tawait stream.init(initSize);\n\t}\n}\n\nfunction initReader(reader) {\n\tif (Array.isArray(reader)) {\n\t\treader = new SplitDataReader(reader);\n\t}\n\tif (reader instanceof ReadableStream) {\n\t\treader = {\n\t\t\treadable: reader\n\t\t};\n\t}\n\treturn reader;\n}\n\nfunction initWriter(writer) {\n\tif (writer.writable === UNDEFINED_VALUE && typeof writer.next == FUNCTION_TYPE) {\n\t\twriter = new SplitDataWriter(writer);\n\t}\n\tif (writer instanceof WritableStream) {\n\t\twriter = {\n\t\t\twritable: writer\n\t\t};\n\t}\n\tconst { writable } = writer;\n\tif (writable.size === UNDEFINED_VALUE) {\n\t\twritable.size = 0;\n\t}\n\tconst splitZipFile = writer instanceof SplitDataWriter;\n\tif (!splitZipFile) {\n\t\tObject.assign(writer, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tavailableSize: Infinity,\n\t\t\tmaxSize: Infinity\n\t\t});\n\t}\n\treturn writer;\n}\n\nfunction readUint8Array(reader, offset, size, diskNumber) {\n\treturn reader.readUint8Array(offset, size, diskNumber);\n}\n\nconst SplitZipReader = SplitDataReader;\nconst SplitZipWriter = SplitDataWriter;\n\nexport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tSplitZipReader,\n\tSplitZipWriter,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE,\n\tERR_ITERATOR_COMPLETED_TOO_SOON\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nconst CP437 = \"\\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \".split(\"\");\nconst VALID_CP437 = CP437.length == 256;\n\nexport {\n\tdecodeCP437\n};\n\nfunction decodeCP437(stringValue) {\n\tif (VALID_CP437) {\n\t\tlet result = \"\";\n\t\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\n\t\t\tresult += CP437[stringValue[indexCharacter]];\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextDecoder().decode(stringValue);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nimport { decodeCP437 } from \"./cp437-decode.js\";\n\nexport {\n\tdecodeText\n};\n\nfunction decodeText(value, encoding) {\n\tif (encoding && encoding.trim().toLowerCase() == \"cp437\") {\n\t\treturn decodeCP437(value);\n\t} else {\n\t\treturn new TextDecoder(encoding).decode(value);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst PROPERTY_NAME_FILENAME = \"filename\";\nconst PROPERTY_NAME_RAW_FILENAME = \"rawFilename\";\nconst PROPERTY_NAME_COMMENT = \"comment\";\nconst PROPERTY_NAME_RAW_COMMENT = \"rawComment\";\nconst PROPERTY_NAME_UNCOMPPRESSED_SIZE = \"uncompressedSize\";\nconst PROPERTY_NAME_COMPPRESSED_SIZE = \"compressedSize\";\nconst PROPERTY_NAME_OFFSET = \"offset\";\nconst PROPERTY_NAME_DISK_NUMBER_START = \"diskNumberStart\";\nconst PROPERTY_NAME_LAST_MODIFICATION_DATE = \"lastModDate\";\nconst PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE = \"rawLastModDate\";\nconst PROPERTY_NAME_LAST_ACCESS_DATE = \"lastAccessDate\";\nconst PROPERTY_NAME_RAW_LAST_ACCESS_DATE = \"rawLastAccessDate\";\nconst PROPERTY_NAME_CREATION_DATE = \"creationDate\";\nconst PROPERTY_NAME_RAW_CREATION_DATE = \"rawCreationDate\";\nconst PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE = \"internalFileAttribute\";\nconst PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE = \"externalFileAttribute\";\nconst PROPERTY_NAME_MS_DOS_COMPATIBLE = \"msDosCompatible\";\nconst PROPERTY_NAME_ZIP64 = \"zip64\";\n\nconst PROPERTY_NAMES = [\n\tPROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, PROPERTY_NAME_COMPPRESSED_SIZE, PROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE, PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_LAST_ACCESS_DATE, PROPERTY_NAME_CREATION_DATE, PROPERTY_NAME_OFFSET, PROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_DISK_NUMBER_START, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE, PROPERTY_NAME_ZIP64,\n\t\"directory\", \"bitFlag\", \"encrypted\", \"signature\", \"filenameUTF8\", \"commentUTF8\", \"compressionMethod\", \"version\", \"versionMadeBy\",\n\t\"extraField\", \"rawExtraField\", \"extraFieldZip64\", \"extraFieldUnicodePath\", \"extraFieldUnicodeComment\", \"extraFieldAES\", \"extraFieldNTFS\",\n\t\"extraFieldExtendedTimestamp\"];\n\nclass Entry {\n\n\tconstructor(data) {\n\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\n\t}\n\n}\n\nexport {\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt, Response, WritableStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tDIRECTORY_SIGNATURE,\n\tUNDEFINED_VALUE\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\trunWorker,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tBlobReader\n} from \"./io.js\";\nimport { decodeText } from \"./util/decode-text.js\";\nimport { Crc32 } from \"./streams/codecs/crc32.js\";\nimport {\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tEntry\n} from \"./zip-entry.js\";\n\nconst ERR_BAD_FORMAT = \"File format is not recognized\";\nconst ERR_EOCDR_NOT_FOUND = \"End of central directory not found\";\nconst ERR_EOCDR_ZIP64_NOT_FOUND = \"End of Zip64 central directory not found\";\nconst ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = \"End of Zip64 central directory locator not found\";\nconst ERR_CENTRAL_DIRECTORY_NOT_FOUND = \"Central directory header not found\";\nconst ERR_LOCAL_FILE_HEADER_NOT_FOUND = \"Local file header not found\";\nconst ERR_EXTRAFIELD_ZIP64_NOT_FOUND = \"Zip64 extra field not found\";\nconst ERR_ENCRYPTED = \"File contains encrypted entry\";\nconst ERR_UNSUPPORTED_ENCRYPTION = \"Encryption method not supported\";\nconst ERR_UNSUPPORTED_COMPRESSION = \"Compression method not supported\";\nconst ERR_SPLIT_ZIP_FILE = \"Split zip file\";\nconst CHARSET_UTF8 = \"utf-8\";\nconst CHARSET_CP437 = \"cp437\";\nconst ZIP64_PROPERTIES = [\n\t[PROPERTY_NAME_UNCOMPPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_COMPPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_OFFSET, MAX_32_BITS],\n\t[PROPERTY_NAME_DISK_NUMBER_START, MAX_16_BITS]\n];\nconst ZIP64_EXTRACTION = {\n\t[MAX_16_BITS]: {\n\t\tgetValue: getUint32,\n\t\tbytes: 4\n\t},\n\t[MAX_32_BITS]: {\n\t\tgetValue: getBigUint64,\n\t\tbytes: 8\n\t}\n};\n\nclass ZipReader {\n\n\tconstructor(reader, options = {}) {\n\t\tObject.assign(this, {\n\t\t\treader: initReader(reader),\n\t\t\toptions,\n\t\t\tconfig: getConfiguration()\n\t\t});\n\t}\n\n\tasync* getEntriesGenerator(options = {}) {\n\t\tconst zipReader = this;\n\t\tlet { reader } = zipReader;\n\t\tconst { config } = zipReader;\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE || !reader.readUint8Array) {\n\t\t\treader = new BlobReader(await new Response(reader.readable).blob());\n\t\t\tawait initStream(reader);\n\t\t}\n\t\tif (reader.size < END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\treader.chunkSize = getChunkSize(config);\n\t\tconst endOfDirectoryInfo = await seekSignature(reader, END_OF_CENTRAL_DIR_SIGNATURE, reader.size, END_OF_CENTRAL_DIR_LENGTH, MAX_16_BITS * 16);\n\t\tif (!endOfDirectoryInfo) {\n\t\t\tconst signatureArray = await readUint8Array(reader, 0, 4);\n\t\t\tconst signatureView = getDataView(signatureArray);\n\t\t\tif (getUint32(signatureView) == SPLIT_ZIP_FILE_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t\t} else {\n\t\t\t\tthrow new Error(ERR_EOCDR_NOT_FOUND);\n\t\t\t}\n\t\t}\n\t\tconst endOfDirectoryView = getDataView(endOfDirectoryInfo);\n\t\tlet directoryDataLength = getUint32(endOfDirectoryView, 12);\n\t\tlet directoryDataOffset = getUint32(endOfDirectoryView, 16);\n\t\tconst commentOffset = endOfDirectoryInfo.offset;\n\t\tconst commentLength = getUint16(endOfDirectoryView, 20);\n\t\tconst appendedDataOffset = commentOffset + END_OF_CENTRAL_DIR_LENGTH + commentLength;\n\t\tlet lastDiskNumber = getUint16(endOfDirectoryView, 4);\n\t\tconst expectedLastDiskNumber = reader.lastDiskNumber || 0;\n\t\tlet diskNumber = getUint16(endOfDirectoryView, 6);\n\t\tlet filesLength = getUint16(endOfDirectoryView, 8);\n\t\tlet prependedDataLength = 0;\n\t\tlet startOffset = 0;\n\t\tif (directoryDataOffset == MAX_32_BITS || directoryDataLength == MAX_32_BITS || filesLength == MAX_16_BITS || diskNumber == MAX_16_BITS) {\n\t\t\tconst endOfDirectoryLocatorArray = await readUint8Array(reader, endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH);\n\t\t\tconst endOfDirectoryLocatorView = getDataView(endOfDirectoryLocatorArray);\n\t\t\tif (getUint32(endOfDirectoryLocatorView, 0) != ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tdirectoryDataOffset = getBigUint64(endOfDirectoryLocatorView, 8);\n\t\t\tlet endOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\tlet endOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH - ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tendOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\t\tendOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\t}\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tif (lastDiskNumber == MAX_16_BITS) {\n\t\t\t\tlastDiskNumber = getUint32(endOfDirectoryView, 16);\n\t\t\t}\n\t\t\tif (diskNumber == MAX_16_BITS) {\n\t\t\t\tdiskNumber = getUint32(endOfDirectoryView, 20);\n\t\t\t}\n\t\t\tif (filesLength == MAX_16_BITS) {\n\t\t\t\tfilesLength = getBigUint64(endOfDirectoryView, 32);\n\t\t\t}\n\t\t\tif (directoryDataLength == MAX_32_BITS) {\n\t\t\t\tdirectoryDataLength = getBigUint64(endOfDirectoryView, 40);\n\t\t\t}\n\t\t\tdirectoryDataOffset -= directoryDataLength;\n\t\t}\n\t\tif (directoryDataOffset >= reader.size) {\n\t\t\tprependedDataLength = reader.size - directoryDataOffset - directoryDataLength - END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tdirectoryDataOffset = reader.size - directoryDataLength - END_OF_CENTRAL_DIR_LENGTH;\t\n\t\t}\n\t\tif (expectedLastDiskNumber != lastDiskNumber) {\n\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t}\n\t\tif (directoryDataOffset < 0) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tlet offset = 0;\n\t\tlet directoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\tlet directoryView = getDataView(directoryArray);\n\t\tif (directoryDataLength) {\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - directoryDataLength;\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength += directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t\t}\n\t\t}\n\t\tconst expectedDirectoryDataLength = endOfDirectoryInfo.offset - directoryDataOffset - (reader.lastDiskOffset || 0);\n\t\tif (directoryDataLength != expectedDirectoryDataLength && expectedDirectoryDataLength >= 0) {\n\t\t\tdirectoryDataLength = expectedDirectoryDataLength;\n\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tconst filenameEncoding = getOptionValue(zipReader, options, \"filenameEncoding\");\n\t\tconst commentEncoding = getOptionValue(zipReader, options, \"commentEncoding\");\n\t\tfor (let indexFile = 0; indexFile < filesLength; indexFile++) {\n\t\t\tconst fileEntry = new ZipEntry(reader, config, zipReader.options);\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_CENTRAL_DIRECTORY_NOT_FOUND);\n\t\t\t}\n\t\t\treadCommonHeader(fileEntry, directoryView, offset + 6);\n\t\t\tconst languageEncodingFlag = Boolean(fileEntry.bitFlag.languageEncodingFlag);\n\t\t\tconst filenameOffset = offset + 46;\n\t\t\tconst extraFieldOffset = filenameOffset + fileEntry.filenameLength;\n\t\t\tconst commentOffset = extraFieldOffset + fileEntry.extraFieldLength;\n\t\t\tconst versionMadeBy = getUint16(directoryView, offset + 4);\n\t\t\tconst msDosCompatible = (versionMadeBy & 0) == 0;\n\t\t\tconst rawFilename = directoryArray.subarray(filenameOffset, extraFieldOffset);\n\t\t\tconst commentLength = getUint16(directoryView, offset + 32);\n\t\t\tconst endOffset = commentOffset + commentLength;\n\t\t\tconst rawComment = directoryArray.subarray(commentOffset, endOffset);\n\t\t\tconst filenameUTF8 = languageEncodingFlag;\n\t\t\tconst commentUTF8 = languageEncodingFlag;\n\t\t\tconst directory = msDosCompatible && ((getUint8(directoryView, offset + 38) & FILE_ATTR_MSDOS_DIR_MASK) == FILE_ATTR_MSDOS_DIR_MASK);\n\t\t\tconst offsetFileEntry = getUint32(directoryView, offset + 42) + prependedDataLength;\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\tversionMadeBy,\n\t\t\t\tmsDosCompatible,\n\t\t\t\tcompressedSize: 0,\n\t\t\t\tuncompressedSize: 0,\n\t\t\t\tcommentLength,\n\t\t\t\tdirectory,\n\t\t\t\toffset: offsetFileEntry,\n\t\t\t\tdiskNumberStart: getUint16(directoryView, offset + 34),\n\t\t\t\tinternalFileAttribute: getUint16(directoryView, offset + 36),\n\t\t\t\texternalFileAttribute: getUint32(directoryView, offset + 38),\n\t\t\t\trawFilename,\n\t\t\t\tfilenameUTF8,\n\t\t\t\tcommentUTF8,\n\t\t\t\trawExtraField: directoryArray.subarray(extraFieldOffset, commentOffset)\n\t\t\t});\n\t\t\tconst [filename, comment] = await Promise.all([\n\t\t\t\tdecodeText(rawFilename, filenameUTF8 ? CHARSET_UTF8 : filenameEncoding || CHARSET_CP437),\n\t\t\t\tdecodeText(rawComment, commentUTF8 ? CHARSET_UTF8 : commentEncoding || CHARSET_CP437)\n\t\t\t]);\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\trawComment,\n\t\t\t\tfilename,\n\t\t\t\tcomment,\n\t\t\t\tdirectory: directory || filename.endsWith(DIRECTORY_SIGNATURE)\n\t\t\t});\n\t\t\tstartOffset = Math.max(offsetFileEntry, startOffset);\n\t\t\tawait readCommonFooter(fileEntry, fileEntry, directoryView, offset + 6);\n\t\t\tconst entry = new Entry(fileEntry);\n\t\t\tentry.getData = (writer, options) => fileEntry.getData(writer, entry, options);\n\t\t\toffset = endOffset;\n\t\t\tconst { onprogress } = options;\n\t\t\tif (onprogress) {\n\t\t\t\ttry {\n\t\t\t\t\tawait onprogress(indexFile + 1, filesLength, new Entry(fileEntry));\n\t\t\t\t} catch (_error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\tyield entry;\n\t\t}\n\t\tconst extractPrependedData = getOptionValue(zipReader, options, \"extractPrependedData\");\n\t\tconst extractAppendedData = getOptionValue(zipReader, options, \"extractAppendedData\");\n\t\tif (extractPrependedData) {\n\t\t\tzipReader.prependedData = startOffset > 0 ? await readUint8Array(reader, 0, startOffset) : new Uint8Array();\n\t\t}\n\t\tzipReader.comment = commentLength ? await readUint8Array(reader, commentOffset + END_OF_CENTRAL_DIR_LENGTH, commentLength) : new Uint8Array();\n\t\tif (extractAppendedData) {\n\t\t\tzipReader.appendedData = appendedDataOffset < reader.size ? await readUint8Array(reader, appendedDataOffset, reader.size - appendedDataOffset) : new Uint8Array();\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync getEntries(options = {}) {\n\t\tconst entries = [];\n\t\tfor await (const entry of this.getEntriesGenerator(options)) {\n\t\t\tentries.push(entry);\n\t\t}\n\t\treturn entries;\n\t}\n\n\tasync close() {\n\t}\n}\n\nexport {\n\tZipReader,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_ZIP64_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_SPLIT_ZIP_FILE\n};\n\nclass ZipEntry {\n\n\tconstructor(reader, config, options) {\n\t\tObject.assign(this, {\n\t\t\treader,\n\t\t\tconfig,\n\t\t\toptions\n\t\t});\n\t}\n\n\tasync getData(writer, fileEntry, options = {}) {\n\t\tconst zipEntry = this;\n\t\tconst {\n\t\t\treader,\n\t\t\toffset,\n\t\t\tdiskNumberStart,\n\t\t\textraFieldAES,\n\t\t\tcompressionMethod,\n\t\t\tconfig,\n\t\t\tbitFlag,\n\t\t\tsignature,\n\t\t\trawLastModDate,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = zipEntry;\n\t\tconst localDirectory = fileEntry.localDirectory = {};\n\t\tconst dataArray = await readUint8Array(reader, offset, 30, diskNumberStart);\n\t\tconst dataView = getDataView(dataArray);\n\t\tlet password = getOptionValue(zipEntry, options, \"password\");\n\t\tpassword = password && password.length && password;\n\t\tif (extraFieldAES) {\n\t\t\tif (extraFieldAES.originalCompressionMethod != COMPRESSION_METHOD_AES) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t\t}\n\t\t}\n\t\tif (compressionMethod != COMPRESSION_METHOD_STORE && compressionMethod != COMPRESSION_METHOD_DEFLATE) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t}\n\t\tif (getUint32(dataView, 0) != LOCAL_FILE_HEADER_SIGNATURE) {\n\t\t\tthrow new Error(ERR_LOCAL_FILE_HEADER_NOT_FOUND);\n\t\t}\n\t\treadCommonHeader(localDirectory, dataView, 4);\n\t\tlocalDirectory.rawExtraField = localDirectory.extraFieldLength ?\n\t\t\tawait readUint8Array(reader, offset + 30 + localDirectory.filenameLength, localDirectory.extraFieldLength, diskNumberStart) :\n\t\t\tnew Uint8Array();\n\t\tawait readCommonFooter(zipEntry, localDirectory, dataView, 4, true);\n\t\tObject.assign(fileEntry, {\n\t\t\tlastAccessDate: localDirectory.lastAccessDate,\n\t\t\tcreationDate: localDirectory.creationDate\n\t\t});\n\t\tconst encrypted = zipEntry.encrypted && localDirectory.encrypted;\n\t\tconst zipCrypto = encrypted && !extraFieldAES;\n\t\tif (encrypted) {\n\t\t\tif (!zipCrypto && extraFieldAES.strength === UNDEFINED_VALUE) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_ENCRYPTION);\n\t\t\t} else if (!password) {\n\t\t\t\tthrow new Error(ERR_ENCRYPTED);\n\t\t\t}\n\t\t}\n\t\tconst dataOffset = offset + 30 + localDirectory.filenameLength + localDirectory.extraFieldLength;\n\t\tconst size = compressedSize;\n\t\tconst readable = reader.readable;\n\t\tObject.assign(readable, {\n\t\t\tdiskNumberStart,\n\t\t\toffset: dataOffset,\n\t\t\tsize\n\t\t});\n\t\tconst signal = getOptionValue(zipEntry, options, \"signal\");\n\t\tconst checkPasswordOnly = getOptionValue(zipEntry, options, \"checkPasswordOnly\");\n\t\tif (checkPasswordOnly) {\n\t\t\twriter = new WritableStream();\n\t\t}\n\t\twriter = initWriter(writer);\n\t\tawait initStream(writer, uncompressedSize);\n\t\tconst { writable } = writer;\n\t\tconst { onstart, onprogress, onend } = options;\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_INFLATE,\n\t\t\t\tpassword,\n\t\t\t\tzipCrypto,\n\t\t\t\tencryptionStrength: extraFieldAES && extraFieldAES.strength,\n\t\t\t\tsigned: getOptionValue(zipEntry, options, \"checkSignature\"),\n\t\t\t\tpasswordVerification: zipCrypto && (bitFlag.dataDescriptor ? ((rawLastModDate >>> 8) & 0xFF) : ((signature >>> 24) & 0xFF)),\n\t\t\t\tsignature,\n\t\t\t\tcompressed: compressionMethod != 0,\n\t\t\t\tencrypted,\n\t\t\t\tuseWebWorkers: getOptionValue(zipEntry, options, \"useWebWorkers\"),\n\t\t\t\tuseCompressionStream: getOptionValue(zipEntry, options, \"useCompressionStream\"),\n\t\t\t\ttransferStreams: getOptionValue(zipEntry, options, \"transferStreams\"),\n\t\t\t\tcheckPasswordOnly\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\tlet outputSize = 0;\n\t\ttry {\n\t\t\t({ outputSize } = (await runWorker({ readable, writable }, workerOptions)));\n\t\t} catch (error) {\n\t\t\tif (!checkPasswordOnly || error.message != ERR_ABORT_CHECK_PASSWORD) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} finally {\n\t\t\tconst preventClose = getOptionValue(zipEntry, options, \"preventClose\");\n\t\t\twritable.size += outputSize;\n\t\t\tif (!preventClose && !writable.locked) {\n\t\t\t\tawait writable.getWriter().close();\n\t\t\t}\n\t\t}\n\t\treturn checkPasswordOnly ? undefined : writer.getData ? writer.getData() : writable;\n\t}\n}\n\nfunction readCommonHeader(directory, dataView, offset) {\n\tconst rawBitFlag = directory.rawBitFlag = getUint16(dataView, offset + 2);\n\tconst encrypted = (rawBitFlag & BITFLAG_ENCRYPTED) == BITFLAG_ENCRYPTED;\n\tconst rawLastModDate = getUint32(dataView, offset + 6);\n\tObject.assign(directory, {\n\t\tencrypted,\n\t\tversion: getUint16(dataView, offset),\n\t\tbitFlag: {\n\t\t\tlevel: (rawBitFlag & BITFLAG_LEVEL) >> 1,\n\t\t\tdataDescriptor: (rawBitFlag & BITFLAG_DATA_DESCRIPTOR) == BITFLAG_DATA_DESCRIPTOR,\n\t\t\tlanguageEncodingFlag: (rawBitFlag & BITFLAG_LANG_ENCODING_FLAG) == BITFLAG_LANG_ENCODING_FLAG\n\t\t},\n\t\trawLastModDate,\n\t\tlastModDate: getDate(rawLastModDate),\n\t\tfilenameLength: getUint16(dataView, offset + 22),\n\t\textraFieldLength: getUint16(dataView, offset + 24)\n\t});\n}\n\nasync function readCommonFooter(fileEntry, directory, dataView, offset, localDirectory) {\n\tconst { rawExtraField } = directory;\n\tconst extraField = directory.extraField = new Map();\n\tconst rawExtraFieldView = getDataView(new Uint8Array(rawExtraField));\n\tlet offsetExtraField = 0;\n\ttry {\n\t\twhile (offsetExtraField < rawExtraField.length) {\n\t\t\tconst type = getUint16(rawExtraFieldView, offsetExtraField);\n\t\t\tconst size = getUint16(rawExtraFieldView, offsetExtraField + 2);\n\t\t\textraField.set(type, {\n\t\t\t\ttype,\n\t\t\t\tdata: rawExtraField.slice(offsetExtraField + 4, offsetExtraField + 4 + size)\n\t\t\t});\n\t\t\toffsetExtraField += 4 + size;\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\tconst compressionMethod = getUint16(dataView, offset + 4);\n\tObject.assign(directory, {\n\t\tsignature: getUint32(dataView, offset + 10),\n\t\tuncompressedSize: getUint32(dataView, offset + 18),\n\t\tcompressedSize: getUint32(dataView, offset + 14)\n\t});\n\tconst extraFieldZip64 = extraField.get(EXTRAFIELD_TYPE_ZIP64);\n\tif (extraFieldZip64) {\n\t\treadExtraFieldZip64(extraFieldZip64, directory);\n\t\tdirectory.extraFieldZip64 = extraFieldZip64;\n\t}\n\tconst extraFieldUnicodePath = extraField.get(EXTRAFIELD_TYPE_UNICODE_PATH);\n\tif (extraFieldUnicodePath) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodePath, PROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodePath = extraFieldUnicodePath;\n\t}\n\tconst extraFieldUnicodeComment = extraField.get(EXTRAFIELD_TYPE_UNICODE_COMMENT);\n\tif (extraFieldUnicodeComment) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodeComment, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodeComment = extraFieldUnicodeComment;\n\t}\n\tconst extraFieldAES = extraField.get(EXTRAFIELD_TYPE_AES);\n\tif (extraFieldAES) {\n\t\treadExtraFieldAES(extraFieldAES, directory, compressionMethod);\n\t\tdirectory.extraFieldAES = extraFieldAES;\n\t} else {\n\t\tdirectory.compressionMethod = compressionMethod;\n\t}\n\tconst extraFieldNTFS = extraField.get(EXTRAFIELD_TYPE_NTFS);\n\tif (extraFieldNTFS) {\n\t\treadExtraFieldNTFS(extraFieldNTFS, directory);\n\t\tdirectory.extraFieldNTFS = extraFieldNTFS;\n\t}\n\tconst extraFieldExtendedTimestamp = extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\tif (extraFieldExtendedTimestamp) {\n\t\treadExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory, localDirectory);\n\t\tdirectory.extraFieldExtendedTimestamp = extraFieldExtendedTimestamp;\n\t}\n\tconst extraFieldUSDZ = extraField.get(EXTRAFIELD_TYPE_USDZ);\n\tif (extraFieldUSDZ) {\n\t\tdirectory.extraFieldUSDZ = extraFieldUSDZ;\n\t}\n}\n\nfunction readExtraFieldZip64(extraFieldZip64, directory) {\n\tdirectory.zip64 = true;\n\tconst extraFieldView = getDataView(extraFieldZip64.data);\n\tconst missingProperties = ZIP64_PROPERTIES.filter(([propertyName, max]) => directory[propertyName] == max);\n\tfor (let indexMissingProperty = 0, offset = 0; indexMissingProperty < missingProperties.length; indexMissingProperty++) {\n\t\tconst [propertyName, max] = missingProperties[indexMissingProperty];\n\t\tif (directory[propertyName] == max) {\n\t\t\tconst extraction = ZIP64_EXTRACTION[max];\n\t\t\tdirectory[propertyName] = extraFieldZip64[propertyName] = extraction.getValue(extraFieldView, offset);\n\t\t\toffset += extraction.bytes;\n\t\t} else if (extraFieldZip64[propertyName]) {\n\t\t\tthrow new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND);\n\t\t}\n\t}\n}\n\nasync function readExtraFieldUnicode(extraFieldUnicode, propertyName, rawPropertyName, directory, fileEntry) {\n\tconst extraFieldView = getDataView(extraFieldUnicode.data);\n\tconst crc32 = new Crc32();\n\tcrc32.append(fileEntry[rawPropertyName]);\n\tconst dataViewSignature = getDataView(new Uint8Array(4));\n\tdataViewSignature.setUint32(0, crc32.get(), true);\n\tconst signature = getUint32(extraFieldView, 1);\n\tObject.assign(extraFieldUnicode, {\n\t\tversion: getUint8(extraFieldView, 0),\n\t\t[propertyName]: decodeText(extraFieldUnicode.data.subarray(5)),\n\t\tvalid: !fileEntry.bitFlag.languageEncodingFlag && signature == getUint32(dataViewSignature, 0)\n\t});\n\tif (extraFieldUnicode.valid) {\n\t\tdirectory[propertyName] = extraFieldUnicode[propertyName];\n\t\tdirectory[propertyName + \"UTF8\"] = true;\n\t}\n}\n\nfunction readExtraFieldAES(extraFieldAES, directory, compressionMethod) {\n\tconst extraFieldView = getDataView(extraFieldAES.data);\n\tconst strength = getUint8(extraFieldView, 4);\n\tObject.assign(extraFieldAES, {\n\t\tvendorVersion: getUint8(extraFieldView, 0),\n\t\tvendorId: getUint8(extraFieldView, 2),\n\t\tstrength,\n\t\toriginalCompressionMethod: compressionMethod,\n\t\tcompressionMethod: getUint16(extraFieldView, 5)\n\t});\n\tdirectory.compressionMethod = extraFieldAES.compressionMethod;\n}\n\nfunction readExtraFieldNTFS(extraFieldNTFS, directory) {\n\tconst extraFieldView = getDataView(extraFieldNTFS.data);\n\tlet offsetExtraField = 4;\n\tlet tag1Data;\n\ttry {\n\t\twhile (offsetExtraField < extraFieldNTFS.data.length && !tag1Data) {\n\t\t\tconst tagValue = getUint16(extraFieldView, offsetExtraField);\n\t\t\tconst attributeSize = getUint16(extraFieldView, offsetExtraField + 2);\n\t\t\tif (tagValue == EXTRAFIELD_TYPE_NTFS_TAG1) {\n\t\t\t\ttag1Data = extraFieldNTFS.data.slice(offsetExtraField + 4, offsetExtraField + 4 + attributeSize);\n\t\t\t}\n\t\t\toffsetExtraField += 4 + attributeSize;\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\ttry {\n\t\tif (tag1Data && tag1Data.length == 24) {\n\t\t\tconst tag1View = getDataView(tag1Data);\n\t\t\tconst rawLastModDate = tag1View.getBigUint64(0, true);\n\t\t\tconst rawLastAccessDate = tag1View.getBigUint64(8, true);\n\t\t\tconst rawCreationDate = tag1View.getBigUint64(16, true);\n\t\t\tObject.assign(extraFieldNTFS, {\n\t\t\t\trawLastModDate,\n\t\t\t\trawLastAccessDate,\n\t\t\t\trawCreationDate\n\t\t\t});\n\t\t\tconst lastModDate = getDateNTFS(rawLastModDate);\n\t\t\tconst lastAccessDate = getDateNTFS(rawLastAccessDate);\n\t\t\tconst creationDate = getDateNTFS(rawCreationDate);\n\t\t\tconst extraFieldData = { lastModDate, lastAccessDate, creationDate };\n\t\t\tObject.assign(extraFieldNTFS, extraFieldData);\n\t\t\tObject.assign(directory, extraFieldData);\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction readExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory, localDirectory) {\n\tconst extraFieldView = getDataView(extraFieldExtendedTimestamp.data);\n\tconst flags = getUint8(extraFieldView, 0);\n\tconst timeProperties = [];\n\tconst timeRawProperties = [];\n\tif (localDirectory) {\n\t\tif ((flags & 0x1) == 0x1) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t\t}\n\t\tif ((flags & 0x2) == 0x2) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_ACCESS_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_ACCESS_DATE);\n\t\t}\n\t\tif ((flags & 0x4) == 0x4) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_CREATION_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_CREATION_DATE);\n\t\t}\n\t} else if (extraFieldExtendedTimestamp.data.length >= 5) {\n\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t}\n\tlet offset = 1;\n\ttimeProperties.forEach((propertyName, indexProperty) => {\n\t\tif (extraFieldExtendedTimestamp.data.length >= offset + 4) {\n\t\t\tconst time = getUint32(extraFieldView, offset);\n\t\t\tdirectory[propertyName] = extraFieldExtendedTimestamp[propertyName] = new Date(time * 1000);\n\t\t\tconst rawPropertyName = timeRawProperties[indexProperty];\n\t\t\textraFieldExtendedTimestamp[rawPropertyName] = time;\n\t\t}\n\t\toffset += 4;\n\t});\n}\n\nasync function seekSignature(reader, signature, startOffset, minimumBytes, maximumLength) {\n\tconst signatureArray = new Uint8Array(4);\n\tconst signatureView = getDataView(signatureArray);\n\tsetUint32(signatureView, 0, signature);\n\tconst maximumBytes = minimumBytes + maximumLength;\n\treturn (await seek(minimumBytes)) || await seek(Math.min(maximumBytes, startOffset));\n\n\tasync function seek(length) {\n\t\tconst offset = startOffset - length;\n\t\tconst bytes = await readUint8Array(reader, offset, length);\n\t\tfor (let indexByte = bytes.length - minimumBytes; indexByte >= 0; indexByte--) {\n\t\t\tif (bytes[indexByte] == signatureArray[0] && bytes[indexByte + 1] == signatureArray[1] &&\n\t\t\t\tbytes[indexByte + 2] == signatureArray[2] && bytes[indexByte + 3] == signatureArray[3]) {\n\t\t\t\treturn {\n\t\t\t\t\toffset: offset + indexByte,\n\t\t\t\t\tbuffer: bytes.slice(indexByte, indexByte + minimumBytes).buffer\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getOptionValue(zipReader, options, name) {\n\treturn options[name] === UNDEFINED_VALUE ? zipReader.options[name] : options[name];\n}\n\nfunction getDate(timeRaw) {\n\tconst date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & 0x0000ffff;\n\ttry {\n\t\treturn new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5, (time & 0x001F) * 2, 0);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction getDateNTFS(timeRaw) {\n\treturn new Date((Number((timeRaw / BigInt(10000)) - BigInt(11644473600000))));\n}\n\nfunction getUint8(view, offset) {\n\treturn view.getUint8(offset);\n}\n\nfunction getUint16(view, offset) {\n\treturn view.getUint16(offset, true);\n}\n\nfunction getUint32(view, offset) {\n\treturn view.getUint32(offset, true);\n}\n\nfunction getBigUint64(view, offset) {\n\treturn Number(view.getBigUint64(offset, true));\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { Inflate } from \"./core/streams/codecs/inflate.js\";\nimport { configure } from \"./core/configuration.js\";\nimport { getMimeType } from \"./core/util/default-mime-type.js\";\nimport { terminateWorkers } from \"./core/codec-pool.js\";\n\nconfigure({ Inflate });\n\nexport * from \"./core/io.js\";\nexport * from \"./core/zip-reader.js\";\nexport {\n\tconfigure,\n\tgetMimeType,\n\tterminateWorkers\n};","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type zip from '@zip.js/zip.js';\n// @ts-ignore\nimport * as zipImport from '@zip.js/zip.js/lib/zip-no-worker-inflate.js';\nimport type { TraceModelBackend } from './traceModel';\n\nconst zipjs = zipImport as typeof zip;\n\ntype Progress = (done: number, total: number) => undefined;\n\nexport class ZipTraceModelBackend implements TraceModelBackend {\n  private _zipReader: zip.ZipReader<unknown>;\n  private _entriesPromise: Promise<Map<string, zip.Entry>>;\n  private _traceURL: string;\n\n  constructor(traceURL: string, progress: Progress) {\n    this._traceURL = traceURL;\n    zipjs.configure({ baseURL: self.location.href } as any);\n    this._zipReader = new zipjs.ZipReader(\n        new zipjs.HttpReader(formatUrl(traceURL), { mode: 'cors', preventHeadRequest: true } as any),\n        { useWebWorkers: false });\n    this._entriesPromise = this._zipReader.getEntries({ onprogress: progress }).then(entries => {\n      const map = new Map<string, zip.Entry>();\n      for (const entry of entries)\n        map.set(entry.filename, entry);\n      return map;\n    });\n  }\n\n  isLive() {\n    return false;\n  }\n\n  traceURL() {\n    return this._traceURL;\n  }\n\n  async entryNames(): Promise<string[]> {\n    const entries = await this._entriesPromise;\n    return [...entries.keys()];\n  }\n\n  async hasEntry(entryName: string): Promise<boolean> {\n    const entries = await this._entriesPromise;\n    return entries.has(entryName);\n  }\n\n  async readText(entryName: string): Promise<string | undefined> {\n    const entries = await this._entriesPromise;\n    const entry = entries.get(entryName);\n    if (!entry)\n      return;\n    const writer = new zipjs.TextWriter();\n    await entry.getData?.(writer);\n    return writer.getData();\n  }\n\n  async readBlob(entryName: string): Promise<Blob | undefined> {\n    const entries = await this._entriesPromise;\n    const entry = entries.get(entryName);\n    if (!entry)\n      return;\n    const writer = new zipjs.BlobWriter() as zip.BlobWriter;\n    await entry.getData!(writer);\n    return writer.getData();\n  }\n}\n\nexport class FetchTraceModelBackend implements TraceModelBackend {\n  private _entriesPromise: Promise<Map<string, string>>;\n  private _traceURL: string;\n\n  constructor(traceURL: string) {\n    this._traceURL = traceURL;\n    this._entriesPromise = fetch('/trace/file?path=' + encodeURIComponent(traceURL)).then(async response => {\n      const json = JSON.parse(await response.text());\n      const entries = new Map<string, string>();\n      for (const entry of json.entries)\n        entries.set(entry.name, entry.path);\n      return entries;\n    });\n  }\n\n  isLive() {\n    return true;\n  }\n\n  traceURL(): string {\n    return this._traceURL;\n  }\n\n  async entryNames(): Promise<string[]> {\n    const entries = await this._entriesPromise;\n    return [...entries.keys()];\n  }\n\n  async hasEntry(entryName: string): Promise<boolean> {\n    const entries = await this._entriesPromise;\n    return entries.has(entryName);\n  }\n\n  async readText(entryName: string): Promise<string | undefined> {\n    const response = await this._readEntry(entryName);\n    return response?.text();\n  }\n\n  async readBlob(entryName: string): Promise<Blob | undefined> {\n    const response = await this._readEntry(entryName);\n    return response?.status === 200 ? await response?.blob() : undefined;\n  }\n\n  private async _readEntry(entryName: string): Promise<Response | undefined> {\n    const entries = await this._entriesPromise;\n    const fileName = entries.get(entryName);\n    if (!fileName)\n      return;\n    return fetch('/trace/file?path=' + encodeURIComponent(fileName));\n  }\n}\n\nfunction formatUrl(trace: string) {\n  let url = trace.startsWith('http') || trace.startsWith('blob') ? trace : `file?path=${encodeURIComponent(trace)}`;\n  // Dropbox does not support cors.\n  if (url.startsWith('https://www.dropbox.com/'))\n    url = 'https://dl.dropboxusercontent.com/' + url.substring('https://www.dropbox.com/'.length);\n  return url;\n}\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { splitProgress } from './progress';\nimport { unwrapPopoutUrl } from './snapshotRenderer';\nimport { SnapshotServer } from './snapshotServer';\nimport { TraceModel } from './traceModel';\nimport { FetchTraceModelBackend, ZipTraceModelBackend } from './traceModelBackends';\nimport { TraceVersionError } from './traceModernizer';\n\n// @ts-ignore\ndeclare const self: ServiceWorkerGlobalScope;\n\nself.addEventListener('install', function(event: any) {\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', function(event: any) {\n  event.waitUntil(self.clients.claim());\n});\n\nconst scopePath = new URL(self.registration.scope).pathname;\n\nconst loadedTraces = new Map<string, { traceModel: TraceModel, snapshotServer: SnapshotServer }>();\n\nconst clientIdToTraceUrls = new Map<string, Set<string>>();\n\nasync function loadTrace(traceUrl: string, traceFileName: string | null, clientId: string, progress: (done: number, total: number) => undefined): Promise<TraceModel> {\n  await gc();\n  let set = clientIdToTraceUrls.get(clientId);\n  if (!set) {\n    set = new Set();\n    clientIdToTraceUrls.set(clientId, set);\n  }\n  set.add(traceUrl);\n\n  const traceModel = new TraceModel();\n  try {\n    // Allow 10% to hop from sw to page.\n    const [fetchProgress, unzipProgress] = splitProgress(progress, [0.5, 0.4, 0.1]);\n    const backend = traceUrl.endsWith('json') ? new FetchTraceModelBackend(traceUrl) : new ZipTraceModelBackend(traceUrl, fetchProgress);\n    await traceModel.load(backend, unzipProgress);\n  } catch (error: any) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    if (error?.message?.includes('Cannot find .trace file') && await traceModel.hasEntry('index.html'))\n      throw new Error('Could not load trace. Did you upload a Playwright HTML report instead? Make sure to extract the archive first and then double-click the index.html file or put it on a web server.');\n    if (error instanceof TraceVersionError)\n      throw new Error(`Could not load trace from ${traceFileName || traceUrl}. ${error.message}`);\n    if (traceFileName)\n      throw new Error(`Could not load trace from ${traceFileName}. Make sure to upload a valid Playwright trace.`);\n    throw new Error(`Could not load trace from ${traceUrl}. Make sure a valid Playwright Trace is accessible over this url.`);\n  }\n  const snapshotServer = new SnapshotServer(traceModel.storage(), sha1 => traceModel.resourceForSha1(sha1));\n  loadedTraces.set(traceUrl, { traceModel, snapshotServer });\n  return traceModel;\n}\n\n// @ts-ignore\nasync function doFetch(event: FetchEvent): Promise<Response> {\n  // In order to make Accessibility Insights for Web work.\n  if (event.request.url.startsWith('chrome-extension://'))\n    return fetch(event.request);\n\n  const request = event.request;\n  const client = await self.clients.get(event.clientId);\n\n  // When trace viewer is deployed over https, we will force upgrade\n  // insecure http subresources to https. Otherwise, these will fail\n  // to load inside our https snapshots.\n  // In this case, we also match http resources from the archive by\n  // the https urls.\n  const isDeployedAsHttps = self.registration.scope.startsWith('https://');\n\n  if (request.url.startsWith(self.registration.scope)) {\n    const url = new URL(unwrapPopoutUrl(request.url));\n    const relativePath = url.pathname.substring(scopePath.length - 1);\n    if (relativePath === '/ping') {\n      await gc();\n      return new Response(null, { status: 200 });\n    }\n\n    const traceUrl = url.searchParams.get('trace');\n\n    if (relativePath === '/contexts') {\n      try {\n        const traceModel = await loadTrace(traceUrl!, url.searchParams.get('traceFileName'), event.clientId, (done: number, total: number) => {\n          client.postMessage({ method: 'progress', params: { done, total } });\n        });\n        return new Response(JSON.stringify(traceModel!.contextEntries), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      } catch (error: any) {\n        return new Response(JSON.stringify({ error: error?.message }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    if (relativePath.startsWith('/snapshotInfo/')) {\n      const { snapshotServer } = loadedTraces.get(traceUrl!) || {};\n      if (!snapshotServer)\n        return new Response(null, { status: 404 });\n      return snapshotServer.serveSnapshotInfo(relativePath, url.searchParams);\n    }\n\n    if (relativePath.startsWith('/snapshot/')) {\n      const { snapshotServer } = loadedTraces.get(traceUrl!) || {};\n      if (!snapshotServer)\n        return new Response(null, { status: 404 });\n      const response = snapshotServer.serveSnapshot(relativePath, url.searchParams, url.href);\n      if (isDeployedAsHttps)\n        response.headers.set('Content-Security-Policy', 'upgrade-insecure-requests');\n      return response;\n    }\n\n    if (relativePath.startsWith('/sha1/')) {\n      // Sha1 for sources is based on the file path, can't load it of a random model.\n      const sha1 = relativePath.slice('/sha1/'.length);\n      for (const trace of loadedTraces.values()) {\n        const blob = await trace.traceModel.resourceForSha1(sha1);\n        if (blob)\n          return new Response(blob, { status: 200, headers: downloadHeaders(url.searchParams) });\n      }\n      return new Response(null, { status: 404 });\n    }\n\n    // Fallback to network.\n    return fetch(event.request);\n  }\n\n  const snapshotUrl = unwrapPopoutUrl(client!.url);\n  const traceUrl = new URL(snapshotUrl).searchParams.get('trace')!;\n  const { snapshotServer } = loadedTraces.get(traceUrl) || {};\n  if (!snapshotServer)\n    return new Response(null, { status: 404 });\n\n  const lookupUrls = [request.url];\n  if (isDeployedAsHttps && request.url.startsWith('https://'))\n    lookupUrls.push(request.url.replace(/^https/, 'http'));\n  return snapshotServer.serveResource(lookupUrls, request.method, snapshotUrl);\n}\n\nfunction downloadHeaders(searchParams: URLSearchParams): Headers | undefined {\n  const name = searchParams.get('dn');\n  const contentType = searchParams.get('dct');\n  if (!name)\n    return;\n  const headers = new Headers();\n  headers.set('Content-Disposition', `attachment; filename=\"attachment\"; filename*=UTF-8''${encodeURIComponent(name)}`);\n  if (contentType)\n    headers.set('Content-Type', contentType);\n  return headers;\n}\n\nasync function gc() {\n  const clients = await self.clients.matchAll();\n  const usedTraces = new Set<string>();\n\n  for (const [clientId, traceUrls] of clientIdToTraceUrls) {\n    // @ts-ignore\n    if (!clients.find(c => c.id === clientId))\n      clientIdToTraceUrls.delete(clientId);\n    else\n      traceUrls.forEach(url => usedTraces.add(url));\n  }\n\n  for (const traceUrl of loadedTraces.keys()) {\n    if (!usedTraces.has(traceUrl))\n      loadedTraces.delete(traceUrl);\n  }\n}\n\n// @ts-ignore\nself.addEventListener('fetch', function(event: FetchEvent) {\n  event.respondWith(doFetch(event));\n});\n"],"names":["html","unwrapPopoutUrl","targetIds","hn","v","c","mode","table","z","UNDEFINED_TYPE","FUNCTION_TYPE","codec","config","maxWorkers","Inflate","CompressionStream","DecompressionStream","hash","password","signed","decrypt","createKeys","encrypt","codecBytes","CodecStream","Stream","runWorker","value","error","result","workerData","stream","workerOptions","getRequestData","headers","endOfDirectoryView","commentOffset","commentLength","options","traceUrl","snapshotServer"],"mappings":"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AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAChJ;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAChjhhJ;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAChJ;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjjJ;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EACjJ;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAChJ;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAChJ;AAAA,EAAK;AAAA,EAAI;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AA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","x_google_ignoreList":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}