{"version":3,"file":"embedded.D27cnKiB.js","sources":["../../../../trace-viewer/src/ui/embeddedWorkbenchLoader.tsx","../../../../trace-viewer/src/embedded.tsx"],"sourcesContent":["/*\n  Copyright (c) Microsoft Corporation.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\nimport type { ContextEntry } from '../entries';\nimport { MultiTraceModel } from './modelUtil';\nimport './embeddedWorkbenchLoader.css';\nimport { Workbench } from './workbench';\nimport { currentTheme, toggleTheme } from '@web/theme';\nimport type { SourceLocation } from './modelUtil';\n\nfunction openPage(url: string, target?: string) {\n  if (url)\n    window.parent!.postMessage({ method: 'openExternal', params: { url, target } }, '*');\n}\n\nfunction openSourceLocation({ file, line, column }: SourceLocation) {\n  window.parent!.postMessage({ method: 'openSourceLocation', params: { file, line, column } }, '*');\n}\n\nexport const EmbeddedWorkbenchLoader: React.FunctionComponent = () => {\n  const [traceURLs, setTraceURLs] = React.useState<string[]>([]);\n  const [model, setModel] = React.useState<MultiTraceModel>(emptyModel);\n  const [progress, setProgress] = React.useState<{ done: number, total: number }>({ done: 0, total: 0 });\n  const [processingErrorMessage, setProcessingErrorMessage] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    window.addEventListener('message', async ({ data: { method, params } }) => {\n      if (method === 'loadTraceRequested') {\n        setTraceURLs(params.traceUrl ? [params.traceUrl] : []);\n        setProcessingErrorMessage(null);\n      } else if (method === 'applyTheme') {\n        if (currentTheme() !== params.theme)\n          toggleTheme();\n      }\n    });\n    // notify vscode that it is now listening to its messages\n    window.parent!.postMessage({ type: 'loaded' }, '*');\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (traceURLs.length) {\n        const swListener = (event: any) => {\n          if (event.data.method === 'progress')\n            setProgress(event.data.params);\n        };\n        navigator.serviceWorker.addEventListener('message', swListener);\n        setProgress({ done: 0, total: 1 });\n        const contextEntries: ContextEntry[] = [];\n        for (let i = 0; i < traceURLs.length; i++) {\n          const url = traceURLs[i];\n          const params = new URLSearchParams();\n          params.set('trace', url);\n          const response = await fetch(`contexts?${params.toString()}`);\n          if (!response.ok) {\n            setProcessingErrorMessage((await response.json()).error);\n            return;\n          }\n          contextEntries.push(...(await response.json()));\n        }\n        navigator.serviceWorker.removeEventListener('message', swListener);\n        const model = new MultiTraceModel(contextEntries);\n        setProgress({ done: 0, total: 0 });\n        setModel(model);\n      } else {\n        setModel(emptyModel);\n      }\n    })();\n  }, [traceURLs]);\n\n  React.useEffect(() => {\n    if (processingErrorMessage)\n      window.parent?.postMessage({ method: 'showErrorMessage', params: { message: processingErrorMessage } }, '*');\n  }, [processingErrorMessage]);\n\n  return <div className='vbox workbench-loader'>\n    <div className='progress'>\n      <div className='inner-progress' style={{ width: progress.total ? (100 * progress.done / progress.total) + '%' : 0 }}></div>\n    </div>\n    <Workbench model={model} openPage={openPage} onOpenExternally={openSourceLocation} showSettings />\n    {!traceURLs.length && <div className='empty-state'>\n      <div className='title'>Select test to see the trace</div>\n    </div>}\n  </div>;\n};\n\nexport const emptyModel = new MultiTraceModel([]);\n","/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@web/common.css';\nimport { applyTheme } from '@web/theme';\nimport '@web/third_party/vscode/codicon.css';\nimport * as ReactDOM from 'react-dom/client';\nimport { EmbeddedWorkbenchLoader } from './ui/embeddedWorkbenchLoader';\n\n(async () => {\n  applyTheme();\n\n  // workaround to send keystrokes back to vscode webview to keep triggering key bindings there\n  const handleKeyEvent = (e: KeyboardEvent) => {\n    if (!e.isTrusted)\n      return;\n    window.parent?.postMessage({\n      type: e.type,\n      key: e.key,\n      keyCode: e.keyCode,\n      code: e.code,\n      shiftKey: e.shiftKey,\n      altKey: e.altKey,\n      ctrlKey: e.ctrlKey,\n      metaKey: e.metaKey,\n      repeat: e.repeat,\n    }, '*');\n  };\n  window.addEventListener('keydown', handleKeyEvent);\n  window.addEventListener('keyup', handleKeyEvent);\n\n  if (window.location.protocol !== 'file:') {\n    if (!navigator.serviceWorker)\n      throw new Error(`Service workers are not supported.\\nMake sure to serve the Trace Viewer (${window.location}) via HTTPS or localhost.`);\n    navigator.serviceWorker.register('sw.bundle.js');\n    if (!navigator.serviceWorker.controller) {\n      await new Promise<void>(f => {\n        navigator.serviceWorker.oncontrollerchange = () => f();\n      });\n    }\n\n    // Keep SW running.\n    setInterval(function() { fetch('ping'); }, 10000);\n  }\n\n  ReactDOM.createRoot(document.querySelector('#root')!).render(<EmbeddedWorkbenchLoader />);\n})();\n"],"names":["React.useState","React.useEffect","model","jsxs","jsx","ReactDOM.createRoot"],"mappings":"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"}