{"version":3,"file":"program.js","names":["_fs","_interopRequireDefault","require","_os","_path","_utilsBundle","_driver","_traceViewer","playwright","_interopRequireWildcard","_child_process","_utils","_server","_errors","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","packageJSON","program","version","process","env","PW_CLI_DISPLAY_VERSION","name","buildBasePlaywrightCLICommand","PW_LANG_NAME","command","hidden","description","allowUnknownOption","action","dockerImageNameTemplate","assert","writeDockerVersion","catch","logErrorAndExit","commandWithOpenOptions","url","options","open","codegenId","addHelpText","codegen","app","spawn","PWDEBUG","stdio","suggestedBrowsersToInstall","registry","executables","filter","installType","type","map","join","checkBrowsersToInstall","args","faultyArguments","arg","executable","findExecutable","push","length","Error","option","isLikelyNpxGlobal","console","error","wrapInASCIIBox","hasNoArguments","defaultExecutables","withDeps","installDeps","dryRun","_executable$directory","_executable$downloadU","browserVersion","log","directory","downloadURLs","fallbacks","forceReinstall","force","install","validateHostRequirementsForExecutablesIfNeeded","gracefullyProcessExitDoNotHang","PLAYWRIGHT_SKIP_BROWSER_GC","uninstall","all","then","numberOfBrowsersLeft","browsers","alias","browser","target","filename","screenshot","pdf","runDriver","runServer","port","undefined","host","path","maxConnections","maxClients","Infinity","extension","mode","PW_EXTENSION_MODE","printApiJson","requiredOption","launchBrowserServer","config","traces","openOptions","isServer","stdin","runTraceInBrowser","runTraceViewerApp","launchContext","headless","executablePath","validateOptions","browserType","lookupBrowserType","launchOptions","channel","handleSIGINT","contextOptions","device","devices","deviceScaleFactor","os","platform","hasTouch","isMobile","blockServiceWorkers","serviceWorkers","proxyServer","proxy","server","proxyBypass","bypass","launch","PWTEST_CLI_IS_UNDER_TEST","_didSetSourcesForTest","text","stdout","write","autoExitCondition","PWTEST_CLI_AUTO_EXIT_WHEN","includes","Promise","context","pages","p","close","logs","debug","line","format","stderr","on","hasCrashLine","some","viewportSize","width","height","split","parseInt","viewport","geolocation","latitude","longitude","parseFloat","trim","permissions","userAgent","lang","locale","colorScheme","timezone","timezoneId","loadStorage","storageState","ignoreHttpsErrors","ignoreHTTPSErrors","saveHar","recordHar","resolve","cwd","saveHarGlob","urlFilter","newContext","closingBrowser","closeBrowser","saveTrace","tracing","stop","saveStorage","page","hasPage","contexts","timeout","setDefaultTimeout","setDefaultNavigationTimeout","start","screenshots","snapshots","browserName","openPage","newPage","fs","existsSync","startsWith","goto","isTargetClosedError","language","PWTEST_CLI_HEADLESS","PWTEST_CLI_EXECUTABLE_PATH","_enableRecorder","output","outputFile","testIdAttribute","testIdAttributeName","dotenv","showRecorder","waitForPage","captureOptions","waitForSelector","waitForTimeout","fullPage","defaultBrowserType","chromium","webkit","firefox","help","lines","PWDEBUGIMPL","message","result","slice","cliTargetLang","packageManagerCommand","getPackageManagerExecCommand"],"sources":["../../src/cli/program.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-console */\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport type { Command } from '../utilsBundle';\nimport { program, dotenv } from '../utilsBundle';\nexport { program } from '../utilsBundle';\nimport { runDriver, runServer, printApiJson, launchBrowserServer } from './driver';\nimport { runTraceInBrowser, runTraceViewerApp } from '../server/trace/viewer/traceViewer';\nimport type { TraceViewerServerOptions } from '../server/trace/viewer/traceViewer';\nimport * as playwright from '../..';\nimport type { BrowserContext } from '../client/browserContext';\nimport type { Browser } from '../client/browser';\nimport type { Page } from '../client/page';\nimport type { BrowserType } from '../client/browserType';\nimport type { BrowserContextOptions, LaunchOptions } from '../client/types';\nimport { spawn } from 'child_process';\nimport { wrapInASCIIBox, isLikelyNpxGlobal, assert, gracefullyProcessExitDoNotHang, getPackageManagerExecCommand } from '../utils';\nimport type { Executable } from '../server';\nimport { registry, writeDockerVersion } from '../server';\nimport { isTargetClosedError } from '../client/errors';\n\nconst packageJSON = require('../../package.json');\n\nprogram\n    .version('Version ' + (process.env.PW_CLI_DISPLAY_VERSION || packageJSON.version))\n    .name(buildBasePlaywrightCLICommand(process.env.PW_LANG_NAME));\n\nprogram\n    .command('mark-docker-image [dockerImageNameTemplate]', { hidden: true })\n    .description('mark docker image')\n    .allowUnknownOption(true)\n    .action(function(dockerImageNameTemplate) {\n      assert(dockerImageNameTemplate, 'dockerImageNameTemplate is required');\n      writeDockerVersion(dockerImageNameTemplate).catch(logErrorAndExit);\n    });\n\ncommandWithOpenOptions('open [url]', 'open page in browser specified via -b, --browser', [])\n    .action(function(url, options) {\n      open(options, url, codegenId()).catch(logErrorAndExit);\n    })\n    .addHelpText('afterAll', `\nExamples:\n\n  $ open\n  $ open -b webkit https://example.com`);\n\ncommandWithOpenOptions('codegen [url]', 'open page and generate code for user actions',\n    [\n      ['-o, --output <file name>', 'saves the generated script to a file'],\n      ['--target <language>', `language to generate, one of javascript, playwright-test, python, python-async, python-pytest, csharp, csharp-mstest, csharp-nunit, java, java-junit`, codegenId()],\n      ['--save-trace <filename>', 'record a trace for the session and save it to a file'],\n      ['--test-id-attribute <attributeName>', 'use the specified attribute to generate data test ID selectors'],\n    ]).action(function(url, options) {\n  codegen(options, url).catch(logErrorAndExit);\n}).addHelpText('afterAll', `\nExamples:\n\n  $ codegen\n  $ codegen --target=python\n  $ codegen -b webkit https://example.com`);\n\nprogram\n    .command('debug <app> [args...]', { hidden: true })\n    .description('run command in debug mode: disable timeout, open inspector')\n    .allowUnknownOption(true)\n    .action(function(app, options) {\n      spawn(app, options, {\n        env: { ...process.env, PWDEBUG: '1' },\n        stdio: 'inherit'\n      });\n    }).addHelpText('afterAll', `\nExamples:\n\n  $ debug node test.js\n  $ debug npm run test`);\n\nfunction suggestedBrowsersToInstall() {\n  return registry.executables().filter(e => e.installType !== 'none' && e.type !== 'tool').map(e => e.name).join(', ');\n}\n\nfunction checkBrowsersToInstall(args: string[]): Executable[] {\n  const faultyArguments: string[] = [];\n  const executables: Executable[] = [];\n  for (const arg of args) {\n    const executable = registry.findExecutable(arg);\n    if (!executable || executable.installType === 'none')\n      faultyArguments.push(arg);\n    else\n      executables.push(executable);\n  }\n  if (faultyArguments.length)\n    throw new Error(`Invalid installation targets: ${faultyArguments.map(name => `'${name}'`).join(', ')}. Expecting one of: ${suggestedBrowsersToInstall()}`);\n  return executables;\n}\n\n\nprogram\n    .command('install [browser...]')\n    .description('ensure browsers necessary for this version of Playwright are installed')\n    .option('--with-deps', 'install system dependencies for browsers')\n    .option('--dry-run', 'do not execute installation, only print information')\n    .option('--force', 'force reinstall of stable browser channels')\n    .action(async function(args: string[], options: { withDeps?: boolean, force?: boolean, dryRun?: boolean }) {\n      if (isLikelyNpxGlobal()) {\n        console.error(wrapInASCIIBox([\n          `WARNING: It looks like you are running 'npx playwright install' without first`,\n          `installing your project's dependencies.`,\n          ``,\n          `To avoid unexpected behavior, please install your dependencies first, and`,\n          `then run Playwright's install command:`,\n          ``,\n          `    npm install`,\n          `    npx playwright install`,\n          ``,\n          `If your project does not yet depend on Playwright, first install the`,\n          `applicable npm package (most commonly @playwright/test), and`,\n          `then run Playwright's install command to download the browsers:`,\n          ``,\n          `    npm install @playwright/test`,\n          `    npx playwright install`,\n          ``,\n        ].join('\\n'), 1));\n      }\n      try {\n        const hasNoArguments = !args.length;\n        const executables = hasNoArguments ? registry.defaultExecutables() : checkBrowsersToInstall(args);\n        if (options.withDeps)\n          await registry.installDeps(executables, !!options.dryRun);\n        if (options.dryRun) {\n          for (const executable of executables) {\n            const version = executable.browserVersion ? `version ` + executable.browserVersion : '';\n            console.log(`browser: ${executable.name}${version ? ' ' + version : ''}`);\n            console.log(`  Install location:    ${executable.directory ?? '<system>'}`);\n            if (executable.downloadURLs?.length) {\n              const [url, ...fallbacks] = executable.downloadURLs;\n              console.log(`  Download url:        ${url}`);\n              for (let i = 0; i < fallbacks.length; ++i)\n                console.log(`  Download fallback ${i + 1}: ${fallbacks[i]}`);\n            }\n            console.log(``);\n          }\n        } else {\n          const forceReinstall = hasNoArguments ? false : !!options.force;\n          await registry.install(executables, forceReinstall);\n          await registry.validateHostRequirementsForExecutablesIfNeeded(executables, process.env.PW_LANG_NAME || 'javascript').catch((e: Error) => {\n            e.name = 'Playwright Host validation warning';\n            console.error(e);\n          });\n        }\n      } catch (e) {\n        console.log(`Failed to install browsers\\n${e}`);\n        gracefullyProcessExitDoNotHang(1);\n      }\n    }).addHelpText('afterAll', `\n\nExamples:\n  - $ install\n    Install default browsers.\n\n  - $ install chrome firefox\n    Install custom browsers, supports ${suggestedBrowsersToInstall()}.`);\n\nprogram\n    .command('uninstall')\n    .description('Removes browsers used by this installation of Playwright from the system (chromium, firefox, webkit, ffmpeg). This does not include branded channels.')\n    .option('--all', 'Removes all browsers used by any Playwright installation from the system.')\n    .action(async (options: { all?: boolean }) => {\n      delete process.env.PLAYWRIGHT_SKIP_BROWSER_GC;\n      await registry.uninstall(!!options.all).then(({ numberOfBrowsersLeft }) => {\n        if (!options.all && numberOfBrowsersLeft > 0) {\n          console.log('Successfully uninstalled Playwright browsers for the current Playwright installation.');\n          console.log(`There are still ${numberOfBrowsersLeft} browsers left, used by other Playwright installations.\\nTo uninstall Playwright browsers for all installations, re-run with --all flag.`);\n        }\n      }).catch(logErrorAndExit);\n    });\n\nprogram\n    .command('install-deps [browser...]')\n    .description('install dependencies necessary to run browsers (will ask for sudo permissions)')\n    .option('--dry-run', 'Do not execute installation commands, only print them')\n    .action(async function(args: string[], options: { dryRun?: boolean }) {\n      try {\n        if (!args.length)\n          await registry.installDeps(registry.defaultExecutables(), !!options.dryRun);\n        else\n          await registry.installDeps(checkBrowsersToInstall(args), !!options.dryRun);\n      } catch (e) {\n        console.log(`Failed to install browser dependencies\\n${e}`);\n        gracefullyProcessExitDoNotHang(1);\n      }\n    }).addHelpText('afterAll', `\nExamples:\n  - $ install-deps\n    Install dependencies for default browsers.\n\n  - $ install-deps chrome firefox\n    Install dependencies for specific browsers, supports ${suggestedBrowsersToInstall()}.`);\n\nconst browsers = [\n  { alias: 'cr', name: 'Chromium', type: 'chromium' },\n  { alias: 'ff', name: 'Firefox', type: 'firefox' },\n  { alias: 'wk', name: 'WebKit', type: 'webkit' },\n];\n\nfor (const { alias, name, type } of browsers) {\n  commandWithOpenOptions(`${alias} [url]`, `open page in ${name}`, [])\n      .action(function(url, options) {\n        open({ ...options, browser: type }, url, options.target).catch(logErrorAndExit);\n      }).addHelpText('afterAll', `\nExamples:\n\n  $ ${alias} https://example.com`);\n}\n\ncommandWithOpenOptions('screenshot <url> <filename>', 'capture a page screenshot',\n    [\n      ['--wait-for-selector <selector>', 'wait for selector before taking a screenshot'],\n      ['--wait-for-timeout <timeout>', 'wait for timeout in milliseconds before taking a screenshot'],\n      ['--full-page', 'whether to take a full page screenshot (entire scrollable area)'],\n    ]).action(function(url, filename, command) {\n  screenshot(command, command, url, filename).catch(logErrorAndExit);\n}).addHelpText('afterAll', `\nExamples:\n\n  $ screenshot -b webkit https://example.com example.png`);\n\ncommandWithOpenOptions('pdf <url> <filename>', 'save page as pdf',\n    [\n      ['--wait-for-selector <selector>', 'wait for given selector before saving as pdf'],\n      ['--wait-for-timeout <timeout>', 'wait for given timeout in milliseconds before saving as pdf'],\n    ]).action(function(url, filename, options) {\n  pdf(options, options, url, filename).catch(logErrorAndExit);\n}).addHelpText('afterAll', `\nExamples:\n\n  $ pdf https://example.com example.pdf`);\n\nprogram\n    .command('run-driver', { hidden: true })\n    .action(function(options) {\n      runDriver();\n    });\n\nprogram\n    .command('run-server', { hidden: true })\n    .option('--port <port>', 'Server port')\n    .option('--host <host>', 'Server host')\n    .option('--path <path>', 'Endpoint Path', '/')\n    .option('--max-clients <maxClients>', 'Maximum clients')\n    .option('--mode <mode>', 'Server mode, either \"default\" or \"extension\"')\n    .action(function(options) {\n      runServer({\n        port: options.port ? +options.port : undefined,\n        host: options.host,\n        path: options.path,\n        maxConnections: options.maxClients ? +options.maxClients : Infinity,\n        extension: options.mode === 'extension' || !!process.env.PW_EXTENSION_MODE,\n      }).catch(logErrorAndExit);\n    });\n\nprogram\n    .command('print-api-json', { hidden: true })\n    .action(function(options) {\n      printApiJson();\n    });\n\nprogram\n    .command('launch-server', { hidden: true })\n    .requiredOption('--browser <browserName>', 'Browser name, one of \"chromium\", \"firefox\" or \"webkit\"')\n    .option('--config <path-to-config-file>', 'JSON file with launchServer options')\n    .action(function(options) {\n      launchBrowserServer(options.browser, options.config);\n    });\n\nprogram\n    .command('show-trace [trace...]')\n    .option('-b, --browser <browserType>', 'browser to use, one of cr, chromium, ff, firefox, wk, webkit', 'chromium')\n    .option('-h, --host <host>', 'Host to serve trace on; specifying this option opens trace in a browser tab')\n    .option('-p, --port <port>', 'Port to serve trace on, 0 for any free port; specifying this option opens trace in a browser tab')\n    .option('--stdin', 'Accept trace URLs over stdin to update the viewer')\n    .description('show trace viewer')\n    .action(function(traces, options) {\n      if (options.browser === 'cr')\n        options.browser = 'chromium';\n      if (options.browser === 'ff')\n        options.browser = 'firefox';\n      if (options.browser === 'wk')\n        options.browser = 'webkit';\n\n      const openOptions: TraceViewerServerOptions = {\n        host: options.host,\n        port: +options.port,\n        isServer: !!options.stdin,\n      };\n\n      if (options.port !== undefined || options.host !== undefined)\n        runTraceInBrowser(traces, openOptions).catch(logErrorAndExit);\n      else\n        runTraceViewerApp(traces, options.browser, openOptions, true).catch(logErrorAndExit);\n    }).addHelpText('afterAll', `\nExamples:\n\n  $ show-trace https://example.com/trace.zip`);\n\ntype Options = {\n  browser: string;\n  channel?: string;\n  colorScheme?: string;\n  device?: string;\n  geolocation?: string;\n  ignoreHttpsErrors?: boolean;\n  lang?: string;\n  loadStorage?: string;\n  proxyServer?: string;\n  proxyBypass?: string;\n  blockServiceWorkers?: boolean;\n  saveHar?: string;\n  saveHarGlob?: string;\n  saveStorage?: string;\n  saveTrace?: string;\n  timeout: string;\n  timezone?: string;\n  viewportSize?: string;\n  userAgent?: string;\n};\n\ntype CaptureOptions = {\n  waitForSelector?: string;\n  waitForTimeout?: string;\n  fullPage: boolean;\n};\n\nasync function launchContext(options: Options, headless: boolean, executablePath?: string): Promise<{ browser: Browser, browserName: string, launchOptions: LaunchOptions, contextOptions: BrowserContextOptions, context: BrowserContext }> {\n  validateOptions(options);\n  const browserType = lookupBrowserType(options);\n  const launchOptions: LaunchOptions = { headless, executablePath };\n  if (options.channel)\n    launchOptions.channel = options.channel as any;\n  launchOptions.handleSIGINT = false;\n\n  const contextOptions: BrowserContextOptions =\n    // Copy the device descriptor since we have to compare and modify the options.\n    options.device ? { ...playwright.devices[options.device] } : {};\n\n  // In headful mode, use host device scale factor for things to look nice.\n  // In headless, keep things the way it works in Playwright by default.\n  // Assume high-dpi on MacOS. TODO: this is not perfect.\n  if (!headless)\n    contextOptions.deviceScaleFactor = os.platform() === 'darwin' ? 2 : 1;\n\n  // Work around the WebKit GTK scrolling issue.\n  if (browserType.name() === 'webkit' && process.platform === 'linux') {\n    delete contextOptions.hasTouch;\n    delete contextOptions.isMobile;\n  }\n\n  if (contextOptions.isMobile && browserType.name() === 'firefox')\n    contextOptions.isMobile = undefined;\n\n  if (options.blockServiceWorkers)\n    contextOptions.serviceWorkers = 'block';\n\n  // Proxy\n\n  if (options.proxyServer) {\n    launchOptions.proxy = {\n      server: options.proxyServer\n    };\n    if (options.proxyBypass)\n      launchOptions.proxy.bypass = options.proxyBypass;\n  }\n\n  const browser = await browserType.launch(launchOptions);\n\n  if (process.env.PWTEST_CLI_IS_UNDER_TEST) {\n    (process as any)._didSetSourcesForTest = (text: string) => {\n      process.stdout.write('\\n-------------8<-------------\\n');\n      process.stdout.write(text);\n      process.stdout.write('\\n-------------8<-------------\\n');\n      const autoExitCondition = process.env.PWTEST_CLI_AUTO_EXIT_WHEN;\n      if (autoExitCondition && text.includes(autoExitCondition))\n        Promise.all(context.pages().map(async p => p.close()));\n    };\n    // Make sure we exit abnormally when browser crashes.\n    const logs: string[] = [];\n    require('playwright-core/lib/utilsBundle').debug.log = (...args: any[]) => {\n      const line = require('util').format(...args) + '\\n';\n      logs.push(line);\n      process.stderr.write(line);\n    };\n    browser.on('disconnected', () => {\n      const hasCrashLine = logs.some(line => line.includes('process did exit:') && !line.includes('process did exit: exitCode=0, signal=null'));\n      if (hasCrashLine) {\n        process.stderr.write('Detected browser crash.\\n');\n        gracefullyProcessExitDoNotHang(1);\n      }\n    });\n  }\n\n  // Viewport size\n  if (options.viewportSize) {\n    try {\n      const [width, height] = options.viewportSize.split(',').map(n => parseInt(n, 10));\n      contextOptions.viewport = { width, height };\n    } catch (e) {\n      throw new Error('Invalid viewport size format: use \"width, height\", for example --viewport-size=800,600');\n    }\n  }\n\n  // Geolocation\n\n  if (options.geolocation) {\n    try {\n      const [latitude, longitude] = options.geolocation.split(',').map(n => parseFloat(n.trim()));\n      contextOptions.geolocation = {\n        latitude,\n        longitude\n      };\n    } catch (e) {\n      throw new Error('Invalid geolocation format, should be \"lat,long\". For example --geolocation=\"37.819722,-122.478611\"');\n    }\n    contextOptions.permissions = ['geolocation'];\n  }\n\n  // User agent\n\n  if (options.userAgent)\n    contextOptions.userAgent = options.userAgent;\n\n  // Lang\n\n  if (options.lang)\n    contextOptions.locale = options.lang;\n\n  // Color scheme\n\n  if (options.colorScheme)\n    contextOptions.colorScheme = options.colorScheme as 'dark' | 'light';\n\n  // Timezone\n\n  if (options.timezone)\n    contextOptions.timezoneId = options.timezone;\n\n  // Storage\n\n  if (options.loadStorage)\n    contextOptions.storageState = options.loadStorage;\n\n  if (options.ignoreHttpsErrors)\n    contextOptions.ignoreHTTPSErrors = true;\n\n  // HAR\n\n  if (options.saveHar) {\n    contextOptions.recordHar = { path: path.resolve(process.cwd(), options.saveHar), mode: 'minimal' };\n    if (options.saveHarGlob)\n      contextOptions.recordHar.urlFilter = options.saveHarGlob;\n    contextOptions.serviceWorkers = 'block';\n  }\n\n  // Close app when the last window closes.\n\n  const context = await browser.newContext(contextOptions);\n\n  let closingBrowser = false;\n  async function closeBrowser() {\n    // We can come here multiple times. For example, saving storage creates\n    // a temporary page and we call closeBrowser again when that page closes.\n    if (closingBrowser)\n      return;\n    closingBrowser = true;\n    if (options.saveTrace)\n      await context.tracing.stop({ path: options.saveTrace });\n    if (options.saveStorage)\n      await context.storageState({ path: options.saveStorage }).catch(e => null);\n    if (options.saveHar)\n      await context.close();\n    await browser.close();\n  }\n\n  context.on('page', page => {\n    page.on('dialog', () => {});  // Prevent dialogs from being automatically dismissed.\n    page.on('close', () => {\n      const hasPage = browser.contexts().some(context => context.pages().length > 0);\n      if (hasPage)\n        return;\n      // Avoid the error when the last page is closed because the browser has been closed.\n      closeBrowser().catch(e => null);\n    });\n  });\n  process.on('SIGINT', async () => {\n    await closeBrowser();\n    gracefullyProcessExitDoNotHang(130);\n  });\n\n  const timeout = options.timeout ? parseInt(options.timeout, 10) : 0;\n  context.setDefaultTimeout(timeout);\n  context.setDefaultNavigationTimeout(timeout);\n\n  if (options.saveTrace)\n    await context.tracing.start({ screenshots: true, snapshots: true });\n\n  // Omit options that we add automatically for presentation purpose.\n  delete launchOptions.headless;\n  delete launchOptions.executablePath;\n  delete launchOptions.handleSIGINT;\n  delete contextOptions.deviceScaleFactor;\n  return { browser, browserName: browserType.name(), context, contextOptions, launchOptions };\n}\n\nasync function openPage(context: BrowserContext, url: string | undefined): Promise<Page> {\n  const page = await context.newPage();\n  if (url) {\n    if (fs.existsSync(url))\n      url = 'file://' + path.resolve(url);\n    else if (!url.startsWith('http') && !url.startsWith('file://') && !url.startsWith('about:') && !url.startsWith('data:'))\n      url = 'http://' + url;\n    await page.goto(url).catch(error => {\n      if (process.env.PWTEST_CLI_AUTO_EXIT_WHEN && isTargetClosedError(error)) {\n        // Tests with PWTEST_CLI_AUTO_EXIT_WHEN might close page too fast, resulting\n        // in a stray navigation aborted error. We should ignore it.\n      } else {\n        throw error;\n      }\n    });\n  }\n  return page;\n}\n\nasync function open(options: Options, url: string | undefined, language: string) {\n  const { context, launchOptions, contextOptions } = await launchContext(options, !!process.env.PWTEST_CLI_HEADLESS, process.env.PWTEST_CLI_EXECUTABLE_PATH);\n  await context._enableRecorder({\n    language,\n    launchOptions,\n    contextOptions,\n    device: options.device,\n    saveStorage: options.saveStorage,\n  });\n  await openPage(context, url);\n}\n\nasync function codegen(options: Options & { target: string, output?: string, testIdAttribute?: string }, url: string | undefined) {\n  const { target: language, output: outputFile, testIdAttribute: testIdAttributeName } = options;\n  const { context, launchOptions, contextOptions } = await launchContext(options, !!process.env.PWTEST_CLI_HEADLESS, process.env.PWTEST_CLI_EXECUTABLE_PATH);\n  dotenv.config({ path: 'playwright.env' });\n  await context._enableRecorder({\n    language,\n    launchOptions,\n    contextOptions,\n    device: options.device,\n    saveStorage: options.saveStorage,\n    mode: 'recording',\n    testIdAttributeName,\n    outputFile: outputFile ? path.resolve(outputFile) : undefined,\n    showRecorder: true,\n  });\n  await openPage(context, url);\n}\n\nasync function waitForPage(page: Page, captureOptions: CaptureOptions) {\n  if (captureOptions.waitForSelector) {\n    console.log(`Waiting for selector ${captureOptions.waitForSelector}...`);\n    await page.waitForSelector(captureOptions.waitForSelector);\n  }\n  if (captureOptions.waitForTimeout) {\n    console.log(`Waiting for timeout ${captureOptions.waitForTimeout}...`);\n    await page.waitForTimeout(parseInt(captureOptions.waitForTimeout, 10));\n  }\n}\n\nasync function screenshot(options: Options, captureOptions: CaptureOptions, url: string, path: string) {\n  const { context } = await launchContext(options, true);\n  console.log('Navigating to ' + url);\n  const page = await openPage(context, url);\n  await waitForPage(page, captureOptions);\n  console.log('Capturing screenshot into ' + path);\n  await page.screenshot({ path, fullPage: !!captureOptions.fullPage });\n  // launchContext takes care of closing the browser.\n  await page.close();\n}\n\nasync function pdf(options: Options, captureOptions: CaptureOptions, url: string, path: string) {\n  if (options.browser !== 'chromium')\n    throw new Error('PDF creation is only working with Chromium');\n  const { context } = await launchContext({ ...options, browser: 'chromium' }, true);\n  console.log('Navigating to ' + url);\n  const page = await openPage(context, url);\n  await waitForPage(page, captureOptions);\n  console.log('Saving as pdf into ' + path);\n  await page.pdf!({ path });\n  // launchContext takes care of closing the browser.\n  await page.close();\n}\n\nfunction lookupBrowserType(options: Options): BrowserType {\n  let name = options.browser;\n  if (options.device) {\n    const device = playwright.devices[options.device];\n    name = device.defaultBrowserType;\n  }\n  let browserType: any;\n  switch (name) {\n    case 'chromium': browserType = playwright.chromium; break;\n    case 'webkit': browserType = playwright.webkit; break;\n    case 'firefox': browserType = playwright.firefox; break;\n    case 'cr': browserType = playwright.chromium; break;\n    case 'wk': browserType = playwright.webkit; break;\n    case 'ff': browserType = playwright.firefox; break;\n  }\n  if (browserType)\n    return browserType;\n  program.help();\n}\n\nfunction validateOptions(options: Options) {\n  if (options.device && !(options.device in playwright.devices)) {\n    const lines = [`Device descriptor not found: '${options.device}', available devices are:`];\n    for (const name in playwright.devices)\n      lines.push(`  \"${name}\"`);\n    throw new Error(lines.join('\\n'));\n  }\n  if (options.colorScheme && !['light', 'dark'].includes(options.colorScheme))\n    throw new Error('Invalid color scheme, should be one of \"light\", \"dark\"');\n}\n\nfunction logErrorAndExit(e: Error) {\n  if (process.env.PWDEBUGIMPL)\n    console.error(e);\n  else\n    console.error(e.name + ': ' + e.message);\n  gracefullyProcessExitDoNotHang(1);\n}\n\nfunction codegenId(): string {\n  return process.env.PW_LANG_NAME || 'playwright-test';\n}\n\nfunction commandWithOpenOptions(command: string, description: string, options: any[][]): Command {\n  let result = program.command(command).description(description);\n  for (const option of options)\n    result = result.option(option[0], ...option.slice(1));\n  return result\n      .option('-b, --browser <browserType>', 'browser to use, one of cr, chromium, ff, firefox, wk, webkit', 'chromium')\n      .option('--block-service-workers', 'block service workers')\n      .option('--channel <channel>', 'Chromium distribution channel, \"chrome\", \"chrome-beta\", \"msedge-dev\", etc')\n      .option('--color-scheme <scheme>', 'emulate preferred color scheme, \"light\" or \"dark\"')\n      .option('--device <deviceName>', 'emulate device, for example  \"iPhone 11\"')\n      .option('--geolocation <coordinates>', 'specify geolocation coordinates, for example \"37.819722,-122.478611\"')\n      .option('--ignore-https-errors', 'ignore https errors')\n      .option('--load-storage <filename>', 'load context storage state from the file, previously saved with --save-storage')\n      .option('--lang <language>', 'specify language / locale, for example \"en-GB\"')\n      .option('--proxy-server <proxy>', 'specify proxy server, for example \"http://myproxy:3128\" or \"socks5://myproxy:8080\"')\n      .option('--proxy-bypass <bypass>', 'comma-separated domains to bypass proxy, for example \".com,chromium.org,.domain.com\"')\n      .option('--save-har <filename>', 'save HAR file with all network activity at the end')\n      .option('--save-har-glob <glob pattern>', 'filter entries in the HAR by matching url against this glob pattern')\n      .option('--save-storage <filename>', 'save context storage state at the end, for later use with --load-storage')\n      .option('--timezone <time zone>', 'time zone to emulate, for example \"Europe/Rome\"')\n      .option('--timeout <timeout>', 'timeout for Playwright actions in milliseconds, no timeout by default')\n      .option('--user-agent <ua string>', 'specify user agent string')\n      .option('--viewport-size <size>', 'specify browser viewport size in pixels, for example \"1280, 720\"');\n}\n\nfunction buildBasePlaywrightCLICommand(cliTargetLang: string | undefined): string {\n  switch (cliTargetLang) {\n    case 'python':\n      return `playwright`;\n    case 'java':\n      return `mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args=\"...options..\"`;\n    case 'csharp':\n      return `pwsh bin/Debug/netX/playwright.ps1`;\n    default: {\n      const packageManagerCommand = getPackageManagerExecCommand();\n      return `${packageManagerCommand} playwright`;\n    }\n  }\n}\n"],"mappings":"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"}