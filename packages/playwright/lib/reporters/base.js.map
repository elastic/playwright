{"version":3,"file":"base.js","names":["_utilsBundle","require","_path","_interopRequireDefault","_utils","_util","obj","__esModule","default","kOutputSymbol","exports","Symbol","isTTY","ttyWidth","colors","process","stdout","columns","env","PLAYWRIGHT_FORCE_TTY","isNaN","useColors","DEBUG_COLORS","FORCE_COLOR","realColors","bold","t","cyan","dim","gray","green","red","yellow","enabled","BaseReporter","constructor","options","config","suite","totalTestCount","result","fileDurations","Map","_omitFailures","_fatalErrors","_failureCount","omitFailures","version","onConfigure","onBegin","allTests","length","onStdOut","chunk","test","_appendOutput","type","onStdErr","output","push","onTestBegin","onTestEnd","status","expectedStatus","projectName","titlePath","relativePath","relativeTestPath","fileAndProject","entry","get","duration","workers","Set","add","workerIndex","set","onError","error","onEnd","onStepBegin","step","onStepEnd","onExit","printsToStdio","fitToScreen","line","prefix","fitToWidth","generateStartingMessage","_this$config$metadata","jobs","metadata","actualWorkers","shardDetails","shard","current","total","getSlowTests","reportSlowTests","entries","filter","key","value","size","map","sort","a","b","count","Math","min","max","Number","POSITIVE_INFINITY","threshold","slice","generateSummaryMessage","didNotRun","skipped","expected","interrupted","unexpected","flaky","fatalErrors","tokens","formatTestHeader","indent","milliseconds","join","generateSummary","interruptedToPrint","forEach","outcome","results","some","failuresToPrint","epilogue","full","summary","summaryMessage","_printFailures","_printSlowTests","_printSummary","failures","console","log","index","formatFailure","message","slowTests","file","trim","willRetry","retries","includeStdio","includeAttachments","lines","title","formatTestTitle","annotations","header","mode","resultLines","errors","formatResultFailure","retryLines","retry","separator","i","attachments","attachment","hasPrintableContent","contentType","startsWith","path","name","relative","cwd","packageManagerCommand","getPackageManagerExecCommand","quotePathIfNeeded","body","text","toString","split","outputText","stripAnsiEscapes","location","initialIndent","highlightCode","errorDetails","formattedError","formatError","relativeFilePath","rootDir","basename","stepSuffix","stepTitles","omitLocation","_step$location$line","_step$location","_step$location$column","_step$location2","titles","column","projectTitle","fullHeader","stepPaths","r","stepPath","visit","steps","s","category","values","next","stack","parsedStack","prepareErrorStack","undefined","snippet","stackLines","repeat","tab","replace","firstStackLine","findIndex","frame","parseStackTraceLine","belongsToNodeModules","ansiRegex","RegExp","str","width","prefixLength","parts","taken","part","substring","reverse","includes","sep","resolveFromEnv","resolve","resolveOutputFile","reporterName","toUpperCase","outputFile","configDir","outputDir","resolveReporterOutputPath","_ref","_options$fileName","_options$default","_outputDir","reportName","fileName"],"sources":["../../src/reporters/base.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { colors as realColors, ms as milliseconds, parseStackTraceLine } from 'playwright-core/lib/utilsBundle';\nimport path from 'path';\nimport type { FullConfig, TestCase, Suite, TestResult, TestError, FullResult, TestStep, Location } from '../../types/testReporter';\nimport { getPackageManagerExecCommand } from 'playwright-core/lib/utils';\nimport type { ReporterV2 } from './reporterV2';\nimport { resolveReporterOutputPath } from '../util';\nexport type TestResultOutput = { chunk: string | Buffer, type: 'stdout' | 'stderr' };\nexport const kOutputSymbol = Symbol('output');\n\ntype Annotation = {\n  title: string;\n  message: string;\n  location?: Location;\n};\n\ntype ErrorDetails = {\n  message: string;\n  location?: Location;\n};\n\ntype TestSummary = {\n  didNotRun: number;\n  skipped: number;\n  expected: number;\n  interrupted: TestCase[];\n  unexpected: TestCase[];\n  flaky: TestCase[];\n  failuresToPrint: TestCase[];\n  fatalErrors: TestError[];\n};\n\nexport const { isTTY, ttyWidth, colors } = (() => {\n  let isTTY = !!process.stdout.isTTY;\n  let ttyWidth = process.stdout.columns || 0;\n  if (process.env.PLAYWRIGHT_FORCE_TTY === 'false' || process.env.PLAYWRIGHT_FORCE_TTY === '0') {\n    isTTY = false;\n    ttyWidth = 0;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY === 'true' || process.env.PLAYWRIGHT_FORCE_TTY === '1') {\n    isTTY = true;\n    ttyWidth = process.stdout.columns || 100;\n  } else if (process.env.PLAYWRIGHT_FORCE_TTY) {\n    isTTY = true;\n    ttyWidth = +process.env.PLAYWRIGHT_FORCE_TTY;\n    if (isNaN(ttyWidth))\n      ttyWidth = 100;\n  }\n\n  let useColors = isTTY;\n  if (process.env.DEBUG_COLORS === '0' || process.env.DEBUG_COLORS === 'false' ||\n      process.env.FORCE_COLOR === '0' || process.env.FORCE_COLOR === 'false')\n    useColors = false;\n  else if (process.env.DEBUG_COLORS || process.env.FORCE_COLOR)\n    useColors = true;\n\n  const colors = useColors ? realColors : {\n    bold: (t: string) => t,\n    cyan: (t: string) => t,\n    dim: (t: string) => t,\n    gray: (t: string) => t,\n    green: (t: string) => t,\n    red: (t: string) => t,\n    yellow: (t: string) => t,\n    enabled: false,\n  };\n  return { isTTY, ttyWidth, colors };\n})();\n\nexport class BaseReporter implements ReporterV2 {\n  config!: FullConfig;\n  suite!: Suite;\n  totalTestCount = 0;\n  result!: FullResult;\n  private fileDurations = new Map<string, { duration: number, workers: Set<number> }>();\n  private _omitFailures: boolean;\n  private _fatalErrors: TestError[] = [];\n  private _failureCount: number = 0;\n\n  constructor(options: { omitFailures?: boolean } = {}) {\n    this._omitFailures = options.omitFailures || false;\n  }\n\n  version(): 'v2' {\n    return 'v2';\n  }\n\n  onConfigure(config: FullConfig) {\n    this.config = config;\n  }\n\n  onBegin(suite: Suite) {\n    this.suite = suite;\n    this.totalTestCount = suite.allTests().length;\n  }\n\n  onStdOut(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    this._appendOutput({ chunk, type: 'stdout' }, result);\n  }\n\n  onStdErr(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    this._appendOutput({ chunk, type: 'stderr' }, result);\n  }\n\n  private _appendOutput(output: TestResultOutput, result: TestResult | undefined) {\n    if (!result)\n      return;\n    (result as any)[kOutputSymbol] = (result as any)[kOutputSymbol] || [];\n    (result as any)[kOutputSymbol].push(output);\n  }\n\n  onTestBegin(test: TestCase, result: TestResult): void {\n  }\n\n  onTestEnd(test: TestCase, result: TestResult) {\n    if (result.status !== 'skipped' && result.status !== test.expectedStatus)\n      ++this._failureCount;\n    const projectName = test.titlePath()[1];\n    const relativePath = relativeTestPath(this.config, test);\n    const fileAndProject = (projectName ? `[${projectName}] â€º ` : '') + relativePath;\n    const entry = this.fileDurations.get(fileAndProject) || { duration: 0, workers: new Set() };\n    entry.duration += result.duration;\n    entry.workers.add(result.workerIndex);\n    this.fileDurations.set(fileAndProject, entry);\n  }\n\n  onError(error: TestError) {\n    this._fatalErrors.push(error);\n  }\n\n  async onEnd(result: FullResult) {\n    this.result = result;\n  }\n\n  onStepBegin(test: TestCase, result: TestResult, step: TestStep): void {\n  }\n\n  onStepEnd(test: TestCase, result: TestResult, step: TestStep): void {\n  }\n\n  async onExit() {\n  }\n\n  printsToStdio() {\n    return true;\n  }\n\n  protected fitToScreen(line: string, prefix?: string): string {\n    if (!ttyWidth) {\n      // Guard against the case where we cannot determine available width.\n      return line;\n    }\n    return fitToWidth(line, ttyWidth, prefix);\n  }\n\n  protected generateStartingMessage() {\n    const jobs = this.config.metadata.actualWorkers ?? this.config.workers;\n    const shardDetails = this.config.shard ? `, shard ${this.config.shard.current} of ${this.config.shard.total}` : '';\n    if (!this.totalTestCount)\n      return '';\n    return '\\n' + colors.dim('Running ') + this.totalTestCount + colors.dim(` test${this.totalTestCount !== 1 ? 's' : ''} using `) + jobs + colors.dim(` worker${jobs !== 1 ? 's' : ''}${shardDetails}`);\n  }\n\n  protected getSlowTests(): [string, number][] {\n    if (!this.config.reportSlowTests)\n      return [];\n    // Only pick durations that were served by single worker.\n    const fileDurations = [...this.fileDurations.entries()].filter(([key, value]) => value.workers.size === 1).map(([key, value]) => [key, value.duration]) as [string, number][];\n    fileDurations.sort((a, b) => b[1] - a[1]);\n    const count = Math.min(fileDurations.length, this.config.reportSlowTests.max || Number.POSITIVE_INFINITY);\n    const threshold =  this.config.reportSlowTests.threshold;\n    return fileDurations.filter(([, duration]) => duration > threshold).slice(0, count);\n  }\n\n  protected generateSummaryMessage({ didNotRun, skipped, expected, interrupted, unexpected, flaky, fatalErrors }: TestSummary) {\n    const tokens: string[] = [];\n    if (unexpected.length) {\n      tokens.push(colors.red(`  ${unexpected.length} failed`));\n      for (const test of unexpected)\n        tokens.push(colors.red(formatTestHeader(this.config, test, { indent: '    ' })));\n    }\n    if (interrupted.length) {\n      tokens.push(colors.yellow(`  ${interrupted.length} interrupted`));\n      for (const test of interrupted)\n        tokens.push(colors.yellow(formatTestHeader(this.config, test, { indent: '    ' })));\n    }\n    if (flaky.length) {\n      tokens.push(colors.yellow(`  ${flaky.length} flaky`));\n      for (const test of flaky)\n        tokens.push(colors.yellow(formatTestHeader(this.config, test, { indent: '    ' })));\n    }\n    if (skipped)\n      tokens.push(colors.yellow(`  ${skipped} skipped`));\n    if (didNotRun)\n      tokens.push(colors.yellow(`  ${didNotRun} did not run`));\n    if (expected)\n      tokens.push(colors.green(`  ${expected} passed`) + colors.dim(` (${milliseconds(this.result.duration)})`));\n    if (fatalErrors.length && expected + unexpected.length + interrupted.length + flaky.length > 0)\n      tokens.push(colors.red(`  ${fatalErrors.length === 1 ? '1 error was not a part of any test' : fatalErrors.length + ' errors were not a part of any test'}, see above for details`));\n\n    return tokens.join('\\n');\n  }\n\n  protected generateSummary(): TestSummary {\n    let didNotRun = 0;\n    let skipped = 0;\n    let expected = 0;\n    const interrupted: TestCase[] = [];\n    const interruptedToPrint: TestCase[] = [];\n    const unexpected: TestCase[] = [];\n    const flaky: TestCase[] = [];\n\n    this.suite.allTests().forEach(test => {\n      switch (test.outcome()) {\n        case 'skipped': {\n          if (test.results.some(result => result.status === 'interrupted')) {\n            if (test.results.some(result => !!result.error))\n              interruptedToPrint.push(test);\n            interrupted.push(test);\n          } else if (!test.results.length || test.expectedStatus !== 'skipped') {\n            ++didNotRun;\n          } else {\n            ++skipped;\n          }\n          break;\n        }\n        case 'expected': ++expected; break;\n        case 'unexpected': unexpected.push(test); break;\n        case 'flaky': flaky.push(test); break;\n      }\n    });\n\n    const failuresToPrint = [...unexpected, ...flaky, ...interruptedToPrint];\n    return {\n      didNotRun,\n      skipped,\n      expected,\n      interrupted,\n      unexpected,\n      flaky,\n      failuresToPrint,\n      fatalErrors: this._fatalErrors,\n    };\n  }\n\n  epilogue(full: boolean) {\n    const summary = this.generateSummary();\n    const summaryMessage = this.generateSummaryMessage(summary);\n    if (full && summary.failuresToPrint.length && !this._omitFailures)\n      this._printFailures(summary.failuresToPrint);\n    this._printSlowTests();\n    this._printSummary(summaryMessage);\n  }\n\n  private _printFailures(failures: TestCase[]) {\n    console.log('');\n    failures.forEach((test, index) => {\n      console.log(formatFailure(this.config, test, {\n        index: index + 1,\n      }).message);\n    });\n  }\n\n  private _printSlowTests() {\n    const slowTests = this.getSlowTests();\n    slowTests.forEach(([file, duration]) => {\n      console.log(colors.yellow('  Slow test file: ') + file + colors.yellow(` (${milliseconds(duration)})`));\n    });\n    if (slowTests.length)\n      console.log(colors.yellow('  Consider splitting slow test files to speed up parallel execution'));\n  }\n\n  private _printSummary(summary: string) {\n    if (summary.trim())\n      console.log(summary);\n  }\n\n  willRetry(test: TestCase): boolean {\n    return test.outcome() === 'unexpected' && test.results.length <= test.retries;\n  }\n}\n\nexport function formatFailure(config: FullConfig, test: TestCase, options: {index?: number, includeStdio?: boolean, includeAttachments?: boolean} = {}): {\n  message: string,\n  annotations: Annotation[]\n} {\n  const { index, includeStdio, includeAttachments = true } = options;\n  const lines: string[] = [];\n  const title = formatTestTitle(config, test);\n  const annotations: Annotation[] = [];\n  const header = formatTestHeader(config, test, { indent: '  ', index, mode: 'error' });\n  lines.push(colors.red(header));\n  for (const result of test.results) {\n    const resultLines: string[] = [];\n    const errors = formatResultFailure(test, result, '    ', colors.enabled);\n    if (!errors.length)\n      continue;\n    const retryLines = [];\n    if (result.retry) {\n      retryLines.push('');\n      retryLines.push(colors.gray(separator(`    Retry #${result.retry}`)));\n    }\n    resultLines.push(...retryLines);\n    resultLines.push(...errors.map(error => '\\n' + error.message));\n    if (includeAttachments) {\n      for (let i = 0; i < result.attachments.length; ++i) {\n        const attachment = result.attachments[i];\n        const hasPrintableContent = attachment.contentType.startsWith('text/');\n        if (!attachment.path && !hasPrintableContent)\n          continue;\n        resultLines.push('');\n        resultLines.push(colors.cyan(separator(`    attachment #${i + 1}: ${attachment.name} (${attachment.contentType})`)));\n        if (attachment.path) {\n          const relativePath = path.relative(process.cwd(), attachment.path);\n          resultLines.push(colors.cyan(`    ${relativePath}`));\n          // Make this extensible\n          if (attachment.name === 'trace') {\n            const packageManagerCommand = getPackageManagerExecCommand();\n            resultLines.push(colors.cyan(`    Usage:`));\n            resultLines.push('');\n            resultLines.push(colors.cyan(`        ${packageManagerCommand} playwright show-trace ${quotePathIfNeeded(relativePath)}`));\n            resultLines.push('');\n          }\n        } else {\n          if (attachment.contentType.startsWith('text/') && attachment.body) {\n            let text = attachment.body.toString();\n            if (text.length > 300)\n              text = text.slice(0, 300) + '...';\n            for (const line of text.split('\\n'))\n              resultLines.push(colors.cyan(`    ${line}`));\n          }\n        }\n        resultLines.push(colors.cyan(separator('   ')));\n      }\n    }\n    const output = ((result as any)[kOutputSymbol] || []) as TestResultOutput[];\n    if (includeStdio && output.length) {\n      const outputText = output.map(({ chunk, type }) => {\n        const text = chunk.toString('utf8');\n        if (type === 'stderr')\n          return colors.red(stripAnsiEscapes(text));\n        return text;\n      }).join('');\n      resultLines.push('');\n      resultLines.push(colors.gray(separator('--- Test output')) + '\\n\\n' + outputText + '\\n' + separator());\n    }\n    for (const error of errors) {\n      annotations.push({\n        location: error.location,\n        title,\n        message: [header, ...retryLines, error.message].join('\\n'),\n      });\n    }\n    lines.push(...resultLines);\n  }\n  lines.push('');\n  return {\n    message: lines.join('\\n'),\n    annotations\n  };\n}\n\nfunction quotePathIfNeeded(path: string): string {\n  if (/\\s/.test(path))\n    return `\"${path}\"`;\n  return path;\n}\n\nexport function formatResultFailure(test: TestCase, result: TestResult, initialIndent: string, highlightCode: boolean): ErrorDetails[] {\n  const errorDetails: ErrorDetails[] = [];\n\n  if (result.status === 'passed' && test.expectedStatus === 'failed') {\n    errorDetails.push({\n      message: indent(colors.red(`Expected to fail, but passed.`), initialIndent),\n    });\n  }\n  if (result.status === 'interrupted') {\n    errorDetails.push({\n      message: indent(colors.red(`Test was interrupted.`), initialIndent),\n    });\n  }\n\n  for (const error of result.errors) {\n    const formattedError = formatError(error, highlightCode);\n    errorDetails.push({\n      message: indent(formattedError.message, initialIndent),\n      location: formattedError.location,\n    });\n  }\n  return errorDetails;\n}\n\nexport function relativeFilePath(config: FullConfig, file: string): string {\n  return path.relative(config.rootDir, file) || path.basename(file);\n}\n\nfunction relativeTestPath(config: FullConfig, test: TestCase): string {\n  return relativeFilePath(config, test.location.file);\n}\n\nexport function stepSuffix(step: TestStep | undefined) {\n  const stepTitles = step ? step.titlePath() : [];\n  return stepTitles.map(t => t.split('\\n')[0]).map(t => ' â€º ' + t).join('');\n}\n\nexport function formatTestTitle(config: FullConfig, test: TestCase, step?: TestStep, omitLocation: boolean = false): string {\n  // root, project, file, ...describes, test\n  const [, projectName, , ...titles] = test.titlePath();\n  let location;\n  if (omitLocation)\n    location = `${relativeTestPath(config, test)}`;\n  else\n    location = `${relativeTestPath(config, test)}:${step?.location?.line ?? test.location.line}:${step?.location?.column ?? test.location.column}`;\n  const projectTitle = projectName ? `[${projectName}] â€º ` : '';\n  return `${projectTitle}${location} â€º ${titles.join(' â€º ')}${stepSuffix(step)}`;\n}\n\nfunction formatTestHeader(config: FullConfig, test: TestCase, options: { indent?: string, index?: number, mode?: 'default' | 'error' } = {}): string {\n  const title = formatTestTitle(config, test);\n  const header = `${options.indent || ''}${options.index ? options.index + ') ' : ''}${title}`;\n  let fullHeader = header;\n\n  // Render the path to the deepest failing test.step.\n  if (options.mode === 'error') {\n    const stepPaths = new Set<string>();\n    for (const result of test.results.filter(r => !!r.errors.length)) {\n      const stepPath: string[] = [];\n      const visit = (steps: TestStep[]) => {\n        const errors = steps.filter(s => s.error);\n        if (errors.length > 1)\n          return;\n        if (errors.length === 1 && errors[0].category === 'test.step') {\n          stepPath.push(errors[0].title);\n          visit(errors[0].steps);\n        }\n      };\n      visit(result.steps);\n      stepPaths.add(['', ...stepPath].join(' â€º '));\n    }\n    fullHeader = header + (stepPaths.size === 1 ? stepPaths.values().next().value : '');\n  }\n  return separator(fullHeader);\n}\n\nexport function formatError(error: TestError, highlightCode: boolean): ErrorDetails {\n  const message = error.message || error.value || '';\n  const stack = error.stack;\n  if (!stack && !error.location)\n    return { message };\n\n  const tokens = [];\n\n  // Now that we filter out internals from our stack traces, we can safely render\n  // the helper / original exception locations.\n  const parsedStack = stack ? prepareErrorStack(stack) : undefined;\n  tokens.push(parsedStack?.message || message);\n\n  if (error.snippet) {\n    let snippet = error.snippet;\n    if (!highlightCode)\n      snippet = stripAnsiEscapes(snippet);\n    tokens.push('');\n    tokens.push(snippet);\n  }\n\n  if (parsedStack && parsedStack.stackLines.length) {\n    tokens.push('');\n    tokens.push(colors.dim(parsedStack.stackLines.join('\\n')));\n  }\n\n  let location = error.location;\n  if (parsedStack && !location)\n    location = parsedStack.location;\n\n  return {\n    location,\n    message: tokens.join('\\n'),\n  };\n}\n\nexport function separator(text: string = ''): string {\n  if (text)\n    text += ' ';\n  const columns = Math.min(100, ttyWidth || 100);\n  return text + colors.dim('â”€'.repeat(Math.max(0, columns - text.length)));\n}\n\nfunction indent(lines: string, tab: string) {\n  return lines.replace(/^(?=.+$)/gm, tab);\n}\n\nexport function prepareErrorStack(stack: string): {\n  message: string;\n  stackLines: string[];\n  location?: Location;\n} {\n  const lines = stack.split('\\n');\n  let firstStackLine = lines.findIndex(line => line.startsWith('    at '));\n  if (firstStackLine === -1)\n    firstStackLine = lines.length;\n  const message = lines.slice(0, firstStackLine).join('\\n');\n  const stackLines = lines.slice(firstStackLine);\n  let location: Location | undefined;\n  for (const line of stackLines) {\n    const frame = parseStackTraceLine(line);\n    if (!frame || !frame.file)\n      continue;\n    if (belongsToNodeModules(frame.file))\n      continue;\n    location = { file: frame.file, column: frame.column || 0, line: frame.line || 0 };\n    break;\n  }\n  return { message, stackLines, location };\n}\n\nconst ansiRegex = new RegExp('([\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~])))', 'g');\nexport function stripAnsiEscapes(str: string): string {\n  return str.replace(ansiRegex, '');\n}\n\n// Leaves enough space for the \"prefix\" to also fit.\nfunction fitToWidth(line: string, width: number, prefix?: string): string {\n  const prefixLength = prefix ? stripAnsiEscapes(prefix).length : 0;\n  width -= prefixLength;\n  if (line.length <= width)\n    return line;\n\n  // Even items are plain text, odd items are control sequences.\n  const parts = line.split(ansiRegex);\n  const taken: string[] = [];\n  for (let i = parts.length - 1; i >= 0; i--) {\n    if (i % 2) {\n      // Include all control sequences to preserve formatting.\n      taken.push(parts[i]);\n    } else {\n      let part = parts[i].substring(parts[i].length - width);\n      if (part.length < parts[i].length && part.length > 0) {\n        // Add ellipsis if we are truncating.\n        part = '\\u2026' + part.substring(1);\n      }\n      taken.push(part);\n      width -= part.length;\n    }\n  }\n  return taken.reverse().join('');\n}\n\nfunction belongsToNodeModules(file: string) {\n  return file.includes(`${path.sep}node_modules${path.sep}`);\n}\n\nfunction resolveFromEnv(name: string): string | undefined {\n  const value = process.env[name];\n  if (value)\n    return path.resolve(process.cwd(), value);\n  return undefined;\n}\n\n// In addition to `outputFile` the function returns `outputDir` which should\n// be cleaned up if present by some reporters contract.\nexport function resolveOutputFile(reporterName: string, options: {\n    configDir: string,\n    outputDir?: string,\n    fileName?: string,\n    outputFile?: string,\n    default?: {\n      fileName: string,\n      outputDir: string,\n    }\n  }):  { outputFile: string, outputDir?: string } |undefined {\n  const name = reporterName.toUpperCase();\n  let outputFile;\n  if (options.outputFile)\n    outputFile = path.resolve(options.configDir, options.outputFile);\n  if (!outputFile)\n    outputFile = resolveFromEnv(`PLAYWRIGHT_${name}_OUTPUT_FILE`);\n  // Return early to avoid deleting outputDir.\n  if (outputFile)\n    return { outputFile };\n\n  let outputDir;\n  if (options.outputDir)\n    outputDir = path.resolve(options.configDir, options.outputDir);\n  if (!outputDir)\n    outputDir = resolveFromEnv(`PLAYWRIGHT_${name}_OUTPUT_DIR`);\n  if (!outputDir && options.default)\n    outputDir = resolveReporterOutputPath(options.default.outputDir, options.configDir, undefined);\n\n  if (!outputFile) {\n    const reportName = options.fileName ?? process.env[`PLAYWRIGHT_${name}_OUTPUT_NAME`] ?? options.default?.fileName;\n    if (!reportName)\n      return undefined;\n    outputFile = path.resolve(outputDir ?? process.cwd(), reportName);\n  }\n  return { outputFile, outputDir };\n}\n"],"mappings":"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"}