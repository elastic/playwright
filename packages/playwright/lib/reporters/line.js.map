{"version":3,"file":"line.js","names":["_base","require","LineReporter","BaseReporter","constructor","args","_current","_failures","_lastTest","_didBegin","printsToStdio","onBegin","suite","startingMessage","generateStartingMessage","console","log","onStdOut","chunk","test","result","_dumpToStdio","process","stdout","onStdErr","stderr","stream","config","quiet","env","PW_TEST_DEBUG_REPORTERS","write","title","colors","dim","formatTestTitle","fitToScreen","length","onTestBegin","_updateLine","undefined","onStepBegin","step","category","onStepEnd","parent","onTestEnd","willRetry","outcome","status","formatFailure","index","message","retriesPrefix","totalTestCount","prefix","currentRetrySuffix","retry","yellow","onError","error","formatError","enabled","onEnd","epilogue","_default","exports","default"],"sources":["../../src/reporters/line.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { colors, BaseReporter, formatError, formatFailure, formatTestTitle } from './base';\nimport type { TestCase, Suite, TestResult, FullResult, TestStep, TestError } from '../../types/testReporter';\n\nclass LineReporter extends BaseReporter {\n  private _current = 0;\n  private _failures = 0;\n  private _lastTest: TestCase | undefined;\n  private _didBegin = false;\n\n  override printsToStdio() {\n    return true;\n  }\n\n  override onBegin(suite: Suite) {\n    super.onBegin(suite);\n    const startingMessage = this.generateStartingMessage();\n    if (startingMessage) {\n      console.log(startingMessage);\n      console.log();\n    }\n    this._didBegin = true;\n  }\n\n  override onStdOut(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    super.onStdOut(chunk, test, result);\n    this._dumpToStdio(test, chunk, process.stdout);\n  }\n\n  override onStdErr(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    super.onStdErr(chunk, test, result);\n    this._dumpToStdio(test, chunk, process.stderr);\n  }\n\n  private _dumpToStdio(test: TestCase | undefined, chunk: string | Buffer, stream: NodeJS.WriteStream) {\n    if (this.config.quiet)\n      return;\n    if (!process.env.PW_TEST_DEBUG_REPORTERS)\n      stream.write(`\\u001B[1A\\u001B[2K`);\n    if (test && this._lastTest !== test) {\n      // Write new header for the output.\n      const title = colors.dim(formatTestTitle(this.config, test));\n      stream.write(this.fitToScreen(title) + `\\n`);\n      this._lastTest = test;\n    }\n\n    stream.write(chunk);\n    if (chunk[chunk.length - 1] !== '\\n')\n      console.log();\n\n    console.log();\n  }\n\n  override onTestBegin(test: TestCase, result: TestResult) {\n    super.onTestBegin(test, result);\n    ++this._current;\n    this._updateLine(test, result, undefined);\n  }\n\n  override onStepBegin(test: TestCase, result: TestResult, step: TestStep) {\n    super.onStepBegin(test, result, step);\n    if (step.category === 'test.step')\n      this._updateLine(test, result, step);\n  }\n\n  override onStepEnd(test: TestCase, result: TestResult, step: TestStep) {\n    super.onStepEnd(test, result, step);\n    if (step.category === 'test.step')\n      this._updateLine(test, result, step.parent);\n  }\n\n  override onTestEnd(test: TestCase, result: TestResult) {\n    super.onTestEnd(test, result);\n    if (!this.willRetry(test) && (test.outcome() === 'flaky' || test.outcome() === 'unexpected' || result.status === 'interrupted')) {\n      if (!process.env.PW_TEST_DEBUG_REPORTERS)\n        process.stdout.write(`\\u001B[1A\\u001B[2K`);\n      console.log(formatFailure(this.config, test, {\n        index: ++this._failures\n      }).message);\n      console.log();\n    }\n  }\n\n  private _updateLine(test: TestCase, result: TestResult, step?: TestStep) {\n    const retriesPrefix = this.totalTestCount < this._current ? ` (retries)` : ``;\n    const prefix = `[${this._current}/${this.totalTestCount}]${retriesPrefix} `;\n    const currentRetrySuffix = result.retry ? colors.yellow(` (retry #${result.retry})`) : '';\n    const title = formatTestTitle(this.config, test, step) + currentRetrySuffix;\n    if (process.env.PW_TEST_DEBUG_REPORTERS)\n      process.stdout.write(`${prefix + title}\\n`);\n    else\n      process.stdout.write(`\\u001B[1A\\u001B[2K${prefix + this.fitToScreen(title, prefix)}\\n`);\n  }\n\n  override onError(error: TestError): void {\n    super.onError(error);\n\n    const message = formatError(error, colors.enabled).message + '\\n';\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin)\n      process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    process.stdout.write(message);\n    console.log();\n  }\n\n  override async onEnd(result: FullResult) {\n    if (!process.env.PW_TEST_DEBUG_REPORTERS && this._didBegin)\n      process.stdout.write(`\\u001B[1A\\u001B[2K`);\n    await super.onEnd(result);\n    this.epilogue(false);\n  }\n}\n\nexport default LineReporter;\n"],"mappings":";;;;;;AAgBA,IAAAA,KAAA,GAAAC,OAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMC,YAAY,SAASC,kBAAY,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC9BC,QAAQ,GAAG,CAAC;IAAA,KACZC,SAAS,GAAG,CAAC;IAAA,KACbC,SAAS;IAAA,KACTC,SAAS,GAAG,KAAK;EAAA;EAEhBC,aAAaA,CAAA,EAAG;IACvB,OAAO,IAAI;EACb;EAESC,OAAOA,CAACC,KAAY,EAAE;IAC7B,KAAK,CAACD,OAAO,CAACC,KAAK,CAAC;IACpB,MAAMC,eAAe,GAAG,IAAI,CAACC,uBAAuB,CAAC,CAAC;IACtD,IAAID,eAAe,EAAE;MACnBE,OAAO,CAACC,GAAG,CAACH,eAAe,CAAC;MAC5BE,OAAO,CAACC,GAAG,CAAC,CAAC;IACf;IACA,IAAI,CAACP,SAAS,GAAG,IAAI;EACvB;EAESQ,QAAQA,CAACC,KAAsB,EAAEC,IAAe,EAAEC,MAAmB,EAAE;IAC9E,KAAK,CAACH,QAAQ,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACnC,IAAI,CAACC,YAAY,CAACF,IAAI,EAAED,KAAK,EAAEI,OAAO,CAACC,MAAM,CAAC;EAChD;EAESC,QAAQA,CAACN,KAAsB,EAAEC,IAAe,EAAEC,MAAmB,EAAE;IAC9E,KAAK,CAACI,QAAQ,CAACN,KAAK,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACnC,IAAI,CAACC,YAAY,CAACF,IAAI,EAAED,KAAK,EAAEI,OAAO,CAACG,MAAM,CAAC;EAChD;EAEQJ,YAAYA,CAACF,IAA0B,EAAED,KAAsB,EAAEQ,MAA0B,EAAE;IACnG,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,EACnB;IACF,IAAI,CAACN,OAAO,CAACO,GAAG,CAACC,uBAAuB,EACtCJ,MAAM,CAACK,KAAK,CAAE,oBAAmB,CAAC;IACpC,IAAIZ,IAAI,IAAI,IAAI,CAACX,SAAS,KAAKW,IAAI,EAAE;MACnC;MACA,MAAMa,KAAK,GAAGC,YAAM,CAACC,GAAG,CAAC,IAAAC,qBAAe,EAAC,IAAI,CAACR,MAAM,EAAER,IAAI,CAAC,CAAC;MAC5DO,MAAM,CAACK,KAAK,CAAC,IAAI,CAACK,WAAW,CAACJ,KAAK,CAAC,GAAI,IAAG,CAAC;MAC5C,IAAI,CAACxB,SAAS,GAAGW,IAAI;IACvB;IAEAO,MAAM,CAACK,KAAK,CAACb,KAAK,CAAC;IACnB,IAAIA,KAAK,CAACA,KAAK,CAACmB,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAClCtB,OAAO,CAACC,GAAG,CAAC,CAAC;IAEfD,OAAO,CAACC,GAAG,CAAC,CAAC;EACf;EAESsB,WAAWA,CAACnB,IAAc,EAAEC,MAAkB,EAAE;IACvD,KAAK,CAACkB,WAAW,CAACnB,IAAI,EAAEC,MAAM,CAAC;IAC/B,EAAE,IAAI,CAACd,QAAQ;IACf,IAAI,CAACiC,WAAW,CAACpB,IAAI,EAAEC,MAAM,EAAEoB,SAAS,CAAC;EAC3C;EAESC,WAAWA,CAACtB,IAAc,EAAEC,MAAkB,EAAEsB,IAAc,EAAE;IACvE,KAAK,CAACD,WAAW,CAACtB,IAAI,EAAEC,MAAM,EAAEsB,IAAI,CAAC;IACrC,IAAIA,IAAI,CAACC,QAAQ,KAAK,WAAW,EAC/B,IAAI,CAACJ,WAAW,CAACpB,IAAI,EAAEC,MAAM,EAAEsB,IAAI,CAAC;EACxC;EAESE,SAASA,CAACzB,IAAc,EAAEC,MAAkB,EAAEsB,IAAc,EAAE;IACrE,KAAK,CAACE,SAAS,CAACzB,IAAI,EAAEC,MAAM,EAAEsB,IAAI,CAAC;IACnC,IAAIA,IAAI,CAACC,QAAQ,KAAK,WAAW,EAC/B,IAAI,CAACJ,WAAW,CAACpB,IAAI,EAAEC,MAAM,EAAEsB,IAAI,CAACG,MAAM,CAAC;EAC/C;EAESC,SAASA,CAAC3B,IAAc,EAAEC,MAAkB,EAAE;IACrD,KAAK,CAAC0B,SAAS,CAAC3B,IAAI,EAAEC,MAAM,CAAC;IAC7B,IAAI,CAAC,IAAI,CAAC2B,SAAS,CAAC5B,IAAI,CAAC,KAAKA,IAAI,CAAC6B,OAAO,CAAC,CAAC,KAAK,OAAO,IAAI7B,IAAI,CAAC6B,OAAO,CAAC,CAAC,KAAK,YAAY,IAAI5B,MAAM,CAAC6B,MAAM,KAAK,aAAa,CAAC,EAAE;MAC/H,IAAI,CAAC3B,OAAO,CAACO,GAAG,CAACC,uBAAuB,EACtCR,OAAO,CAACC,MAAM,CAACQ,KAAK,CAAE,oBAAmB,CAAC;MAC5ChB,OAAO,CAACC,GAAG,CAAC,IAAAkC,mBAAa,EAAC,IAAI,CAACvB,MAAM,EAAER,IAAI,EAAE;QAC3CgC,KAAK,EAAE,EAAE,IAAI,CAAC5C;MAChB,CAAC,CAAC,CAAC6C,OAAO,CAAC;MACXrC,OAAO,CAACC,GAAG,CAAC,CAAC;IACf;EACF;EAEQuB,WAAWA,CAACpB,IAAc,EAAEC,MAAkB,EAAEsB,IAAe,EAAE;IACvE,MAAMW,aAAa,GAAG,IAAI,CAACC,cAAc,GAAG,IAAI,CAAChD,QAAQ,GAAI,YAAW,GAAI,EAAC;IAC7E,MAAMiD,MAAM,GAAI,IAAG,IAAI,CAACjD,QAAS,IAAG,IAAI,CAACgD,cAAe,IAAGD,aAAc,GAAE;IAC3E,MAAMG,kBAAkB,GAAGpC,MAAM,CAACqC,KAAK,GAAGxB,YAAM,CAACyB,MAAM,CAAE,YAAWtC,MAAM,CAACqC,KAAM,GAAE,CAAC,GAAG,EAAE;IACzF,MAAMzB,KAAK,GAAG,IAAAG,qBAAe,EAAC,IAAI,CAACR,MAAM,EAAER,IAAI,EAAEuB,IAAI,CAAC,GAAGc,kBAAkB;IAC3E,IAAIlC,OAAO,CAACO,GAAG,CAACC,uBAAuB,EACrCR,OAAO,CAACC,MAAM,CAACQ,KAAK,CAAE,GAAEwB,MAAM,GAAGvB,KAAM,IAAG,CAAC,CAAC,KAE5CV,OAAO,CAACC,MAAM,CAACQ,KAAK,CAAE,qBAAoBwB,MAAM,GAAG,IAAI,CAACnB,WAAW,CAACJ,KAAK,EAAEuB,MAAM,CAAE,IAAG,CAAC;EAC3F;EAESI,OAAOA,CAACC,KAAgB,EAAQ;IACvC,KAAK,CAACD,OAAO,CAACC,KAAK,CAAC;IAEpB,MAAMR,OAAO,GAAG,IAAAS,iBAAW,EAACD,KAAK,EAAE3B,YAAM,CAAC6B,OAAO,CAAC,CAACV,OAAO,GAAG,IAAI;IACjE,IAAI,CAAC9B,OAAO,CAACO,GAAG,CAACC,uBAAuB,IAAI,IAAI,CAACrB,SAAS,EACxDa,OAAO,CAACC,MAAM,CAACQ,KAAK,CAAE,oBAAmB,CAAC;IAC5CT,OAAO,CAACC,MAAM,CAACQ,KAAK,CAACqB,OAAO,CAAC;IAC7BrC,OAAO,CAACC,GAAG,CAAC,CAAC;EACf;EAEA,MAAe+C,KAAKA,CAAC3C,MAAkB,EAAE;IACvC,IAAI,CAACE,OAAO,CAACO,GAAG,CAACC,uBAAuB,IAAI,IAAI,CAACrB,SAAS,EACxDa,OAAO,CAACC,MAAM,CAACQ,KAAK,CAAE,oBAAmB,CAAC;IAC5C,MAAM,KAAK,CAACgC,KAAK,CAAC3C,MAAM,CAAC;IACzB,IAAI,CAAC4C,QAAQ,CAAC,KAAK,CAAC;EACtB;AACF;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcjE,YAAY"}