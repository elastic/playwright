{"version":3,"file":"teleEmitter.js","names":["_path","_interopRequireDefault","require","_utils","_teleReceiver","obj","__esModule","default","TeleReporterEmitter","constructor","messageSink","options","_messageSink","_rootDir","_emitterOptions","_idSymbol","Symbol","version","onConfigure","config","rootDir","method","params","_serializeConfig","onBegin","suite","projects","suites","map","projectSuite","_serializeProject","project","undefined","onTestBegin","test","result","createGuid","testId","id","_serializeResultStart","onTestEnd","testEnd","expectedStatus","annotations","timeout","_serializeResultEnd","onStepBegin","step","resultId","_serializeStepStart","onStepEnd","_serializeStepEnd","onError","error","onStdOut","chunk","_onStdIO","onStdErr","type","omitOutput","isBase64","data","toString","onEnd","resultPayload","status","startTime","getTime","duration","onExit","printsToStdio","configFile","_relativePath","globalTimeout","maxFailures","metadata","workers","report","name","outputDir","repeatEach","retries","testDir","testIgnore","serializeRegexPatterns","testMatch","fileSuite","_serializeSuite","grep","grepInvert","dependencies","snapshotDir","teardown","title","location","_relativeLocation","entries","e","_serializeTest","tags","repeatEachIndex","retry","workerIndex","parallelIndex","errors","attachments","_serializeAttachments","a","base64","body","omitBuffers","_step$parent","parentStepId","parent","category","file","absolutePath","path","relative","exports"],"sources":["../../src/reporters/teleEmitter.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport { createGuid } from 'playwright-core/lib/utils';\nimport type * as reporterTypes from '../../types/testReporter';\nimport type * as teleReceiver from '../isomorphic/teleReceiver';\nimport { serializeRegexPatterns } from '../isomorphic/teleReceiver';\nimport type { ReporterV2 } from './reporterV2';\n\nexport type TeleReporterEmitterOptions = {\n  omitOutput?: boolean;\n  omitBuffers?: boolean;\n};\n\nexport class TeleReporterEmitter implements ReporterV2 {\n  private _messageSink: (message: teleReceiver.JsonEvent) => void;\n  private _rootDir!: string;\n  private _emitterOptions: TeleReporterEmitterOptions;\n  // In case there is blob reporter and UI mode, make sure one does override\n  // the id assigned by the other.\n  private readonly _idSymbol = Symbol('id');\n\n  constructor(messageSink: (message: teleReceiver.JsonEvent) => void, options: TeleReporterEmitterOptions = {}) {\n    this._messageSink = messageSink;\n    this._emitterOptions = options;\n  }\n\n  version(): 'v2' {\n    return 'v2';\n  }\n\n  onConfigure(config: reporterTypes.FullConfig) {\n    this._rootDir = config.rootDir;\n    this._messageSink({ method: 'onConfigure', params: { config: this._serializeConfig(config) } });\n  }\n\n  onBegin(suite: reporterTypes.Suite) {\n    const projects = suite.suites.map(projectSuite => this._serializeProject(projectSuite));\n    for (const project of projects)\n      this._messageSink({ method: 'onProject', params: { project } });\n    this._messageSink({ method: 'onBegin', params: undefined });\n  }\n\n  onTestBegin(test: reporterTypes.TestCase, result: reporterTypes.TestResult): void {\n    (result as any)[this._idSymbol] = createGuid();\n    this._messageSink({\n      method: 'onTestBegin',\n      params: {\n        testId: test.id,\n        result: this._serializeResultStart(result)\n      }\n    });\n  }\n\n  onTestEnd(test: reporterTypes.TestCase, result: reporterTypes.TestResult): void {\n    const testEnd: teleReceiver.JsonTestEnd = {\n      testId: test.id,\n      expectedStatus: test.expectedStatus,\n      annotations: test.annotations,\n      timeout: test.timeout,\n    };\n    this._messageSink({\n      method: 'onTestEnd',\n      params: {\n        test: testEnd,\n        result: this._serializeResultEnd(result),\n      }\n    });\n  }\n\n  onStepBegin(test: reporterTypes.TestCase, result: reporterTypes.TestResult, step: reporterTypes.TestStep): void {\n    (step as any)[this._idSymbol] = createGuid();\n    this._messageSink({\n      method: 'onStepBegin',\n      params: {\n        testId: test.id,\n        resultId: (result as any)[this._idSymbol],\n        step: this._serializeStepStart(step)\n      }\n    });\n  }\n\n  onStepEnd(test: reporterTypes.TestCase, result: reporterTypes.TestResult, step: reporterTypes.TestStep): void {\n    this._messageSink({\n      method: 'onStepEnd',\n      params: {\n        testId: test.id,\n        resultId: (result as any)[this._idSymbol],\n        step: this._serializeStepEnd(step)\n      }\n    });\n  }\n\n  onError(error: reporterTypes.TestError): void {\n    this._messageSink({\n      method: 'onError',\n      params: { error }\n    });\n  }\n\n  onStdOut(chunk: string | Buffer, test?: reporterTypes.TestCase, result?: reporterTypes.TestResult): void {\n    this._onStdIO('stdout', chunk, test, result);\n  }\n\n  onStdErr(chunk: string | Buffer, test?: reporterTypes.TestCase, result?: reporterTypes.TestResult): void {\n    this._onStdIO('stderr', chunk, test, result);\n  }\n\n  private _onStdIO(type: teleReceiver.JsonStdIOType, chunk: string | Buffer, test: void | reporterTypes.TestCase, result: void | reporterTypes.TestResult): void {\n    if (this._emitterOptions.omitOutput)\n      return;\n    const isBase64 = typeof chunk !== 'string';\n    const data = isBase64 ? chunk.toString('base64') : chunk;\n    this._messageSink({\n      method: 'onStdIO',\n      params: { testId: test?.id, resultId: result ? (result as any)[this._idSymbol] : undefined, type, data, isBase64 }\n    });\n  }\n\n  async onEnd(result: reporterTypes.FullResult) {\n    const resultPayload: teleReceiver.JsonFullResult = {\n      status: result.status,\n      startTime: result.startTime.getTime(),\n      duration: result.duration,\n    };\n    this._messageSink({\n      method: 'onEnd',\n      params: {\n        result: resultPayload\n      }\n    });\n  }\n\n  async onExit() {\n  }\n\n  printsToStdio() {\n    return false;\n  }\n\n  private _serializeConfig(config: reporterTypes.FullConfig): teleReceiver.JsonConfig {\n    return {\n      configFile: this._relativePath(config.configFile),\n      globalTimeout: config.globalTimeout,\n      maxFailures: config.maxFailures,\n      metadata: config.metadata,\n      rootDir: config.rootDir,\n      version: config.version,\n      workers: config.workers,\n    };\n  }\n\n  private _serializeProject(suite: reporterTypes.Suite): teleReceiver.JsonProject {\n    const project = suite.project()!;\n    const report: teleReceiver.JsonProject = {\n      metadata: project.metadata,\n      name: project.name,\n      outputDir: this._relativePath(project.outputDir),\n      repeatEach: project.repeatEach,\n      retries: project.retries,\n      testDir: this._relativePath(project.testDir),\n      testIgnore: serializeRegexPatterns(project.testIgnore),\n      testMatch: serializeRegexPatterns(project.testMatch),\n      timeout: project.timeout,\n      suites: suite.suites.map(fileSuite => {\n        return this._serializeSuite(fileSuite);\n      }),\n      grep: serializeRegexPatterns(project.grep),\n      grepInvert: serializeRegexPatterns(project.grepInvert || []),\n      dependencies: project.dependencies,\n      snapshotDir: this._relativePath(project.snapshotDir),\n      teardown: project.teardown,\n    };\n    return report;\n  }\n\n  private _serializeSuite(suite: reporterTypes.Suite): teleReceiver.JsonSuite {\n    const result = {\n      title: suite.title,\n      location: this._relativeLocation(suite.location),\n      entries: suite.entries().map(e => {\n        if (e.type === 'test')\n          return this._serializeTest(e);\n        return this._serializeSuite(e);\n      })\n    };\n    return result;\n  }\n\n  private _serializeTest(test: reporterTypes.TestCase): teleReceiver.JsonTestCase {\n    return {\n      testId: test.id,\n      title: test.title,\n      location: this._relativeLocation(test.location),\n      retries: test.retries,\n      tags: test.tags,\n      repeatEachIndex: test.repeatEachIndex,\n      annotations: test.annotations,\n    };\n  }\n\n  private _serializeResultStart(result: reporterTypes.TestResult): teleReceiver.JsonTestResultStart {\n    return {\n      id: (result as any)[this._idSymbol],\n      retry: result.retry,\n      workerIndex: result.workerIndex,\n      parallelIndex: result.parallelIndex,\n      startTime: +result.startTime,\n    };\n  }\n\n  private _serializeResultEnd(result: reporterTypes.TestResult): teleReceiver.JsonTestResultEnd {\n    return {\n      id: (result as any)[this._idSymbol],\n      duration: result.duration,\n      status: result.status,\n      errors: result.errors,\n      attachments: this._serializeAttachments(result.attachments),\n    };\n  }\n\n  _serializeAttachments(attachments: reporterTypes.TestResult['attachments']): teleReceiver.JsonAttachment[] {\n    return attachments.map(a => {\n      return {\n        ...a,\n        // There is no Buffer in the browser, so there is no point in sending the data there.\n        base64: (a.body && !this._emitterOptions.omitBuffers) ? a.body.toString('base64') : undefined,\n      };\n    });\n  }\n\n  private _serializeStepStart(step: reporterTypes.TestStep): teleReceiver.JsonTestStepStart {\n    return {\n      id: (step as any)[this._idSymbol],\n      parentStepId: (step.parent as any)?.[this._idSymbol],\n      title: step.title,\n      category: step.category,\n      startTime: +step.startTime,\n      location: this._relativeLocation(step.location),\n    };\n  }\n\n  private _serializeStepEnd(step: reporterTypes.TestStep): teleReceiver.JsonTestStepEnd {\n    return {\n      id: (step as any)[this._idSymbol],\n      duration: step.duration,\n      error: step.error,\n    };\n  }\n\n  private _relativeLocation(location: reporterTypes.Location): reporterTypes.Location;\n  private _relativeLocation(location?: reporterTypes.Location): reporterTypes.Location | undefined;\n  private _relativeLocation(location: reporterTypes.Location | undefined): reporterTypes.Location | undefined {\n    if (!location)\n      return location;\n    return {\n      ...location,\n      file: this._relativePath(location.file),\n    };\n  }\n\n  private _relativePath(absolutePath: string): string;\n  private _relativePath(absolutePath?: string): string | undefined;\n  private _relativePath(absolutePath?: string): string | undefined {\n    if (!absolutePath)\n      return absolutePath;\n    return path.relative(this._rootDir, absolutePath);\n  }\n}\n"],"mappings":"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"}