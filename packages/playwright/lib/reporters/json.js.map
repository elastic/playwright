{"version":3,"file":"json.js","names":["_fs","_interopRequireDefault","require","_path","_base","_utils","_config","_empty","obj","__esModule","default","JSONReporter","EmptyReporter","constructor","options","_resolveOutputFile","config","suite","_errors","_resolvedOutputFile","resolveOutputFile","outputFile","printsToStdio","onConfigure","onBegin","onError","error","push","onEnd","result","outputReport","_serializeReport","report","removePrivateFields","rootDir","toPosixPath","projects","map","project","outputDir","repeatEach","retries","metadata","id","getProjectId","name","testDir","testIgnore","serializePatterns","testMatch","timeout","suites","_mergeSuites","errors","stats","startTime","toISOString","duration","expected","skipped","unexpected","flaky","test","allTests","outcome","fileSuites","MultiMap","projectSuite","projectId","projectName","fileSuite","file","location","serialized","_serializeSuite","set","results","title","column","line","specs","_mergeTestsFromSuite","_relativeLocation","path","relative","_locationMatches","s1","s2","to","from","fromSuite","toSuite","find","s","spec","toSpec","tests","length","filter","_serializeTestSpec","undefined","ok","tags","tag","substring","_serializeTest","annotations","expectedStatus","r","_serializeTestResult","status","_result$error","steps","category","jsonResult","workerIndex","e","_serializeError","stdout","stdioEntry","stderr","retry","_serializeTestStep","attachments","a","_a$body","contentType","body","toString","stack","errorLocation","prepareErrorStack","formatError","step","resolvedOutputFile","reportString","JSON","stringify","fs","promises","mkdir","dirname","recursive","writeFile","console","log","text","buffer","Object","fromEntries","entries","value","startsWith","patterns","Array","isArray","_default","exports"],"sources":["../../src/reporters/json.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport type { FullConfig, TestCase, Suite, TestResult, TestError, TestStep, FullResult, Location, JSONReport, JSONReportSuite, JSONReportSpec, JSONReportTest, JSONReportTestResult, JSONReportTestStep, JSONReportError } from '../../types/testReporter';\nimport { formatError, prepareErrorStack, resolveOutputFile } from './base';\nimport { MultiMap, toPosixPath } from 'playwright-core/lib/utils';\nimport { getProjectId } from '../common/config';\nimport EmptyReporter from './empty';\n\ntype JSONOptions = {\n  outputFile?: string,\n  configDir: string,\n};\n\nclass JSONReporter extends EmptyReporter {\n  config!: FullConfig;\n  suite!: Suite;\n  private _errors: TestError[] = [];\n  private _resolvedOutputFile: string | undefined;\n\n  constructor(options: JSONOptions) {\n    super();\n    this._resolvedOutputFile = resolveOutputFile('JSON', options)?.outputFile;\n  }\n\n  override printsToStdio() {\n    return !this._resolvedOutputFile;\n  }\n\n  override onConfigure(config: FullConfig) {\n    this.config = config;\n  }\n\n  override onBegin(suite: Suite) {\n    this.suite = suite;\n  }\n\n  override onError(error: TestError): void {\n    this._errors.push(error);\n  }\n\n  override async onEnd(result: FullResult) {\n    await outputReport(this._serializeReport(result), this._resolvedOutputFile);\n  }\n\n  private _serializeReport(result: FullResult): JSONReport {\n    const report: JSONReport = {\n      config: {\n        ...removePrivateFields(this.config),\n        rootDir: toPosixPath(this.config.rootDir),\n        projects: this.config.projects.map(project => {\n          return {\n            outputDir: toPosixPath(project.outputDir),\n            repeatEach: project.repeatEach,\n            retries: project.retries,\n            metadata: project.metadata,\n            id: getProjectId(project),\n            name: project.name,\n            testDir: toPosixPath(project.testDir),\n            testIgnore: serializePatterns(project.testIgnore),\n            testMatch: serializePatterns(project.testMatch),\n            timeout: project.timeout,\n          };\n        })\n      },\n      suites: this._mergeSuites(this.suite.suites),\n      errors: this._errors,\n      stats: {\n        startTime: result.startTime.toISOString(),\n        duration: result.duration,\n        expected: 0,\n        skipped: 0,\n        unexpected: 0,\n        flaky: 0,\n      },\n    };\n    for (const test of this.suite.allTests())\n      ++report.stats[test.outcome()];\n    return report;\n  }\n\n  private _mergeSuites(suites: Suite[]): JSONReportSuite[] {\n    const fileSuites = new MultiMap<string, JSONReportSuite>();\n    for (const projectSuite of suites) {\n      const projectId = getProjectId(projectSuite.project()!);\n      const projectName = projectSuite.project()!.name;\n      for (const fileSuite of projectSuite.suites) {\n        const file = fileSuite.location!.file;\n        const serialized = this._serializeSuite(projectId, projectName, fileSuite);\n        if (serialized)\n          fileSuites.set(file, serialized);\n      }\n    }\n\n    const results: JSONReportSuite[] = [];\n    for (const [, suites] of fileSuites) {\n      const result: JSONReportSuite = {\n        title: suites[0].title,\n        file: suites[0].file,\n        column: 0,\n        line: 0,\n        specs: [],\n      };\n      for (const suite of suites)\n        this._mergeTestsFromSuite(result, suite);\n      results.push(result);\n    }\n    return results;\n  }\n\n  private _relativeLocation(location: Location | undefined): Location {\n    if (!location)\n      return { file: '', line: 0, column: 0 };\n    return {\n      file: toPosixPath(path.relative(this.config.rootDir, location.file)),\n      line: location.line,\n      column: location.column,\n    };\n  }\n\n  private _locationMatches(s1: JSONReportSuite | JSONReportSpec, s2: JSONReportSuite | JSONReportSpec) {\n    return s1.file === s2.file && s1.line === s2.line && s1.column === s2.column;\n  }\n\n  private _mergeTestsFromSuite(to: JSONReportSuite, from: JSONReportSuite) {\n    for (const fromSuite of from.suites || []) {\n      const toSuite = (to.suites || []).find(s => s.title === fromSuite.title && this._locationMatches(s, fromSuite));\n      if (toSuite) {\n        this._mergeTestsFromSuite(toSuite, fromSuite);\n      } else {\n        if (!to.suites)\n          to.suites = [];\n        to.suites.push(fromSuite);\n      }\n    }\n\n    for (const spec of from.specs || []) {\n      const toSpec = to.specs.find(s => s.title === spec.title && s.file === toPosixPath(path.relative(this.config.rootDir, spec.file)) && s.line === spec.line && s.column === spec.column);\n      if (toSpec)\n        toSpec.tests.push(...spec.tests);\n      else\n        to.specs.push(spec);\n    }\n  }\n\n  private _serializeSuite(projectId: string, projectName: string, suite: Suite): null | JSONReportSuite {\n    if (!suite.allTests().length)\n      return null;\n    const suites = suite.suites.map(suite => this._serializeSuite(projectId, projectName, suite)).filter(s => s) as JSONReportSuite[];\n    return {\n      title: suite.title,\n      ...this._relativeLocation(suite.location),\n      specs: suite.tests.map(test => this._serializeTestSpec(projectId, projectName, test)),\n      suites: suites.length ? suites : undefined,\n    };\n  }\n\n  private _serializeTestSpec(projectId: string, projectName: string, test: TestCase): JSONReportSpec {\n    return {\n      title: test.title,\n      ok: test.ok(),\n      tags: test.tags.map(tag => tag.substring(1)),  // Strip '@'.\n      tests: [this._serializeTest(projectId, projectName, test)],\n      id: test.id,\n      ...this._relativeLocation(test.location),\n    };\n  }\n\n  private _serializeTest(projectId: string, projectName: string, test: TestCase): JSONReportTest {\n    return {\n      timeout: test.timeout,\n      annotations: test.annotations,\n      expectedStatus: test.expectedStatus,\n      projectId,\n      projectName,\n      results: test.results.map(r => this._serializeTestResult(r, test)),\n      status: test.outcome(),\n    };\n  }\n\n  private _serializeTestResult(result: TestResult, test: TestCase): JSONReportTestResult {\n    const steps = result.steps.filter(s => s.category === 'test.step');\n    const jsonResult: JSONReportTestResult = {\n      workerIndex: result.workerIndex,\n      status: result.status,\n      duration: result.duration,\n      error: result.error,\n      errors: result.errors.map(e => this._serializeError(e)),\n      stdout: result.stdout.map(s => stdioEntry(s)),\n      stderr: result.stderr.map(s => stdioEntry(s)),\n      retry: result.retry,\n      steps: steps.length ? steps.map(s => this._serializeTestStep(s)) : undefined,\n      startTime: result.startTime.toISOString(),\n      attachments: result.attachments.map(a => ({\n        name: a.name,\n        contentType: a.contentType,\n        path: a.path,\n        body: a.body?.toString('base64')\n      })),\n    };\n    if (result.error?.stack)\n      jsonResult.errorLocation = prepareErrorStack(result.error.stack).location;\n    return jsonResult;\n  }\n\n  private _serializeError(error: TestError): JSONReportError {\n    return formatError(error, true);\n  }\n\n  private _serializeTestStep(step: TestStep): JSONReportTestStep {\n    const steps = step.steps.filter(s => s.category === 'test.step');\n    return {\n      title: step.title,\n      duration: step.duration,\n      error: step.error,\n      steps: steps.length ? steps.map(s => this._serializeTestStep(s)) : undefined,\n    };\n  }\n}\n\nasync function outputReport(report: JSONReport, resolvedOutputFile: string | undefined) {\n  const reportString = JSON.stringify(report, undefined, 2);\n  if (resolvedOutputFile) {\n    await fs.promises.mkdir(path.dirname(resolvedOutputFile), { recursive: true });\n    await fs.promises.writeFile(resolvedOutputFile, reportString);\n  } else {\n    console.log(reportString);\n  }\n}\n\nfunction stdioEntry(s: string | Buffer): any {\n  if (typeof s === 'string')\n    return { text: s };\n  return { buffer: s.toString('base64') };\n}\n\nfunction removePrivateFields(config: FullConfig): FullConfig {\n  return Object.fromEntries(Object.entries(config).filter(([name, value]) => !name.startsWith('_'))) as FullConfig;\n}\n\nexport function serializePatterns(patterns: string | RegExp | (string | RegExp)[]): string[] {\n  if (!Array.isArray(patterns))\n    patterns = [patterns];\n  return patterns.map(s => s.toString());\n}\n\nexport default JSONReporter;\n"],"mappings":"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"}