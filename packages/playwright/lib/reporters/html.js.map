{"version":3,"file":"html.js","names":["_utilsBundle","require","_utils","_fs","_interopRequireDefault","_path","_stream","_babelBundle","_base","_util","_zipBundle","_empty","obj","__esModule","default","htmlReportOptions","isHtmlReportOption","type","includes","HtmlReporter","EmptyReporter","constructor","options","config","suite","_options","_outputFolder","_attachmentsBaseURL","_open","_port","_host","_buildResult","_topLevelErrors","printsToStdio","onConfigure","onBegin","outputFolder","open","attachmentsBaseURL","host","port","_resolveOptions","reportedWarnings","Set","project","projects","_isSubdirectory","outputDir","key","has","add","console","log","colors","red","bold","_reportFolderFromEnv","reportFolderFromEnv","resolveReporterOutputPath","configDir","getHtmlReportOptionProcessEnv","process","env","PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL","PLAYWRIGHT_HTML_HOST","PLAYWRIGHT_HTML_PORT","parentDir","dir","relativePath","path","relative","startsWith","isAbsolute","onError","error","push","onEnd","result","projectSuites","suites","removeFolders","builder","HtmlBuilder","build","metadata","onExit","CI","ok","singleTestId","shouldOpen","_isTestServer","showHTMLReport","_mode","packageManagerCommand","getPackageManagerExecCommand","relativeReportPath","standaloneDefaultFolder","cwd","hostArg","portArg","cyan","envValue","PLAYWRIGHT_HTML_OUTPUT_DIR","PLAYWRIGHT_HTML_REPORT","resolve","undefined","htmlOpenEnv","PLAYWRIGHT_HTML_OPEN","PW_TEST_HTML_REPORT_OPEN","join","_reportFolderFromEnv2","reportFolder","testId","folder","assert","fs","statSync","isDirectory","e","gracefullyProcessExitDoNotHang","server","startHtmlReportServer","start","preferredPort","url","urlPrefix","replace","wait","catch","Promise","HttpServer","routePrefix","request","response","URL","pathname","serveFile","searchParams","get","endsWith","absolutePath","split","_config","_reportFolder","_stepsInFile","MultiMap","_dataZipFile","_hasTraces","mkdirSync","recursive","yazl","ZipFile","topLevelErrors","data","Map","projectSuite","testDir","fileSuite","fileName","_relativeLocation","location","file","relativeFile","fileId","calculateSha1","toPosixPath","slice","fileEntry","testFile","tests","testFileSummary","stats","emptyStats","set","testEntries","_processSuite","name","test","testCase","testCaseSummary","createSnippets","outcome","expected","skipped","unexpected","flaky","total","testCaseSummaryComparator","t1","t2","w1","w2","sort","_addDataFile","htmlReport","startTime","getTime","duration","files","values","map","projectNames","r","reduce","a","addStats","errors","formatError","message","f1","f2","appFolder","copyFileAndMakeWritable","traceViewerFolder","traceViewerTargetFolder","traceViewerAssetsTargetFolder","readdirSync","indexFile","appendFileSync","f","end","outputStream","pipe","Base64Encoder","createWriteStream","flags","on","next","value","addBuffer","Buffer","from","JSON","stringify","projectName","outTests","newPath","title","entries","forEach","_createTestEntry","results","filter","length","_createTestResult","id","annotations","description","String","tags","attachments","contentType","_serializeAttachments","lastAttachment","body","stripAnsiEscapes","buffer","readFileSync","sha1","extname","writeFileSync","isTextContentType","_a$contentType$match","charset","match","toString","extension","sanitizeForFilePath","mime","getExtension","Boolean","toISOString","retry","steps","dedupeSteps","s","_createTestStep","formatResultFailure","status","stdout","m","stdioAttachment","stderr","dedupedStep","_step$error","step","count","rootDir","line","column","delta","Transform","args","_remainder","_transform","chunk","encoding","callback","concat","remaining","_flush","lastResult","_step$location","_lastResult","_step$location2","_lastStep$location","_step$location3","_lastStep$location2","_step$location4","_lastStep$location3","canDedupe","lastStep","category","stepsInFile","keys","source","lines","highlighted","codeFrameColumns","highlightCode","linesAbove","linesBelow","highlightedLines","lineWithArrow","snippetLines","index","indexOf","shiftedArrow","repeat","splice","snippet","_default","exports"],"sources":["../../src/reporters/html.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { open } from 'playwright-core/lib/utilsBundle';\nimport { MultiMap, getPackageManagerExecCommand } from 'playwright-core/lib/utils';\nimport fs from 'fs';\nimport path from 'path';\nimport type { TransformCallback } from 'stream';\nimport { Transform } from 'stream';\nimport { codeFrameColumns } from '../transform/babelBundle';\nimport type { FullResult, FullConfig, Location, Suite, TestCase as TestCasePublic, TestResult as TestResultPublic, TestStep as TestStepPublic, TestError } from '../../types/testReporter';\nimport { HttpServer, assert, calculateSha1, copyFileAndMakeWritable, gracefullyProcessExitDoNotHang, removeFolders, sanitizeForFilePath, toPosixPath } from 'playwright-core/lib/utils';\nimport { colors, formatError, formatResultFailure, stripAnsiEscapes } from './base';\nimport { resolveReporterOutputPath } from '../util';\nimport type { Metadata } from '../../types/test';\nimport type { ZipFile } from 'playwright-core/lib/zipBundle';\nimport { yazl } from 'playwright-core/lib/zipBundle';\nimport { mime } from 'playwright-core/lib/utilsBundle';\nimport type { HTMLReport, Stats, TestAttachment, TestCase, TestCaseSummary, TestFile, TestFileSummary, TestResult, TestStep } from '@html-reporter/types';\nimport EmptyReporter from './empty';\n\ntype TestEntry = {\n  testCase: TestCase;\n  testCaseSummary: TestCaseSummary\n};\n\nconst htmlReportOptions = ['always', 'never', 'on-failure'];\ntype HtmlReportOpenOption = (typeof htmlReportOptions)[number];\n\nconst isHtmlReportOption = (type: string): type is HtmlReportOpenOption => {\n  return htmlReportOptions.includes(type);\n};\n\ntype HtmlReporterOptions = {\n  configDir: string,\n  outputFolder?: string,\n  open?: HtmlReportOpenOption,\n  host?: string,\n  port?: number,\n  attachmentsBaseURL?: string,\n  _mode?: 'test' | 'list';\n  _isTestServer?: boolean;\n};\n\nclass HtmlReporter extends EmptyReporter {\n  private config!: FullConfig;\n  private suite!: Suite;\n  private _options: HtmlReporterOptions;\n  private _outputFolder!: string;\n  private _attachmentsBaseURL!: string;\n  private _open: string | undefined;\n  private _port: number | undefined;\n  private _host: string | undefined;\n  private _buildResult: { ok: boolean, singleTestId: string | undefined } | undefined;\n  private _topLevelErrors: TestError[] = [];\n\n  constructor(options: HtmlReporterOptions) {\n    super();\n    this._options = options;\n  }\n\n  override printsToStdio() {\n    return false;\n  }\n\n  override onConfigure(config: FullConfig) {\n    this.config = config;\n  }\n\n  override onBegin(suite: Suite) {\n    const { outputFolder, open, attachmentsBaseURL, host, port } = this._resolveOptions();\n    this._outputFolder = outputFolder;\n    this._open = open;\n    this._host = host;\n    this._port = port;\n    this._attachmentsBaseURL = attachmentsBaseURL;\n    const reportedWarnings = new Set<string>();\n    for (const project of this.config.projects) {\n      if (this._isSubdirectory(outputFolder, project.outputDir) || this._isSubdirectory(project.outputDir, outputFolder)) {\n        const key = outputFolder + '|' + project.outputDir;\n        if (reportedWarnings.has(key))\n          continue;\n        reportedWarnings.add(key);\n        console.log(colors.red(`Configuration Error: HTML reporter output folder clashes with the tests output folder:`));\n        console.log(`\n    html reporter folder: ${colors.bold(outputFolder)}\n    test results folder: ${colors.bold(project.outputDir)}`);\n        console.log('');\n        console.log(`HTML reporter will clear its output directory prior to being generated, which will lead to the artifact loss.\n`);\n      }\n    }\n    this.suite = suite;\n  }\n\n  _resolveOptions(): { outputFolder: string, open: HtmlReportOpenOption, attachmentsBaseURL: string, host: string | undefined, port: number | undefined } {\n    const outputFolder = reportFolderFromEnv() ?? resolveReporterOutputPath('playwright-report', this._options.configDir, this._options.outputFolder);\n    return {\n      outputFolder,\n      open: getHtmlReportOptionProcessEnv() || this._options.open || 'on-failure',\n      attachmentsBaseURL: process.env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL || this._options.attachmentsBaseURL || 'data/',\n      host: process.env.PLAYWRIGHT_HTML_HOST || this._options.host,\n      port: process.env.PLAYWRIGHT_HTML_PORT ? +process.env.PLAYWRIGHT_HTML_PORT : this._options.port,\n    };\n  }\n\n  _isSubdirectory(parentDir: string, dir: string): boolean {\n    const relativePath = path.relative(parentDir, dir);\n    return !!relativePath && !relativePath.startsWith('..') && !path.isAbsolute(relativePath);\n  }\n\n  override onError(error: TestError): void {\n    this._topLevelErrors.push(error);\n  }\n\n  override async onEnd(result: FullResult) {\n    const projectSuites = this.suite.suites;\n    await removeFolders([this._outputFolder]);\n    const builder = new HtmlBuilder(this.config, this._outputFolder, this._attachmentsBaseURL);\n    this._buildResult = await builder.build(this.config.metadata, projectSuites, result, this._topLevelErrors);\n  }\n\n  override async onExit() {\n    if (process.env.CI || !this._buildResult)\n      return;\n    const { ok, singleTestId } = this._buildResult;\n    const shouldOpen = !this._options._isTestServer && (this._open === 'always' || (!ok && this._open === 'on-failure'));\n    if (shouldOpen) {\n      await showHTMLReport(this._outputFolder, this._host, this._port, singleTestId);\n    } else if (this._options._mode === 'test') {\n      const packageManagerCommand = getPackageManagerExecCommand();\n      const relativeReportPath = this._outputFolder === standaloneDefaultFolder() ? '' : ' ' + path.relative(process.cwd(), this._outputFolder);\n      const hostArg = this._host ? ` --host ${this._host}` : '';\n      const portArg = this._port ? ` --port ${this._port}` : '';\n      console.log('');\n      console.log('To open last HTML report run:');\n      console.log(colors.cyan(`\n  ${packageManagerCommand} playwright show-report${relativeReportPath}${hostArg}${portArg}\n`));\n    }\n  }\n}\n\nfunction reportFolderFromEnv(): string | undefined {\n  // Note: PLAYWRIGHT_HTML_REPORT is for backwards compatibility.\n  const envValue = process.env.PLAYWRIGHT_HTML_OUTPUT_DIR || process.env.PLAYWRIGHT_HTML_REPORT;\n  return envValue ? path.resolve(envValue) : undefined;\n}\n\nfunction getHtmlReportOptionProcessEnv(): HtmlReportOpenOption | undefined {\n  // Note: PW_TEST_HTML_REPORT_OPEN is for backwards compatibility.\n  const htmlOpenEnv = process.env.PLAYWRIGHT_HTML_OPEN || process.env.PW_TEST_HTML_REPORT_OPEN;\n  if (!htmlOpenEnv)\n    return undefined;\n  if (!isHtmlReportOption(htmlOpenEnv)) {\n    console.log(colors.red(`Configuration Error: HTML reporter Invalid value for PLAYWRIGHT_HTML_OPEN: ${htmlOpenEnv}. Valid values are: ${htmlReportOptions.join(', ')}`));\n    return undefined;\n  }\n  return htmlOpenEnv;\n}\n\nfunction standaloneDefaultFolder(): string {\n  return reportFolderFromEnv() ?? resolveReporterOutputPath('playwright-report', process.cwd(), undefined);\n}\n\nexport async function showHTMLReport(reportFolder: string | undefined, host: string = 'localhost', port?: number, testId?: string) {\n  const folder = reportFolder ?? standaloneDefaultFolder();\n  try {\n    assert(fs.statSync(folder).isDirectory());\n  } catch (e) {\n    console.log(colors.red(`No report found at \"${folder}\"`));\n    gracefullyProcessExitDoNotHang(1);\n    return;\n  }\n  const server = startHtmlReportServer(folder);\n  await server.start({ port, host, preferredPort: port ? undefined : 9323 });\n  let url = server.urlPrefix('human-readable');\n  console.log('');\n  console.log(colors.cyan(`  Serving HTML report at ${url}. Press Ctrl+C to quit.`));\n  if (testId)\n    url += `#?testId=${testId}`;\n  url = url.replace('0.0.0.0', 'localhost');\n  await open(url, { wait: true }).catch(() => {});\n  await new Promise(() => {});\n}\n\nexport function startHtmlReportServer(folder: string): HttpServer {\n  const server = new HttpServer();\n  server.routePrefix('/', (request, response) => {\n    let relativePath = new URL('http://localhost' + request.url).pathname;\n    if (relativePath.startsWith('/trace/file')) {\n      const url = new URL('http://localhost' + request.url!);\n      try {\n        return server.serveFile(request, response, url.searchParams.get('path')!);\n      } catch (e) {\n        return false;\n      }\n    }\n    if (relativePath.endsWith('/stall.js'))\n      return true;\n    if (relativePath === '/')\n      relativePath = '/index.html';\n    const absolutePath = path.join(folder, ...relativePath.split('/'));\n    return server.serveFile(request, response, absolutePath);\n  });\n  return server;\n}\n\nclass HtmlBuilder {\n  private _config: FullConfig;\n  private _reportFolder: string;\n  private _stepsInFile = new MultiMap<string, TestStep>();\n  private _dataZipFile: ZipFile;\n  private _hasTraces = false;\n  private _attachmentsBaseURL: string;\n\n  constructor(config: FullConfig, outputDir: string, attachmentsBaseURL: string) {\n    this._config = config;\n    this._reportFolder = outputDir;\n    fs.mkdirSync(this._reportFolder, { recursive: true });\n    this._dataZipFile = new yazl.ZipFile();\n    this._attachmentsBaseURL = attachmentsBaseURL;\n  }\n\n  async build(metadata: Metadata, projectSuites: Suite[], result: FullResult, topLevelErrors: TestError[]): Promise<{ ok: boolean, singleTestId: string | undefined }> {\n    const data = new Map<string, { testFile: TestFile, testFileSummary: TestFileSummary }>();\n    for (const projectSuite of projectSuites) {\n      const testDir = projectSuite.project()!.testDir;\n      for (const fileSuite of projectSuite.suites) {\n        const fileName = this._relativeLocation(fileSuite.location)!.file;\n        // Preserve file ids computed off the testDir.\n        const relativeFile = path.relative(testDir, fileSuite.location!.file);\n        const fileId = calculateSha1(toPosixPath(relativeFile)).slice(0, 20);\n        let fileEntry = data.get(fileId);\n        if (!fileEntry) {\n          fileEntry = {\n            testFile: { fileId, fileName, tests: [] },\n            testFileSummary: { fileId, fileName, tests: [], stats: emptyStats() },\n          };\n          data.set(fileId, fileEntry);\n        }\n        const { testFile, testFileSummary } = fileEntry;\n        const testEntries: TestEntry[] = [];\n        this._processSuite(fileSuite, projectSuite.project()!.name, [], testEntries);\n        for (const test of testEntries) {\n          testFile.tests.push(test.testCase);\n          testFileSummary.tests.push(test.testCaseSummary);\n        }\n      }\n    }\n    createSnippets(this._stepsInFile);\n\n    let ok = true;\n    for (const [fileId, { testFile, testFileSummary }] of data) {\n      const stats = testFileSummary.stats;\n      for (const test of testFileSummary.tests) {\n        if (test.outcome === 'expected')\n          ++stats.expected;\n        if (test.outcome === 'skipped')\n          ++stats.skipped;\n        if (test.outcome === 'unexpected')\n          ++stats.unexpected;\n        if (test.outcome === 'flaky')\n          ++stats.flaky;\n        ++stats.total;\n      }\n      stats.ok = stats.unexpected + stats.flaky === 0;\n      if (!stats.ok)\n        ok = false;\n\n      const testCaseSummaryComparator = (t1: TestCaseSummary, t2: TestCaseSummary) => {\n        const w1 = (t1.outcome === 'unexpected' ? 1000 : 0) +  (t1.outcome === 'flaky' ? 1 : 0);\n        const w2 = (t2.outcome === 'unexpected' ? 1000 : 0) +  (t2.outcome === 'flaky' ? 1 : 0);\n        return w2 - w1;\n      };\n      testFileSummary.tests.sort(testCaseSummaryComparator);\n\n      this._addDataFile(fileId + '.json', testFile);\n    }\n    const htmlReport: HTMLReport = {\n      metadata,\n      startTime: result.startTime.getTime(),\n      duration: result.duration,\n      files: [...data.values()].map(e => e.testFileSummary),\n      projectNames: projectSuites.map(r => r.project()!.name),\n      stats: { ...[...data.values()].reduce((a, e) => addStats(a, e.testFileSummary.stats), emptyStats()) },\n      errors: topLevelErrors.map(error => formatError(error, true).message),\n    };\n    htmlReport.files.sort((f1, f2) => {\n      const w1 = f1.stats.unexpected * 1000 + f1.stats.flaky;\n      const w2 = f2.stats.unexpected * 1000 + f2.stats.flaky;\n      return w2 - w1;\n    });\n\n    this._addDataFile('report.json', htmlReport);\n\n    // Copy app.\n    const appFolder = path.join(require.resolve('playwright-core'), '..', 'lib', 'vite', 'htmlReport');\n    await copyFileAndMakeWritable(path.join(appFolder, 'index.html'), path.join(this._reportFolder, 'index.html'));\n\n    // Copy trace viewer.\n    if (this._hasTraces) {\n      const traceViewerFolder = path.join(require.resolve('playwright-core'), '..', 'lib', 'vite', 'traceViewer');\n      const traceViewerTargetFolder = path.join(this._reportFolder, 'trace');\n      const traceViewerAssetsTargetFolder = path.join(traceViewerTargetFolder, 'assets');\n      fs.mkdirSync(traceViewerAssetsTargetFolder, { recursive: true });\n      for (const file of fs.readdirSync(traceViewerFolder)) {\n        if (file.endsWith('.map') || file.includes('watch') || file.includes('assets'))\n          continue;\n        await copyFileAndMakeWritable(path.join(traceViewerFolder, file), path.join(traceViewerTargetFolder, file));\n      }\n      for (const file of fs.readdirSync(path.join(traceViewerFolder, 'assets'))) {\n        if (file.endsWith('.map') || file.includes('xtermModule'))\n          continue;\n        await copyFileAndMakeWritable(path.join(traceViewerFolder, 'assets', file), path.join(traceViewerAssetsTargetFolder, file));\n      }\n    }\n\n    // Inline report data.\n    const indexFile = path.join(this._reportFolder, 'index.html');\n    fs.appendFileSync(indexFile, '<script>\\nwindow.playwrightReportBase64 = \"data:application/zip;base64,');\n    await new Promise(f => {\n      this._dataZipFile!.end(undefined, () => {\n        this._dataZipFile!.outputStream\n            .pipe(new Base64Encoder())\n            .pipe(fs.createWriteStream(indexFile, { flags: 'a' })).on('close', f);\n      });\n    });\n    fs.appendFileSync(indexFile, '\";</script>');\n\n    let singleTestId: string | undefined;\n    if (htmlReport.stats.total === 1) {\n      const testFile: TestFile  = data.values().next().value.testFile;\n      singleTestId = testFile.tests[0].testId;\n    }\n\n    return { ok, singleTestId };\n  }\n\n  private _addDataFile(fileName: string, data: any) {\n    this._dataZipFile.addBuffer(Buffer.from(JSON.stringify(data)), fileName);\n  }\n\n  private _processSuite(suite: Suite, projectName: string, path: string[], outTests: TestEntry[]) {\n    const newPath = [...path, suite.title];\n    suite.entries().forEach(e => {\n      if (e.type === 'test')\n        outTests.push(this._createTestEntry(e, projectName, newPath));\n      else\n        this._processSuite(e, projectName, newPath, outTests);\n    });\n  }\n\n  private _createTestEntry(test: TestCasePublic, projectName: string, path: string[]): TestEntry {\n    const duration = test.results.reduce((a, r) => a + r.duration, 0);\n    const location = this._relativeLocation(test.location)!;\n    path = path.slice(1).filter(path => path.length > 0);\n    const results = test.results.map(r => this._createTestResult(test, r));\n\n    return {\n      testCase: {\n        testId: test.id,\n        title: test.title,\n        projectName,\n        location,\n        duration,\n        // Annotations can be pushed directly, with a wrong type.\n        annotations: test.annotations.map(a => ({ type: a.type, description: a.description ? String(a.description) : a.description })),\n        tags: test.tags,\n        outcome: test.outcome(),\n        path,\n        results,\n        ok: test.outcome() === 'expected' || test.outcome() === 'flaky',\n      },\n      testCaseSummary: {\n        testId: test.id,\n        title: test.title,\n        projectName,\n        location,\n        duration,\n        // Annotations can be pushed directly, with a wrong type.\n        annotations: test.annotations.map(a => ({ type: a.type, description: a.description ? String(a.description) : a.description })),\n        tags: test.tags,\n        outcome: test.outcome(),\n        path,\n        ok: test.outcome() === 'expected' || test.outcome() === 'flaky',\n        results: results.map(result => {\n          return { attachments: result.attachments.map(a => ({ name: a.name, contentType: a.contentType, path: a.path })) };\n        }),\n      },\n    };\n  }\n\n  private _serializeAttachments(attachments: JsonAttachment[]) {\n    let lastAttachment: TestAttachment | undefined;\n    return attachments.map(a => {\n      if (a.name === 'trace')\n        this._hasTraces = true;\n\n      if ((a.name === 'stdout' || a.name === 'stderr') && a.contentType === 'text/plain') {\n        if (lastAttachment &&\n          lastAttachment.name === a.name &&\n          lastAttachment.contentType === a.contentType) {\n          lastAttachment.body += stripAnsiEscapes(a.body as string);\n          return null;\n        }\n        a.body = stripAnsiEscapes(a.body as string);\n        lastAttachment = a as TestAttachment;\n        return a;\n      }\n\n      if (a.path) {\n        let fileName = a.path;\n        try {\n          const buffer = fs.readFileSync(a.path);\n          const sha1 = calculateSha1(buffer) + path.extname(a.path);\n          fileName = this._attachmentsBaseURL + sha1;\n          fs.mkdirSync(path.join(this._reportFolder, 'data'), { recursive: true });\n          fs.writeFileSync(path.join(this._reportFolder, 'data', sha1), buffer);\n        } catch (e) {\n        }\n        return {\n          name: a.name,\n          contentType: a.contentType,\n          path: fileName,\n          body: a.body,\n        };\n      }\n\n      if (a.body instanceof Buffer) {\n        if (isTextContentType(a.contentType)) {\n          // Content type is like this: \"text/html; charset=UTF-8\"\n          const charset = a.contentType.match(/charset=(.*)/)?.[1];\n          try {\n            const body = a.body.toString(charset as any || 'utf-8');\n            return {\n              name: a.name,\n              contentType: a.contentType,\n              body,\n            };\n          } catch (e) {\n            // Invalid encoding, fall through and save to file.\n          }\n        }\n\n        fs.mkdirSync(path.join(this._reportFolder, 'data'), { recursive: true });\n        const extension = sanitizeForFilePath(path.extname(a.name).replace(/^\\./, '')) || mime.getExtension(a.contentType) || 'dat';\n        const sha1 = calculateSha1(a.body) + '.' + extension;\n        fs.writeFileSync(path.join(this._reportFolder, 'data', sha1), a.body);\n        return {\n          name: a.name,\n          contentType: a.contentType,\n          path: this._attachmentsBaseURL + sha1,\n        };\n      }\n\n      // string\n      return {\n        name: a.name,\n        contentType: a.contentType,\n        body: a.body,\n      };\n    }).filter(Boolean) as TestAttachment[];\n  }\n\n  private _createTestResult(test: TestCasePublic, result: TestResultPublic): TestResult {\n    return {\n      duration: result.duration,\n      startTime: result.startTime.toISOString(),\n      retry: result.retry,\n      steps: dedupeSteps(result.steps).map(s => this._createTestStep(s)),\n      errors: formatResultFailure(test, result, '', true).map(error => error.message),\n      status: result.status,\n      attachments: this._serializeAttachments([\n        ...result.attachments,\n        ...result.stdout.map(m => stdioAttachment(m, 'stdout')),\n        ...result.stderr.map(m => stdioAttachment(m, 'stderr'))]),\n    };\n  }\n\n  private _createTestStep(dedupedStep: DedupedStep): TestStep {\n    const { step, duration, count } = dedupedStep;\n    const result: TestStep = {\n      title: step.title,\n      startTime: step.startTime.toISOString(),\n      duration,\n      steps: dedupeSteps(step.steps).map(s => this._createTestStep(s)),\n      location: this._relativeLocation(step.location),\n      error: step.error?.message,\n      count\n    };\n    if (result.location)\n      this._stepsInFile.set(result.location.file, result);\n    return result;\n  }\n\n  private _relativeLocation(location: Location | undefined): Location | undefined {\n    if (!location)\n      return undefined;\n    const file = toPosixPath(path.relative(this._config.rootDir, location.file));\n    return {\n      file,\n      line: location.line,\n      column: location.column,\n    };\n  }\n}\n\nconst emptyStats = (): Stats => {\n  return {\n    total: 0,\n    expected: 0,\n    unexpected: 0,\n    flaky: 0,\n    skipped: 0,\n    ok: true,\n  };\n};\n\nconst addStats = (stats: Stats, delta: Stats): Stats => {\n  stats.total += delta.total;\n  stats.skipped += delta.skipped;\n  stats.expected += delta.expected;\n  stats.unexpected += delta.unexpected;\n  stats.flaky += delta.flaky;\n  stats.ok = stats.ok && delta.ok;\n  return stats;\n};\n\nclass Base64Encoder extends Transform {\n  private _remainder: Buffer | undefined;\n\n  override _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void {\n    if (this._remainder) {\n      chunk = Buffer.concat([this._remainder, chunk]);\n      this._remainder = undefined;\n    }\n\n    const remaining = chunk.length % 3;\n    if (remaining) {\n      this._remainder = chunk.slice(chunk.length - remaining);\n      chunk = chunk.slice(0, chunk.length - remaining);\n    }\n    chunk = chunk.toString('base64');\n    this.push(Buffer.from(chunk));\n    callback();\n  }\n\n  override _flush(callback: TransformCallback): void {\n    if (this._remainder)\n      this.push(Buffer.from(this._remainder.toString('base64')));\n    callback();\n  }\n}\n\nfunction isTextContentType(contentType: string) {\n  return contentType.startsWith('text/') || contentType.startsWith('application/json');\n}\n\ntype JsonAttachment = {\n  name: string;\n  body?: string | Buffer;\n  path?: string;\n  contentType: string;\n};\n\nfunction stdioAttachment(chunk: Buffer | string, type: 'stdout' | 'stderr'): JsonAttachment {\n  if (typeof chunk === 'string') {\n    return {\n      name: type,\n      contentType: 'text/plain',\n      body: chunk\n    };\n  }\n  return {\n    name: type,\n    contentType: 'application/octet-stream',\n    body: chunk\n  };\n}\n\ntype DedupedStep = { step: TestStepPublic, count: number, duration: number };\n\nfunction dedupeSteps(steps: TestStepPublic[]) {\n  const result: DedupedStep[] = [];\n  let lastResult = undefined;\n  for (const step of steps) {\n    const canDedupe = !step.error && step.duration >= 0 && step.location?.file && !step.steps.length;\n    const lastStep = lastResult?.step;\n    if (canDedupe && lastResult && lastStep && step.category === lastStep.category && step.title === lastStep.title && step.location?.file === lastStep.location?.file && step.location?.line === lastStep.location?.line && step.location?.column === lastStep.location?.column) {\n      ++lastResult.count;\n      lastResult.duration += step.duration;\n      continue;\n    }\n    lastResult = { step, count: 1, duration: step.duration };\n    result.push(lastResult);\n    if (!canDedupe)\n      lastResult = undefined;\n  }\n  return result;\n}\n\nfunction createSnippets(stepsInFile: MultiMap<string, TestStep>) {\n  for (const file of stepsInFile.keys()) {\n    let source: string;\n    try {\n      source = fs.readFileSync(file, 'utf-8') + '\\n//';\n    } catch (e) {\n      continue;\n    }\n    const lines = source.split('\\n').length;\n    const highlighted = codeFrameColumns(source, { start: { line: lines, column: 1 } }, { highlightCode: true, linesAbove: lines, linesBelow: 0 });\n    const highlightedLines = highlighted.split('\\n');\n    const lineWithArrow = highlightedLines[highlightedLines.length - 1];\n    for (const step of stepsInFile.get(file)) {\n      // Don't bother with snippets that have less than 3 lines.\n      if (step.location!.line < 2 || step.location!.line >= lines)\n        continue;\n      // Cut out snippet.\n      const snippetLines = highlightedLines.slice(step.location!.line - 2, step.location!.line + 1);\n      // Relocate arrow.\n      const index = lineWithArrow.indexOf('^');\n      const shiftedArrow = lineWithArrow.slice(0, index) + ' '.repeat(step.location!.column - 1) + lineWithArrow.slice(index);\n      // Insert arrow line.\n      snippetLines.splice(2, 0, shiftedArrow);\n      step.snippet = snippetLines.join('\\n');\n    }\n  }\n}\n\nexport default HtmlReporter;\n"],"mappings":"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"}