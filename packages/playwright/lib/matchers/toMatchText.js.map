{"version":3,"file":"toMatchText.js","names":["_util","require","_expect","_expectBundle","_matcherHint","_utilsBundle","toMatchText","matcherName","receiver","receiverType","query","expected","options","_options$timeout","expectTypes","matcherOptions","isNot","promise","test","Error","matcherHint","colors","bold","EXPECTED_COLOR","utils","printWithType","printExpected","join","timeout","matches","pass","received","log","timedOut","stringSubstring","matchSubstring","receivedString","messagePrefix","undefined","notFound","kNoElementsFoundError","message","callLogText","printedReceived","printReceivedStringContainExpectedSubstring","indexOf","length","printReceivedStringContainExpectedResult","exec","labelExpected","printDiffOrStringify","name","actual"],"sources":["../../src/matchers/toMatchText.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { expectTypes, callLogText } from '../util';\nimport {\n  printReceivedStringContainExpectedResult,\n  printReceivedStringContainExpectedSubstring\n} from './expect';\nimport { EXPECTED_COLOR } from '../common/expectBundle';\nimport type { ExpectMatcherState } from '../../types/test';\nimport { kNoElementsFoundError, matcherHint } from './matcherHint';\nimport type { MatcherResult } from './matcherHint';\nimport type { Locator } from 'playwright-core';\nimport { colors } from 'playwright-core/lib/utilsBundle';\n\nexport async function toMatchText(\n  this: ExpectMatcherState,\n  matcherName: string,\n  receiver: Locator,\n  receiverType: string,\n  query: (isNot: boolean, timeout: number) => Promise<{ matches: boolean, received?: string, log?: string[], timedOut?: boolean }>,\n  expected: string | RegExp,\n  options: { timeout?: number, matchSubstring?: boolean } = {},\n): Promise<MatcherResult<string | RegExp, string>> {\n  expectTypes(receiver, [receiverType], matcherName);\n\n  const matcherOptions = {\n    isNot: this.isNot,\n    promise: this.promise,\n  };\n\n  if (\n    !(typeof expected === 'string') &&\n    !(expected && typeof expected.test === 'function')\n  ) {\n    // Same format as jest's matcherErrorMessage\n    throw new Error([\n      matcherHint(this, receiver, matcherName, receiver, expected, matcherOptions),\n      `${colors.bold('Matcher error')}: ${EXPECTED_COLOR('expected',)} value must be a string or regular expression`,\n      this.utils.printWithType('Expected', expected, this.utils.printExpected)\n    ].join('\\n\\n'));\n  }\n\n  const timeout = options.timeout ?? this.timeout;\n\n  const { matches: pass, received, log, timedOut } = await query(!!this.isNot, timeout);\n  const stringSubstring = options.matchSubstring ? 'substring' : 'string';\n  const receivedString = received || '';\n  const messagePrefix = matcherHint(this, receiver, matcherName, 'locator', undefined, matcherOptions, timedOut ? timeout : undefined);\n  const notFound = received === kNoElementsFoundError;\n  const message = () => {\n    if (pass) {\n      if (typeof expected === 'string') {\n        if (notFound)\n          return messagePrefix + `Expected ${stringSubstring}: not ${this.utils.printExpected(expected)}\\nReceived: ${received}` + callLogText(log);\n        const printedReceived = printReceivedStringContainExpectedSubstring(receivedString, receivedString.indexOf(expected), expected.length);\n        return messagePrefix + `Expected ${stringSubstring}: not ${this.utils.printExpected(expected)}\\nReceived string: ${printedReceived}` + callLogText(log);\n      } else {\n        if (notFound)\n          return messagePrefix + `Expected pattern: not ${this.utils.printExpected(expected)}\\nReceived: ${received}` + callLogText(log);\n        const printedReceived = printReceivedStringContainExpectedResult(receivedString, typeof expected.exec === 'function' ? expected.exec(receivedString) : null);\n        return messagePrefix + `Expected pattern: not ${this.utils.printExpected(expected)}\\nReceived string: ${printedReceived}` + callLogText(log);\n      }\n    } else {\n      const labelExpected = `Expected ${typeof expected === 'string' ? stringSubstring : 'pattern'}`;\n      if (notFound)\n        return messagePrefix + `${labelExpected}: ${this.utils.printExpected(expected)}\\nReceived: ${received}` + callLogText(log);\n      return messagePrefix + this.utils.printDiffOrStringify(expected, receivedString, labelExpected, 'Received string', false) + callLogText(log);\n    }\n  };\n\n  return {\n    name: matcherName,\n    expected,\n    message,\n    pass,\n    actual: received,\n    log,\n    timeout: timedOut ? timeout : undefined,\n  };\n}\n"],"mappings":"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"}