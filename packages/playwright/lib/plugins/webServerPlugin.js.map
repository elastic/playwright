{"version":3,"file":"webServerPlugin.js","names":["_path","_interopRequireDefault","require","_net","_utilsBundle","_utils","obj","__esModule","default","DEFAULT_ENVIRONMENT_VARIABLES","debugWebServer","debug","WebServerPlugin","constructor","options","checkPortOnly","_isAvailableCallback","_killProcess","_processExitedPromise","_options","_checkPortOnly","_reporter","name","setup","config","configDir","reporter","_this$_reporter$onStd","url","getIsAvailableFunction","ignoreHTTPSErrors","onStdErr","bind","undefined","cwd","path","resolve","_startProcess","_waitForProcess","error","teardown","_this$_killProcess","call","_this$_isAvailableCal","processExitedReject","Promise","_","reject","isAlreadyAvailable","_this$_options$url","reuseExistingServer","port","URL","Error","command","launchedProcess","kill","launchProcess","env","process","stdio","shell","attemptToGracefullyClose","log","onExit","code","tempDirectories","stderr","on","data","_onStdErr","_ref","enabled","prefixOutputLines","toString","stdout","_onStdOut","_ref2","onStdOut","catch","launchTimeout","timeout","cancellationToken","canceled","timedOut","race","raceAgainstDeadline","waitFor","monotonicTime","exports","isPortUsed","innerIsPortUsed","host","conn","net","connect","end","waitFn","logScale","connected","delay","shift","x","setTimeout","urlObject","isURLAvailable","webServer","webServerPluginsForConfig","shouldSetBaseUrl","webServerPlugins","webServerConfig","webServers","PLAYWRIGHT_TEST_BASE_URL","push","output","lastIsNewLine","length","lines","split","pop","map","line","colors","dim","join"],"sources":["../../src/plugins/webServerPlugin.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport path from 'path';\nimport net from 'net';\n\nimport { colors, debug } from 'playwright-core/lib/utilsBundle';\nimport { raceAgainstDeadline, launchProcess, monotonicTime, isURLAvailable } from 'playwright-core/lib/utils';\n\nimport type { FullConfig } from '../../types/testReporter';\nimport type { TestRunnerPlugin } from '.';\nimport type { FullConfigInternal } from '../common/config';\nimport type { ReporterV2 } from '../reporters/reporterV2';\n\n\nexport type WebServerPluginOptions = {\n  command: string;\n  url?: string;\n  ignoreHTTPSErrors?: boolean;\n  timeout?: number;\n  reuseExistingServer?: boolean;\n  cwd?: string;\n  env?: { [key: string]: string; };\n  stdout?: 'pipe' | 'ignore';\n  stderr?: 'pipe' | 'ignore';\n};\n\nconst DEFAULT_ENVIRONMENT_VARIABLES = {\n  'BROWSER': 'none', // Disable that create-react-app will open the page in the browser\n  'FORCE_COLOR': '1',\n  'DEBUG_COLORS': '1',\n};\n\nconst debugWebServer = debug('pw:webserver');\n\nexport class WebServerPlugin implements TestRunnerPlugin {\n  private _isAvailableCallback?: () => Promise<boolean>;\n  private _killProcess?: () => Promise<void>;\n  private _processExitedPromise!: Promise<any>;\n  private _options: WebServerPluginOptions;\n  private _checkPortOnly: boolean;\n  private _reporter?: ReporterV2;\n  name = 'playwright:webserver';\n\n  constructor(options: WebServerPluginOptions, checkPortOnly: boolean) {\n    this._options = options;\n    this._checkPortOnly = checkPortOnly;\n  }\n\n  public async setup(config: FullConfig, configDir: string, reporter: ReporterV2) {\n    this._reporter = reporter;\n    this._isAvailableCallback = this._options.url ? getIsAvailableFunction(this._options.url, this._checkPortOnly, !!this._options.ignoreHTTPSErrors, this._reporter.onStdErr?.bind(this._reporter)) : undefined;\n    this._options.cwd = this._options.cwd ? path.resolve(configDir, this._options.cwd) : configDir;\n    try {\n      await this._startProcess();\n      await this._waitForProcess();\n    } catch (error) {\n      await this.teardown();\n      throw error;\n    }\n  }\n\n  public async teardown() {\n    debugWebServer(`Terminating the WebServer`);\n    await this._killProcess?.();\n    debugWebServer(`Terminated the WebServer`);\n  }\n\n  private async _startProcess(): Promise<void> {\n    let processExitedReject = (error: Error) => { };\n    this._processExitedPromise = new Promise((_, reject) => processExitedReject = reject);\n\n    const isAlreadyAvailable = await this._isAvailableCallback?.();\n    if (isAlreadyAvailable) {\n      debugWebServer(`WebServer is already available`);\n      if (this._options.reuseExistingServer)\n        return;\n      const port = new URL(this._options.url!).port;\n      throw new Error(`${this._options.url ?? `http://localhost${port ? ':' + port : ''}`} is already used, make sure that nothing is running on the port/url or set reuseExistingServer:true in config.webServer.`);\n    }\n\n    debugWebServer(`Starting WebServer process ${this._options.command}...`);\n    const { launchedProcess, kill } = await launchProcess({\n      command: this._options.command,\n      env: {\n        ...DEFAULT_ENVIRONMENT_VARIABLES,\n        ...process.env,\n        ...this._options.env,\n      },\n      cwd: this._options.cwd,\n      stdio: 'stdin',\n      shell: true,\n      // Reject to indicate that we cannot close the web server gracefully\n      // and should fallback to non-graceful shutdown.\n      attemptToGracefullyClose: () => Promise.reject(),\n      log: () => {},\n      onExit: code => processExitedReject(new Error(code ? `Process from config.webServer was not able to start. Exit code: ${code}` : 'Process from config.webServer exited early.')),\n      tempDirectories: [],\n    });\n    this._killProcess = kill;\n\n    debugWebServer(`Process started`);\n\n    launchedProcess.stderr!.on('data', data => {\n      if (debugWebServer.enabled || (this._options.stderr === 'pipe' || !this._options.stderr))\n        this._reporter!.onStdErr?.(prefixOutputLines(data.toString()));\n    });\n    launchedProcess.stdout!.on('data', data => {\n      if (debugWebServer.enabled || this._options.stdout === 'pipe')\n        this._reporter!.onStdOut?.(prefixOutputLines(data.toString()));\n    });\n  }\n\n  private async _waitForProcess() {\n    if (!this._isAvailableCallback) {\n      this._processExitedPromise.catch(() => {});\n      return;\n    }\n    debugWebServer(`Waiting for availability...`);\n    const launchTimeout = this._options.timeout || 60 * 1000;\n    const cancellationToken = { canceled: false };\n    const { timedOut } = (await Promise.race([\n      raceAgainstDeadline(() => waitFor(this._isAvailableCallback!, cancellationToken), monotonicTime() + launchTimeout),\n      this._processExitedPromise,\n    ]));\n    cancellationToken.canceled = true;\n    if (timedOut)\n      throw new Error(`Timed out waiting ${launchTimeout}ms from config.webServer.`);\n    debugWebServer(`WebServer available`);\n  }\n}\n\nasync function isPortUsed(port: number): Promise<boolean> {\n  const innerIsPortUsed = (host: string) => new Promise<boolean>(resolve => {\n    const conn = net\n        .connect(port, host)\n        .on('error', () => {\n          resolve(false);\n        })\n        .on('connect', () => {\n          conn.end();\n          resolve(true);\n        });\n  });\n  return await innerIsPortUsed('127.0.0.1') || await innerIsPortUsed('::1');\n}\n\nasync function waitFor(waitFn: () => Promise<boolean>, cancellationToken: { canceled: boolean }) {\n  const logScale = [100, 250, 500];\n  while (!cancellationToken.canceled) {\n    const connected = await waitFn();\n    if (connected)\n      return;\n    const delay = logScale.shift() || 1000;\n    debugWebServer(`Waiting ${delay}ms`);\n    await new Promise(x => setTimeout(x, delay));\n  }\n}\n\nfunction getIsAvailableFunction(url: string, checkPortOnly: boolean, ignoreHTTPSErrors: boolean, onStdErr: ReporterV2['onStdErr']) {\n  const urlObject = new URL(url);\n  if (!checkPortOnly)\n    return () => isURLAvailable(urlObject, ignoreHTTPSErrors, debugWebServer, onStdErr);\n  const port = urlObject.port;\n  return () => isPortUsed(+port);\n}\n\nexport const webServer = (options: WebServerPluginOptions): TestRunnerPlugin => {\n  return new WebServerPlugin(options, false);\n};\n\nexport const webServerPluginsForConfig = (config: FullConfigInternal): TestRunnerPlugin[] => {\n  const shouldSetBaseUrl = !!config.config.webServer;\n  const webServerPlugins = [];\n  for (const webServerConfig of config.webServers) {\n    if (webServerConfig.port && webServerConfig.url)\n      throw new Error(`Either 'port' or 'url' should be specified in config.webServer.`);\n\n    let url: string | undefined;\n    if (webServerConfig.port || webServerConfig.url) {\n      url = webServerConfig.url || `http://localhost:${webServerConfig.port}`;\n\n      // We only set base url when only the port is given. That's a legacy mode we have regrets about.\n      if (shouldSetBaseUrl && !webServerConfig.url)\n        process.env.PLAYWRIGHT_TEST_BASE_URL = url;\n    }\n    webServerPlugins.push(new WebServerPlugin({ ...webServerConfig,  url }, webServerConfig.port !== undefined));\n  }\n\n  return webServerPlugins;\n};\n\nfunction prefixOutputLines(output: string) {\n  const lastIsNewLine = output[output.length - 1] === '\\n';\n  let lines = output.split('\\n');\n  if (lastIsNewLine)\n    lines.pop();\n  lines = lines.map(line => colors.dim('[WebServer] ') + line);\n  if (lastIsNewLine)\n    lines.push('');\n  return lines.join('\\n');\n}\n"],"mappings":";;;;;;AAeA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,IAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAA8G,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAnB9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAyBA,MAAMG,6BAA6B,GAAG;EACpC,SAAS,EAAE,MAAM;EAAE;EACnB,aAAa,EAAE,GAAG;EAClB,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,cAAc,GAAG,IAAAC,kBAAK,EAAC,cAAc,CAAC;AAErC,MAAMC,eAAe,CAA6B;EASvDC,WAAWA,CAACC,OAA+B,EAAEC,aAAsB,EAAE;IAAA,KAR7DC,oBAAoB;IAAA,KACpBC,YAAY;IAAA,KACZC,qBAAqB;IAAA,KACrBC,QAAQ;IAAA,KACRC,cAAc;IAAA,KACdC,SAAS;IAAA,KACjBC,IAAI,GAAG,sBAAsB;IAG3B,IAAI,CAACH,QAAQ,GAAGL,OAAO;IACvB,IAAI,CAACM,cAAc,GAAGL,aAAa;EACrC;EAEA,MAAaQ,KAAKA,CAACC,MAAkB,EAAEC,SAAiB,EAAEC,QAAoB,EAAE;IAAA,IAAAC,qBAAA;IAC9E,IAAI,CAACN,SAAS,GAAGK,QAAQ;IACzB,IAAI,CAACV,oBAAoB,GAAG,IAAI,CAACG,QAAQ,CAACS,GAAG,GAAGC,sBAAsB,CAAC,IAAI,CAACV,QAAQ,CAACS,GAAG,EAAE,IAAI,CAACR,cAAc,EAAE,CAAC,CAAC,IAAI,CAACD,QAAQ,CAACW,iBAAiB,GAAAH,qBAAA,GAAE,IAAI,CAACN,SAAS,CAACU,QAAQ,cAAAJ,qBAAA,uBAAvBA,qBAAA,CAAyBK,IAAI,CAAC,IAAI,CAACX,SAAS,CAAC,CAAC,GAAGY,SAAS;IAC5M,IAAI,CAACd,QAAQ,CAACe,GAAG,GAAG,IAAI,CAACf,QAAQ,CAACe,GAAG,GAAGC,aAAI,CAACC,OAAO,CAACX,SAAS,EAAE,IAAI,CAACN,QAAQ,CAACe,GAAG,CAAC,GAAGT,SAAS;IAC9F,IAAI;MACF,MAAM,IAAI,CAACY,aAAa,CAAC,CAAC;MAC1B,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAI,CAACC,QAAQ,CAAC,CAAC;MACrB,MAAMD,KAAK;IACb;EACF;EAEA,MAAaC,QAAQA,CAAA,EAAG;IAAA,IAAAC,kBAAA;IACtB/B,cAAc,CAAE,2BAA0B,CAAC;IAC3C,QAAA+B,kBAAA,GAAM,IAAI,CAACxB,YAAY,cAAAwB,kBAAA,uBAAjBA,kBAAA,CAAAC,IAAA,KAAoB,CAAC;IAC3BhC,cAAc,CAAE,0BAAyB,CAAC;EAC5C;EAEA,MAAc2B,aAAaA,CAAA,EAAkB;IAAA,IAAAM,qBAAA;IAC3C,IAAIC,mBAAmB,GAAIL,KAAY,IAAK,CAAE,CAAC;IAC/C,IAAI,CAACrB,qBAAqB,GAAG,IAAI2B,OAAO,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAKH,mBAAmB,GAAGG,MAAM,CAAC;IAErF,MAAMC,kBAAkB,GAAG,QAAAL,qBAAA,GAAM,IAAI,CAAC3B,oBAAoB,cAAA2B,qBAAA,uBAAzBA,qBAAA,CAAAD,IAAA,KAA4B,CAAC;IAC9D,IAAIM,kBAAkB,EAAE;MAAA,IAAAC,kBAAA;MACtBvC,cAAc,CAAE,gCAA+B,CAAC;MAChD,IAAI,IAAI,CAACS,QAAQ,CAAC+B,mBAAmB,EACnC;MACF,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACjC,QAAQ,CAACS,GAAI,CAAC,CAACuB,IAAI;MAC7C,MAAM,IAAIE,KAAK,CAAE,IAAAJ,kBAAA,GAAE,IAAI,CAAC9B,QAAQ,CAACS,GAAG,cAAAqB,kBAAA,cAAAA,kBAAA,GAAK,mBAAkBE,IAAI,GAAG,GAAG,GAAGA,IAAI,GAAG,EAAG,EAAE,0HAAyH,CAAC;IAChN;IAEAzC,cAAc,CAAE,8BAA6B,IAAI,CAACS,QAAQ,CAACmC,OAAQ,KAAI,CAAC;IACxE,MAAM;MAAEC,eAAe;MAAEC;IAAK,CAAC,GAAG,MAAM,IAAAC,oBAAa,EAAC;MACpDH,OAAO,EAAE,IAAI,CAACnC,QAAQ,CAACmC,OAAO;MAC9BI,GAAG,EAAE;QACH,GAAGjD,6BAA6B;QAChC,GAAGkD,OAAO,CAACD,GAAG;QACd,GAAG,IAAI,CAACvC,QAAQ,CAACuC;MACnB,CAAC;MACDxB,GAAG,EAAE,IAAI,CAACf,QAAQ,CAACe,GAAG;MACtB0B,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE,IAAI;MACX;MACA;MACAC,wBAAwB,EAAEA,CAAA,KAAMjB,OAAO,CAACE,MAAM,CAAC,CAAC;MAChDgB,GAAG,EAAEA,CAAA,KAAM,CAAC,CAAC;MACbC,MAAM,EAAEC,IAAI,IAAIrB,mBAAmB,CAAC,IAAIS,KAAK,CAACY,IAAI,GAAI,mEAAkEA,IAAK,EAAC,GAAG,6CAA6C,CAAC,CAAC;MAChLC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,IAAI,CAACjD,YAAY,GAAGuC,IAAI;IAExB9C,cAAc,CAAE,iBAAgB,CAAC;IAEjC6C,eAAe,CAACY,MAAM,CAAEC,EAAE,CAAC,MAAM,EAAEC,IAAI,IAAI;MAAA,IAAAC,SAAA,EAAAC,IAAA;MACzC,IAAI7D,cAAc,CAAC8D,OAAO,IAAK,IAAI,CAACrD,QAAQ,CAACgD,MAAM,KAAK,MAAM,IAAI,CAAC,IAAI,CAAChD,QAAQ,CAACgD,MAAO,EACtF,CAAAG,SAAA,IAAAC,IAAA,OAAI,CAAClD,SAAS,EAAEU,QAAQ,cAAAuC,SAAA,eAAxBA,SAAA,CAAA5B,IAAA,CAAA6B,IAAA,EAA2BE,iBAAiB,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;IACFnB,eAAe,CAACoB,MAAM,CAAEP,EAAE,CAAC,MAAM,EAAEC,IAAI,IAAI;MAAA,IAAAO,SAAA,EAAAC,KAAA;MACzC,IAAInE,cAAc,CAAC8D,OAAO,IAAI,IAAI,CAACrD,QAAQ,CAACwD,MAAM,KAAK,MAAM,EAC3D,CAAAC,SAAA,IAAAC,KAAA,OAAI,CAACxD,SAAS,EAAEyD,QAAQ,cAAAF,SAAA,eAAxBA,SAAA,CAAAlC,IAAA,CAAAmC,KAAA,EAA2BJ,iBAAiB,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;EACJ;EAEA,MAAcpC,eAAeA,CAAA,EAAG;IAC9B,IAAI,CAAC,IAAI,CAACtB,oBAAoB,EAAE;MAC9B,IAAI,CAACE,qBAAqB,CAAC6D,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;MAC1C;IACF;IACArE,cAAc,CAAE,6BAA4B,CAAC;IAC7C,MAAMsE,aAAa,GAAG,IAAI,CAAC7D,QAAQ,CAAC8D,OAAO,IAAI,EAAE,GAAG,IAAI;IACxD,MAAMC,iBAAiB,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;IAC7C,MAAM;MAAEC;IAAS,CAAC,GAAI,MAAMvC,OAAO,CAACwC,IAAI,CAAC,CACvC,IAAAC,0BAAmB,EAAC,MAAMC,OAAO,CAAC,IAAI,CAACvE,oBAAoB,EAAGkE,iBAAiB,CAAC,EAAE,IAAAM,oBAAa,EAAC,CAAC,GAAGR,aAAa,CAAC,EAClH,IAAI,CAAC9D,qBAAqB,CAC3B,CAAE;IACHgE,iBAAiB,CAACC,QAAQ,GAAG,IAAI;IACjC,IAAIC,QAAQ,EACV,MAAM,IAAI/B,KAAK,CAAE,qBAAoB2B,aAAc,2BAA0B,CAAC;IAChFtE,cAAc,CAAE,qBAAoB,CAAC;EACvC;AACF;AAAC+E,OAAA,CAAA7E,eAAA,GAAAA,eAAA;AAED,eAAe8E,UAAUA,CAACvC,IAAY,EAAoB;EACxD,MAAMwC,eAAe,GAAIC,IAAY,IAAK,IAAI/C,OAAO,CAAUT,OAAO,IAAI;IACxE,MAAMyD,IAAI,GAAGC,YAAG,CACXC,OAAO,CAAC5C,IAAI,EAAEyC,IAAI,CAAC,CACnBxB,EAAE,CAAC,OAAO,EAAE,MAAM;MACjBhC,OAAO,CAAC,KAAK,CAAC;IAChB,CAAC,CAAC,CACDgC,EAAE,CAAC,SAAS,EAAE,MAAM;MACnByB,IAAI,CAACG,GAAG,CAAC,CAAC;MACV5D,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;EACR,CAAC,CAAC;EACF,OAAO,OAAMuD,eAAe,CAAC,WAAW,CAAC,MAAI,MAAMA,eAAe,CAAC,KAAK,CAAC;AAC3E;AAEA,eAAeJ,OAAOA,CAACU,MAA8B,EAAEf,iBAAwC,EAAE;EAC/F,MAAMgB,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChC,OAAO,CAAChB,iBAAiB,CAACC,QAAQ,EAAE;IAClC,MAAMgB,SAAS,GAAG,MAAMF,MAAM,CAAC,CAAC;IAChC,IAAIE,SAAS,EACX;IACF,MAAMC,KAAK,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,IAAI,IAAI;IACtC3F,cAAc,CAAE,WAAU0F,KAAM,IAAG,CAAC;IACpC,MAAM,IAAIvD,OAAO,CAACyD,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAEF,KAAK,CAAC,CAAC;EAC9C;AACF;AAEA,SAASvE,sBAAsBA,CAACD,GAAW,EAAEb,aAAsB,EAAEe,iBAA0B,EAAEC,QAAgC,EAAE;EACjI,MAAMyE,SAAS,GAAG,IAAIpD,GAAG,CAACxB,GAAG,CAAC;EAC9B,IAAI,CAACb,aAAa,EAChB,OAAO,MAAM,IAAA0F,qBAAc,EAACD,SAAS,EAAE1E,iBAAiB,EAAEpB,cAAc,EAAEqB,QAAQ,CAAC;EACrF,MAAMoB,IAAI,GAAGqD,SAAS,CAACrD,IAAI;EAC3B,OAAO,MAAMuC,UAAU,CAAC,CAACvC,IAAI,CAAC;AAChC;AAEO,MAAMuD,SAAS,GAAI5F,OAA+B,IAAuB;EAC9E,OAAO,IAAIF,eAAe,CAACE,OAAO,EAAE,KAAK,CAAC;AAC5C,CAAC;AAAC2E,OAAA,CAAAiB,SAAA,GAAAA,SAAA;AAEK,MAAMC,yBAAyB,GAAInF,MAA0B,IAAyB;EAC3F,MAAMoF,gBAAgB,GAAG,CAAC,CAACpF,MAAM,CAACA,MAAM,CAACkF,SAAS;EAClD,MAAMG,gBAAgB,GAAG,EAAE;EAC3B,KAAK,MAAMC,eAAe,IAAItF,MAAM,CAACuF,UAAU,EAAE;IAC/C,IAAID,eAAe,CAAC3D,IAAI,IAAI2D,eAAe,CAAClF,GAAG,EAC7C,MAAM,IAAIyB,KAAK,CAAE,iEAAgE,CAAC;IAEpF,IAAIzB,GAAuB;IAC3B,IAAIkF,eAAe,CAAC3D,IAAI,IAAI2D,eAAe,CAAClF,GAAG,EAAE;MAC/CA,GAAG,GAAGkF,eAAe,CAAClF,GAAG,IAAK,oBAAmBkF,eAAe,CAAC3D,IAAK,EAAC;;MAEvE;MACA,IAAIyD,gBAAgB,IAAI,CAACE,eAAe,CAAClF,GAAG,EAC1C+B,OAAO,CAACD,GAAG,CAACsD,wBAAwB,GAAGpF,GAAG;IAC9C;IACAiF,gBAAgB,CAACI,IAAI,CAAC,IAAIrG,eAAe,CAAC;MAAE,GAAGkG,eAAe;MAAGlF;IAAI,CAAC,EAAEkF,eAAe,CAAC3D,IAAI,KAAKlB,SAAS,CAAC,CAAC;EAC9G;EAEA,OAAO4E,gBAAgB;AACzB,CAAC;AAACpB,OAAA,CAAAkB,yBAAA,GAAAA,yBAAA;AAEF,SAASlC,iBAAiBA,CAACyC,MAAc,EAAE;EACzC,MAAMC,aAAa,GAAGD,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI;EACxD,IAAIC,KAAK,GAAGH,MAAM,CAACI,KAAK,CAAC,IAAI,CAAC;EAC9B,IAAIH,aAAa,EACfE,KAAK,CAACE,GAAG,CAAC,CAAC;EACbF,KAAK,GAAGA,KAAK,CAACG,GAAG,CAACC,IAAI,IAAIC,mBAAM,CAACC,GAAG,CAAC,cAAc,CAAC,GAAGF,IAAI,CAAC;EAC5D,IAAIN,aAAa,EACfE,KAAK,CAACJ,IAAI,CAAC,EAAE,CAAC;EAChB,OAAOI,KAAK,CAACO,IAAI,CAAC,IAAI,CAAC;AACzB"}