{"version":3,"file":"index.js","names":["fs","_interopRequireWildcard","require","path","playwrightLibrary","_utils","_testType","_globals","_expect","_configLoader","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_baseTest","exports","rootTestType","test","addInternalStackPrefix","dirname","resolve","process","originalStackTraceLimit","Error","stackTraceLimit","stack","playwrightFixtures","defaultBrowserType","scope","option","browserName","use","playwright","box","headless","launchOptions","_launchOptions$headle","channel","connectOptions","_optionConnectOptions","connectOptionsFromEnv","screenshot","video","trace","_browserOptions","options","handleSIGINT","undefined","tracesDir","tracing","browserType","chromium","firefox","webkit","_experimentalBidi","_defaultLaunchOptions","auto","browser","_reuseContext","testInfo","includes","_connectOptions$expos","connect","exposeNetwork","_exposeNetwork","headers","jsonStringifyForceASCII","_wrapApiCall","close","reason","launch","timeout","acceptDownloads","contextOptions","_contextOptions$accep","bypassCSP","_contextOptions$bypas","colorScheme","deviceScaleFactor","extraHTTPHeaders","geolocation","hasTouch","_contextOptions$hasTo","httpCredentials","ignoreHTTPSErrors","_contextOptions$ignor","isMobile","_contextOptions$isMob","javaScriptEnabled","_contextOptions$javaS","locale","_contextOptions$local","offline","_contextOptions$offli","permissions","proxy","storageState","clientCertificates","timezoneId","userAgent","viewport","width","height","actionTimeout","testIdAttribute","navigationTimeout","baseURL","env","PLAYWRIGHT_TEST_BASE_URL","serviceWorkers","_contextOptions$servi","_combinedContextOptions","length","resolveClientCerticates","_setupContextOptions","selectors","setTestIdAttribute","snapshotSuffix","platform","debugMode","_setDebugMode","_defaultContextOptions","_defaultContextTimeout","_defaultContextNavigationTimeout","request","title","_setupArtifacts","setTimeout","project","artifactsRecorder","ArtifactsRecorder","artifactsDir","willStartTest","csiListener","onApiCallBegin","apiName","params","frames","userData","out","currentTestInfo","userObject","step","_addStep","location","category","renderApiCall","stepId","onApiCallEnd","error","complete","onWillPause","_currentTestInfo","runAfterCreateBrowserContext","context","didCreateBrowserContext","attachConnectedHeaderIfNeeded","runAfterCreateRequestContext","didCreateRequestContext","runBeforeCloseBrowserContext","willCloseBrowserContext","runBeforeCloseRequestContext","willCloseRequestContext","clientInstrumentation","_instrumentation","addListener","removeListener","didFinishTest","_contextFactory","testInfoImpl","videoMode","normalizeVideoMode","captureVideo","shouldCaptureVideo","contexts","Map","hook","_currentHookType","join","videoOptions","recordVideo","dir","size","newContext","contextData","pagesWithVideo","on","page","push","PW_CLOCK","clock","install","time","pauseAt","counter","closeReason","status","Promise","all","keys","map","testFailed","expectedStatus","preserveVideo","retry","pagesForVideo","videos","p","filter","Boolean","v","savedPath","outputPath","saveAs","attachments","name","contentType","_optionContextReuseMode","mode","PW_TEST_REUSE_CONTEXT","reuse","defaultContextOptions","_newContextForReuse","kIsReusedContext","_stopPendingOperations","newPage","pages","info","dispose","normalizeScreenshotMode","connectHeaders","_connectHeaders","header","value","split","some","attachment","body","Buffer","from","resolveFileToConfig","file","config","configFile","isAbsolute","cert","certPath","keyPath","pfxPath","kTracingStarted","Symbol","wsEndpoint","PW_TEST_CONNECT_WS_ENDPOINT","PW_TEST_CONNECT_HEADERS","JSON","parse","PW_TEST_CONNECT_EXPOSE_NETWORK","constructor","_testInfo","_playwright","_artifactsDir","_screenshotMode","_screenshotOptions","_temporaryScreenshots","_temporaryArtifacts","_reusedContexts","Set","_screenshotOrdinal","_screenshottedSymbol","_startedCollectingArtifacts","_createTemporaryArtifact","_onDidFinishTestFunction","didFinishTestFunction","promises","existingContexts","Array","_contexts","add","existingApiRequests","c","_startTraceChunkOnContextCreation","_stopTracing","_screenshotPage","_tracing","captureScreenshots","_isFailure","_screenshotOnTestFailure","leftoverContexts","leftoverApiRequests","concat","screenshotPath","_createScreenshotAttachmentPath","rename","_attachScreenshot","index","temporary","createGuid","caret","ctx","flat","traceOptions","traceTitle","generateNextTraceRecordingName","start","startChunk","stop","stopChunk","generateNextTraceRecordingPath","paramsToRender","paramsArray","isString","startsWith","getter","asLocator","replace","paramsText","extend"],"sources":["../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport type { APIRequestContext, BrowserContext, Browser, BrowserContextOptions, LaunchOptions, Page, Tracing, Video } from 'playwright-core';\nimport * as playwrightLibrary from 'playwright-core';\nimport { createGuid, debugMode, addInternalStackPrefix, isString, asLocator, jsonStringifyForceASCII } from 'playwright-core/lib/utils';\nimport type { Fixtures, PlaywrightTestArgs, PlaywrightTestOptions, PlaywrightWorkerArgs, PlaywrightWorkerOptions, ScreenshotMode, TestInfo, TestType, VideoMode } from '../types/test';\nimport type { TestInfoImpl } from './worker/testInfo';\nimport { rootTestType } from './common/testType';\nimport type { ContextReuseMode } from './common/config';\nimport type { ClientInstrumentation, ClientInstrumentationListener } from '../../playwright-core/src/client/clientInstrumentation';\nimport { currentTestInfo } from './common/globals';\nexport { expect } from './matchers/expect';\nexport const _baseTest: TestType<{}, {}> = rootTestType.test;\n\naddInternalStackPrefix(path.dirname(require.resolve('../package.json')));\n\nif ((process as any)['__pw_initiator__']) {\n  const originalStackTraceLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 200;\n  try {\n    throw new Error('Requiring @playwright/test second time, \\nFirst:\\n' + (process as any)['__pw_initiator__'] + '\\n\\nSecond: ');\n  } finally {\n    Error.stackTraceLimit = originalStackTraceLimit;\n  }\n} else {\n  (process as any)['__pw_initiator__'] = new Error().stack;\n}\n\ntype TestFixtures = PlaywrightTestArgs & PlaywrightTestOptions & {\n  _combinedContextOptions: BrowserContextOptions,\n  _setupContextOptions: void;\n  _setupArtifacts: void;\n  _contextFactory: (options?: BrowserContextOptions) => Promise<BrowserContext>;\n};\n\ntype WorkerFixtures = PlaywrightWorkerArgs & PlaywrightWorkerOptions & {\n  _browserOptions: LaunchOptions;\n  _optionContextReuseMode: ContextReuseMode,\n  _optionConnectOptions: PlaywrightWorkerOptions['connectOptions'],\n  _reuseContext: boolean,\n};\n\nconst playwrightFixtures: Fixtures<TestFixtures, WorkerFixtures> = ({\n  defaultBrowserType: ['chromium', { scope: 'worker', option: true }],\n  browserName: [({ defaultBrowserType }, use) => use(defaultBrowserType), { scope: 'worker', option: true }],\n  playwright: [async ({}, use) => {\n    await use(require('playwright-core'));\n  }, { scope: 'worker', box: true }],\n  headless: [({ launchOptions }, use) => use(launchOptions.headless ?? true), { scope: 'worker', option: true }],\n  channel: [({ launchOptions }, use) => use(launchOptions.channel), { scope: 'worker', option: true }],\n  launchOptions: [{}, { scope: 'worker', option: true }],\n  connectOptions: [async ({ _optionConnectOptions }, use) => {\n    await use(connectOptionsFromEnv() || _optionConnectOptions);\n  }, { scope: 'worker', option: true }],\n  screenshot: ['off', { scope: 'worker', option: true }],\n  video: ['off', { scope: 'worker', option: true }],\n  trace: ['off', { scope: 'worker', option: true }],\n\n  _browserOptions: [async ({ playwright, headless, channel, launchOptions }, use) => {\n    const options: LaunchOptions = {\n      handleSIGINT: false,\n      ...launchOptions,\n    };\n    if (headless !== undefined)\n      options.headless = headless;\n    if (channel !== undefined)\n      options.channel = channel;\n    options.tracesDir = tracing().tracesDir();\n\n    for (const browserType of [playwright.chromium, playwright.firefox, playwright.webkit, playwright._experimentalBidi])\n      (browserType as any)._defaultLaunchOptions = options;\n    await use(options);\n    for (const browserType of [playwright.chromium, playwright.firefox, playwright.webkit, playwright._experimentalBidi])\n      (browserType as any)._defaultLaunchOptions = undefined;\n  }, { scope: 'worker', auto: true, box: true }],\n\n  browser: [async ({ playwright, browserName, _browserOptions, connectOptions, _reuseContext }, use, testInfo) => {\n    if (!['chromium', 'firefox', 'webkit', '_experimentalBidi'].includes(browserName))\n      throw new Error(`Unexpected browserName \"${browserName}\", must be one of \"chromium\", \"firefox\" or \"webkit\"`);\n\n    if (connectOptions) {\n      const browser = await playwright[browserName].connect({\n        ...connectOptions,\n        exposeNetwork: connectOptions.exposeNetwork ?? (connectOptions as any)._exposeNetwork,\n        headers: {\n          ...(_reuseContext ? { 'x-playwright-reuse-context': '1' } : {}),\n          // HTTP headers are ASCII only (not UTF-8).\n          'x-playwright-launch-options': jsonStringifyForceASCII(_browserOptions),\n          ...connectOptions.headers,\n        },\n      });\n      await use(browser);\n      await (browser as any)._wrapApiCall(async () => {\n        await browser.close({ reason: 'Test ended.' });\n      }, true);\n      return;\n    }\n\n    const browser = await playwright[browserName].launch();\n    await use(browser);\n    await (browser as any)._wrapApiCall(async () => {\n      await browser.close({ reason: 'Test ended.' });\n    }, true);\n  }, { scope: 'worker', timeout: 0 }],\n\n  acceptDownloads: [({ contextOptions }, use) => use(contextOptions.acceptDownloads ?? true), { option: true }],\n  bypassCSP: [({ contextOptions }, use) => use(contextOptions.bypassCSP ?? false), { option: true }],\n  colorScheme: [({ contextOptions }, use) => use(contextOptions.colorScheme === undefined ? 'light' : contextOptions.colorScheme), { option: true }],\n  deviceScaleFactor: [({ contextOptions }, use) => use(contextOptions.deviceScaleFactor), { option: true }],\n  extraHTTPHeaders: [({ contextOptions }, use) => use(contextOptions.extraHTTPHeaders), { option: true }],\n  geolocation: [({ contextOptions }, use) => use(contextOptions.geolocation), { option: true }],\n  hasTouch: [({ contextOptions }, use) => use(contextOptions.hasTouch ?? false), { option: true }],\n  httpCredentials: [({ contextOptions }, use) => use(contextOptions.httpCredentials), { option: true }],\n  ignoreHTTPSErrors: [({ contextOptions }, use) => use(contextOptions.ignoreHTTPSErrors ?? false), { option: true }],\n  isMobile: [({ contextOptions }, use) => use(contextOptions.isMobile ?? false), { option: true }],\n  javaScriptEnabled: [({ contextOptions }, use) => use(contextOptions.javaScriptEnabled ?? true), { option: true }],\n  locale: [({ contextOptions }, use) => use(contextOptions.locale ?? 'en-US'), { option: true }],\n  offline: [({ contextOptions }, use) => use(contextOptions.offline ?? false), { option: true }],\n  permissions: [({ contextOptions }, use) => use(contextOptions.permissions), { option: true }],\n  proxy: [({ contextOptions }, use) => use(contextOptions.proxy), { option: true }],\n  storageState: [({ contextOptions }, use) => use(contextOptions.storageState), { option: true }],\n  clientCertificates: [({ contextOptions }, use) => use(contextOptions.clientCertificates), { option: true }],\n  timezoneId: [({ contextOptions }, use) => use(contextOptions.timezoneId), { option: true }],\n  userAgent: [({ contextOptions }, use) => use(contextOptions.userAgent), { option: true }],\n  viewport: [({ contextOptions }, use) => use(contextOptions.viewport === undefined ? { width: 1280, height: 720 } : contextOptions.viewport), { option: true }],\n  actionTimeout: [0, { option: true }],\n  testIdAttribute: ['data-testid', { option: true }],\n  navigationTimeout: [0, { option: true }],\n  baseURL: [async ({ }, use) => {\n    await use(process.env.PLAYWRIGHT_TEST_BASE_URL);\n  }, { option: true }],\n  serviceWorkers: [({ contextOptions }, use) => use(contextOptions.serviceWorkers ?? 'allow'), { option: true }],\n  contextOptions: [{}, { option: true }],\n\n  _combinedContextOptions: [async ({\n    acceptDownloads,\n    bypassCSP,\n    clientCertificates,\n    colorScheme,\n    deviceScaleFactor,\n    extraHTTPHeaders,\n    hasTouch,\n    geolocation,\n    httpCredentials,\n    ignoreHTTPSErrors,\n    isMobile,\n    javaScriptEnabled,\n    locale,\n    offline,\n    permissions,\n    proxy,\n    storageState,\n    viewport,\n    timezoneId,\n    userAgent,\n    baseURL,\n    contextOptions,\n    serviceWorkers,\n  }, use) => {\n    const options: BrowserContextOptions = {};\n    if (acceptDownloads !== undefined)\n      options.acceptDownloads = acceptDownloads;\n    if (bypassCSP !== undefined)\n      options.bypassCSP = bypassCSP;\n    if (colorScheme !== undefined)\n      options.colorScheme = colorScheme;\n    if (deviceScaleFactor !== undefined)\n      options.deviceScaleFactor = deviceScaleFactor;\n    if (extraHTTPHeaders !== undefined)\n      options.extraHTTPHeaders = extraHTTPHeaders;\n    if (geolocation !== undefined)\n      options.geolocation = geolocation;\n    if (hasTouch !== undefined)\n      options.hasTouch = hasTouch;\n    if (httpCredentials !== undefined)\n      options.httpCredentials = httpCredentials;\n    if (ignoreHTTPSErrors !== undefined)\n      options.ignoreHTTPSErrors = ignoreHTTPSErrors;\n    if (isMobile !== undefined)\n      options.isMobile = isMobile;\n    if (javaScriptEnabled !== undefined)\n      options.javaScriptEnabled = javaScriptEnabled;\n    if (locale !== undefined)\n      options.locale = locale;\n    if (offline !== undefined)\n      options.offline = offline;\n    if (permissions !== undefined)\n      options.permissions = permissions;\n    if (proxy !== undefined)\n      options.proxy = proxy;\n    if (storageState !== undefined)\n      options.storageState = storageState;\n    if (clientCertificates?.length)\n      options.clientCertificates = resolveClientCerticates(clientCertificates);\n    if (timezoneId !== undefined)\n      options.timezoneId = timezoneId;\n    if (userAgent !== undefined)\n      options.userAgent = userAgent;\n    if (viewport !== undefined)\n      options.viewport = viewport;\n    if (baseURL !== undefined)\n      options.baseURL = baseURL;\n    if (serviceWorkers !== undefined)\n      options.serviceWorkers = serviceWorkers;\n    await use({\n      ...contextOptions,\n      ...options,\n    });\n  }, { box: true }],\n\n  _setupContextOptions: [async ({ playwright, _combinedContextOptions, actionTimeout, navigationTimeout, testIdAttribute }, use, testInfo) => {\n    if (testIdAttribute)\n      playwrightLibrary.selectors.setTestIdAttribute(testIdAttribute);\n    testInfo.snapshotSuffix = process.platform;\n    if (debugMode())\n      (testInfo as TestInfoImpl)._setDebugMode();\n    for (const browserType of [playwright.chromium, playwright.firefox, playwright.webkit]) {\n      (browserType as any)._defaultContextOptions = _combinedContextOptions;\n      (browserType as any)._defaultContextTimeout = actionTimeout || 0;\n      (browserType as any)._defaultContextNavigationTimeout = navigationTimeout || 0;\n    }\n    (playwright.request as any)._defaultContextOptions = { ..._combinedContextOptions };\n    (playwright.request as any)._defaultContextOptions.tracesDir = tracing().tracesDir();\n    (playwright.request as any)._defaultContextOptions.timeout = actionTimeout || 0;\n    await use();\n    (playwright.request as any)._defaultContextOptions = undefined;\n    for (const browserType of [playwright.chromium, playwright.firefox, playwright.webkit]) {\n      (browserType as any)._defaultContextOptions = undefined;\n      (browserType as any)._defaultContextTimeout = undefined;\n      (browserType as any)._defaultContextNavigationTimeout = undefined;\n    }\n  }, { auto: 'all-hooks-included',  title: 'context configuration', box: true } as any],\n\n  _setupArtifacts: [async ({ playwright, screenshot }, use, testInfo) => {\n    // This fixture has a separate zero-timeout slot to ensure that artifact collection\n    // happens even after some fixtures or hooks time out.\n    // Now that default test timeout is known, we can replace zero with an actual value.\n    testInfo.setTimeout(testInfo.project.timeout);\n\n    const artifactsRecorder = new ArtifactsRecorder(playwright, tracing().artifactsDir(), screenshot);\n    await artifactsRecorder.willStartTest(testInfo as TestInfoImpl);\n    const csiListener: ClientInstrumentationListener = {\n      onApiCallBegin: (apiName: string, params: Record<string, any>, frames: StackFrame[], userData: any, out: { stepId?: string }) => {\n        const testInfo = currentTestInfo();\n        if (!testInfo || apiName.includes('setTestIdAttribute'))\n          return { userObject: null };\n        const step = testInfo._addStep({\n          location: frames[0] as any,\n          category: 'pw:api',\n          title: renderApiCall(apiName, params),\n          apiName,\n          params,\n        });\n        userData.userObject = step;\n        out.stepId = step.stepId;\n      },\n      onApiCallEnd: (userData: any, error?: Error) => {\n        const step = userData.userObject;\n        step?.complete({ error });\n      },\n      onWillPause: () => {\n        currentTestInfo()?._setDebugMode();\n      },\n      runAfterCreateBrowserContext: async (context: BrowserContext) => {\n        await artifactsRecorder?.didCreateBrowserContext(context);\n        const testInfo = currentTestInfo();\n        if (testInfo)\n          attachConnectedHeaderIfNeeded(testInfo, context.browser());\n      },\n      runAfterCreateRequestContext: async (context: APIRequestContext) => {\n        await artifactsRecorder?.didCreateRequestContext(context);\n      },\n      runBeforeCloseBrowserContext: async (context: BrowserContext) => {\n        await artifactsRecorder?.willCloseBrowserContext(context);\n      },\n      runBeforeCloseRequestContext: async (context: APIRequestContext) => {\n        await artifactsRecorder?.willCloseRequestContext(context);\n      },\n    };\n\n    const clientInstrumentation = (playwright as any)._instrumentation as ClientInstrumentation;\n    clientInstrumentation.addListener(csiListener);\n\n    await use();\n\n    clientInstrumentation.removeListener(csiListener);\n    await artifactsRecorder.didFinishTest();\n\n  }, { auto: 'all-hooks-included',  title: 'trace recording', box: true, timeout: 0 } as any],\n\n  _contextFactory: [async ({ browser, video, _reuseContext, _combinedContextOptions /** mitigate dep-via-auto lack of traceability */ }, use, testInfo) => {\n    const testInfoImpl = testInfo as TestInfoImpl;\n    const videoMode = normalizeVideoMode(video);\n    const captureVideo = shouldCaptureVideo(videoMode, testInfo) && !_reuseContext;\n    const contexts = new Map<BrowserContext, { pagesWithVideo: Page[] }>();\n\n    await use(async options => {\n      const hook = testInfoImpl._currentHookType();\n      if (hook === 'beforeAll' || hook === 'afterAll') {\n        throw new Error([\n          `\"context\" and \"page\" fixtures are not supported in \"${hook}\" since they are created on a per-test basis.`,\n          `If you would like to reuse a single page between tests, create context manually with browser.newContext(). See https://aka.ms/playwright/reuse-page for details.`,\n          `If you would like to configure your page before each test, do that in beforeEach hook instead.`,\n        ].join('\\n'));\n      }\n      const videoOptions: BrowserContextOptions = captureVideo ? {\n        recordVideo: {\n          dir: tracing().artifactsDir(),\n          size: typeof video === 'string' ? undefined : video.size,\n        }\n      } : {};\n      const context = await browser.newContext({ ...videoOptions, ...options });\n      const contextData: { pagesWithVideo: Page[] } = { pagesWithVideo: [] };\n      contexts.set(context, contextData);\n      if (captureVideo)\n        context.on('page', page => contextData.pagesWithVideo.push(page));\n\n      if (process.env.PW_CLOCK === 'frozen') {\n        await (context as any)._wrapApiCall(async () => {\n          await context.clock.install({ time: 0 });\n          await context.clock.pauseAt(1000);\n        }, true);\n      } else if (process.env.PW_CLOCK === 'realtime') {\n        await (context as any)._wrapApiCall(async () => {\n          await context.clock.install({ time: 0 });\n        }, true);\n      }\n\n      return context;\n    });\n\n    let counter = 0;\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await Promise.all([...contexts.keys()].map(async context => {\n      await (context as any)._wrapApiCall(async () => {\n        await context.close({ reason: closeReason });\n      }, true);\n      const testFailed = testInfo.status !== testInfo.expectedStatus;\n      const preserveVideo = captureVideo && (videoMode === 'on' || (testFailed && videoMode === 'retain-on-failure') || (videoMode === 'on-first-retry' && testInfo.retry === 1));\n      if (preserveVideo) {\n        const { pagesWithVideo: pagesForVideo } = contexts.get(context)!;\n        const videos = pagesForVideo.map(p => p.video()).filter(Boolean) as Video[];\n        await Promise.all(videos.map(async v => {\n          try {\n            const savedPath = testInfo.outputPath(`video${counter ? '-' + counter : ''}.webm`);\n            ++counter;\n            await v.saveAs(savedPath);\n            testInfo.attachments.push({ name: 'video', path: savedPath, contentType: 'video/webm' });\n          } catch (e) {\n            // Silent catch empty videos.\n          }\n        }));\n      }\n    }));\n\n  }, { scope: 'test',  title: 'context', box: true }],\n\n  _optionContextReuseMode: ['none', { scope: 'worker', option: true }],\n  _optionConnectOptions: [undefined, { scope: 'worker', option: true }],\n\n  _reuseContext: [async ({ video, _optionContextReuseMode }, use) => {\n    let mode = _optionContextReuseMode;\n    if (process.env.PW_TEST_REUSE_CONTEXT)\n      mode = 'when-possible';\n    const reuse = mode === 'when-possible' && normalizeVideoMode(video) === 'off';\n    await use(reuse);\n  }, { scope: 'worker',  title: 'context', box: true }],\n\n  context: async ({ playwright, browser, _reuseContext, _contextFactory }, use, testInfo) => {\n    attachConnectedHeaderIfNeeded(testInfo, browser);\n    if (!_reuseContext) {\n      await use(await _contextFactory());\n      return;\n    }\n\n    const defaultContextOptions = (playwright.chromium as any)._defaultContextOptions as BrowserContextOptions;\n    const context = await (browser as any)._newContextForReuse(defaultContextOptions);\n    (context as any)[kIsReusedContext] = true;\n    await use(context);\n    const closeReason = testInfo.status === 'timedOut' ? 'Test timeout of ' + testInfo.timeout + 'ms exceeded.' : 'Test ended.';\n    await (browser as any)._stopPendingOperations(closeReason);\n  },\n\n  page: async ({ context, _reuseContext }, use) => {\n    if (!_reuseContext) {\n      await use(await context.newPage());\n      return;\n    }\n\n    // First time we are reusing the context, we should create the page.\n    let [page] = context.pages();\n    if (!page)\n      page = await context.newPage();\n    await use(page);\n  },\n\n  request: async ({ playwright }, use) => {\n    const request = await playwright.request.newContext();\n    await use(request);\n    const hook = (test.info() as TestInfoImpl)._currentHookType();\n    if (hook === 'beforeAll') {\n      await request.dispose({ reason: [\n        `Fixture { request } from beforeAll cannot be reused in a test.`,\n        `  - Recommended fix: use a separate { request } in the test.`,\n        `  - Alternatively, manually create APIRequestContext in beforeAll and dispose it in afterAll.`,\n        `See https://playwright.dev/docs/api-testing#sending-api-requests-from-ui-tests for more details.`,\n      ].join('\\n') });\n    } else {\n      await request.dispose();\n    }\n  },\n});\n\ntype StackFrame = {\n  file: string,\n  line?: number,\n  column?: number,\n  function?: string,\n};\n\ntype ScreenshotOption = PlaywrightWorkerOptions['screenshot'] | undefined;\ntype Playwright = PlaywrightWorkerArgs['playwright'];\n\nfunction normalizeVideoMode(video: VideoMode | 'retry-with-video' | { mode: VideoMode } | undefined): VideoMode {\n  if (!video)\n    return 'off';\n  let videoMode = typeof video === 'string' ? video : video.mode;\n  if (videoMode === 'retry-with-video')\n    videoMode = 'on-first-retry';\n  return videoMode;\n}\n\nfunction shouldCaptureVideo(videoMode: VideoMode, testInfo: TestInfo) {\n  return (videoMode === 'on' || videoMode === 'retain-on-failure' || (videoMode === 'on-first-retry' && testInfo.retry === 1));\n}\n\nfunction normalizeScreenshotMode(screenshot: ScreenshotOption): ScreenshotMode {\n  if (!screenshot)\n    return 'off';\n  return typeof screenshot === 'string' ? screenshot : screenshot.mode;\n}\n\nfunction attachConnectedHeaderIfNeeded(testInfo: TestInfo, browser: Browser | null) {\n  const connectHeaders: { name: string, value: string }[] | undefined = (browser as any)?._connectHeaders;\n  if (!connectHeaders)\n    return;\n  for (const header of connectHeaders) {\n    if (header.name !== 'x-playwright-attachment')\n      continue;\n    const [name, value] = header.value.split('=');\n    if (!name || !value)\n      continue;\n    if (testInfo.attachments.some(attachment => attachment.name === name))\n      continue;\n    testInfo.attachments.push({ name, contentType: 'text/plain', body: Buffer.from(value) });\n  }\n}\n\nfunction resolveFileToConfig(file: string | undefined) {\n  const config = test.info().config.configFile;\n  if (!config || !file)\n    return file;\n  if (path.isAbsolute(file))\n    return file;\n  return path.resolve(path.dirname(config), file);\n}\n\ntype ClientCertificates = NonNullable<PlaywrightTestOptions['clientCertificates']>;\n\nfunction resolveClientCerticates(clientCertificates: ClientCertificates): ClientCertificates {\n  for (const cert of clientCertificates) {\n    cert.certPath = resolveFileToConfig(cert.certPath);\n    cert.keyPath = resolveFileToConfig(cert.keyPath);\n    cert.pfxPath = resolveFileToConfig(cert.pfxPath);\n  }\n  return clientCertificates;\n}\n\nconst kTracingStarted = Symbol('kTracingStarted');\nconst kIsReusedContext = Symbol('kReusedContext');\n\nfunction connectOptionsFromEnv() {\n  const wsEndpoint = process.env.PW_TEST_CONNECT_WS_ENDPOINT;\n  if (!wsEndpoint)\n    return undefined;\n  const headers = process.env.PW_TEST_CONNECT_HEADERS ? JSON.parse(process.env.PW_TEST_CONNECT_HEADERS) : undefined;\n  return {\n    wsEndpoint,\n    headers,\n    exposeNetwork: process.env.PW_TEST_CONNECT_EXPOSE_NETWORK,\n  };\n}\n\nclass ArtifactsRecorder {\n  private _testInfo!: TestInfoImpl;\n  private _playwright: Playwright;\n  private _artifactsDir: string;\n  private _screenshotMode: ScreenshotMode;\n  private _screenshotOptions: { mode: ScreenshotMode } & Pick<playwrightLibrary.PageScreenshotOptions, 'fullPage' | 'omitBackground'> | undefined;\n  private _temporaryScreenshots: string[] = [];\n  private _temporaryArtifacts: string[] = [];\n  private _reusedContexts = new Set<BrowserContext>();\n  private _screenshotOrdinal = 0;\n  private _screenshottedSymbol: symbol;\n  private _startedCollectingArtifacts: symbol;\n\n  constructor(playwright: Playwright, artifactsDir: string, screenshot: ScreenshotOption) {\n    this._playwright = playwright;\n    this._artifactsDir = artifactsDir;\n    this._screenshotMode = normalizeScreenshotMode(screenshot);\n    this._screenshotOptions = typeof screenshot === 'string' ? undefined : screenshot;\n    this._screenshottedSymbol = Symbol('screenshotted');\n    this._startedCollectingArtifacts = Symbol('startedCollectingArtifacts');\n  }\n\n  private _createTemporaryArtifact(...name: string[]) {\n    const file = path.join(this._artifactsDir, ...name);\n    this._temporaryArtifacts.push(file);\n    return file;\n  }\n\n  async willStartTest(testInfo: TestInfoImpl) {\n    this._testInfo = testInfo;\n    testInfo._onDidFinishTestFunction = () => this.didFinishTestFunction();\n\n    // Since beforeAll(s), test and afterAll(s) reuse the same TestInfo, make sure we do not\n    // overwrite previous screenshots.\n    this._screenshotOrdinal = testInfo.attachments.filter(a => a.name === 'screenshot').length;\n\n    // Process existing contexts.\n    for (const browserType of [this._playwright.chromium, this._playwright.firefox, this._playwright.webkit]) {\n      const promises: (Promise<void> | undefined)[] = [];\n      const existingContexts = Array.from((browserType as any)._contexts) as BrowserContext[];\n      for (const context of existingContexts) {\n        if ((context as any)[kIsReusedContext])\n          this._reusedContexts.add(context);\n        else\n          promises.push(this.didCreateBrowserContext(context));\n      }\n      await Promise.all(promises);\n    }\n    {\n      const existingApiRequests: APIRequestContext[] =  Array.from((this._playwright.request as any)._contexts as Set<APIRequestContext>);\n      await Promise.all(existingApiRequests.map(c => this.didCreateRequestContext(c)));\n    }\n  }\n\n  async didCreateBrowserContext(context: BrowserContext) {\n    await this._startTraceChunkOnContextCreation(context.tracing);\n  }\n\n  async willCloseBrowserContext(context: BrowserContext) {\n    // When reusing context, we get all previous contexts closed at the start of next test.\n    // Do not record empty traces and useless screenshots for them.\n    if (this._reusedContexts.has(context))\n      return;\n    await this._stopTracing(context.tracing);\n    if (this._screenshotMode === 'on' || this._screenshotMode === 'only-on-failure') {\n      // Capture screenshot for now. We'll know whether we have to preserve them\n      // after the test finishes.\n      await Promise.all(context.pages().map(page => this._screenshotPage(page, true)));\n    }\n  }\n\n  async didCreateRequestContext(context: APIRequestContext) {\n    const tracing = (context as any)._tracing as Tracing;\n    await this._startTraceChunkOnContextCreation(tracing);\n  }\n\n  async willCloseRequestContext(context: APIRequestContext) {\n    const tracing = (context as any)._tracing as Tracing;\n    await this._stopTracing(tracing);\n  }\n\n  async didFinishTestFunction() {\n    const captureScreenshots = this._screenshotMode === 'on' || (this._screenshotMode === 'only-on-failure' && this._testInfo._isFailure());\n    if (captureScreenshots)\n      await this._screenshotOnTestFailure();\n  }\n\n  async didFinishTest() {\n    const captureScreenshots = this._screenshotMode === 'on' || (this._screenshotMode === 'only-on-failure' && this._testInfo._isFailure());\n    if (captureScreenshots)\n      await this._screenshotOnTestFailure();\n\n    const leftoverContexts: BrowserContext[] = [];\n    for (const browserType of [this._playwright.chromium, this._playwright.firefox, this._playwright.webkit])\n      leftoverContexts.push(...(browserType as any)._contexts);\n    const leftoverApiRequests: APIRequestContext[] =  Array.from((this._playwright.request as any)._contexts as Set<APIRequestContext>);\n\n    // Collect traces/screenshots for remaining contexts.\n    await Promise.all(leftoverContexts.map(async context => {\n      await this._stopTracing(context.tracing);\n    }).concat(leftoverApiRequests.map(async context => {\n      const tracing = (context as any)._tracing as Tracing;\n      await this._stopTracing(tracing);\n    })));\n\n    // Attach temporary screenshots for contexts closed before collecting the test trace.\n    if (captureScreenshots) {\n      for (const file of this._temporaryScreenshots) {\n        try {\n          const screenshotPath = this._createScreenshotAttachmentPath();\n          await fs.promises.rename(file, screenshotPath);\n          this._attachScreenshot(screenshotPath);\n        } catch {\n        }\n      }\n    }\n  }\n\n  private _createScreenshotAttachmentPath() {\n    const testFailed = this._testInfo._isFailure();\n    const index = this._screenshotOrdinal + 1;\n    ++this._screenshotOrdinal;\n    const screenshotPath = this._testInfo.outputPath(`test-${testFailed ? 'failed' : 'finished'}-${index}.png`);\n    return screenshotPath;\n  }\n\n  private async _screenshotPage(page: Page, temporary: boolean) {\n    if ((page as any)[this._screenshottedSymbol])\n      return;\n    (page as any)[this._screenshottedSymbol] = true;\n    try {\n      const screenshotPath = temporary ? this._createTemporaryArtifact(createGuid() + '.png') : this._createScreenshotAttachmentPath();\n      // Pass caret=initial to avoid any evaluations that might slow down the screenshot\n      // and let the page modify itself from the problematic state it had at the moment of failure.\n      await page.screenshot({ ...this._screenshotOptions, timeout: 5000, path: screenshotPath, caret: 'initial' });\n      if (temporary)\n        this._temporaryScreenshots.push(screenshotPath);\n      else\n        this._attachScreenshot(screenshotPath);\n    } catch {\n      // Screenshot may fail, just ignore.\n    }\n  }\n\n  private _attachScreenshot(screenshotPath: string) {\n    this._testInfo.attachments.push({ name: 'screenshot', path: screenshotPath, contentType: 'image/png' });\n  }\n\n  private async _screenshotOnTestFailure() {\n    const contexts: BrowserContext[] = [];\n    for (const browserType of [this._playwright.chromium, this._playwright.firefox, this._playwright.webkit])\n      contexts.push(...(browserType as any)._contexts);\n    const pages = contexts.map(ctx => ctx.pages()).flat();\n    await Promise.all(pages.map(page => this._screenshotPage(page, false)));\n  }\n\n  private async _startTraceChunkOnContextCreation(tracing: Tracing) {\n    const options = this._testInfo._tracing.traceOptions();\n    if (options) {\n      const title = this._testInfo._tracing.traceTitle();\n      const name = this._testInfo._tracing.generateNextTraceRecordingName();\n      if (!(tracing as any)[kTracingStarted]) {\n        await tracing.start({ ...options, title, name });\n        (tracing as any)[kTracingStarted] = true;\n      } else {\n        await tracing.startChunk({ title, name });\n      }\n    } else {\n      if ((tracing as any)[kTracingStarted]) {\n        (tracing as any)[kTracingStarted] = false;\n        await tracing.stop();\n      }\n    }\n  }\n\n  private async _stopTracing(tracing: Tracing) {\n    if ((tracing as any)[this._startedCollectingArtifacts])\n      return;\n    (tracing as any)[this._startedCollectingArtifacts] = true;\n    if (this._testInfo._tracing.traceOptions() && (tracing as any)[kTracingStarted])\n      await tracing.stopChunk({ path: this._testInfo._tracing.generateNextTraceRecordingPath() });\n  }\n}\n\nconst paramsToRender = ['url', 'selector', 'text', 'key'];\n\nfunction renderApiCall(apiName: string, params: any) {\n  const paramsArray = [];\n  if (params) {\n    for (const name of paramsToRender) {\n      if (!(name in params))\n        continue;\n      let value;\n      if (name === 'selector' && isString(params[name]) && params[name].startsWith('internal:')) {\n        const getter = asLocator('javascript', params[name]);\n        apiName = apiName.replace(/^locator\\./, 'locator.' + getter + '.');\n        apiName = apiName.replace(/^page\\./, 'page.' + getter + '.');\n        apiName = apiName.replace(/^frame\\./, 'frame.' + getter + '.');\n      } else {\n        value = params[name];\n        paramsArray.push(value);\n      }\n    }\n  }\n  const paramsText = paramsArray.length ? '(' + paramsArray.join(', ') + ')' : '';\n  return apiName + paramsText;\n}\n\nfunction tracing() {\n  return (test.info() as TestInfoImpl)._tracing;\n}\n\nexport const test = _baseTest.extend<TestFixtures, WorkerFixtures>(playwrightFixtures);\n\nexport { defineConfig } from './common/configLoader';\nexport { mergeTests } from './common/testType';\nexport { mergeExpects } from './matchers/expect';\n"],"mappings":"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"}