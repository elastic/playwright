{"version":3,"file":"testTree.js","names":["TestTree","constructor","rootFolder","rootSuite","loadErrors","projectFilters","pathSeparator","rootItem","_treeItemById","Map","_treeItemByTestId","filterProjects","values","some","Boolean","kind","subKind","id","title","location","file","line","column","duration","parent","undefined","children","status","hasLoadErrors","set","visitSuite","project","parentSuite","parentGroup","suite","suites","group","find","item","titlePath","join","_addChild","test","tests","testCaseItem","t","tags","result","results","statusEx","outcome","push","testItem","name","length","Math","max","reduce","a","b","projectSuite","get","fileSuite","fileItem","_fileItem","split","loadError","child","filterTree","filterText","statusFilters","runningTestIds","tokens","trim","toLowerCase","filtersStatuses","filter","testCase","titleWithTags","every","token","includes","has","map","c","visit","treeItem","newChildren","filePath","isFile","fileName","existingFileItem","parentFileItem","slice","sortAndPropagateStatus","flattenForSingleProject","forEach","shortenRoot","shortRoot","testIds","Set","add","fileNames","flatTreeItems","treeItemById","collectTestIds","exports","sort","fc","localeCompare","allPassed","allSkipped","hasFailed","hasRunning","hasScheduled","_treeItem$children","Symbol"],"sources":["../../src/isomorphic/testTree.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type TestItemStatus = 'none' | 'running' | 'scheduled' | 'passed' | 'failed' | 'skipped';\nimport type * as reporterTypes from '../../types/testReporter';\n\n// -- Reuse boundary -- Everything below this line is reused in the vscode extension.\n\nexport type TreeItemBase = {\n  kind: 'root' | 'group' | 'case' | 'test',\n  id: string;\n  title: string;\n  location: reporterTypes.Location,\n  duration: number;\n  parent: TreeItem | undefined;\n  children: TreeItem[];\n  status: TestItemStatus;\n};\n\nexport type GroupItem = TreeItemBase & {\n  kind: 'group';\n  subKind: 'folder' | 'file' | 'describe';\n  hasLoadErrors: boolean;\n  children: (TestCaseItem | GroupItem)[];\n};\n\nexport type TestCaseItem = TreeItemBase & {\n  kind: 'case',\n  tests: reporterTypes.TestCase[];\n  children: TestItem[];\n  test: reporterTypes.TestCase | undefined;\n  project: reporterTypes.FullProject | undefined;\n  tags: Array<string>;\n};\n\nexport type TestItem = TreeItemBase & {\n  kind: 'test',\n  test: reporterTypes.TestCase;\n  project: reporterTypes.FullProject;\n};\n\nexport type TreeItem = GroupItem | TestCaseItem | TestItem;\n\nexport class TestTree {\n  rootItem: GroupItem;\n  private _treeItemById = new Map<string, TreeItem>();\n  private _treeItemByTestId = new Map<string, TestItem | TestCaseItem>();\n  readonly pathSeparator: string;\n\n  constructor(rootFolder: string, rootSuite: reporterTypes.Suite | undefined, loadErrors: reporterTypes.TestError[], projectFilters: Map<string, boolean> | undefined, pathSeparator: string) {\n    const filterProjects = projectFilters && [...projectFilters.values()].some(Boolean);\n    this.pathSeparator = pathSeparator;\n    this.rootItem = {\n      kind: 'group',\n      subKind: 'folder',\n      id: rootFolder,\n      title: '',\n      location: { file: '', line: 0, column: 0 },\n      duration: 0,\n      parent: undefined,\n      children: [],\n      status: 'none',\n      hasLoadErrors: false,\n    };\n    this._treeItemById.set(rootFolder, this.rootItem);\n\n    const visitSuite = (project: reporterTypes.FullProject, parentSuite: reporterTypes.Suite, parentGroup: GroupItem) => {\n      for (const suite of parentSuite.suites) {\n        const title = suite.title || '<anonymous>';\n        let group = parentGroup.children.find(item => item.kind === 'group' && item.title === title) as GroupItem | undefined;\n        if (!group) {\n          group = {\n            kind: 'group',\n            subKind: 'describe',\n            id: 'suite:' + parentSuite.titlePath().join('\\x1e') + '\\x1e' + title,  // account for anonymous suites\n            title,\n            location: suite.location!,\n            duration: 0,\n            parent: parentGroup,\n            children: [],\n            status: 'none',\n            hasLoadErrors: false,\n          };\n          this._addChild(parentGroup, group);\n        }\n        visitSuite(project, suite, group);\n      }\n\n      for (const test of parentSuite.tests) {\n        const title = test.title;\n        let testCaseItem = parentGroup.children.find(t => t.kind !== 'group' && t.title === title) as TestCaseItem;\n        if (!testCaseItem) {\n          testCaseItem = {\n            kind: 'case',\n            id: 'test:' + test.titlePath().join('\\x1e'),\n            title,\n            parent: parentGroup,\n            children: [],\n            tests: [],\n            location: test.location,\n            duration: 0,\n            status: 'none',\n            project: undefined,\n            test: undefined,\n            tags: test.tags,\n          };\n          this._addChild(parentGroup, testCaseItem);\n        }\n\n        const result = test.results[0];\n        let status: 'none' | 'running' | 'scheduled' | 'passed' | 'failed' | 'skipped' = 'none';\n        if ((result as any)?.[statusEx] === 'scheduled')\n          status = 'scheduled';\n        else if ((result as any)?.[statusEx] === 'running')\n          status = 'running';\n        else if (result?.status === 'skipped')\n          status = 'skipped';\n        else if (result?.status === 'interrupted')\n          status = 'none';\n        else if (result && test.outcome() !== 'expected')\n          status = 'failed';\n        else if (result && test.outcome() === 'expected')\n          status = 'passed';\n\n        testCaseItem.tests.push(test);\n        const testItem: TestItem = {\n          kind: 'test',\n          id: test.id,\n          title: project.name,\n          location: test.location!,\n          test,\n          parent: testCaseItem,\n          children: [],\n          status,\n          duration: test.results.length ? Math.max(0, test.results[0].duration) : 0,\n          project,\n        };\n        this._addChild(testCaseItem, testItem);\n        this._treeItemByTestId.set(test.id, testItem);\n        testCaseItem.duration = (testCaseItem.children as TestItem[]).reduce((a, b) => a + b.duration, 0);\n      }\n    };\n\n    for (const projectSuite of rootSuite?.suites || []) {\n      if (filterProjects && !projectFilters.get(projectSuite.title))\n        continue;\n      for (const fileSuite of projectSuite.suites) {\n        const fileItem = this._fileItem(fileSuite.location!.file.split(pathSeparator), true);\n        visitSuite(projectSuite.project()!, fileSuite, fileItem);\n      }\n    }\n\n    for (const loadError of loadErrors) {\n      if (!loadError.location)\n        continue;\n      const fileItem = this._fileItem(loadError.location.file.split(pathSeparator), true);\n      fileItem.hasLoadErrors = true;\n    }\n  }\n\n  private _addChild(parent: TreeItem, child: TreeItem) {\n    parent.children.push(child);\n    child.parent = parent;\n    this._treeItemById.set(child.id, child);\n  }\n\n  filterTree(filterText: string, statusFilters: Map<string, boolean>, runningTestIds: Set<string> | undefined) {\n    const tokens = filterText.trim().toLowerCase().split(' ');\n    const filtersStatuses = [...statusFilters.values()].some(Boolean);\n\n    const filter = (testCase: TestCaseItem) => {\n      const titleWithTags = [...testCase.tests[0].titlePath(), ...testCase.tests[0].tags].join(' ').toLowerCase();\n      if (!tokens.every(token => titleWithTags.includes(token)) && !testCase.tests.some(t => runningTestIds?.has(t.id)))\n        return false;\n      testCase.children = (testCase.children as TestItem[]).filter(test => {\n        return !filtersStatuses || runningTestIds?.has(test.test.id) || statusFilters.get(test.status);\n      });\n      testCase.tests = (testCase.children as TestItem[]).map(c => c.test);\n      return !!testCase.children.length;\n    };\n\n    const visit = (treeItem: GroupItem) => {\n      const newChildren: (GroupItem | TestCaseItem)[] = [];\n      for (const child of treeItem.children) {\n        if (child.kind === 'case') {\n          if (filter(child))\n            newChildren.push(child);\n        } else {\n          visit(child);\n          if (child.children.length || child.hasLoadErrors)\n            newChildren.push(child);\n        }\n      }\n      treeItem.children = newChildren;\n    };\n    visit(this.rootItem);\n  }\n\n  private _fileItem(filePath: string[], isFile: boolean): GroupItem {\n    if (filePath.length === 0)\n      return this.rootItem;\n    const fileName = filePath.join(this.pathSeparator);\n    const existingFileItem = this._treeItemById.get(fileName);\n    if (existingFileItem)\n      return existingFileItem as GroupItem;\n    const parentFileItem = this._fileItem(filePath.slice(0, filePath.length - 1), false);\n    const fileItem: GroupItem = {\n      kind: 'group',\n      subKind: isFile ? 'file' : 'folder',\n      id: fileName,\n      title: filePath[filePath.length - 1],\n      location: { file: fileName, line: 0, column: 0 },\n      duration: 0,\n      parent: parentFileItem,\n      children: [],\n      status: 'none',\n      hasLoadErrors: false,\n    };\n    this._addChild(parentFileItem, fileItem);\n    return fileItem;\n  }\n\n  sortAndPropagateStatus() {\n    sortAndPropagateStatus(this.rootItem);\n  }\n\n  flattenForSingleProject() {\n    const visit = (treeItem: TreeItem) => {\n      if (treeItem.kind === 'case' && treeItem.children.length === 1) {\n        treeItem.project = treeItem.children[0].project;\n        treeItem.test = treeItem.children[0].test;\n        treeItem.children = [];\n        this._treeItemByTestId.set(treeItem.test.id, treeItem);\n      } else {\n        treeItem.children.forEach(visit);\n      }\n    };\n    visit(this.rootItem);\n  }\n\n  shortenRoot() {\n    let shortRoot = this.rootItem;\n    while (shortRoot.children.length === 1 && shortRoot.children[0].kind === 'group' && shortRoot.children[0].subKind === 'folder')\n      shortRoot = shortRoot.children[0];\n    shortRoot.location = this.rootItem.location;\n    this.rootItem = shortRoot;\n  }\n\n  testIds(): Set<string> {\n    const result = new Set<string>();\n    const visit = (treeItem: TreeItem) => {\n      if (treeItem.kind === 'case')\n        treeItem.tests.forEach(t => result.add(t.id));\n      treeItem.children.forEach(visit);\n    };\n    visit(this.rootItem);\n    return result;\n  }\n\n  fileNames(): string[] {\n    const result = new Set<string>();\n    const visit = (treeItem: TreeItem) => {\n      if (treeItem.kind === 'group' && treeItem.subKind === 'file')\n        result.add(treeItem.id);\n      else\n        treeItem.children.forEach(visit);\n    };\n    visit(this.rootItem);\n    return [...result];\n  }\n\n  flatTreeItems(): TreeItem[] {\n    const result: TreeItem[] = [];\n    const visit = (treeItem: TreeItem) => {\n      result.push(treeItem);\n      treeItem.children.forEach(visit);\n    };\n    visit(this.rootItem);\n    return result;\n  }\n\n  treeItemById(id: string): TreeItem | undefined {\n    return this._treeItemById.get(id);\n  }\n\n  collectTestIds(treeItem?: TreeItem): Set<string> {\n    return treeItem ? collectTestIds(treeItem) : new Set();\n  }\n}\n\nexport function sortAndPropagateStatus(treeItem: TreeItem) {\n  for (const child of treeItem.children)\n    sortAndPropagateStatus(child);\n\n  if (treeItem.kind === 'group') {\n    treeItem.children.sort((a, b) => {\n      const fc = a.location.file.localeCompare(b.location.file);\n      return fc || a.location.line - b.location.line;\n    });\n  }\n\n  let allPassed = treeItem.children.length > 0;\n  let allSkipped = treeItem.children.length > 0;\n  let hasFailed = false;\n  let hasRunning = false;\n  let hasScheduled = false;\n\n  for (const child of treeItem.children) {\n    allSkipped = allSkipped && child.status === 'skipped';\n    allPassed = allPassed && (child.status === 'passed' || child.status === 'skipped');\n    hasFailed = hasFailed || child.status === 'failed';\n    hasRunning = hasRunning || child.status === 'running';\n    hasScheduled = hasScheduled || child.status === 'scheduled';\n  }\n\n  if (hasRunning)\n    treeItem.status = 'running';\n  else if (hasScheduled)\n    treeItem.status = 'scheduled';\n  else if (hasFailed)\n    treeItem.status = 'failed';\n  else if (allSkipped)\n    treeItem.status = 'skipped';\n  else if (allPassed)\n    treeItem.status = 'passed';\n}\n\nexport function collectTestIds(treeItem: TreeItem): Set<string> {\n  const testIds = new Set<string>();\n  const visit = (treeItem: TreeItem) => {\n    if (treeItem.kind === 'case')\n      treeItem.tests.map(t => t.id).forEach(id => testIds.add(id));\n    else if (treeItem.kind === 'test')\n      testIds.add(treeItem.id);\n    else\n      treeItem.children?.forEach(visit);\n  };\n  visit(treeItem);\n  return testIds;\n}\n\nexport const statusEx = Symbol('statusEx');\n"],"mappings":"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"}