{"version":3,"file":"testServerConnection.js","names":["events","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","WebSocketTestServerTransport","constructor","url","_ws","WebSocket","onmessage","listener","addEventListener","event","data","onopen","onerror","onclose","send","close","exports","TestServerConnection","transport","onClose","onReport","onStdio","onTestFilesChanged","onLoadTraceRequested","_onCloseEmitter","EventEmitter","_onReportEmitter","_onStdioEmitter","_onTestFilesChangedEmitter","_onLoadTraceRequestedEmitter","_lastId","_transport","_callbacks","Map","_connectedPromise","_isClosed","message","JSON","parse","id","result","error","method","params","callback","delete","reject","Error","resolve","_dispatchEvent","pingInterval","setInterval","_sendMessage","catch","Promise","f","fire","clearInterval","isClosed","logForTest","globalThis","__logForTest","stringify","_sendMessageNoReply","initialize","ping","pingNoReply","watch","watchNoReply","open","openNoReply","resizeTerminal","resizeTerminalNoReply","checkBrowsers","installBrowsers","runGlobalSetup","runGlobalTeardown","startDevServer","stopDevServer","clearCache","listFiles","listTests","runTests","findRelatedTestFiles","stopTests","stopTestsNoReply","closeGracefully"],"sources":["../../src/isomorphic/testServerConnection.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TestServerInterface, TestServerInterfaceEvents } from '@testIsomorphic/testServerInterface';\nimport * as events from './events';\n\n// -- Reuse boundary -- Everything below this line is reused in the vscode extension.\n\nexport interface TestServerTransport {\n  onmessage(listener: (message: string) => void): void;\n  onopen(listener: () => void): void;\n  onerror(listener: () => void): void;\n  onclose(listener: () => void): void;\n\n  send(data: string): void;\n  close(): void;\n}\n\nexport class WebSocketTestServerTransport implements TestServerTransport {\n  private _ws: WebSocket;\n\n  constructor(url: string | URL) {\n    this._ws = new WebSocket(url);\n  }\n\n  onmessage(listener: (message: string) => void) {\n    this._ws.addEventListener('message', event => listener(event.data));\n  }\n\n  onopen(listener: () => void) {\n    this._ws.addEventListener('open', listener);\n  }\n\n  onerror(listener: () => void) {\n    this._ws.addEventListener('error', listener);\n  }\n\n  onclose(listener: () => void) {\n    this._ws.addEventListener('close', listener);\n  }\n\n  send(data: string) {\n    this._ws.send(data);\n  }\n\n  close() {\n    this._ws.close();\n  }\n}\n\nexport class TestServerConnection implements TestServerInterface, TestServerInterfaceEvents {\n  readonly onClose: events.Event<void>;\n  readonly onReport: events.Event<any>;\n  readonly onStdio: events.Event<{ type: 'stderr' | 'stdout'; text?: string | undefined; buffer?: string | undefined; }>;\n  readonly onTestFilesChanged: events.Event<{ testFiles: string[] }>;\n  readonly onLoadTraceRequested: events.Event<{ traceUrl: string }>;\n\n  private _onCloseEmitter = new events.EventEmitter<void>();\n  private _onReportEmitter = new events.EventEmitter<any>();\n  private _onStdioEmitter = new events.EventEmitter<{ type: 'stderr' | 'stdout'; text?: string | undefined; buffer?: string | undefined; }>();\n  private _onTestFilesChangedEmitter = new events.EventEmitter<{ testFiles: string[] }>();\n  private _onLoadTraceRequestedEmitter = new events.EventEmitter<{ traceUrl: string }>();\n\n  private _lastId = 0;\n  private _transport: TestServerTransport;\n  private _callbacks = new Map<number, { resolve: (arg: any) => void, reject: (arg: Error) => void }>();\n  private _connectedPromise: Promise<void>;\n  private _isClosed = false;\n\n  constructor(transport: TestServerTransport) {\n    this.onClose = this._onCloseEmitter.event;\n    this.onReport = this._onReportEmitter.event;\n    this.onStdio = this._onStdioEmitter.event;\n    this.onTestFilesChanged = this._onTestFilesChangedEmitter.event;\n    this.onLoadTraceRequested = this._onLoadTraceRequestedEmitter.event;\n\n    this._transport = transport;\n    this._transport.onmessage(data => {\n      const message = JSON.parse(data);\n      const { id, result, error, method, params } = message;\n      if (id) {\n        const callback = this._callbacks.get(id);\n        if (!callback)\n          return;\n        this._callbacks.delete(id);\n        if (error)\n          callback.reject(new Error(error));\n        else\n          callback.resolve(result);\n      } else {\n        this._dispatchEvent(method, params);\n      }\n    });\n    const pingInterval = setInterval(() => this._sendMessage('ping').catch(() => { }), 30000);\n    this._connectedPromise = new Promise<void>((f, r) => {\n      this._transport.onopen(f);\n      this._transport.onerror(r);\n    });\n    this._transport.onclose(() => {\n      this._isClosed = true;\n      this._onCloseEmitter.fire();\n      clearInterval(pingInterval);\n    });\n  }\n\n  isClosed(): boolean {\n    return this._isClosed;\n  }\n\n  private async _sendMessage(method: string, params?: any): Promise<any> {\n    const logForTest = (globalThis as any).__logForTest;\n    logForTest?.({ method, params });\n\n    await this._connectedPromise;\n    const id = ++this._lastId;\n    const message = { id, method, params };\n    this._transport.send(JSON.stringify(message));\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, { resolve, reject });\n    });\n  }\n\n  private _sendMessageNoReply(method: string, params?: any) {\n    this._sendMessage(method, params).catch(() => { });\n  }\n\n  private _dispatchEvent(method: string, params?: any) {\n    if (method === 'report')\n      this._onReportEmitter.fire(params);\n    else if (method === 'stdio')\n      this._onStdioEmitter.fire(params);\n    else if (method === 'testFilesChanged')\n      this._onTestFilesChangedEmitter.fire(params);\n    else if (method === 'loadTraceRequested')\n      this._onLoadTraceRequestedEmitter.fire(params);\n  }\n\n  async initialize(params: Parameters<TestServerInterface['initialize']>[0]): ReturnType<TestServerInterface['initialize']> {\n    await this._sendMessage('initialize', params);\n  }\n\n  async ping(params: Parameters<TestServerInterface['ping']>[0]): ReturnType<TestServerInterface['ping']> {\n    await this._sendMessage('ping', params);\n  }\n\n  async pingNoReply(params: Parameters<TestServerInterface['ping']>[0]) {\n    this._sendMessageNoReply('ping', params);\n  }\n\n  async watch(params: Parameters<TestServerInterface['watch']>[0]): ReturnType<TestServerInterface['watch']> {\n    await this._sendMessage('watch', params);\n  }\n\n  watchNoReply(params: Parameters<TestServerInterface['watch']>[0]) {\n    this._sendMessageNoReply('watch', params);\n  }\n\n  async open(params: Parameters<TestServerInterface['open']>[0]): ReturnType<TestServerInterface['open']> {\n    await this._sendMessage('open', params);\n  }\n\n  openNoReply(params: Parameters<TestServerInterface['open']>[0]) {\n    this._sendMessageNoReply('open', params);\n  }\n\n  async resizeTerminal(params: Parameters<TestServerInterface['resizeTerminal']>[0]): ReturnType<TestServerInterface['resizeTerminal']> {\n    await this._sendMessage('resizeTerminal', params);\n  }\n\n  resizeTerminalNoReply(params: Parameters<TestServerInterface['resizeTerminal']>[0]) {\n    this._sendMessageNoReply('resizeTerminal', params);\n  }\n\n  async checkBrowsers(params: Parameters<TestServerInterface['checkBrowsers']>[0]): ReturnType<TestServerInterface['checkBrowsers']> {\n    return await this._sendMessage('checkBrowsers', params);\n  }\n\n  async installBrowsers(params: Parameters<TestServerInterface['installBrowsers']>[0]): ReturnType<TestServerInterface['installBrowsers']> {\n    await this._sendMessage('installBrowsers', params);\n  }\n\n  async runGlobalSetup(params: Parameters<TestServerInterface['runGlobalSetup']>[0]): ReturnType<TestServerInterface['runGlobalSetup']> {\n    return await this._sendMessage('runGlobalSetup', params);\n  }\n\n  async runGlobalTeardown(params: Parameters<TestServerInterface['runGlobalTeardown']>[0]): ReturnType<TestServerInterface['runGlobalTeardown']> {\n    return await this._sendMessage('runGlobalTeardown', params);\n  }\n\n  async startDevServer(params: Parameters<TestServerInterface['startDevServer']>[0]): ReturnType<TestServerInterface['startDevServer']> {\n    return await this._sendMessage('startDevServer', params);\n  }\n\n  async stopDevServer(params: Parameters<TestServerInterface['stopDevServer']>[0]): ReturnType<TestServerInterface['stopDevServer']> {\n    return await this._sendMessage('stopDevServer', params);\n  }\n\n  async clearCache(params: Parameters<TestServerInterface['clearCache']>[0]): ReturnType<TestServerInterface['clearCache']> {\n    return await this._sendMessage('clearCache', params);\n  }\n\n  async listFiles(params: Parameters<TestServerInterface['listFiles']>[0]): ReturnType<TestServerInterface['listFiles']> {\n    return await this._sendMessage('listFiles', params);\n  }\n\n  async listTests(params: Parameters<TestServerInterface['listTests']>[0]): ReturnType<TestServerInterface['listTests']> {\n    return await this._sendMessage('listTests', params);\n  }\n\n  async runTests(params: Parameters<TestServerInterface['runTests']>[0]): ReturnType<TestServerInterface['runTests']> {\n    return await this._sendMessage('runTests', params);\n  }\n\n  async findRelatedTestFiles(params: Parameters<TestServerInterface['findRelatedTestFiles']>[0]): ReturnType<TestServerInterface['findRelatedTestFiles']> {\n    return await this._sendMessage('findRelatedTestFiles', params);\n  }\n\n  async stopTests(params: Parameters<TestServerInterface['stopTests']>[0]): ReturnType<TestServerInterface['stopTests']> {\n    await this._sendMessage('stopTests', params);\n  }\n\n  stopTestsNoReply(params: Parameters<TestServerInterface['stopTests']>[0]) {\n    this._sendMessageNoReply('stopTests', params);\n  }\n\n  async closeGracefully(params: Parameters<TestServerInterface['closeGracefully']>[0]): ReturnType<TestServerInterface['closeGracefully']> {\n    await this._sendMessage('closeGracefully', params);\n  }\n\n  close() {\n    try {\n      this._transport.close();\n    } catch {\n    }\n  }\n}\n"],"mappings":"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"}