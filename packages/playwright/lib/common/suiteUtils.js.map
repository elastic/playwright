{"version":3,"file":"suiteUtils.js","names":["_path","_interopRequireDefault","require","_utils","_util","obj","__esModule","default","filterSuite","suite","suiteFilter","testFilter","child","suites","filteredTests","tests","filter","entries","Set","_entries","e","has","filterTestsRemoveEmptySuites","filteredSuites","length","bindFileSuiteToProject","project","relativeFile","path","relative","testDir","location","file","fileId","calculateSha1","toPosixPath","slice","result","_deepClone","_fileId","forEachTest","test","_inheritedRetries","_inheritedTimeout","titles","titlePath","testIdExpression","id","join","testId","_projectId","inheritedRetries","inheritedTimeout","annotations","parentSuite","parent","_staticAnnotations","undefined","_retries","_timeout","retries","timeout","push","some","a","type","expectedStatus","_poolDigest","_workerHash","applyRepeatEachIndex","fileSuite","repeatEachIndex","filterOnly","_getOnlyItems","_only","filterSuiteWithOnlySemantics","onlySuites","onlyTests","onlyEntries","size","filterByFocusedLine","focusedTestFileLines","matchers","map","createFileMatcherFromFilter","testFileLineMatches","testFileName","testLine","testColumn","m","line","column","filterByTestIds","testIdMatcher","fileMatcher","createFileMatcher","re","exact"],"sources":["../../src/common/suiteUtils.ts"],"sourcesContent":["/**\n* Copyright Microsoft Corporation. All rights reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport path from 'path';\nimport { calculateSha1, toPosixPath } from 'playwright-core/lib/utils';\nimport type { Suite, TestCase } from './test';\nimport type { FullProjectInternal } from './config';\nimport type { Matcher, TestFileFilter } from '../util';\nimport { createFileMatcher } from '../util';\n\n\nexport function filterSuite(suite: Suite, suiteFilter: (suites: Suite) => boolean, testFilter: (test: TestCase) => boolean) {\n  for (const child of suite.suites) {\n    if (!suiteFilter(child))\n      filterSuite(child, suiteFilter, testFilter);\n  }\n  const filteredTests = suite.tests.filter(testFilter);\n  const entries = new Set([...suite.suites, ...filteredTests]);\n  suite._entries = suite._entries.filter(e => entries.has(e)); // Preserve the order.\n}\n\nexport function filterTestsRemoveEmptySuites(suite: Suite, filter: (test: TestCase) => boolean): boolean {\n  const filteredSuites = suite.suites.filter(child => filterTestsRemoveEmptySuites(child, filter));\n  const filteredTests = suite.tests.filter(filter);\n  const entries = new Set([...filteredSuites, ...filteredTests]);\n  suite._entries = suite._entries.filter(e => entries.has(e)); // Preserve the order.\n  return !!suite._entries.length;\n}\n\nexport function bindFileSuiteToProject(project: FullProjectInternal, suite: Suite): Suite {\n  const relativeFile = path.relative(project.project.testDir, suite.location!.file);\n  const fileId = calculateSha1(toPosixPath(relativeFile)).slice(0, 20);\n\n  // Clone suite.\n  const result = suite._deepClone();\n  result._fileId = fileId;\n\n  // Assign test properties with project-specific values.\n  result.forEachTest((test, suite) => {\n    suite._fileId = fileId;\n    // At the point of the query, suite is not yet attached to the project, so we only get file, describe and test titles.\n    const [file, ...titles] = test.titlePath();\n    const testIdExpression = `[project=${project.id}]${toPosixPath(file)}\\x1e${titles.join('\\x1e')}`;\n    const testId = fileId + '-' + calculateSha1(testIdExpression).slice(0, 20);\n    test.id = testId;\n    test._projectId = project.id;\n\n    // Inherit properties from parent suites.\n    let inheritedRetries: number | undefined;\n    let inheritedTimeout: number | undefined;\n    test.annotations = [];\n    for (let parentSuite: Suite | undefined = suite; parentSuite; parentSuite = parentSuite.parent) {\n      if (parentSuite._staticAnnotations.length)\n        test.annotations = [...parentSuite._staticAnnotations, ...test.annotations];\n      if (inheritedRetries === undefined && parentSuite._retries !== undefined)\n        inheritedRetries = parentSuite._retries;\n      if (inheritedTimeout === undefined && parentSuite._timeout !== undefined)\n        inheritedTimeout = parentSuite._timeout;\n    }\n    test.retries = inheritedRetries ?? project.project.retries;\n    test.timeout = inheritedTimeout ?? project.project.timeout;\n    test.annotations.push(...test._staticAnnotations);\n\n    // Skip annotations imply skipped expectedStatus.\n    if (test.annotations.some(a => a.type === 'skip' || a.type === 'fixme'))\n      test.expectedStatus = 'skipped';\n\n    // We only compute / set digest in the runner.\n    if (test._poolDigest)\n      test._workerHash = `${project.id}-${test._poolDigest}-0`;\n  });\n\n  return result;\n}\n\nexport function applyRepeatEachIndex(project: FullProjectInternal, fileSuite: Suite, repeatEachIndex: number) {\n  // Assign test properties with project-specific values.\n  fileSuite.forEachTest((test, suite) => {\n    if (repeatEachIndex) {\n      const [file, ...titles] = test.titlePath();\n      const testIdExpression = `[project=${project.id}]${toPosixPath(file)}\\x1e${titles.join('\\x1e')} (repeat:${repeatEachIndex})`;\n      const testId = suite._fileId + '-' + calculateSha1(testIdExpression).slice(0, 20);\n      test.id = testId;\n      test.repeatEachIndex = repeatEachIndex;\n\n      if (test._poolDigest)\n        test._workerHash = `${project.id}-${test._poolDigest}-${repeatEachIndex}`;\n    }\n  });\n}\n\nexport function filterOnly(suite: Suite) {\n  if (!suite._getOnlyItems().length)\n    return;\n  const suiteFilter = (suite: Suite) => suite._only;\n  const testFilter = (test: TestCase) => test._only;\n  return filterSuiteWithOnlySemantics(suite, suiteFilter, testFilter);\n}\n\nexport function filterSuiteWithOnlySemantics(suite: Suite, suiteFilter: (suites: Suite) => boolean, testFilter: (test: TestCase) => boolean) {\n  const onlySuites = suite.suites.filter(child => filterSuiteWithOnlySemantics(child, suiteFilter, testFilter) || suiteFilter(child));\n  const onlyTests = suite.tests.filter(testFilter);\n  const onlyEntries = new Set([...onlySuites, ...onlyTests]);\n  if (onlyEntries.size) {\n    suite._entries = suite._entries.filter(e => onlyEntries.has(e)); // Preserve the order.\n    return true;\n  }\n  return false;\n}\n\nexport function filterByFocusedLine(suite: Suite, focusedTestFileLines: TestFileFilter[]) {\n  if (!focusedTestFileLines.length)\n    return;\n  const matchers = focusedTestFileLines.map(createFileMatcherFromFilter);\n  const testFileLineMatches = (testFileName: string, testLine: number, testColumn: number) => matchers.some(m => m(testFileName, testLine, testColumn));\n  const suiteFilter = (suite: Suite) => !!suite.location && testFileLineMatches(suite.location.file, suite.location.line, suite.location.column);\n  const testFilter = (test: TestCase) => testFileLineMatches(test.location.file, test.location.line, test.location.column);\n  return filterSuite(suite, suiteFilter, testFilter);\n}\n\nexport function filterByTestIds(suite: Suite, testIdMatcher: Matcher | undefined) {\n  if (!testIdMatcher)\n    return;\n  filterTestsRemoveEmptySuites(suite, test => testIdMatcher(test.id));\n}\n\nfunction createFileMatcherFromFilter(filter: TestFileFilter) {\n  const fileMatcher = createFileMatcher(filter.re || filter.exact || '');\n  return (testFileName: string, testLine: number, testColumn: number) =>\n    fileMatcher(testFileName) && (filter.line === testLine || filter.line === null) && (filter.column === testColumn || filter.column === null);\n}\n"],"mappings":"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"}