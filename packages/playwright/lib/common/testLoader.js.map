{"version":3,"file":"testLoader.js","names":["_path","_interopRequireDefault","require","_util","_globals","_test","_transform","_util2","_compilationCache","esmLoaderHost","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","defaultTimeout","exports","cachedFileSuites","Map","loadTestFile","file","rootDir","testErrors","suite","Suite","path","relative","basename","_requireFile","location","line","column","setCurrentlyLoadingFileSuite","isWorkerProcess","startCollectingFileDeps","requireOrImport","push","serializeLoadError","undefined","stopCollectingFileDeps","files","Set","allTests","map","add","size","mappedFile","values","next","value","extname","error","Error","result","filterStackTrace","loc","util","inspect"],"sources":["../../src/common/testLoader.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport util from 'util';\nimport type { TestError } from '../../types/testReporter';\nimport { isWorkerProcess, setCurrentlyLoadingFileSuite } from './globals';\nimport { Suite } from './test';\nimport { requireOrImport } from '../transform/transform';\nimport { filterStackTrace } from '../util';\nimport { startCollectingFileDeps, stopCollectingFileDeps } from '../transform/compilationCache';\nimport * as esmLoaderHost from './esmLoaderHost';\n\nexport const defaultTimeout = 30000;\n\n// To allow multiple loaders in the same process without clearing require cache,\n// we make these maps global.\nconst cachedFileSuites = new Map<string, Suite>();\n\nexport async function loadTestFile(file: string, rootDir: string, testErrors?: TestError[]): Promise<Suite> {\n  if (cachedFileSuites.has(file))\n    return cachedFileSuites.get(file)!;\n  const suite = new Suite(path.relative(rootDir, file) || path.basename(file), 'file');\n  suite._requireFile = file;\n  suite.location = { file, line: 0, column: 0 };\n\n  setCurrentlyLoadingFileSuite(suite);\n  if (!isWorkerProcess()) {\n    startCollectingFileDeps();\n    await esmLoaderHost.startCollectingFileDeps();\n  }\n  try {\n    await requireOrImport(file);\n    cachedFileSuites.set(file, suite);\n  } catch (e) {\n    if (!testErrors)\n      throw e;\n    testErrors.push(serializeLoadError(file, e));\n  } finally {\n    setCurrentlyLoadingFileSuite(undefined);\n    if (!isWorkerProcess()) {\n      stopCollectingFileDeps(file);\n      await esmLoaderHost.stopCollectingFileDeps(file);\n    }\n  }\n\n  {\n    // Test locations that we discover potentially have different file name.\n    // This could be due to either\n    //   a) use of source maps or due to\n    //   b) require of one file from another.\n    // Try fixing (a) w/o regressing (b).\n\n    const files = new Set<string>();\n    suite.allTests().map(t => files.add(t.location.file));\n    if (files.size === 1) {\n      // All tests point to one file.\n      const mappedFile = files.values().next().value;\n      if (suite.location.file !== mappedFile) {\n        // The file is different, check for a likely source map case.\n        if (path.extname(mappedFile) !== path.extname(suite.location.file))\n          suite.location.file = mappedFile;\n      }\n    }\n  }\n\n  return suite;\n}\n\nfunction serializeLoadError(file: string, error: Error | any): TestError {\n  if (error instanceof Error) {\n    const result: TestError = filterStackTrace(error);\n    // Babel parse errors have location.\n    const loc = (error as any).loc;\n    result.location = loc ? {\n      file,\n      line: loc.line || 0,\n      column: loc.column || 0,\n    } : undefined;\n    return result;\n  }\n  return { value: util.inspect(error) };\n}\n"],"mappings":"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"}