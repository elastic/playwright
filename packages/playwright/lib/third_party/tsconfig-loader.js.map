{"version":3,"file":"tsconfig-loader.js","names":["path","_interopRequireWildcard","require","fs","_utilsBundle","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","tsConfigLoader","tsconfigPathOrDirecotry","configPath","resolveConfigPath","references","config","loadTsConfig","statSync","isFile","resolve","configAbsolutePath","walkForTsConfig","undefined","directory","existsSync","tsconfigPath","join","jsconfigPath","parentDirectory","resolveConfigFile","baseConfigFile","referencedConfigFile","endsWith","currentDir","dirname","resolvedConfigFile","includes","configFilePath","visited","Map","_parsedConfig$compile","_parsedConfig$compile2","_parsedConfig$compile3","result","tsConfigPath","configString","readFileSync","cleanedJson","StripBom","parsedConfig","json5","parse","extendsArray","Array","isArray","extends","extendedConfig","extendedConfigPath","base","assign","compilerOptions","allowJs","paths","mapping","pathsBasePath","baseUrl","absoluteBaseUrl","ref","push","basename","string","TypeError","charCodeAt","slice"],"sources":["../../src/third_party/tsconfig-loader.ts"],"sourcesContent":["/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Jonas Kello\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint-disable */\n\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { json5 } from '../utilsBundle';\n\n/**\n * Typing for the parts of tsconfig that we care about\n */\ninterface TsConfig {\n  extends?: string;\n  compilerOptions?: {\n    baseUrl?: string;\n    paths?: { [key: string]: Array<string> };\n    strict?: boolean;\n    allowJs?: boolean;\n  };\n  references?: { path: string }[];\n}\n\nexport interface LoadedTsConfig {\n  tsConfigPath: string;\n  paths?: {\n    mapping: { [key: string]: Array<string> };\n    pathsBasePath: string;  // absolute path\n  };\n  absoluteBaseUrl?: string;\n  allowJs?: boolean;\n}\n\nexport function tsConfigLoader(tsconfigPathOrDirecotry: string): LoadedTsConfig[] {\n  const configPath = resolveConfigPath(tsconfigPathOrDirecotry);\n\n  if (!configPath)\n    return [];\n\n  const references: LoadedTsConfig[] = [];\n  const config = loadTsConfig(configPath, references);\n  return [config, ...references];\n}\n\nfunction resolveConfigPath(tsconfigPathOrDirecotry: string): string | undefined {\n  if (fs.statSync(tsconfigPathOrDirecotry).isFile()) {\n    return path.resolve(tsconfigPathOrDirecotry);\n  }\n\n  const configAbsolutePath = walkForTsConfig(tsconfigPathOrDirecotry);\n  return configAbsolutePath ? path.resolve(configAbsolutePath) : undefined;\n}\n\nexport function walkForTsConfig(\n  directory: string,\n  existsSync: (path: string) => boolean = fs.existsSync\n): string | undefined {\n  const tsconfigPath = path.join(directory, \"./tsconfig.json\");\n  if (existsSync(tsconfigPath)) {\n    return tsconfigPath;\n  }\n  const jsconfigPath = path.join(directory, \"./jsconfig.json\");\n  if (existsSync(jsconfigPath)) {\n    return jsconfigPath;\n  }\n\n  const parentDirectory = path.join(directory, \"../\");\n\n  // If we reached the top\n  if (directory === parentDirectory) {\n    return undefined;\n  }\n\n  return walkForTsConfig(parentDirectory, existsSync);\n}\n\nfunction resolveConfigFile(baseConfigFile: string, referencedConfigFile: string) {\n  if (!referencedConfigFile.endsWith('.json'))\n    referencedConfigFile += '.json';\n  const currentDir = path.dirname(baseConfigFile);\n  let resolvedConfigFile = path.resolve(currentDir, referencedConfigFile);\n  // TODO: I don't see how this makes sense, delete in the next minor release.\n  if (referencedConfigFile.includes('/') && referencedConfigFile.includes('.') && !fs.existsSync(resolvedConfigFile))\n    resolvedConfigFile = path.join(currentDir, 'node_modules', referencedConfigFile);\n  return resolvedConfigFile;\n}\n\nfunction loadTsConfig(\n  configFilePath: string,\n  references: LoadedTsConfig[],\n  visited = new Map<string, LoadedTsConfig>(),\n): LoadedTsConfig {\n  if (visited.has(configFilePath))\n    return visited.get(configFilePath)!;\n\n  let result: LoadedTsConfig = {\n    tsConfigPath: configFilePath,\n  };\n  // Retain result instance below, so that caching works.\n  visited.set(configFilePath, result);\n\n  if (!fs.existsSync(configFilePath))\n    return result;\n\n  const configString = fs.readFileSync(configFilePath, 'utf-8');\n  const cleanedJson = StripBom(configString);\n  const parsedConfig: TsConfig = json5.parse(cleanedJson);\n\n  const extendsArray = Array.isArray(parsedConfig.extends) ? parsedConfig.extends : (parsedConfig.extends ? [parsedConfig.extends] : []);\n  for (const extendedConfig of extendsArray) {\n    const extendedConfigPath = resolveConfigFile(configFilePath, extendedConfig);\n    const base = loadTsConfig(extendedConfigPath, references, visited);\n    // Retain result instance, so that caching works.\n    Object.assign(result, base, { tsConfigPath: configFilePath });\n  }\n\n  if (parsedConfig.compilerOptions?.allowJs !== undefined)\n    result.allowJs = parsedConfig.compilerOptions.allowJs;\n  if (parsedConfig.compilerOptions?.paths !== undefined) {\n    // We must store pathsBasePath from the config that defines \"paths\" and later resolve\n    // based on this absolute path, when no \"baseUrl\" is specified. See tsc for reference:\n    // https://github.com/microsoft/TypeScript/blob/353ccb7688351ae33ccf6e0acb913aa30621eaf4/src/compiler/commandLineParser.ts#L3129\n    // https://github.com/microsoft/TypeScript/blob/353ccb7688351ae33ccf6e0acb913aa30621eaf4/src/compiler/moduleSpecifiers.ts#L510\n    result.paths = {\n      mapping: parsedConfig.compilerOptions.paths,\n      pathsBasePath: path.dirname(configFilePath),\n    };\n  }\n  if (parsedConfig.compilerOptions?.baseUrl !== undefined) {\n    // Follow tsc and resolve all relative file paths in the config right away.\n    // This way it is safe to inherit paths between the configs.\n    result.absoluteBaseUrl = path.resolve(path.dirname(configFilePath), parsedConfig.compilerOptions.baseUrl);\n  }\n\n  for (const ref of parsedConfig.references || [])\n    references.push(loadTsConfig(resolveConfigFile(configFilePath, ref.path), references, visited));\n\n  if (path.basename(configFilePath) === 'jsconfig.json' && result.allowJs === undefined)\n    result.allowJs = true;\n  return result;\n}\n\nfunction StripBom(string: string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof string}`);\n\t}\n\n\t// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n\t// conversion translates it to FEFF (UTF-16 BOM).\n\tif (string.charCodeAt(0) === 0xFEFF) {\n\t\treturn string.slice(1);\n\t}\n\n\treturn string;\n}\n"],"mappings":"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"}