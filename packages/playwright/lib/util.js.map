{"version":3,"file":"util.js","names":["_fs","_interopRequireDefault","require","_util","_path","_url","_utilsBundle","_utils","obj","__esModule","default","PLAYWRIGHT_TEST_PATH","path","join","__dirname","PLAYWRIGHT_CORE_PATH","dirname","resolve","filterStackTrace","e","_e$stack","name","process","env","PWDEBUGIMPL","message","stack","stackLines","stringifyStackFrames","filteredStackTrace","split","map","line","filterStackFile","file","startsWith","rawStack","frames","frame","parseStackTraceLine","push","serializeError","error","Error","value","util","inspect","createFileFiltersFromArguments","args","arg","match","exec","re","forceRegExp","parseInt","column","createFileMatcherFromArguments","filters","createFileMatcher","filter","exact","patterns","reList","filePatterns","pattern","Array","isArray","isRegExp","filePath","lastIndex","test","sep","fileURL","url","pathToFileURL","href","minimatch","nocase","dot","createTitleMatcher","mergeObjects","a","b","c","result","x","Boolean","Object","entries","is","undefined","RegExp","relativeFilePath","isAbsolute","relative","cwd","formatLocation","location","errorWithFile","expectTypes","receiver","types","matcherName","includes","constructor","commaSeparated","slice","lastType","pop","typesString","length","windowsFilesystemFriendlyLength","exports","trimLongString","s","hash","calculateSha1","middle","substring","start","Math","floor","end","addSuffixToFilePath","suffix","ext","extname","base","sanitizeFilePathBeforeExtension","sanitizeForFilePath","getContainedPath","parentPath","subPath","resolvedPath","debugTest","debug","callLogText","formatCallLog","folderToPackageJsonPath","Map","getPackageJsonPath","folderPath","cached","get","packageJsonPath","fs","existsSync","set","parentFolder","resolveReporterOutputPath","defaultValue","configDir","configValue","basePath","normalizeAndSaveAttachment","outputPath","options","body","contentType","_options$contentType","isString","sanitizedNamePrefix","dest","promises","mkdir","recursive","copyFile","mime","getType","basename","_options$contentType2","Buffer","from","fileIsModule","endsWith","folder","folderIsModule","type","kExtLookups","resolveImportSpecifierExtension","resolved","isPathMapping","isESM","fileExists","others","other","modified","shouldNotResolveDirectory","dirExists","dirImport","_fs$statSync","statSync","throwIfNoEntry","isFile","_fs$statSync2","isDirectory"],"sources":["../src/util.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport type { StackFrame } from '@protocol/channels';\nimport util from 'util';\nimport path from 'path';\nimport url from 'url';\nimport { debug, mime, minimatch, parseStackTraceLine } from 'playwright-core/lib/utilsBundle';\nimport { formatCallLog } from 'playwright-core/lib/utils';\nimport type { TestInfoError } from './../types/test';\nimport type { Location } from './../types/testReporter';\nimport { calculateSha1, isRegExp, isString, sanitizeForFilePath, stringifyStackFrames } from 'playwright-core/lib/utils';\nimport type { RawStack } from 'playwright-core/lib/utils';\n\nconst PLAYWRIGHT_TEST_PATH = path.join(__dirname, '..');\nconst PLAYWRIGHT_CORE_PATH = path.dirname(require.resolve('playwright-core/package.json'));\n\nexport function filterStackTrace(e: Error): { message: string, stack: string } {\n  const name = e.name ? e.name + ': ' : '';\n  if (process.env.PWDEBUGIMPL)\n    return { message: name + e.message, stack: e.stack || '' };\n\n  const stackLines = stringifyStackFrames(filteredStackTrace(e.stack?.split('\\n') || []));\n  return {\n    message: name + e.message,\n    stack: `${name}${e.message}${stackLines.map(line => '\\n' + line).join('')}`\n  };\n}\n\nexport function filterStackFile(file: string) {\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_TEST_PATH))\n    return false;\n  if (!process.env.PWDEBUGIMPL && file.startsWith(PLAYWRIGHT_CORE_PATH))\n    return false;\n  return true;\n}\n\nexport function filteredStackTrace(rawStack: RawStack): StackFrame[] {\n  const frames: StackFrame[] = [];\n  for (const line of rawStack) {\n    const frame = parseStackTraceLine(line);\n    if (!frame || !frame.file)\n      continue;\n    if (!filterStackFile(frame.file))\n      continue;\n    frames.push(frame);\n  }\n  return frames;\n}\n\nexport function serializeError(error: Error | any): TestInfoError {\n  if (error instanceof Error)\n    return filterStackTrace(error);\n  return {\n    value: util.inspect(error)\n  };\n}\n\nexport type Matcher = (value: string) => boolean;\n\nexport type TestFileFilter = {\n  re?: RegExp;\n  exact?: string;\n  line: number | null;\n  column: number | null;\n};\n\nexport function createFileFiltersFromArguments(args: string[]): TestFileFilter[] {\n  return args.map(arg => {\n    const match = /^(.*?):(\\d+):?(\\d+)?$/.exec(arg);\n    return {\n      re: forceRegExp(match ? match[1] : arg),\n      line: match ? parseInt(match[2], 10) : null,\n      column: match?.[3] ? parseInt(match[3], 10) : null,\n    };\n  });\n}\n\nexport function createFileMatcherFromArguments(args: string[]): Matcher {\n  const filters = createFileFiltersFromArguments(args);\n  return createFileMatcher(filters.map(filter => filter.re || filter.exact || ''));\n}\n\nexport function createFileMatcher(patterns: string | RegExp | (string | RegExp)[]): Matcher {\n  const reList: RegExp[] = [];\n  const filePatterns: string[] = [];\n  for (const pattern of Array.isArray(patterns) ? patterns : [patterns]) {\n    if (isRegExp(pattern)) {\n      reList.push(pattern);\n    } else {\n      if (!pattern.startsWith('**/'))\n        filePatterns.push('**/' + pattern);\n      else\n        filePatterns.push(pattern);\n    }\n  }\n  return (filePath: string) => {\n    for (const re of reList) {\n      re.lastIndex = 0;\n      if (re.test(filePath))\n        return true;\n    }\n    // Windows might still receive unix style paths from Cygwin or Git Bash.\n    // Check against the file url as well.\n    if (path.sep === '\\\\') {\n      const fileURL = url.pathToFileURL(filePath).href;\n      for (const re of reList) {\n        re.lastIndex = 0;\n        if (re.test(fileURL))\n          return true;\n      }\n    }\n    for (const pattern of filePatterns) {\n      if (minimatch(filePath, pattern, { nocase: true, dot: true }))\n        return true;\n    }\n    return false;\n  };\n}\n\nexport function createTitleMatcher(patterns: RegExp | RegExp[]): Matcher {\n  const reList = Array.isArray(patterns) ? patterns : [patterns];\n  return (value: string) => {\n    for (const re of reList) {\n      re.lastIndex = 0;\n      if (re.test(value))\n        return true;\n    }\n    return false;\n  };\n}\n\nexport function mergeObjects<A extends object, B extends object, C extends object>(a: A | undefined | void, b: B | undefined | void, c: B | undefined | void): A & B & C {\n  const result = { ...a } as any;\n  for (const x of [b, c].filter(Boolean)) {\n    for (const [name, value] of Object.entries(x as any)) {\n      if (!Object.is(value, undefined))\n        result[name] = value;\n    }\n  }\n  return result as any;\n}\n\nexport function forceRegExp(pattern: string): RegExp {\n  const match = pattern.match(/^\\/(.*)\\/([gi]*)$/);\n  if (match)\n    return new RegExp(match[1], match[2]);\n  return new RegExp(pattern, 'gi');\n}\n\nexport function relativeFilePath(file: string): string {\n  if (!path.isAbsolute(file))\n    return file;\n  return path.relative(process.cwd(), file);\n}\n\nexport function formatLocation(location: Location) {\n  return relativeFilePath(location.file) + ':' + location.line + ':' + location.column;\n}\n\nexport function errorWithFile(file: string, message: string) {\n  return new Error(`${relativeFilePath(file)}: ${message}`);\n}\n\nexport function expectTypes(receiver: any, types: string[], matcherName: string) {\n  if (typeof receiver !== 'object' || !types.includes(receiver.constructor.name)) {\n    const commaSeparated = types.slice();\n    const lastType = commaSeparated.pop();\n    const typesString = commaSeparated.length ? commaSeparated.join(', ') + ' or ' + lastType : lastType;\n    throw new Error(`${matcherName} can be only used with ${typesString} object${types.length > 1 ? 's' : ''}`);\n  }\n}\n\nexport const windowsFilesystemFriendlyLength = 60;\n\nexport function trimLongString(s: string, length = 100) {\n  if (s.length <= length)\n    return s;\n  const hash = calculateSha1(s);\n  const middle = `-${hash.substring(0, 5)}-`;\n  const start = Math.floor((length - middle.length) / 2);\n  const end = length - middle.length - start;\n  return s.substring(0, start) + middle + s.slice(-end);\n}\n\nexport function addSuffixToFilePath(filePath: string, suffix: string): string {\n  const ext = path.extname(filePath);\n  const base = filePath.substring(0, filePath.length - ext.length);\n  return base + suffix + ext;\n}\n\nexport function sanitizeFilePathBeforeExtension(filePath: string): string {\n  const ext = path.extname(filePath);\n  const base = filePath.substring(0, filePath.length - ext.length);\n  return sanitizeForFilePath(base) + ext;\n}\n\n/**\n * Returns absolute path contained within parent directory.\n */\nexport function getContainedPath(parentPath: string, subPath: string = ''): string | null {\n  const resolvedPath = path.resolve(parentPath, subPath);\n  if (resolvedPath === parentPath || resolvedPath.startsWith(parentPath + path.sep))\n    return resolvedPath;\n  return null;\n}\n\nexport const debugTest = debug('pw:test');\n\nexport const callLogText = formatCallLog;\n\nconst folderToPackageJsonPath = new Map<string, string>();\n\nexport function getPackageJsonPath(folderPath: string): string {\n  const cached = folderToPackageJsonPath.get(folderPath);\n  if (cached !== undefined)\n    return cached;\n\n  const packageJsonPath = path.join(folderPath, 'package.json');\n  if (fs.existsSync(packageJsonPath)) {\n    folderToPackageJsonPath.set(folderPath, packageJsonPath);\n    return packageJsonPath;\n  }\n\n  const parentFolder = path.dirname(folderPath);\n  if (folderPath === parentFolder) {\n    folderToPackageJsonPath.set(folderPath, '');\n    return '';\n  }\n\n  const result = getPackageJsonPath(parentFolder);\n  folderToPackageJsonPath.set(folderPath, result);\n  return result;\n}\n\nexport function resolveReporterOutputPath(defaultValue: string, configDir: string, configValue: string | undefined) {\n  if (configValue)\n    return path.resolve(configDir, configValue);\n  let basePath = getPackageJsonPath(configDir);\n  basePath = basePath ? path.dirname(basePath) : process.cwd();\n  return path.resolve(basePath, defaultValue);\n}\n\nexport async function normalizeAndSaveAttachment(outputPath: string, name: string, options: { path?: string, body?: string | Buffer, contentType?: string } = {}): Promise<{ name: string; path?: string | undefined; body?: Buffer | undefined; contentType: string; }> {\n  if (options.path === undefined && options.body === undefined)\n    return { name, contentType: 'text/plain' };\n  if ((options.path !== undefined ? 1 : 0) + (options.body !== undefined ? 1 : 0) !== 1)\n    throw new Error(`Exactly one of \"path\" and \"body\" must be specified`);\n  if (options.path !== undefined) {\n    const hash = calculateSha1(options.path);\n\n    if (!isString(name))\n      throw new Error('\"name\" should be string.');\n\n    const sanitizedNamePrefix = sanitizeForFilePath(name) + '-';\n    const dest = path.join(outputPath, 'attachments', sanitizedNamePrefix + hash + path.extname(options.path));\n    await fs.promises.mkdir(path.dirname(dest), { recursive: true });\n    await fs.promises.copyFile(options.path, dest);\n    const contentType = options.contentType ?? (mime.getType(path.basename(options.path)) || 'application/octet-stream');\n    return { name, contentType, path: dest };\n  } else {\n    const contentType = options.contentType ?? (typeof options.body === 'string' ? 'text/plain' : 'application/octet-stream');\n    return { name, contentType, body: typeof options.body === 'string' ? Buffer.from(options.body) : options.body };\n  }\n}\n\nexport function fileIsModule(file: string): boolean {\n  if (file.endsWith('.mjs') || file.endsWith('.mts'))\n    return true;\n  if (file.endsWith('.cjs') || file.endsWith('.cts'))\n    return false;\n  const folder = path.dirname(file);\n  return folderIsModule(folder);\n}\n\nfunction folderIsModule(folder: string): boolean {\n  const packageJsonPath = getPackageJsonPath(folder);\n  if (!packageJsonPath)\n    return false;\n  // Rely on `require` internal caching logic.\n  return require(packageJsonPath).type === 'module';\n}\n\n// This follows the --moduleResolution=bundler strategy from tsc.\n// https://devblogs.microsoft.com/typescript/announcing-typescript-5-0-beta/#moduleresolution-bundler\nconst kExtLookups = new Map([\n  ['.js', ['.jsx', '.ts', '.tsx']],\n  ['.jsx', ['.tsx']],\n  ['.cjs', ['.cts']],\n  ['.mjs', ['.mts']],\n  ['', ['.js', '.ts', '.jsx', '.tsx', '.cjs', '.mjs', '.cts', '.mts']],\n]);\nexport function resolveImportSpecifierExtension(resolved: string, isPathMapping: boolean, isESM: boolean): string | undefined {\n  if (fileExists(resolved))\n    return resolved;\n\n  for (const [ext, others] of kExtLookups) {\n    if (!resolved.endsWith(ext))\n      continue;\n    for (const other of others) {\n      const modified = resolved.substring(0, resolved.length - ext.length) + other;\n      if (fileExists(modified))\n        return modified;\n    }\n    break;  // Do not try '' when a more specific extension like '.jsx' matched.\n  }\n\n  // After TypeScript path mapping, here's how directories with a `package.json` are resolved:\n  //  - `package.json#exports` is not respected\n  //  - `package.json#main` is respected only in CJS mode\n  //  - `index.js` default is respected only in CJS mode\n  //\n  // More info:\n  //  - https://www.typescriptlang.org/docs/handbook/modules/reference.html#paths-should-not-point-to-monorepo-packages-or-node_modules-packages\n  //  - https://www.typescriptlang.org/docs/handbook/modules/reference.html#directory-modules-index-file-resolution\n  //  - https://nodejs.org/dist/latest-v20.x/docs/api/modules.html#folders-as-modules\n\n  const shouldNotResolveDirectory = isPathMapping && isESM;\n\n  if (!shouldNotResolveDirectory && dirExists(resolved)) {\n    // If we import a package, let Node.js figure out the correct import based on package.json.\n    if (fileExists(path.join(resolved, 'package.json')))\n      return resolved;\n\n    const dirImport = path.join(resolved, 'index');\n    return resolveImportSpecifierExtension(dirImport, isPathMapping, isESM);\n  }\n}\n\nfunction fileExists(resolved: string) {\n  return fs.statSync(resolved, { throwIfNoEntry: false })?.isFile();\n}\n\nfunction dirExists(resolved: string) {\n  return fs.statSync(resolved, { throwIfNoEntry: false })?.isDirectory();\n}\n"],"mappings":"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"}