{"version":3,"file":"transform.js","names":["_crypto","_interopRequireDefault","require","_path","_url","_utilsBundle","_tsconfigLoader","_module","_util","_compilationCache","obj","__esModule","default","version","cachedTSConfigs","Map","_transformConfig","babelPlugins","external","_externalMatcher","setTransformConfig","config","createFileMatcher","transformConfig","_singleTSConfig","setSingleTSConfig","value","singleTSConfig","validateTsConfig","tsconfig","_tsconfig$absoluteBas","_tsconfig$paths","_tsconfig$paths2","pathsBase","absoluteBaseUrl","paths","pathsBasePath","pathsFallback","key","values","allowJs","Object","entries","mapping","map","concat","loadAndValidateTsconfigsForFile","file","tsconfigPathOrDirecotry","path","dirname","has","loaded","tsConfigLoader","set","get","pathSeparator","process","platform","builtins","Set","Module","builtinModules","resolveHook","filename","specifier","isESM","startsWith","shouldTransform","isRelativeSpecifier","resolveImportSpecifierExtension","resolve","isTypeScript","endsWith","tsconfigs","longestPrefixLength","pathMatchedByLongestPrefix","matchedPartOfSpecifier","keyPrefix","keySuffix","split","includes","substring","length","candidate","replace","existing","isAbsolute","belongsToNodeModules","transformData","setTransformData","pluginName","transformHook","originalCode","moduleUrl","hasPreprocessor","env","PW_TEST_SOURCE_TRANSFORM","PW_TEST_SOURCE_TRANSFORM_SCOPE","some","f","pluginsPrologue","pluginsEpilogue","hash","calculateHash","cachedCode","addToCache","serializedCache","getFromCompilationCache","undefined","code","BROWSERSLIST_IGNORE_OLD_DATA","babelTransform","added","content","filePath","isModule","crypto","createHash","update","p","join","digest","requireOrImport","installTransformIfNeeded","fileIsModule","esmImport","eval","JSON","stringify","url","pathToFileURL","result","depsCollector","currentFileDepsCollector","module","cache","collectCJSDependencies","transformInstalled","installSourceMapSupport","originalResolveFilename","_resolveFilename","resolveFilename","parent","rest","resolved","call","pirates","addHook","exts","dependencies","children","forEach","child","add","wrapFunctionWithLocation","func","args","oldPrepareStackTrace","Error","prepareStackTrace","error","stackFrames","frame","sourceMapSupport","wrapCallSite","fileName","getFileName","fileURLToPath","line","getLineNumber","column","getColumnNumber","oldStackTraceLimit","stackTraceLimit","captureStackTrace","location","stack"],"sources":["../../src/transform/transform.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport crypto from 'crypto';\nimport path from 'path';\nimport url from 'url';\nimport { sourceMapSupport, pirates } from '../utilsBundle';\nimport type { Location } from '../../types/testReporter';\nimport type { LoadedTsConfig } from '../third_party/tsconfig-loader';\nimport { tsConfigLoader } from '../third_party/tsconfig-loader';\nimport Module from 'module';\nimport type { BabelPlugin, BabelTransformFunction } from './babelBundle';\nimport { createFileMatcher, fileIsModule, resolveImportSpecifierExtension } from '../util';\nimport type { Matcher } from '../util';\nimport { getFromCompilationCache, currentFileDepsCollector, belongsToNodeModules, installSourceMapSupport } from './compilationCache';\n\nconst version = require('../../package.json').version;\n\ntype ParsedTsConfigData = {\n  pathsBase?: string;\n  paths: { key: string, values: string[] }[];\n  allowJs: boolean;\n};\nconst cachedTSConfigs = new Map<string, ParsedTsConfigData[]>();\n\nexport type TransformConfig = {\n  babelPlugins: [string, any?][];\n  external: string[];\n};\n\nlet _transformConfig: TransformConfig = {\n  babelPlugins: [],\n  external: [],\n};\n\nlet _externalMatcher: Matcher = () => false;\n\nexport function setTransformConfig(config: TransformConfig) {\n  _transformConfig = config;\n  _externalMatcher = createFileMatcher(_transformConfig.external);\n}\n\nexport function transformConfig(): TransformConfig {\n  return _transformConfig;\n}\n\nlet _singleTSConfig: string | undefined;\n\nexport function setSingleTSConfig(value: string | undefined) {\n  _singleTSConfig = value;\n}\n\nexport function singleTSConfig(): string | undefined {\n  return _singleTSConfig;\n}\n\nfunction validateTsConfig(tsconfig: LoadedTsConfig): ParsedTsConfigData {\n  // When no explicit baseUrl is set, resolve paths relative to the tsconfig file.\n  // See https://www.typescriptlang.org/tsconfig#paths\n  const pathsBase = tsconfig.absoluteBaseUrl ?? tsconfig.paths?.pathsBasePath;\n  // Only add the catch-all mapping when baseUrl is specified\n  const pathsFallback = tsconfig.absoluteBaseUrl ? [{ key: '*', values: ['*'] }] : [];\n  return {\n    allowJs: !!tsconfig.allowJs,\n    pathsBase,\n    paths: Object.entries(tsconfig.paths?.mapping || {}).map(([key, values]) => ({ key, values })).concat(pathsFallback)\n  };\n}\n\nfunction loadAndValidateTsconfigsForFile(file: string): ParsedTsConfigData[] {\n  const tsconfigPathOrDirecotry = _singleTSConfig || path.dirname(file);\n  if (!cachedTSConfigs.has(tsconfigPathOrDirecotry)) {\n    const loaded = tsConfigLoader(tsconfigPathOrDirecotry);\n    cachedTSConfigs.set(tsconfigPathOrDirecotry, loaded.map(validateTsConfig));\n  }\n  return cachedTSConfigs.get(tsconfigPathOrDirecotry)!;\n}\n\nconst pathSeparator = process.platform === 'win32' ? ';' : ':';\nconst builtins = new Set(Module.builtinModules);\n\nexport function resolveHook(filename: string, specifier: string, isESM: boolean): string | undefined {\n  if (specifier.startsWith('node:') || builtins.has(specifier))\n    return;\n  if (!shouldTransform(filename))\n    return;\n\n  if (isRelativeSpecifier(specifier))\n    return resolveImportSpecifierExtension(path.resolve(path.dirname(filename), specifier), false, isESM);\n\n  /**\n   * TypeScript discourages path-mapping into node_modules\n   *    (https://www.typescriptlang.org/docs/handbook/modules/reference.html#paths-should-not-point-to-monorepo-packages-or-node_modules-packages).\n   * It seems like TypeScript tries path-mapping first, but does not look at the `package.json` or `index.js` files in ESM.\n   * If path-mapping doesn't yield a result, TypeScript falls back to the default resolution (typically node_modules).\n   */\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx');\n  const tsconfigs = loadAndValidateTsconfigsForFile(filename);\n  for (const tsconfig of tsconfigs) {\n    if (!isTypeScript && !tsconfig.allowJs)\n      continue;\n    let longestPrefixLength = -1;\n    let pathMatchedByLongestPrefix: string | undefined;\n\n    for (const { key, values } of tsconfig.paths) {\n      let matchedPartOfSpecifier = specifier;\n\n      const [keyPrefix, keySuffix] = key.split('*');\n      if (key.includes('*')) {\n        // * If pattern contains '*' then to match pattern \"<prefix>*<suffix>\" module name must start with the <prefix> and end with <suffix>.\n        // * <MatchedStar> denotes part of the module name between <prefix> and <suffix>.\n        // * If module name can be matches with multiple patterns then pattern with the longest prefix will be picked.\n        // https://github.com/microsoft/TypeScript/blob/f82d0cb3299c04093e3835bc7e29f5b40475f586/src/compiler/moduleNameResolver.ts#L1049\n        if (keyPrefix) {\n          if (!specifier.startsWith(keyPrefix))\n            continue;\n          matchedPartOfSpecifier = matchedPartOfSpecifier.substring(keyPrefix.length, matchedPartOfSpecifier.length);\n        }\n        if (keySuffix) {\n          if (!specifier.endsWith(keySuffix))\n            continue;\n          matchedPartOfSpecifier = matchedPartOfSpecifier.substring(0, matchedPartOfSpecifier.length - keySuffix.length);\n        }\n      } else {\n        if (specifier !== key)\n          continue;\n        matchedPartOfSpecifier = specifier;\n      }\n\n      if (keyPrefix.length <= longestPrefixLength)\n        continue;\n\n      for (const value of values) {\n        let candidate = value;\n        if (value.includes('*'))\n          candidate = candidate.replace('*', matchedPartOfSpecifier);\n        candidate = path.resolve(tsconfig.pathsBase!, candidate);\n        const existing = resolveImportSpecifierExtension(candidate, true, isESM);\n        if (existing) {\n          longestPrefixLength = keyPrefix.length;\n          pathMatchedByLongestPrefix = existing;\n        }\n      }\n    }\n    if (pathMatchedByLongestPrefix)\n      return pathMatchedByLongestPrefix;\n  }\n\n  if (path.isAbsolute(specifier)) {\n    // Handle absolute file paths like `import '/path/to/file'`\n    // Do not handle module imports like `import 'fs'`\n    return resolveImportSpecifierExtension(specifier, false, isESM);\n  }\n}\n\nexport function shouldTransform(filename: string): boolean {\n  if (_externalMatcher(filename))\n    return false;\n  return !belongsToNodeModules(filename);\n}\n\nlet transformData: Map<string, any>;\n\nexport function setTransformData(pluginName: string, value: any) {\n  transformData.set(pluginName, value);\n}\n\nexport function transformHook(originalCode: string, filename: string, moduleUrl?: string): { code: string, serializedCache?: any } {\n  const isTypeScript = filename.endsWith('.ts') || filename.endsWith('.tsx') || filename.endsWith('.mts') || filename.endsWith('.cts');\n  const hasPreprocessor =\n      process.env.PW_TEST_SOURCE_TRANSFORM &&\n      process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE &&\n      process.env.PW_TEST_SOURCE_TRANSFORM_SCOPE.split(pathSeparator).some(f => filename.startsWith(f));\n  const pluginsPrologue = _transformConfig.babelPlugins;\n  const pluginsEpilogue = hasPreprocessor ? [[process.env.PW_TEST_SOURCE_TRANSFORM!]] as BabelPlugin[] : [];\n  const hash = calculateHash(originalCode, filename, !!moduleUrl, pluginsPrologue, pluginsEpilogue);\n  const { cachedCode, addToCache, serializedCache } = getFromCompilationCache(filename, hash, moduleUrl);\n  if (cachedCode !== undefined)\n    return { code: cachedCode, serializedCache };\n\n  // We don't use any browserslist data, but babel checks it anyway.\n  // Silence the annoying warning.\n  process.env.BROWSERSLIST_IGNORE_OLD_DATA = 'true';\n\n  const { babelTransform }: { babelTransform: BabelTransformFunction } = require('./babelBundle');\n  transformData = new Map<string, any>();\n  const { code, map } = babelTransform(originalCode, filename, isTypeScript, !!moduleUrl, pluginsPrologue, pluginsEpilogue);\n  if (!code)\n    return { code: '', serializedCache };\n  const added = addToCache!(code, map, transformData);\n  return { code, serializedCache: added.serializedCache };\n}\n\nfunction calculateHash(content: string, filePath: string, isModule: boolean, pluginsPrologue: BabelPlugin[], pluginsEpilogue: BabelPlugin[]): string {\n  const hash = crypto.createHash('sha1')\n      .update(isModule ? 'esm' : 'no_esm')\n      .update(content)\n      .update(filePath)\n      .update(version)\n      .update(pluginsPrologue.map(p => p[0]).join(','))\n      .update(pluginsEpilogue.map(p => p[0]).join(','))\n      .digest('hex');\n  return hash;\n}\n\nexport async function requireOrImport(file: string) {\n  installTransformIfNeeded();\n  const isModule = fileIsModule(file);\n  const esmImport = () => eval(`import(${JSON.stringify(url.pathToFileURL(file))})`);\n  if (isModule)\n    return await esmImport();\n  const result = require(file);\n  const depsCollector = currentFileDepsCollector();\n  if (depsCollector) {\n    const module = require.cache[file];\n    if (module)\n      collectCJSDependencies(module, depsCollector);\n  }\n  return result;\n}\n\nlet transformInstalled = false;\n\nfunction installTransformIfNeeded() {\n  if (transformInstalled)\n    return;\n  transformInstalled = true;\n\n  installSourceMapSupport();\n\n  const originalResolveFilename = (Module as any)._resolveFilename;\n  function resolveFilename(this: any, specifier: string, parent: Module, ...rest: any[]) {\n    if (parent) {\n      const resolved = resolveHook(parent.filename, specifier, false);\n      if (resolved !== undefined)\n        specifier = resolved;\n    }\n    return originalResolveFilename.call(this, specifier, parent, ...rest);\n  }\n  (Module as any)._resolveFilename = resolveFilename;\n\n  pirates.addHook((code: string, filename: string) => {\n    if (!shouldTransform(filename))\n      return code;\n    return transformHook(code, filename).code;\n  }, { exts: ['.ts', '.tsx', '.js', '.jsx', '.mjs', '.mts', '.cjs', '.cts'] });\n}\n\nconst collectCJSDependencies = (module: Module, dependencies: Set<string>) => {\n  module.children.forEach(child => {\n    if (!belongsToNodeModules(child.filename) && !dependencies.has(child.filename)) {\n      dependencies.add(child.filename);\n      collectCJSDependencies(child, dependencies);\n    }\n  });\n};\n\nexport function wrapFunctionWithLocation<A extends any[], R>(func: (location: Location, ...args: A) => R): (...args: A) => R {\n  return (...args) => {\n    const oldPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = (error, stackFrames) => {\n      const frame: NodeJS.CallSite = sourceMapSupport.wrapCallSite(stackFrames[1]);\n      const fileName = frame.getFileName();\n      // Node error stacks for modules use file:// urls instead of paths.\n      const file = (fileName && fileName.startsWith('file://')) ? url.fileURLToPath(fileName) : fileName;\n      return {\n        file,\n        line: frame.getLineNumber(),\n        column: frame.getColumnNumber(),\n      };\n    };\n    const oldStackTraceLimit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 2;\n    const obj: { stack: Location } = {} as any;\n    Error.captureStackTrace(obj);\n    const location = obj.stack;\n    Error.stackTraceLimit = oldStackTraceLimit;\n    Error.prepareStackTrace = oldPrepareStackTrace;\n    return func(location, ...args);\n  };\n}\n\nfunction isRelativeSpecifier(specifier: string) {\n  return specifier === '.' || specifier === '..' || specifier.startsWith('./') || specifier.startsWith('../');\n}\n"],"mappings":"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"}