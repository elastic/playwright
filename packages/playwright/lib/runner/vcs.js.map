{"version":3,"file":"vcs.js","names":["_child_process","_interopRequireDefault","require","_compilationCache","_path","obj","__esModule","default","detectChangedTestFiles","baseCommit","configDir","gitFileList","command","childProcess","execSync","encoding","stdio","cwd","split","filter","Boolean","_error","error","unknownRevision","output","some","line","includes","isShallowClone","trim","Error","join","untrackedFiles","map","file","path","gitRoot","trackedFilesWithChanges","Set","affectedTestFiles"],"sources":["../../src/runner/vcs.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport childProcess from 'child_process';\nimport { affectedTestFiles } from '../transform/compilationCache';\nimport path from 'path';\n\nexport async function detectChangedTestFiles(baseCommit: string, configDir: string): Promise<Set<string>> {\n  function gitFileList(command: string) {\n    try {\n      return childProcess.execSync(\n          `git ${command}`,\n          { encoding: 'utf-8', stdio: 'pipe', cwd: configDir }\n      ).split('\\n').filter(Boolean);\n    } catch (_error) {\n      const error = _error as childProcess.SpawnSyncReturns<string>;\n\n      const unknownRevision = error.output.some(line => line?.includes('unknown revision'));\n      if (unknownRevision) {\n        const isShallowClone = childProcess.execSync('git rev-parse --is-shallow-repository', { encoding: 'utf-8',  stdio: 'pipe', cwd: configDir }).trim() === 'true';\n        if (isShallowClone) {\n          throw new Error([\n            `The repository is a shallow clone and does not have '${baseCommit}' available locally.`,\n            `Note that GitHub Actions checkout is shallow by default: https://github.com/actions/checkout`\n          ].join('\\n'));\n        }\n      }\n\n      throw new Error([\n        `Cannot detect changed files for --only-changed mode:`,\n        `git ${command}`,\n        '',\n        ...error.output,\n      ].join('\\n'));\n    }\n  }\n\n  const untrackedFiles = gitFileList(`ls-files --others --exclude-standard`).map(file => path.join(configDir, file));\n\n  const [gitRoot] = gitFileList('rev-parse --show-toplevel');\n  const trackedFilesWithChanges = gitFileList(`diff ${baseCommit} --name-only`).map(file => path.join(gitRoot, file));\n\n  return new Set(affectedTestFiles([...untrackedFiles, ...trackedFilesWithChanges]));\n}"],"mappings":";;;;;;AAgBA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAwB,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAlBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,eAAeG,sBAAsBA,CAACC,UAAkB,EAAEC,SAAiB,EAAwB;EACxG,SAASC,WAAWA,CAACC,OAAe,EAAE;IACpC,IAAI;MACF,OAAOC,sBAAY,CAACC,QAAQ,CACvB,OAAMF,OAAQ,EAAC,EAChB;QAAEG,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAEP;MAAU,CACvD,CAAC,CAACQ,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOC,MAAM,EAAE;MACf,MAAMC,KAAK,GAAGD,MAA+C;MAE7D,MAAME,eAAe,GAAGD,KAAK,CAACE,MAAM,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;MACrF,IAAIJ,eAAe,EAAE;QACnB,MAAMK,cAAc,GAAGf,sBAAY,CAACC,QAAQ,CAAC,uCAAuC,EAAE;UAAEC,QAAQ,EAAE,OAAO;UAAGC,KAAK,EAAE,MAAM;UAAEC,GAAG,EAAEP;QAAU,CAAC,CAAC,CAACmB,IAAI,CAAC,CAAC,KAAK,MAAM;QAC9J,IAAID,cAAc,EAAE;UAClB,MAAM,IAAIE,KAAK,CAAC,CACb,wDAAuDrB,UAAW,sBAAqB,EACvF,8FAA6F,CAC/F,CAACsB,IAAI,CAAC,IAAI,CAAC,CAAC;QACf;MACF;MAEA,MAAM,IAAID,KAAK,CAAC,CACb,sDAAqD,EACrD,OAAMlB,OAAQ,EAAC,EAChB,EAAE,EACF,GAAGU,KAAK,CAACE,MAAM,CAChB,CAACO,IAAI,CAAC,IAAI,CAAC,CAAC;IACf;EACF;EAEA,MAAMC,cAAc,GAAGrB,WAAW,CAAE,sCAAqC,CAAC,CAACsB,GAAG,CAACC,IAAI,IAAIC,aAAI,CAACJ,IAAI,CAACrB,SAAS,EAAEwB,IAAI,CAAC,CAAC;EAElH,MAAM,CAACE,OAAO,CAAC,GAAGzB,WAAW,CAAC,2BAA2B,CAAC;EAC1D,MAAM0B,uBAAuB,GAAG1B,WAAW,CAAE,QAAOF,UAAW,cAAa,CAAC,CAACwB,GAAG,CAACC,IAAI,IAAIC,aAAI,CAACJ,IAAI,CAACK,OAAO,EAAEF,IAAI,CAAC,CAAC;EAEnH,OAAO,IAAII,GAAG,CAAC,IAAAC,mCAAiB,EAAC,CAAC,GAAGP,cAAc,EAAE,GAAGK,uBAAuB,CAAC,CAAC,CAAC;AACpF"}