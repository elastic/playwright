{"version":3,"file":"workerHost.js","names":["_fs","_interopRequireDefault","require","_path","_ipc","_processHost","_folders","_utils","obj","__esModule","default","lastWorkerIndex","WorkerHost","ProcessHost","constructor","testGroup","parallelIndex","config","extraEnv","outputDir","workerIndex","resolve","FORCE_COLOR","DEBUG_COLORS","_hash","_params","_didFail","workerHash","repeatEachIndex","projectId","artifactsDir","path","join","artifactsFolderName","start","fs","promises","mkdir","recursive","startRunner","onStdOut","chunk","emit","stdioChunkToParams","onStdErr","onExit","removeFolders","stop","didFail","runTestGroup","runPayload","sendMessageNoReply","method","params","hash","exports"],"sources":["../../src/runner/workerHost.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport type { TestGroup } from './testGroups';\nimport { stdioChunkToParams } from '../common/ipc';\nimport type { RunPayload, SerializedConfig, WorkerInitParams } from '../common/ipc';\nimport { ProcessHost } from './processHost';\nimport { artifactsFolderName } from '../isomorphic/folders';\nimport { removeFolders } from 'playwright-core/lib/utils';\n\nlet lastWorkerIndex = 0;\n\nexport class WorkerHost extends ProcessHost {\n  readonly parallelIndex: number;\n  readonly workerIndex: number;\n  private _hash: string;\n  private _params: WorkerInitParams;\n  private _didFail = false;\n\n  constructor(testGroup: TestGroup, parallelIndex: number, config: SerializedConfig, extraEnv: Record<string, string | undefined>, outputDir: string) {\n    const workerIndex = lastWorkerIndex++;\n    super(require.resolve('../worker/workerMain.js'), `worker-${workerIndex}`, {\n      ...extraEnv,\n      FORCE_COLOR: '1',\n      DEBUG_COLORS: '1',\n    });\n    this.workerIndex = workerIndex;\n    this.parallelIndex = parallelIndex;\n    this._hash = testGroup.workerHash;\n\n    this._params = {\n      workerIndex: this.workerIndex,\n      parallelIndex,\n      repeatEachIndex: testGroup.repeatEachIndex,\n      projectId: testGroup.projectId,\n      config,\n      artifactsDir: path.join(outputDir, artifactsFolderName(workerIndex))\n    };\n  }\n\n  async start() {\n    await fs.promises.mkdir(this._params.artifactsDir, { recursive: true });\n    return await this.startRunner(this._params, {\n      onStdOut: chunk => this.emit('stdOut', stdioChunkToParams(chunk)),\n      onStdErr: chunk => this.emit('stdErr', stdioChunkToParams(chunk)),\n    });\n  }\n\n  override async onExit() {\n    await removeFolders([this._params.artifactsDir]);\n  }\n\n  override async stop(didFail?: boolean) {\n    if (didFail)\n      this._didFail = true;\n    await super.stop();\n  }\n\n  runTestGroup(runPayload: RunPayload) {\n    this.sendMessageNoReply({ method: 'runTestGroup', params: runPayload });\n  }\n\n  hash() {\n    return this._hash;\n  }\n\n  didFail() {\n    return this._didFail;\n  }\n}\n"],"mappings":"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"}