{"version":3,"file":"taskRunner.js","names":["_utilsBundle","require","_utils","_sigIntWatcher","_util","TaskRunner","create","reporter","globalTimeoutForError","constructor","_tasks","_reporter","_hasErrors","_interrupted","_isTearDown","_globalTimeoutForError","addTask","name","task","push","run","context","deadline","cancelPromise","status","cleanup","runDeferCleanup","teardownStatus","ManualPromise","sigintWatcher","SigIntWatcher","timeoutWatcher","TimeoutWatcher","teardownRunner","currentTaskName","taskLoop","debug","errors","softErrors","_task$setup","unshift","setup","teardown","call","e","serializeError","error","_this$_reporter$onErr","_this$_reporter","onError","length","Promise","race","promise","disarm","hadSignal","isDone","timedOut","_this$_reporter$onErr2","_this$_reporter2","message","colors","red","resolve","then","r","exports","_timedOut","_timer","monotonicTime","setTimeout","clearTimeout"],"sources":["../../src/runner/taskRunner.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { colors, debug } from 'playwright-core/lib/utilsBundle';\nimport { ManualPromise, monotonicTime } from 'playwright-core/lib/utils';\nimport type { FullResult, TestError } from '../../types/testReporter';\nimport { SigIntWatcher } from './sigIntWatcher';\nimport { serializeError } from '../util';\nimport type { ReporterV2 } from '../reporters/reporterV2';\nimport type { InternalReporter } from '../reporters/internalReporter';\n\ntype TaskPhase<Context> = (reporter: ReporterV2, context: Context, errors: TestError[], softErrors: TestError[]) => Promise<void> | void;\nexport type Task<Context> = { setup?: TaskPhase<Context>, teardown?: TaskPhase<Context> };\n\nexport class TaskRunner<Context> {\n  private _tasks: { name: string, task: Task<Context> }[] = [];\n  private _reporter: InternalReporter;\n  private _hasErrors = false;\n  private _interrupted = false;\n  private _isTearDown = false;\n  private _globalTimeoutForError: number;\n\n  static create<Context>(reporter: InternalReporter, globalTimeoutForError: number = 0) {\n    return new TaskRunner<Context>(reporter, globalTimeoutForError);\n  }\n\n  private constructor(reporter: InternalReporter, globalTimeoutForError: number) {\n    this._reporter = reporter;\n    this._globalTimeoutForError = globalTimeoutForError;\n  }\n\n  addTask(name: string, task: Task<Context>) {\n    this._tasks.push({ name, task });\n  }\n\n  async run(context: Context, deadline: number, cancelPromise?: ManualPromise<void>): Promise<FullResult['status']> {\n    const { status, cleanup } = await this.runDeferCleanup(context, deadline, cancelPromise);\n    const teardownStatus = await cleanup();\n    return status === 'passed' ? teardownStatus : status;\n  }\n\n  async runDeferCleanup(context: Context, deadline: number, cancelPromise = new ManualPromise<void>()): Promise<{ status: FullResult['status'], cleanup: () => Promise<FullResult['status']> }> {\n    const sigintWatcher = new SigIntWatcher();\n    const timeoutWatcher = new TimeoutWatcher(deadline);\n    const teardownRunner = new TaskRunner<Context>(this._reporter, this._globalTimeoutForError);\n    teardownRunner._isTearDown = true;\n\n    let currentTaskName: string | undefined;\n\n    const taskLoop = async () => {\n      for (const { name, task } of this._tasks) {\n        currentTaskName = name;\n        if (this._interrupted)\n          break;\n        debug('pw:test:task')(`\"${name}\" started`);\n        const errors: TestError[] = [];\n        const softErrors: TestError[] = [];\n        try {\n          teardownRunner._tasks.unshift({ name: `teardown for ${name}`, task: { setup: task.teardown } });\n          await task.setup?.(this._reporter, context, errors, softErrors);\n        } catch (e) {\n          debug('pw:test:task')(`error in \"${name}\": `, e);\n          errors.push(serializeError(e));\n        } finally {\n          for (const error of [...softErrors, ...errors])\n            this._reporter.onError?.(error);\n          if (errors.length) {\n            if (!this._isTearDown)\n              this._interrupted = true;\n            this._hasErrors = true;\n          }\n        }\n        debug('pw:test:task')(`\"${name}\" finished`);\n      }\n    };\n\n    await Promise.race([\n      taskLoop(),\n      cancelPromise,\n      sigintWatcher.promise(),\n      timeoutWatcher.promise,\n    ]);\n\n    sigintWatcher.disarm();\n    timeoutWatcher.disarm();\n\n    // Prevent subsequent tasks from running.\n    this._interrupted = true;\n\n    let status: FullResult['status'] = 'passed';\n    if (sigintWatcher.hadSignal() || cancelPromise?.isDone()) {\n      status = 'interrupted';\n    } else if (timeoutWatcher.timedOut()) {\n      this._reporter.onError?.({ message: colors.red(`Timed out waiting ${this._globalTimeoutForError / 1000}s for the ${currentTaskName} to run`) });\n      status = 'timedout';\n    } else if (this._hasErrors) {\n      status = 'failed';\n    }\n    cancelPromise?.resolve();\n    // Note that upon hitting deadline, we \"run cleanup\", but it exits immediately\n    // because of the same deadline. Essentially, we're not performing any cleanup.\n    const cleanup = () => teardownRunner.runDeferCleanup(context, deadline).then(r => r.status);\n    return { status, cleanup };\n  }\n}\n\nclass TimeoutWatcher {\n  private _timedOut = false;\n  readonly promise = new ManualPromise();\n  private _timer: NodeJS.Timeout | undefined;\n\n  constructor(deadline: number) {\n    if (!deadline)\n      return;\n\n    if (deadline - monotonicTime() <= 0) {\n      this._timedOut = true;\n      this.promise.resolve();\n      return;\n    }\n    this._timer = setTimeout(() => {\n      this._timedOut = true;\n      this.promise.resolve();\n    }, deadline - monotonicTime());\n  }\n\n  timedOut(): boolean {\n    return this._timedOut;\n  }\n\n  disarm() {\n    clearTimeout(this._timer);\n  }\n}\n"],"mappings":"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"}