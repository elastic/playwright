{"version":3,"file":"failureTracker.js","names":["FailureTracker","constructor","_config","_failureCount","_hasWorkerErrors","_rootSuite","onRootSuite","rootSuite","onTestEnd","test","result","status","expectedStatus","onWorkerError","hasReachedMaxFailures","maxFailures","hasWorkerErrors","hasFailedTests","cliFailOnFlakyTests","hasFlakyTests","_this$_rootSuite","allTests","some","ok","_this$_rootSuite2","outcome","config","exports"],"sources":["../../src/runner/failureTracker.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TestResult } from '../../types/testReporter';\nimport type { FullConfigInternal } from '../common/config';\nimport type { Suite, TestCase } from '../common/test';\n\nexport class FailureTracker {\n  private _failureCount = 0;\n  private _hasWorkerErrors = false;\n  private _rootSuite: Suite | undefined;\n\n  constructor(private _config: FullConfigInternal) {\n  }\n\n  onRootSuite(rootSuite: Suite) {\n    this._rootSuite = rootSuite;\n  }\n\n  onTestEnd(test: TestCase, result: TestResult) {\n    if (result.status !== 'skipped' && result.status !== test.expectedStatus)\n      ++this._failureCount;\n  }\n\n  onWorkerError() {\n    this._hasWorkerErrors = true;\n  }\n\n  hasReachedMaxFailures() {\n    return this.maxFailures() > 0 && this._failureCount >= this.maxFailures();\n  }\n\n  hasWorkerErrors() {\n    return this._hasWorkerErrors;\n  }\n\n  result(): 'failed' | 'passed' {\n    return this._hasWorkerErrors || this.hasReachedMaxFailures() || this.hasFailedTests() || (this._config.cliFailOnFlakyTests && this.hasFlakyTests()) ? 'failed' : 'passed';\n  }\n\n  hasFailedTests() {\n    return this._rootSuite?.allTests().some(test => !test.ok());\n  }\n\n  hasFlakyTests() {\n    return this._rootSuite?.allTests().some(test => (test.outcome() === 'flaky'));\n  }\n\n  maxFailures() {\n    return this._config.config.maxFailures;\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,MAAMA,cAAc,CAAC;EAK1BC,WAAWA,CAASC,OAA2B,EAAE;IAAA,KAJzCC,aAAa,GAAG,CAAC;IAAA,KACjBC,gBAAgB,GAAG,KAAK;IAAA,KACxBC,UAAU;IAAA,KAEEH,OAA2B,GAA3BA,OAA2B;EAC/C;EAEAI,WAAWA,CAACC,SAAgB,EAAE;IAC5B,IAAI,CAACF,UAAU,GAAGE,SAAS;EAC7B;EAEAC,SAASA,CAACC,IAAc,EAAEC,MAAkB,EAAE;IAC5C,IAAIA,MAAM,CAACC,MAAM,KAAK,SAAS,IAAID,MAAM,CAACC,MAAM,KAAKF,IAAI,CAACG,cAAc,EACtE,EAAE,IAAI,CAACT,aAAa;EACxB;EAEAU,aAAaA,CAAA,EAAG;IACd,IAAI,CAACT,gBAAgB,GAAG,IAAI;EAC9B;EAEAU,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACZ,aAAa,IAAI,IAAI,CAACY,WAAW,CAAC,CAAC;EAC3E;EAEAC,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACZ,gBAAgB;EAC9B;EAEAM,MAAMA,CAAA,EAAwB;IAC5B,OAAO,IAAI,CAACN,gBAAgB,IAAI,IAAI,CAACU,qBAAqB,CAAC,CAAC,IAAI,IAAI,CAACG,cAAc,CAAC,CAAC,IAAK,IAAI,CAACf,OAAO,CAACgB,mBAAmB,IAAI,IAAI,CAACC,aAAa,CAAC,CAAE,GAAG,QAAQ,GAAG,QAAQ;EAC3K;EAEAF,cAAcA,CAAA,EAAG;IAAA,IAAAG,gBAAA;IACf,QAAAA,gBAAA,GAAO,IAAI,CAACf,UAAU,cAAAe,gBAAA,uBAAfA,gBAAA,CAAiBC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACb,IAAI,IAAI,CAACA,IAAI,CAACc,EAAE,CAAC,CAAC,CAAC;EAC7D;EAEAJ,aAAaA,CAAA,EAAG;IAAA,IAAAK,iBAAA;IACd,QAAAA,iBAAA,GAAO,IAAI,CAACnB,UAAU,cAAAmB,iBAAA,uBAAfA,iBAAA,CAAiBH,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACb,IAAI,IAAKA,IAAI,CAACgB,OAAO,CAAC,CAAC,KAAK,OAAQ,CAAC;EAC/E;EAEAV,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACb,OAAO,CAACwB,MAAM,CAACX,WAAW;EACxC;AACF;AAACY,OAAA,CAAA3B,cAAA,GAAAA,cAAA"}