{"version":3,"file":"reporters.js","names":["_path","_interopRequireDefault","require","_base","_dot","_empty","_github","_html","_json","_junit","_line","_list","_markdown","_loadUtils","_blob","_reporterV","_utils","obj","__esModule","default","createReporters","config","mode","isTestServer","descriptions","_descriptions","defaultReporters","blob","BlobReporter","dot","ListModeReporter","DotReporter","line","LineReporter","list","ListReporter","github","GitHubReporter","json","JSONReporter","junit","JUnitReporter","null","EmptyReporter","html","HtmlReporter","markdown","MarkdownReporter","reporters","reporter","configCLIOverrides","additionalReporters","runOptions","reporterOptions","r","name","arg","options","push","reporterConstructor","loadReporter","wrapReporterAsV2","process","env","PW_TEST_REPORTER","someReporterPrintsToStdio","some","printsToStdio","length","unshift","CI","omitFailures","createReporterForTestServer","file","messageSink","_send","createConsoleReporter","onError","error","stdout","write","formatError","colors","enabled","message","configDir","_mode","_isTestServer","_commandHash","computeCommandHash","parts","cliProjectFilter","command","cliArgs","cliGrep","cliGrepInvert","cliOnlyChanged","Object","keys","calculateSha1","JSON","stringify","substring","join","constructor","args","onConfigure","onBegin","suite","console","log","tests","allTests","files","Set","test","projectName","titles","titlePath","location","path","relative","rootDir","column","projectTitle","add","size"],"sources":["../../src/runner/reporters.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport type { FullConfig, TestError } from '../../types/testReporter';\nimport { colors, formatError } from '../reporters/base';\nimport DotReporter from '../reporters/dot';\nimport EmptyReporter from '../reporters/empty';\nimport GitHubReporter from '../reporters/github';\nimport HtmlReporter from '../reporters/html';\nimport JSONReporter from '../reporters/json';\nimport JUnitReporter from '../reporters/junit';\nimport LineReporter from '../reporters/line';\nimport ListReporter from '../reporters/list';\nimport MarkdownReporter from '../reporters/markdown';\nimport type { Suite } from '../common/test';\nimport type { BuiltInReporter, FullConfigInternal } from '../common/config';\nimport { loadReporter } from './loadUtils';\nimport { BlobReporter } from '../reporters/blob';\nimport type { ReporterDescription } from '../../types/test';\nimport { type ReporterV2, wrapReporterAsV2 } from '../reporters/reporterV2';\nimport { calculateSha1 } from 'playwright-core/lib/utils';\n\nexport async function createReporters(config: FullConfigInternal, mode: 'list' | 'test' | 'merge', isTestServer: boolean, descriptions?: ReporterDescription[]): Promise<ReporterV2[]> {\n  const defaultReporters: { [key in BuiltInReporter]: new(arg: any) => ReporterV2 } = {\n    blob: BlobReporter,\n    dot: mode === 'list' ? ListModeReporter : DotReporter,\n    line: mode === 'list' ? ListModeReporter : LineReporter,\n    list: mode === 'list' ? ListModeReporter : ListReporter,\n    github: GitHubReporter,\n    json: JSONReporter,\n    junit: JUnitReporter,\n    null: EmptyReporter,\n    html: HtmlReporter,\n    markdown: MarkdownReporter,\n  };\n  const reporters: ReporterV2[] = [];\n  descriptions ??= config.config.reporter;\n  if (config.configCLIOverrides.additionalReporters)\n    descriptions = [...descriptions, ...config.configCLIOverrides.additionalReporters];\n  const runOptions = reporterOptions(config, mode, isTestServer);\n  for (const r of descriptions) {\n    const [name, arg] = r;\n    const options = { ...runOptions, ...arg };\n    if (name in defaultReporters) {\n      reporters.push(new defaultReporters[name as keyof typeof defaultReporters](options));\n    } else {\n      const reporterConstructor = await loadReporter(config, name);\n      reporters.push(wrapReporterAsV2(new reporterConstructor(options)));\n    }\n  }\n  if (process.env.PW_TEST_REPORTER) {\n    const reporterConstructor = await loadReporter(config, process.env.PW_TEST_REPORTER);\n    reporters.push(wrapReporterAsV2(new reporterConstructor(runOptions)));\n  }\n\n  const someReporterPrintsToStdio = reporters.some(r => r.printsToStdio());\n  if (reporters.length && !someReporterPrintsToStdio) {\n    // Add a line/dot/list-mode reporter for convenience.\n    // Important to put it first, just in case some other reporter stalls onEnd.\n    if (mode === 'list')\n      reporters.unshift(new ListModeReporter());\n    else if (mode !== 'merge')\n      reporters.unshift(!process.env.CI ? new LineReporter({ omitFailures: true }) : new DotReporter());\n  }\n  return reporters;\n}\n\nexport async function createReporterForTestServer(file: string, messageSink: (message: any) => void): Promise<ReporterV2> {\n  const reporterConstructor = await loadReporter(null, file);\n  return wrapReporterAsV2(new reporterConstructor({\n    _send: messageSink,\n  }));\n}\n\nexport function createConsoleReporter() {\n  return wrapReporterAsV2({\n    onError(error: TestError) {\n      process.stdout.write(formatError(error, colors.enabled).message + '\\n');\n    }\n  });\n}\n\nfunction reporterOptions(config: FullConfigInternal, mode: 'list' | 'test' | 'merge', isTestServer: boolean) {\n  return {\n    configDir: config.configDir,\n    _mode: mode,\n    _isTestServer: isTestServer,\n    _commandHash: computeCommandHash(config),\n  };\n}\n\nfunction computeCommandHash(config: FullConfigInternal) {\n  const parts = [];\n  // Include project names for readability.\n  if (config.cliProjectFilter)\n    parts.push(...config.cliProjectFilter);\n  const command = {} as any;\n  if (config.cliArgs.length)\n    command.cliArgs = config.cliArgs;\n  if (config.cliGrep)\n    command.cliGrep = config.cliGrep;\n  if (config.cliGrepInvert)\n    command.cliGrepInvert = config.cliGrepInvert;\n  if (config.cliOnlyChanged)\n    command.cliOnlyChanged = config.cliOnlyChanged;\n  if (Object.keys(command).length)\n    parts.push(calculateSha1(JSON.stringify(command)).substring(0, 7));\n  return parts.join('-');\n}\n\nclass ListModeReporter extends EmptyReporter {\n  private config!: FullConfig;\n\n  override onConfigure(config: FullConfig) {\n    this.config = config;\n  }\n\n  override onBegin(suite: Suite): void {\n    // eslint-disable-next-line no-console\n    console.log(`Listing tests:`);\n    const tests = suite.allTests();\n    const files = new Set<string>();\n    for (const test of tests) {\n      // root, project, file, ...describes, test\n      const [, projectName, , ...titles] = test.titlePath();\n      const location = `${path.relative(this.config.rootDir, test.location.file)}:${test.location.line}:${test.location.column}`;\n      const projectTitle = projectName ? `[${projectName}] › ` : '';\n      // eslint-disable-next-line no-console\n      console.log(`  ${projectTitle}${location} › ${titles.join(' › ')}`);\n      files.add(test.location.file);\n    }\n    // eslint-disable-next-line no-console\n    console.log(`Total: ${tests.length} ${tests.length === 1 ? 'test' : 'tests'} in ${files.size} ${files.size === 1 ? 'file' : 'files'}`);\n  }\n\n  override onError(error: TestError) {\n    // eslint-disable-next-line no-console\n    console.error('\\n' + formatError(error, false).message);\n  }\n\n  override printsToStdio(): boolean {\n    return true;\n  }\n}\n"],"mappings":"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"}