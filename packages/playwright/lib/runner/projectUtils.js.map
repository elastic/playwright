{"version":3,"file":"projectUtils.js","names":["_fs","_interopRequireDefault","require","_path","_utils","_utilsBundle","_util","_util2","obj","__esModule","default","readFileAsync","promisify","fs","readFile","readDirAsync","readdir","wildcardPatternToRegExp","pattern","RegExp","split","map","escapeRegExp","join","filterProjects","projects","projectNames","projectNamesToFind","Set","unmatchedProjectNames","Map","patterns","name","lowerCaseName","toLocaleLowerCase","includes","add","set","result","filter","project","has","delete","regex","lastIndex","test","size","unknownProjectNames","Array","from","values","n","Error","p","length","allProjects","buildTeardownToSetupsMap","teardown","setups","get","push","buildProjectsClosure","hasTests","visit","depth","error","stack","dep","deps","buildDependentProjects","forProjects","reverseDeps","reverseDep","forProject","collectFilesForProject","fsCache","extensions","testFileExtension","file","path","extname","allFiles","cachedCollectFiles","testDir","respectGitIgnore","testMatch","createFileMatcher","testIgnore","testFiles","isTest","key","collectFiles","existsSync","statSync","isDirectory","checkIgnores","entryPath","rules","parentStatus","status","rule","ruleIncludes","negate","relative","dir","match","files","entries","withFileTypes","sort","a","b","localeCompare","gitignore","find","e","isFile","content","newRules","s","trim","minimatch","Minimatch","matchBase","dot","flipNegate","comment","entry","entryStatus"],"sources":["../../src/runner/projectUtils.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport { escapeRegExp } from 'playwright-core/lib/utils';\nimport { minimatch } from 'playwright-core/lib/utilsBundle';\nimport { promisify } from 'util';\nimport type { FullProjectInternal } from '../common/config';\nimport { createFileMatcher } from '../util';\n\nconst readFileAsync = promisify(fs.readFile);\nconst readDirAsync = promisify(fs.readdir);\n\nfunction wildcardPatternToRegExp(pattern: string): RegExp {\n  return new RegExp('^' + pattern.split('*').map(escapeRegExp).join('.*') + '$', 'ig');\n}\n\nexport function filterProjects(projects: FullProjectInternal[], projectNames?: string[]): FullProjectInternal[] {\n  if (!projectNames)\n    return [...projects];\n\n  const projectNamesToFind = new Set<string>();\n  const unmatchedProjectNames = new Map<string, string>();\n  const patterns = new Set<RegExp>();\n  for (const name of projectNames!) {\n    const lowerCaseName = name.toLocaleLowerCase();\n    if (lowerCaseName.includes('*')) {\n      patterns.add(wildcardPatternToRegExp(lowerCaseName));\n    } else {\n      projectNamesToFind.add(lowerCaseName);\n      unmatchedProjectNames.set(lowerCaseName, name);\n    }\n  }\n\n  const result = projects.filter(project => {\n    const lowerCaseName = project.project.name.toLocaleLowerCase();\n    if (projectNamesToFind.has(lowerCaseName)) {\n      unmatchedProjectNames.delete(lowerCaseName);\n      return true;\n    }\n    for (const regex of patterns) {\n      regex.lastIndex = 0;\n      if (regex.test(lowerCaseName))\n        return true;\n    }\n    return false;\n  });\n\n  if (unmatchedProjectNames.size) {\n    const unknownProjectNames = Array.from(unmatchedProjectNames.values()).map(n => `\"${n}\"`).join(', ');\n    throw new Error(`Project(s) ${unknownProjectNames} not found. Available projects: ${projects.map(p => `\"${p.project.name}\"`).join(', ')}`);\n  }\n\n  if (!result.length) {\n    const allProjects = projects.map(p => `\"${p.project.name}\"`).join(', ');\n    throw new Error(`No projects matched. Available projects: ${allProjects}`);\n  }\n\n\n  return result;\n}\n\nexport function buildTeardownToSetupsMap(projects: FullProjectInternal[]): Map<FullProjectInternal, FullProjectInternal[]> {\n  const result = new Map<FullProjectInternal, FullProjectInternal[]>();\n  for (const project of projects) {\n    if (project.teardown) {\n      const setups = result.get(project.teardown) || [];\n      setups.push(project);\n      result.set(project.teardown, setups);\n    }\n  }\n  return result;\n}\n\nexport function buildProjectsClosure(projects: FullProjectInternal[], hasTests?: (project: FullProjectInternal) => boolean): Map<FullProjectInternal, 'top-level' | 'dependency'> {\n  const result = new Map<FullProjectInternal, 'top-level' | 'dependency'>();\n  const visit = (depth: number, project: FullProjectInternal) => {\n    if (depth > 100) {\n      const error = new Error('Circular dependency detected between projects.');\n      error.stack = '';\n      throw error;\n    }\n\n    if (depth === 0 && hasTests && !hasTests(project))\n      return;\n\n    if (result.get(project) !== 'dependency')\n      result.set(project, depth ? 'dependency' : 'top-level');\n\n    for (const dep of project.deps)\n      visit(depth + 1, dep);\n    if (project.teardown)\n      visit(depth + 1, project.teardown);\n  };\n  for (const p of projects)\n    visit(0, p);\n  return result;\n}\n\nexport function buildDependentProjects(forProjects: FullProjectInternal[], projects: FullProjectInternal[]): Set<FullProjectInternal> {\n  const reverseDeps = new Map<FullProjectInternal, FullProjectInternal[]>(projects.map(p => ([p, []])));\n  for (const project of projects) {\n    for (const dep of project.deps)\n      reverseDeps.get(dep)!.push(project);\n  }\n  const result = new Set<FullProjectInternal>();\n  const visit = (depth: number, project: FullProjectInternal) => {\n    if (depth > 100) {\n      const error = new Error('Circular dependency detected between projects.');\n      error.stack = '';\n      throw error;\n    }\n    result.add(project);\n    for (const reverseDep of reverseDeps.get(project)!)\n      visit(depth + 1, reverseDep);\n    if (project.teardown)\n      visit(depth + 1, project.teardown);\n  };\n  for (const forProject of forProjects)\n    visit(0, forProject);\n  return result;\n}\n\nexport async function collectFilesForProject(project: FullProjectInternal, fsCache = new Map<string, string[]>()): Promise<string[]> {\n  const extensions = new Set(['.js', '.ts', '.mjs', '.mts', '.cjs', '.cts', '.jsx', '.tsx', '.mjsx', '.mtsx', '.cjsx', '.ctsx']);\n  const testFileExtension = (file: string) => extensions.has(path.extname(file));\n  const allFiles = await cachedCollectFiles(project.project.testDir, project.respectGitIgnore, fsCache);\n  const testMatch = createFileMatcher(project.project.testMatch);\n  const testIgnore = createFileMatcher(project.project.testIgnore);\n  const testFiles = allFiles.filter(file => {\n    if (!testFileExtension(file))\n      return false;\n    const isTest = !testIgnore(file) && testMatch(file);\n    if (!isTest)\n      return false;\n    return true;\n  });\n  return testFiles;\n}\n\nasync function cachedCollectFiles(testDir: string, respectGitIgnore: boolean, fsCache: Map<string, string[]>) {\n  const key = testDir + ':' + respectGitIgnore;\n  let result = fsCache.get(key);\n  if (!result) {\n    result = await collectFiles(testDir, respectGitIgnore);\n    fsCache.set(key, result);\n  }\n  return result;\n}\n\nasync function collectFiles(testDir: string, respectGitIgnore: boolean): Promise<string[]> {\n  if (!fs.existsSync(testDir))\n    return [];\n  if (!fs.statSync(testDir).isDirectory())\n    return [];\n\n  type Rule = {\n    dir: string;\n    negate: boolean;\n    match: (s: string, partial?: boolean) => boolean\n  };\n  type IgnoreStatus = 'ignored' | 'included' | 'ignored-but-recurse';\n\n  const checkIgnores = (entryPath: string, rules: Rule[], isDirectory: boolean, parentStatus: IgnoreStatus) => {\n    let status = parentStatus;\n    for (const rule of rules) {\n      const ruleIncludes = rule.negate;\n      if ((status === 'included') === ruleIncludes)\n        continue;\n      const relative = path.relative(rule.dir, entryPath);\n      if (rule.match('/' + relative) || rule.match(relative)) {\n        // Matches \"/dir/file\" or \"dir/file\"\n        status = ruleIncludes ? 'included' : 'ignored';\n      } else if (isDirectory && (rule.match('/' + relative + '/') || rule.match(relative + '/'))) {\n        // Matches \"/dir/subdir/\" or \"dir/subdir/\" for directories.\n        status = ruleIncludes ? 'included' : 'ignored';\n      } else if (isDirectory && ruleIncludes && (rule.match('/' + relative, true) || rule.match(relative, true))) {\n        // Matches \"/dir/donotskip/\" when \"/dir\" is excluded, but \"!/dir/donotskip/file\" is included.\n        status = 'ignored-but-recurse';\n      }\n    }\n    return status;\n  };\n\n  const files: string[] = [];\n\n  const visit = async (dir: string, rules: Rule[], status: IgnoreStatus) => {\n    const entries = await readDirAsync(dir, { withFileTypes: true });\n    entries.sort((a, b) => a.name.localeCompare(b.name));\n\n    if (respectGitIgnore) {\n      const gitignore = entries.find(e => e.isFile() && e.name === '.gitignore');\n      if (gitignore) {\n        const content = await readFileAsync(path.join(dir, gitignore.name), 'utf8');\n        const newRules: Rule[] = content.split(/\\r?\\n/).map(s => {\n          s = s.trim();\n          if (!s)\n            return;\n          // Use flipNegate, because we handle negation ourselves.\n          const rule = new minimatch.Minimatch(s, { matchBase: true, dot: true, flipNegate: true }) as any;\n          if (rule.comment)\n            return;\n          rule.dir = dir;\n          return rule;\n        }).filter(rule => !!rule);\n        rules = [...rules, ...newRules];\n      }\n    }\n\n    for (const entry of entries) {\n      if (entry.name === '.' || entry.name === '..')\n        continue;\n      if (entry.isFile() && entry.name === '.gitignore')\n        continue;\n      if (entry.isDirectory() && entry.name === 'node_modules')\n        continue;\n      const entryPath = path.join(dir, entry.name);\n      const entryStatus = checkIgnores(entryPath, rules, entry.isDirectory(), status);\n      if (entry.isDirectory() && entryStatus !== 'ignored')\n        await visit(entryPath, rules, entryStatus);\n      else if (entry.isFile() && entryStatus === 'included')\n        files.push(entryPath);\n    }\n  };\n  await visit(testDir, [], 'included');\n  return files;\n}\n"],"mappings":";;;;;;;;;;AAgBA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,KAAA,GAAAJ,OAAA;AAEA,IAAAK,MAAA,GAAAL,OAAA;AAA4C,SAAAD,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAtB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,MAAMG,aAAa,GAAG,IAAAC,eAAS,EAACC,WAAE,CAACC,QAAQ,CAAC;AAC5C,MAAMC,YAAY,GAAG,IAAAH,eAAS,EAACC,WAAE,CAACG,OAAO,CAAC;AAE1C,SAASC,uBAAuBA,CAACC,OAAe,EAAU;EACxD,OAAO,IAAIC,MAAM,CAAC,GAAG,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,mBAAY,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC;AACtF;AAEO,SAASC,cAAcA,CAACC,QAA+B,EAAEC,YAAuB,EAAyB;EAC9G,IAAI,CAACA,YAAY,EACf,OAAO,CAAC,GAAGD,QAAQ,CAAC;EAEtB,MAAME,kBAAkB,GAAG,IAAIC,GAAG,CAAS,CAAC;EAC5C,MAAMC,qBAAqB,GAAG,IAAIC,GAAG,CAAiB,CAAC;EACvD,MAAMC,QAAQ,GAAG,IAAIH,GAAG,CAAS,CAAC;EAClC,KAAK,MAAMI,IAAI,IAAIN,YAAY,EAAG;IAChC,MAAMO,aAAa,GAAGD,IAAI,CAACE,iBAAiB,CAAC,CAAC;IAC9C,IAAID,aAAa,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC/BJ,QAAQ,CAACK,GAAG,CAACnB,uBAAuB,CAACgB,aAAa,CAAC,CAAC;IACtD,CAAC,MAAM;MACLN,kBAAkB,CAACS,GAAG,CAACH,aAAa,CAAC;MACrCJ,qBAAqB,CAACQ,GAAG,CAACJ,aAAa,EAAED,IAAI,CAAC;IAChD;EACF;EAEA,MAAMM,MAAM,GAAGb,QAAQ,CAACc,MAAM,CAACC,OAAO,IAAI;IACxC,MAAMP,aAAa,GAAGO,OAAO,CAACA,OAAO,CAACR,IAAI,CAACE,iBAAiB,CAAC,CAAC;IAC9D,IAAIP,kBAAkB,CAACc,GAAG,CAACR,aAAa,CAAC,EAAE;MACzCJ,qBAAqB,CAACa,MAAM,CAACT,aAAa,CAAC;MAC3C,OAAO,IAAI;IACb;IACA,KAAK,MAAMU,KAAK,IAAIZ,QAAQ,EAAE;MAC5BY,KAAK,CAACC,SAAS,GAAG,CAAC;MACnB,IAAID,KAAK,CAACE,IAAI,CAACZ,aAAa,CAAC,EAC3B,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EACd,CAAC,CAAC;EAEF,IAAIJ,qBAAqB,CAACiB,IAAI,EAAE;IAC9B,MAAMC,mBAAmB,GAAGC,KAAK,CAACC,IAAI,CAACpB,qBAAqB,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC7B,GAAG,CAAC8B,CAAC,IAAK,IAAGA,CAAE,GAAE,CAAC,CAAC5B,IAAI,CAAC,IAAI,CAAC;IACpG,MAAM,IAAI6B,KAAK,CAAE,cAAaL,mBAAoB,mCAAkCtB,QAAQ,CAACJ,GAAG,CAACgC,CAAC,IAAK,IAAGA,CAAC,CAACb,OAAO,CAACR,IAAK,GAAE,CAAC,CAACT,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;EAC5I;EAEA,IAAI,CAACe,MAAM,CAACgB,MAAM,EAAE;IAClB,MAAMC,WAAW,GAAG9B,QAAQ,CAACJ,GAAG,CAACgC,CAAC,IAAK,IAAGA,CAAC,CAACb,OAAO,CAACR,IAAK,GAAE,CAAC,CAACT,IAAI,CAAC,IAAI,CAAC;IACvE,MAAM,IAAI6B,KAAK,CAAE,4CAA2CG,WAAY,EAAC,CAAC;EAC5E;EAGA,OAAOjB,MAAM;AACf;AAEO,SAASkB,wBAAwBA,CAAC/B,QAA+B,EAAmD;EACzH,MAAMa,MAAM,GAAG,IAAIR,GAAG,CAA6C,CAAC;EACpE,KAAK,MAAMU,OAAO,IAAIf,QAAQ,EAAE;IAC9B,IAAIe,OAAO,CAACiB,QAAQ,EAAE;MACpB,MAAMC,MAAM,GAAGpB,MAAM,CAACqB,GAAG,CAACnB,OAAO,CAACiB,QAAQ,CAAC,IAAI,EAAE;MACjDC,MAAM,CAACE,IAAI,CAACpB,OAAO,CAAC;MACpBF,MAAM,CAACD,GAAG,CAACG,OAAO,CAACiB,QAAQ,EAAEC,MAAM,CAAC;IACtC;EACF;EACA,OAAOpB,MAAM;AACf;AAEO,SAASuB,oBAAoBA,CAACpC,QAA+B,EAAEqC,QAAoD,EAAwD;EAChL,MAAMxB,MAAM,GAAG,IAAIR,GAAG,CAAkD,CAAC;EACzE,MAAMiC,KAAK,GAAGA,CAACC,KAAa,EAAExB,OAA4B,KAAK;IAC7D,IAAIwB,KAAK,GAAG,GAAG,EAAE;MACf,MAAMC,KAAK,GAAG,IAAIb,KAAK,CAAC,gDAAgD,CAAC;MACzEa,KAAK,CAACC,KAAK,GAAG,EAAE;MAChB,MAAMD,KAAK;IACb;IAEA,IAAID,KAAK,KAAK,CAAC,IAAIF,QAAQ,IAAI,CAACA,QAAQ,CAACtB,OAAO,CAAC,EAC/C;IAEF,IAAIF,MAAM,CAACqB,GAAG,CAACnB,OAAO,CAAC,KAAK,YAAY,EACtCF,MAAM,CAACD,GAAG,CAACG,OAAO,EAAEwB,KAAK,GAAG,YAAY,GAAG,WAAW,CAAC;IAEzD,KAAK,MAAMG,GAAG,IAAI3B,OAAO,CAAC4B,IAAI,EAC5BL,KAAK,CAACC,KAAK,GAAG,CAAC,EAAEG,GAAG,CAAC;IACvB,IAAI3B,OAAO,CAACiB,QAAQ,EAClBM,KAAK,CAACC,KAAK,GAAG,CAAC,EAAExB,OAAO,CAACiB,QAAQ,CAAC;EACtC,CAAC;EACD,KAAK,MAAMJ,CAAC,IAAI5B,QAAQ,EACtBsC,KAAK,CAAC,CAAC,EAAEV,CAAC,CAAC;EACb,OAAOf,MAAM;AACf;AAEO,SAAS+B,sBAAsBA,CAACC,WAAkC,EAAE7C,QAA+B,EAA4B;EACpI,MAAM8C,WAAW,GAAG,IAAIzC,GAAG,CAA6CL,QAAQ,CAACJ,GAAG,CAACgC,CAAC,IAAK,CAACA,CAAC,EAAE,EAAE,CAAE,CAAC,CAAC;EACrG,KAAK,MAAMb,OAAO,IAAIf,QAAQ,EAAE;IAC9B,KAAK,MAAM0C,GAAG,IAAI3B,OAAO,CAAC4B,IAAI,EAC5BG,WAAW,CAACZ,GAAG,CAACQ,GAAG,CAAC,CAAEP,IAAI,CAACpB,OAAO,CAAC;EACvC;EACA,MAAMF,MAAM,GAAG,IAAIV,GAAG,CAAsB,CAAC;EAC7C,MAAMmC,KAAK,GAAGA,CAACC,KAAa,EAAExB,OAA4B,KAAK;IAC7D,IAAIwB,KAAK,GAAG,GAAG,EAAE;MACf,MAAMC,KAAK,GAAG,IAAIb,KAAK,CAAC,gDAAgD,CAAC;MACzEa,KAAK,CAACC,KAAK,GAAG,EAAE;MAChB,MAAMD,KAAK;IACb;IACA3B,MAAM,CAACF,GAAG,CAACI,OAAO,CAAC;IACnB,KAAK,MAAMgC,UAAU,IAAID,WAAW,CAACZ,GAAG,CAACnB,OAAO,CAAC,EAC/CuB,KAAK,CAACC,KAAK,GAAG,CAAC,EAAEQ,UAAU,CAAC;IAC9B,IAAIhC,OAAO,CAACiB,QAAQ,EAClBM,KAAK,CAACC,KAAK,GAAG,CAAC,EAAExB,OAAO,CAACiB,QAAQ,CAAC;EACtC,CAAC;EACD,KAAK,MAAMgB,UAAU,IAAIH,WAAW,EAClCP,KAAK,CAAC,CAAC,EAAEU,UAAU,CAAC;EACtB,OAAOnC,MAAM;AACf;AAEO,eAAeoC,sBAAsBA,CAAClC,OAA4B,EAAEmC,OAAO,GAAG,IAAI7C,GAAG,CAAmB,CAAC,EAAqB;EACnI,MAAM8C,UAAU,GAAG,IAAIhD,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;EAC9H,MAAMiD,iBAAiB,GAAIC,IAAY,IAAKF,UAAU,CAACnC,GAAG,CAACsC,aAAI,CAACC,OAAO,CAACF,IAAI,CAAC,CAAC;EAC9E,MAAMG,QAAQ,GAAG,MAAMC,kBAAkB,CAAC1C,OAAO,CAACA,OAAO,CAAC2C,OAAO,EAAE3C,OAAO,CAAC4C,gBAAgB,EAAET,OAAO,CAAC;EACrG,MAAMU,SAAS,GAAG,IAAAC,wBAAiB,EAAC9C,OAAO,CAACA,OAAO,CAAC6C,SAAS,CAAC;EAC9D,MAAME,UAAU,GAAG,IAAAD,wBAAiB,EAAC9C,OAAO,CAACA,OAAO,CAAC+C,UAAU,CAAC;EAChE,MAAMC,SAAS,GAAGP,QAAQ,CAAC1C,MAAM,CAACuC,IAAI,IAAI;IACxC,IAAI,CAACD,iBAAiB,CAACC,IAAI,CAAC,EAC1B,OAAO,KAAK;IACd,MAAMW,MAAM,GAAG,CAACF,UAAU,CAACT,IAAI,CAAC,IAAIO,SAAS,CAACP,IAAI,CAAC;IACnD,IAAI,CAACW,MAAM,EACT,OAAO,KAAK;IACd,OAAO,IAAI;EACb,CAAC,CAAC;EACF,OAAOD,SAAS;AAClB;AAEA,eAAeN,kBAAkBA,CAACC,OAAe,EAAEC,gBAAyB,EAAET,OAA8B,EAAE;EAC5G,MAAMe,GAAG,GAAGP,OAAO,GAAG,GAAG,GAAGC,gBAAgB;EAC5C,IAAI9C,MAAM,GAAGqC,OAAO,CAAChB,GAAG,CAAC+B,GAAG,CAAC;EAC7B,IAAI,CAACpD,MAAM,EAAE;IACXA,MAAM,GAAG,MAAMqD,YAAY,CAACR,OAAO,EAAEC,gBAAgB,CAAC;IACtDT,OAAO,CAACtC,GAAG,CAACqD,GAAG,EAAEpD,MAAM,CAAC;EAC1B;EACA,OAAOA,MAAM;AACf;AAEA,eAAeqD,YAAYA,CAACR,OAAe,EAAEC,gBAAyB,EAAqB;EACzF,IAAI,CAACvE,WAAE,CAAC+E,UAAU,CAACT,OAAO,CAAC,EACzB,OAAO,EAAE;EACX,IAAI,CAACtE,WAAE,CAACgF,QAAQ,CAACV,OAAO,CAAC,CAACW,WAAW,CAAC,CAAC,EACrC,OAAO,EAAE;EASX,MAAMC,YAAY,GAAGA,CAACC,SAAiB,EAAEC,KAAa,EAAEH,WAAoB,EAAEI,YAA0B,KAAK;IAC3G,IAAIC,MAAM,GAAGD,YAAY;IACzB,KAAK,MAAME,IAAI,IAAIH,KAAK,EAAE;MACxB,MAAMI,YAAY,GAAGD,IAAI,CAACE,MAAM;MAChC,IAAKH,MAAM,KAAK,UAAU,KAAME,YAAY,EAC1C;MACF,MAAME,QAAQ,GAAGxB,aAAI,CAACwB,QAAQ,CAACH,IAAI,CAACI,GAAG,EAAER,SAAS,CAAC;MACnD,IAAII,IAAI,CAACK,KAAK,CAAC,GAAG,GAAGF,QAAQ,CAAC,IAAIH,IAAI,CAACK,KAAK,CAACF,QAAQ,CAAC,EAAE;QACtD;QACAJ,MAAM,GAAGE,YAAY,GAAG,UAAU,GAAG,SAAS;MAChD,CAAC,MAAM,IAAIP,WAAW,KAAKM,IAAI,CAACK,KAAK,CAAC,GAAG,GAAGF,QAAQ,GAAG,GAAG,CAAC,IAAIH,IAAI,CAACK,KAAK,CAACF,QAAQ,GAAG,GAAG,CAAC,CAAC,EAAE;QAC1F;QACAJ,MAAM,GAAGE,YAAY,GAAG,UAAU,GAAG,SAAS;MAChD,CAAC,MAAM,IAAIP,WAAW,IAAIO,YAAY,KAAKD,IAAI,CAACK,KAAK,CAAC,GAAG,GAAGF,QAAQ,EAAE,IAAI,CAAC,IAAIH,IAAI,CAACK,KAAK,CAACF,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE;QAC1G;QACAJ,MAAM,GAAG,qBAAqB;MAChC;IACF;IACA,OAAOA,MAAM;EACf,CAAC;EAED,MAAMO,KAAe,GAAG,EAAE;EAE1B,MAAM3C,KAAK,GAAG,MAAAA,CAAOyC,GAAW,EAAEP,KAAa,EAAEE,MAAoB,KAAK;IACxE,MAAMQ,OAAO,GAAG,MAAM5F,YAAY,CAACyF,GAAG,EAAE;MAAEI,aAAa,EAAE;IAAK,CAAC,CAAC;IAChED,OAAO,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC9E,IAAI,CAACgF,aAAa,CAACD,CAAC,CAAC/E,IAAI,CAAC,CAAC;IAEpD,IAAIoD,gBAAgB,EAAE;MACpB,MAAM6B,SAAS,GAAGN,OAAO,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,IAAID,CAAC,CAACnF,IAAI,KAAK,YAAY,CAAC;MAC1E,IAAIiF,SAAS,EAAE;QACb,MAAMI,OAAO,GAAG,MAAM1G,aAAa,CAACoE,aAAI,CAACxD,IAAI,CAACiF,GAAG,EAAES,SAAS,CAACjF,IAAI,CAAC,EAAE,MAAM,CAAC;QAC3E,MAAMsF,QAAgB,GAAGD,OAAO,CAACjG,KAAK,CAAC,OAAO,CAAC,CAACC,GAAG,CAACkG,CAAC,IAAI;UACvDA,CAAC,GAAGA,CAAC,CAACC,IAAI,CAAC,CAAC;UACZ,IAAI,CAACD,CAAC,EACJ;UACF;UACA,MAAMnB,IAAI,GAAG,IAAIqB,sBAAS,CAACC,SAAS,CAACH,CAAC,EAAE;YAAEI,SAAS,EAAE,IAAI;YAAEC,GAAG,EAAE,IAAI;YAAEC,UAAU,EAAE;UAAK,CAAC,CAAQ;UAChG,IAAIzB,IAAI,CAAC0B,OAAO,EACd;UACF1B,IAAI,CAACI,GAAG,GAAGA,GAAG;UACd,OAAOJ,IAAI;QACb,CAAC,CAAC,CAAC7D,MAAM,CAAC6D,IAAI,IAAI,CAAC,CAACA,IAAI,CAAC;QACzBH,KAAK,GAAG,CAAC,GAAGA,KAAK,EAAE,GAAGqB,QAAQ,CAAC;MACjC;IACF;IAEA,KAAK,MAAMS,KAAK,IAAIpB,OAAO,EAAE;MAC3B,IAAIoB,KAAK,CAAC/F,IAAI,KAAK,GAAG,IAAI+F,KAAK,CAAC/F,IAAI,KAAK,IAAI,EAC3C;MACF,IAAI+F,KAAK,CAACX,MAAM,CAAC,CAAC,IAAIW,KAAK,CAAC/F,IAAI,KAAK,YAAY,EAC/C;MACF,IAAI+F,KAAK,CAACjC,WAAW,CAAC,CAAC,IAAIiC,KAAK,CAAC/F,IAAI,KAAK,cAAc,EACtD;MACF,MAAMgE,SAAS,GAAGjB,aAAI,CAACxD,IAAI,CAACiF,GAAG,EAAEuB,KAAK,CAAC/F,IAAI,CAAC;MAC5C,MAAMgG,WAAW,GAAGjC,YAAY,CAACC,SAAS,EAAEC,KAAK,EAAE8B,KAAK,CAACjC,WAAW,CAAC,CAAC,EAAEK,MAAM,CAAC;MAC/E,IAAI4B,KAAK,CAACjC,WAAW,CAAC,CAAC,IAAIkC,WAAW,KAAK,SAAS,EAClD,MAAMjE,KAAK,CAACiC,SAAS,EAAEC,KAAK,EAAE+B,WAAW,CAAC,CAAC,KACxC,IAAID,KAAK,CAACX,MAAM,CAAC,CAAC,IAAIY,WAAW,KAAK,UAAU,EACnDtB,KAAK,CAAC9C,IAAI,CAACoC,SAAS,CAAC;IACzB;EACF,CAAC;EACD,MAAMjC,KAAK,CAACoB,OAAO,EAAE,EAAE,EAAE,UAAU,CAAC;EACpC,OAAOuB,KAAK;AACd"}