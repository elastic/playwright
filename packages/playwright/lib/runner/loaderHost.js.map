{"version":3,"file":"loaderHost.js","names":["_ipc","require","_processHost","_test","_testLoader","_poolBuilder","_compilationCache","_esmLoaderHost","InProcessLoaderHost","constructor","config","_config","PoolBuilder","createForLoader","start","errors","loadTestFile","file","testErrors","result","rootDir","buildPools","stop","incorporateCompilationCache","exports","OutOfProcessLoaderHost","ProcessHost","resolve","startError","startRunner","serializeConfig","push","message","code","signal","sendMessage","method","params","Suite","_deepParse","fileSuite","addToCompilationCache"],"sources":["../../src/runner/loaderHost.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TestError } from '../../types/testReporter';\nimport { serializeConfig } from '../common/ipc';\nimport { ProcessHost } from './processHost';\nimport { Suite } from '../common/test';\nimport { loadTestFile } from '../common/testLoader';\nimport type { FullConfigInternal } from '../common/config';\nimport { PoolBuilder } from '../common/poolBuilder';\nimport { addToCompilationCache } from '../transform/compilationCache';\nimport { incorporateCompilationCache } from '../common/esmLoaderHost';\n\nexport class InProcessLoaderHost {\n  private _config: FullConfigInternal;\n  private _poolBuilder: PoolBuilder;\n\n  constructor(config: FullConfigInternal) {\n    this._config = config;\n    this._poolBuilder = PoolBuilder.createForLoader();\n  }\n\n  async start(errors: TestError[]) {\n    return true;\n  }\n\n  async loadTestFile(file: string, testErrors: TestError[]): Promise<Suite> {\n    const result = await loadTestFile(file, this._config.config.rootDir, testErrors);\n    this._poolBuilder.buildPools(result, testErrors);\n    return result;\n  }\n\n  async stop() {\n    await incorporateCompilationCache();\n  }\n}\n\nexport class OutOfProcessLoaderHost {\n  private _config: FullConfigInternal;\n  private _processHost: ProcessHost;\n\n  constructor(config: FullConfigInternal) {\n    this._config = config;\n    this._processHost = new ProcessHost(require.resolve('../loader/loaderMain.js'), 'loader', {});\n  }\n\n  async start(errors: TestError[]) {\n    const startError = await this._processHost.startRunner(serializeConfig(this._config, false));\n    if (startError) {\n      errors.push({\n        message: `Test loader process failed to start with code \"${startError.code}\" and signal \"${startError.signal}\"`,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  async loadTestFile(file: string, testErrors: TestError[]): Promise<Suite> {\n    const result = await this._processHost.sendMessage({ method: 'loadTestFile', params: { file } }) as any;\n    testErrors.push(...result.testErrors);\n    return Suite._deepParse(result.fileSuite);\n  }\n\n  async stop() {\n    const result = await this._processHost.sendMessage({ method: 'getCompilationCacheFromLoader' }) as any;\n    addToCompilationCache(result);\n    await this._processHost.stop();\n  }\n}\n"],"mappings":";;;;;;AAiBA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AAEA,IAAAI,YAAA,GAAAJ,OAAA;AACA,IAAAK,iBAAA,GAAAL,OAAA;AACA,IAAAM,cAAA,GAAAN,OAAA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYO,MAAMO,mBAAmB,CAAC;EAI/BC,WAAWA,CAACC,MAA0B,EAAE;IAAA,KAHhCC,OAAO;IAAA,KACPN,YAAY;IAGlB,IAAI,CAACM,OAAO,GAAGD,MAAM;IACrB,IAAI,CAACL,YAAY,GAAGO,wBAAW,CAACC,eAAe,CAAC,CAAC;EACnD;EAEA,MAAMC,KAAKA,CAACC,MAAmB,EAAE;IAC/B,OAAO,IAAI;EACb;EAEA,MAAMC,YAAYA,CAACC,IAAY,EAAEC,UAAuB,EAAkB;IACxE,MAAMC,MAAM,GAAG,MAAM,IAAAH,wBAAY,EAACC,IAAI,EAAE,IAAI,CAACN,OAAO,CAACD,MAAM,CAACU,OAAO,EAAEF,UAAU,CAAC;IAChF,IAAI,CAACb,YAAY,CAACgB,UAAU,CAACF,MAAM,EAAED,UAAU,CAAC;IAChD,OAAOC,MAAM;EACf;EAEA,MAAMG,IAAIA,CAAA,EAAG;IACX,MAAM,IAAAC,0CAA2B,EAAC,CAAC;EACrC;AACF;AAACC,OAAA,CAAAhB,mBAAA,GAAAA,mBAAA;AAEM,MAAMiB,sBAAsB,CAAC;EAIlChB,WAAWA,CAACC,MAA0B,EAAE;IAAA,KAHhCC,OAAO;IAAA,KACPT,YAAY;IAGlB,IAAI,CAACS,OAAO,GAAGD,MAAM;IACrB,IAAI,CAACR,YAAY,GAAG,IAAIwB,wBAAW,CAACzB,OAAO,CAAC0B,OAAO,CAAC,yBAAyB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;EAC/F;EAEA,MAAMb,KAAKA,CAACC,MAAmB,EAAE;IAC/B,MAAMa,UAAU,GAAG,MAAM,IAAI,CAAC1B,YAAY,CAAC2B,WAAW,CAAC,IAAAC,oBAAe,EAAC,IAAI,CAACnB,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5F,IAAIiB,UAAU,EAAE;MACdb,MAAM,CAACgB,IAAI,CAAC;QACVC,OAAO,EAAG,kDAAiDJ,UAAU,CAACK,IAAK,iBAAgBL,UAAU,CAACM,MAAO;MAC/G,CAAC,CAAC;MACF,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EAEA,MAAMlB,YAAYA,CAACC,IAAY,EAAEC,UAAuB,EAAkB;IACxE,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACjB,YAAY,CAACiC,WAAW,CAAC;MAAEC,MAAM,EAAE,cAAc;MAAEC,MAAM,EAAE;QAAEpB;MAAK;IAAE,CAAC,CAAQ;IACvGC,UAAU,CAACa,IAAI,CAAC,GAAGZ,MAAM,CAACD,UAAU,CAAC;IACrC,OAAOoB,WAAK,CAACC,UAAU,CAACpB,MAAM,CAACqB,SAAS,CAAC;EAC3C;EAEA,MAAMlB,IAAIA,CAAA,EAAG;IACX,MAAMH,MAAM,GAAG,MAAM,IAAI,CAACjB,YAAY,CAACiC,WAAW,CAAC;MAAEC,MAAM,EAAE;IAAgC,CAAC,CAAQ;IACtG,IAAAK,uCAAqB,EAACtB,MAAM,CAAC;IAC7B,MAAM,IAAI,CAACjB,YAAY,CAACoB,IAAI,CAAC,CAAC;EAChC;AACF;AAACE,OAAA,CAAAC,sBAAA,GAAAA,sBAAA"}