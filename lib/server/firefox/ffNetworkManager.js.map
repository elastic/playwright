{"version":3,"sources":["../../../src/server/firefox/ffNetworkManager.ts"],"names":["FFNetworkManager","constructor","session","page","_session","_requests","_page","_eventListeners","_startTime","Map","eventsHelper","addEventListener","_onRequestWillBeSent","bind","_onResponseReceived","_onRequestFinished","_onRequestFailed","dispose","removeEventListeners","setRequestInterception","enabled","send","event","redirectedFrom","get","frame","request","frameId","_frameManager","delete","_id","InterceptableRequest","route","isIntercepted","FFRouteImpl","set","requestStarted","requestId","getResponseBody","response","evicted","Error","method","url","Buffer","from","base64body","timing","startTime","domainLookupStart","_relativeTiming","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseStart","network","Response","status","statusText","headers","remoteIPAddress","remotePort","_serverAddrFinished","ipAddress","port","_securityDetailsFinished","protocol","securityDetails","subjectName","issuer","validFrom","validTo","requestReceivedResponse","_existingResponse","isRedirected","_requestFinished","responseEndTime","undefined","transferSize","requestFinished","_setFailureText","errorCode","requestFailed","time","causeToResourceType","TYPE_INVALID","TYPE_OTHER","TYPE_SCRIPT","TYPE_IMAGE","TYPE_STYLESHEET","TYPE_OBJECT","TYPE_DOCUMENT","TYPE_SUBDOCUMENT","TYPE_REFRESH","TYPE_XBL","TYPE_PING","TYPE_XMLHTTPREQUEST","TYPE_OBJECT_SUBREQUEST","TYPE_DTD","TYPE_FONT","TYPE_MEDIA","TYPE_WEBSOCKET","TYPE_CSP_REPORT","TYPE_XSLT","TYPE_BEACON","TYPE_FETCH","TYPE_IMAGESET","TYPE_WEB_MANIFEST","internalCauseToResourceType","TYPE_INTERNAL_EVENTSOURCE","payload","_redirectedTo","postDataBuffer","postData","Request","navigationId","internalCause","cause","_finalRequest","_request","responseBody","continue","overrides","result","sendMayFail","toString","interceptResponse","error","InterceptedResponse","fulfill","isBase64","body","STATUS_TEXTS","String","abort"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { eventsHelper, RegisteredListener } from '../../utils/eventsHelper';\nimport { FFSession } from './ffConnection';\nimport { Page } from '../page';\nimport * as network from '../network';\nimport * as frames from '../frames';\nimport * as types from '../types';\nimport { Protocol } from './protocol';\nimport { InterceptedResponse } from '../network';\n\nexport class FFNetworkManager {\n  private _session: FFSession;\n  private _requests: Map<string, InterceptableRequest>;\n  private _page: Page;\n  private _eventListeners: RegisteredListener[];\n  private _startTime = 0;\n\n  constructor(session: FFSession, page: Page) {\n    this._session = session;\n\n    this._requests = new Map();\n    this._page = page;\n\n    this._eventListeners = [\n      eventsHelper.addEventListener(session, 'Network.requestWillBeSent', this._onRequestWillBeSent.bind(this)),\n      eventsHelper.addEventListener(session, 'Network.responseReceived', this._onResponseReceived.bind(this)),\n      eventsHelper.addEventListener(session, 'Network.requestFinished', this._onRequestFinished.bind(this)),\n      eventsHelper.addEventListener(session, 'Network.requestFailed', this._onRequestFailed.bind(this)),\n    ];\n  }\n\n  dispose() {\n    eventsHelper.removeEventListeners(this._eventListeners);\n  }\n\n  async setRequestInterception(enabled: boolean) {\n    await this._session.send('Network.setRequestInterception', {enabled});\n  }\n\n  _onRequestWillBeSent(event: Protocol.Network.requestWillBeSentPayload) {\n    const redirectedFrom = event.redirectedFrom ? (this._requests.get(event.redirectedFrom) || null) : null;\n    const frame = redirectedFrom ? redirectedFrom.request.frame() : (event.frameId ? this._page._frameManager.frame(event.frameId) : null);\n    if (!frame)\n      return;\n    if (redirectedFrom)\n      this._requests.delete(redirectedFrom._id);\n    const request = new InterceptableRequest(frame, redirectedFrom, event);\n    let route;\n    if (event.isIntercepted)\n      route = new FFRouteImpl(this._session, request);\n    this._requests.set(request._id, request);\n    this._page._frameManager.requestStarted(request.request, route);\n  }\n\n  _onResponseReceived(event: Protocol.Network.responseReceivedPayload) {\n    const request = this._requests.get(event.requestId);\n    if (!request)\n      return;\n    const getResponseBody = async () => {\n      const response = await this._session.send('Network.getResponseBody', {\n        requestId: request._id\n      });\n      if (response.evicted)\n        throw new Error(`Response body for ${request.request.method()} ${request.request.url()} was evicted!`);\n      return Buffer.from(response.base64body, 'base64');\n    };\n\n    this._startTime = event.timing.startTime;\n    const timing = {\n      startTime: this._startTime / 1000,\n      domainLookupStart: this._relativeTiming(event.timing.domainLookupStart),\n      domainLookupEnd: this._relativeTiming(event.timing.domainLookupEnd),\n      connectStart: this._relativeTiming(event.timing.connectStart),\n      secureConnectionStart: this._relativeTiming(event.timing.secureConnectionStart),\n      connectEnd: this._relativeTiming(event.timing.connectEnd),\n      requestStart: this._relativeTiming(event.timing.requestStart),\n      responseStart: this._relativeTiming(event.timing.responseStart),\n    };\n    const response = new network.Response(request.request, event.status, event.statusText, event.headers, timing, getResponseBody);\n    if (event?.remoteIPAddress && typeof event?.remotePort === 'number') {\n      response._serverAddrFinished({\n        ipAddress: event.remoteIPAddress,\n        port: event.remotePort,\n      });\n    } else {\n      response._serverAddrFinished();\n    }\n    response._securityDetailsFinished({\n      protocol: event?.securityDetails?.protocol,\n      subjectName: event?.securityDetails?.subjectName,\n      issuer: event?.securityDetails?.issuer,\n      validFrom: event?.securityDetails?.validFrom,\n      validTo: event?.securityDetails?.validTo,\n    });\n    this._page._frameManager.requestReceivedResponse(response);\n  }\n\n  _onRequestFinished(event: Protocol.Network.requestFinishedPayload) {\n    const request = this._requests.get(event.requestId);\n    if (!request)\n      return;\n    const response = request.request._existingResponse()!;\n    // Keep redirected requests in the map for future reference as redirectedFrom.\n    const isRedirected = response.status() >= 300 && response.status() <= 399;\n    if (isRedirected) {\n      response._requestFinished(this._relativeTiming(event.responseEndTime), 'Response body is unavailable for redirect responses');\n    } else {\n      this._requests.delete(request._id);\n      response._requestFinished(this._relativeTiming(event.responseEndTime), undefined, event.transferSize);\n    }\n    this._page._frameManager.requestFinished(request.request);\n  }\n\n  _onRequestFailed(event: Protocol.Network.requestFailedPayload) {\n    const request = this._requests.get(event.requestId);\n    if (!request)\n      return;\n    this._requests.delete(request._id);\n    const response = request.request._existingResponse();\n    if (response)\n      response._requestFinished(-1);\n    request.request._setFailureText(event.errorCode);\n    this._page._frameManager.requestFailed(request.request, event.errorCode === 'NS_BINDING_ABORTED');\n  }\n\n  _relativeTiming(time: number): number {\n    if (!time)\n      return -1;\n    return (time - this._startTime) / 1000;\n  }\n}\n\nconst causeToResourceType: {[key: string]: string} = {\n  TYPE_INVALID: 'other',\n  TYPE_OTHER: 'other',\n  TYPE_SCRIPT: 'script',\n  TYPE_IMAGE: 'image',\n  TYPE_STYLESHEET: 'stylesheet',\n  TYPE_OBJECT: 'other',\n  TYPE_DOCUMENT: 'document',\n  TYPE_SUBDOCUMENT: 'document',\n  TYPE_REFRESH: 'document',\n  TYPE_XBL: 'other',\n  TYPE_PING: 'other',\n  TYPE_XMLHTTPREQUEST: 'xhr',\n  TYPE_OBJECT_SUBREQUEST: 'other',\n  TYPE_DTD: 'other',\n  TYPE_FONT: 'font',\n  TYPE_MEDIA: 'media',\n  TYPE_WEBSOCKET: 'websocket',\n  TYPE_CSP_REPORT: 'other',\n  TYPE_XSLT: 'other',\n  TYPE_BEACON: 'other',\n  TYPE_FETCH: 'fetch',\n  TYPE_IMAGESET: 'images',\n  TYPE_WEB_MANIFEST: 'manifest',\n};\n\nconst internalCauseToResourceType: {[key: string]: string} = {\n  TYPE_INTERNAL_EVENTSOURCE: 'eventsource',\n};\n\nclass InterceptableRequest {\n  readonly request: network.Request;\n  readonly _id: string;\n  private _redirectedTo: InterceptableRequest | undefined;\n\n  constructor(frame: frames.Frame, redirectedFrom: InterceptableRequest | null, payload: Protocol.Network.requestWillBeSentPayload) {\n    this._id = payload.requestId;\n    if (redirectedFrom)\n      redirectedFrom._redirectedTo = this;\n    let postDataBuffer = null;\n    if (payload.postData)\n      postDataBuffer = Buffer.from(payload.postData, 'base64');\n    this.request = new network.Request(frame, redirectedFrom ? redirectedFrom.request : null, payload.navigationId,\n        payload.url, internalCauseToResourceType[payload.internalCause] || causeToResourceType[payload.cause] || 'other', payload.method, postDataBuffer, payload.headers);\n  }\n\n  _finalRequest(): InterceptableRequest {\n    let request: InterceptableRequest = this;\n    while (request._redirectedTo)\n      request = request._redirectedTo;\n    return request;\n  }\n}\n\nclass FFRouteImpl implements network.RouteDelegate {\n  private _request: InterceptableRequest;\n  private _session: FFSession;\n\n  constructor(session: FFSession, request: InterceptableRequest) {\n    this._session = session;\n    this._request = request;\n  }\n\n  async responseBody(): Promise<Buffer> {\n    const response = await this._session.send('Network.getResponseBody', {\n      requestId: this._request._finalRequest()._id\n    });\n    return Buffer.from(response.base64body, 'base64');\n  }\n\n  async continue(request: network.Request, overrides: types.NormalizedContinueOverrides): Promise<network.InterceptedResponse|null> {\n    const result = await this._session.sendMayFail('Network.resumeInterceptedRequest', {\n      requestId: this._request._id,\n      url: overrides.url,\n      method: overrides.method,\n      headers: overrides.headers,\n      postData: overrides.postData ? Buffer.from(overrides.postData).toString('base64') : undefined,\n      interceptResponse: overrides.interceptResponse,\n    }) as any;\n    if (!overrides.interceptResponse)\n      return null;\n    if (result.error)\n      throw new Error(`Request failed: ${result.error}`);\n    return new InterceptedResponse(request, result.response.status, result.response.statusText, result.response.headers);\n  }\n\n  async fulfill(response: types.NormalizedFulfillResponse) {\n    const base64body = response.isBase64 ? response.body : Buffer.from(response.body).toString('base64');\n\n    await this._session.sendMayFail('Network.fulfillInterceptedRequest', {\n      requestId: this._request._id,\n      status: response.status,\n      statusText: network.STATUS_TEXTS[String(response.status)] || '',\n      headers: response.headers,\n      base64body,\n    });\n  }\n\n  async abort(errorCode: string) {\n    await this._session.sendMayFail('Network.abortInterceptedRequest', {\n      requestId: this._request._id,\n      errorCode,\n    });\n  }\n}\n"],"file":"ffNetworkManager.js"}