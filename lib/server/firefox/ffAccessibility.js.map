{"version":3,"sources":["../../../src/server/firefox/ffAccessibility.ts"],"names":["getAccessibilityTree","session","needle","objectId","_objectId","undefined","tree","send","axNode","FFAXNode","_findNeedle","FFRoleToARIARole","Map","Object","entries","constructor","payload","_children","_payload","_editable","_richlyEditable","_focusable","_expanded","_name","_role","_cachedHasFocusableChild","children","map","x","editable","tag","focusable","expanded","name","role","_isPlainTextField","_isTextOnlyObject","_hasFocusableChild","child","foundObject","found","isLeafNode","length","isControl","isInteresting","insideControl","trim","serialize","node","get","userStringProperties","userStringProperty","booleanProperties","booleanProperty","value","numericalProperties","numericalProperty","tokenProperties","tokenProperty","valueString","checked","pressed"],"mappings":"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","sourcesContent":["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as accessibility from '../accessibility';\nimport { FFSession } from './ffConnection';\nimport { Protocol } from './protocol';\nimport * as dom from '../dom';\nimport * as types from '../types';\n\nexport async function getAccessibilityTree(session: FFSession, needle?: dom.ElementHandle): Promise<{tree: accessibility.AXNode, needle: accessibility.AXNode | null}> {\n  const objectId = needle ? needle._objectId : undefined;\n  const { tree } = await session.send('Accessibility.getFullAXTree', { objectId });\n  const axNode = new FFAXNode(tree);\n  return {\n    tree: axNode,\n    needle: needle ? axNode._findNeedle() : null\n  };\n}\n\nconst FFRoleToARIARole = new Map(Object.entries({\n  'pushbutton': 'button',\n  'checkbutton': 'checkbox',\n  'editcombobox': 'combobox',\n  'content deletion': 'deletion',\n  'footnote': 'doc-footnote',\n  'non-native document': 'document',\n  'grouping': 'group',\n  'graphic': 'img',\n  'content insertion': 'insertion',\n  'animation': 'marquee',\n  'flat equation': 'math',\n  'menupopup': 'menu',\n  'check menu item': 'menuitemcheckbox',\n  'radio menu item': 'menuitemradio',\n  'listbox option': 'option',\n  'radiobutton': 'radio',\n  'statusbar': 'status',\n  'pagetab': 'tab',\n  'pagetablist': 'tablist',\n  'propertypage': 'tabpanel',\n  'entry': 'textbox',\n  'outline': 'tree',\n  'tree table': 'treegrid',\n  'outlineitem': 'treeitem',\n}));\n\nclass FFAXNode implements accessibility.AXNode {\n  _children: FFAXNode[];\n  private _payload: Protocol.Accessibility.AXTree;\n  private _editable: boolean;\n  private _richlyEditable: boolean;\n  private _focusable: boolean;\n  private _expanded: boolean;\n  private _name: string;\n  private _role: string;\n  private _cachedHasFocusableChild: boolean|undefined;\n\n  constructor(payload: Protocol.Accessibility.AXTree) {\n    this._payload = payload;\n    this._children = (payload.children || []).map(x => new FFAXNode(x));\n    this._editable = !!payload.editable;\n    this._richlyEditable = this._editable && (payload.tag !== 'textarea' && payload.tag !== 'input');\n    this._focusable = !!payload.focusable;\n    this._expanded = !!payload.expanded;\n    this._name = this._payload.name;\n    this._role = this._payload.role;\n  }\n\n  _isPlainTextField(): boolean {\n    if (this._richlyEditable)\n      return false;\n    if (this._editable)\n      return true;\n    return this._role === 'entry';\n  }\n\n  _isTextOnlyObject(): boolean {\n    const role = this._role;\n    return (role === 'text leaf' || role === 'text' || role === 'statictext');\n  }\n\n  _hasFocusableChild(): boolean {\n    if (this._cachedHasFocusableChild === undefined) {\n      this._cachedHasFocusableChild = false;\n      for (const child of this._children) {\n        if (child._focusable || child._hasFocusableChild()) {\n          this._cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this._cachedHasFocusableChild;\n  }\n\n  children() {\n    return this._children;\n  }\n\n  _findNeedle(): FFAXNode | null {\n    if (this._payload.foundObject)\n      return this;\n    for (const child of this._children) {\n      const found = child._findNeedle();\n      if (found)\n        return found;\n    }\n    return null;\n  }\n\n  isLeafNode(): boolean {\n    if (!this._children.length)\n      return true;\n      // These types of objects may have children that we use as internal\n      // implementation details, but we want to expose them as leaves to platform\n      // accessibility APIs because screen readers might be confused if they find\n      // any children.\n    if (this._isPlainTextField() || this._isTextOnlyObject())\n      return true;\n      // Roles whose children are only presentational according to the ARIA and\n      // HTML5 Specs should be hidden from screen readers.\n      // (Note that whilst ARIA buttons can have only presentational children, HTML5\n      // buttons are allowed to have content.)\n    switch (this._role) {\n      case 'graphic':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n    // Here and below: Android heuristics\n    if (this._hasFocusableChild())\n      return false;\n    if (this._focusable && this._role !== 'document' && this._name)\n      return true;\n    if (this._role === 'heading' && this._name)\n      return true;\n    return false;\n  }\n\n  isControl(): boolean {\n    switch (this._role) {\n      case 'checkbutton':\n      case 'check menu item':\n      case 'check rich option':\n      case 'combobox':\n      case 'combobox option':\n      case 'color chooser':\n      case 'listbox':\n      case 'listbox option':\n      case 'listbox rich option':\n      case 'popup menu':\n      case 'menupopup':\n      case 'menuitem':\n      case 'menubar':\n      case 'button':\n      case 'pushbutton':\n      case 'radiobutton':\n      case 'radio menuitem':\n      case 'scrollbar':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'pagetab':\n      case 'entry':\n      case 'tree table':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  isInteresting(insideControl: boolean): boolean {\n    if (this._focusable || this._richlyEditable)\n      return true;\n      // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl())\n      return true;\n      // A non focusable child of a control is not interesting\n    if (insideControl)\n      return false;\n    return this.isLeafNode() && !!this._name.trim();\n  }\n\n  serialize(): types.SerializedAXNode {\n    const node: {[x in keyof types.SerializedAXNode]: any} = {\n      role: FFRoleToARIARole.get(this._role) || this._role,\n      name: this._name || '',\n    };\n    const userStringProperties: Array<keyof types.SerializedAXNode & keyof Protocol.Accessibility.AXTree> = [\n      'name',\n      'description',\n      'roledescription',\n      'valuetext',\n      'keyshortcuts',\n    ];\n    for (const userStringProperty of userStringProperties) {\n      if (!(userStringProperty in this._payload))\n        continue;\n      node[userStringProperty] = this._payload[userStringProperty];\n    }\n    const booleanProperties: Array<keyof types.SerializedAXNode & keyof Protocol.Accessibility.AXTree> = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    for (const booleanProperty of booleanProperties) {\n      if (this._role === 'document' && booleanProperty === 'focused')\n        continue; // document focusing is strange\n      const value = this._payload[booleanProperty];\n      if (!value)\n        continue;\n      node[booleanProperty] = value;\n    }\n    const numericalProperties: Array<keyof types.SerializedAXNode & keyof Protocol.Accessibility.AXTree> = [\n      'level'\n    ];\n    for (const numericalProperty of numericalProperties) {\n      if (!(numericalProperty in this._payload))\n        continue;\n      node[numericalProperty] = this._payload[numericalProperty];\n    }\n    const tokenProperties: Array<keyof types.SerializedAXNode & keyof Protocol.Accessibility.AXTree> = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n      'orientation',\n    ];\n    for (const tokenProperty of tokenProperties) {\n      const value = this._payload[tokenProperty];\n      if (!value || value === 'false')\n        continue;\n      node[tokenProperty] = value;\n    }\n\n    const axNode = node as types.SerializedAXNode;\n    axNode.valueString = this._payload.value;\n    if ('checked' in this._payload)\n      axNode.checked = this._payload.checked === true ? 'checked' : this._payload.checked === 'mixed' ? 'mixed' : 'unchecked';\n    if ('pressed' in this._payload)\n      axNode.pressed = this._payload.pressed === true ? 'pressed' : 'released';\n    return axNode;\n  }\n}\n"],"file":"ffAccessibility.js"}