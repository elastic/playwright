{"version":3,"sources":["../../../src/server/injected/utilityScript.ts"],"names":["UtilityScript","evaluate","isFunction","returnByValue","expression","argCount","argsAndHandles","args","slice","handles","parameters","map","a","result","global","eval","_promiseAwareJsonValueNoThrow","jsonValue","value","Object","is","undefined","fallThrough","safeJson","e","then","promiseValue"],"mappings":";;;;;;;AAgBA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIe,MAAMA,aAAN,CAAoB;AACjCC,EAAAA,QAAQ,CAACC,UAAD,EAAkCC,aAAlC,EAA0DC,UAA1D,EAA8EC,QAA9E,EAAgG,GAAGC,cAAnG,EAA0H;AAChI,UAAMC,IAAI,GAAGD,cAAc,CAACE,KAAf,CAAqB,CAArB,EAAwBH,QAAxB,CAAb;AACA,UAAMI,OAAO,GAAGH,cAAc,CAACE,KAAf,CAAqBH,QAArB,CAAhB;AACA,UAAMK,UAAU,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAC,IAAI,0DAA2BA,CAA3B,EAA8BH,OAA9B,CAAd,CAAnB;AACA,QAAII,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYX,UAAZ,CAAb;;AACA,QAAIF,UAAU,KAAK,IAAnB,EAAyB;AACvBW,MAAAA,MAAM,GAAGA,MAAM,CAAC,GAAGH,UAAJ,CAAf;AACD,KAFD,MAEO,IAAIR,UAAU,KAAK,KAAnB,EAA0B;AAC/BW,MAAAA,MAAM,GAAGA,MAAT;AACD,KAFM,MAEA;AACL;AACA,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EACEA,MAAM,GAAGA,MAAM,CAAC,GAAGH,UAAJ,CAAf;AACH;;AACD,WAAOP,aAAa,GAAG,KAAKa,6BAAL,CAAmCH,MAAnC,CAAH,GAAgDA,MAApE;AACD;;AAEDI,EAAAA,SAAS,CAACd,aAAD,EAAsBe,KAAtB,EAAkC;AACzC;AACA,QAAIC,MAAM,CAACC,EAAP,CAAUF,KAAV,EAAiBG,SAAjB,CAAJ,EACE,OAAOA,SAAP;AACF,WAAO,uDAAwBH,KAAxB,EAAgCA,KAAD,KAAiB;AAAEI,MAAAA,WAAW,EAAEJ;AAAf,KAAjB,CAA/B,CAAP;AACD;;AAEOF,EAAAA,6BAA6B,CAACE,KAAD,EAAa;AAChD,UAAMK,QAAQ,GAAIL,KAAD,IAAgB;AAC/B,UAAI;AACF,eAAO,KAAKD,SAAL,CAAe,IAAf,EAAqBC,KAArB,CAAP;AACD,OAFD,CAEE,OAAOM,CAAP,EAAU;AACV,eAAOH,SAAP;AACD;AACF,KAND;;AAQA,QAAIH,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,OAAOA,KAAK,CAACO,IAAb,KAAsB,UAAhE,EAA4E;AAC1E,aAAO,CAAC,YAAY;AAClB;AACA;AACA;AACA;AACA,cAAMC,YAAY,GAAG,MAAMR,KAA3B;AACA,eAAOK,QAAQ,CAACG,YAAD,CAAf;AACD,OAPM,GAAP;AAQD;;AACD,WAAOH,QAAQ,CAACL,KAAD,CAAf;AACD;;AA7CgC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { serializeAsCallArgument, parseEvaluationResultValue } from '../common/utilityScriptSerializers';\n\nexport default class UtilityScript {\n  evaluate(isFunction: boolean | undefined, returnByValue: boolean, expression: string, argCount: number, ...argsAndHandles: any[]) {\n    const args = argsAndHandles.slice(0, argCount);\n    const handles = argsAndHandles.slice(argCount);\n    const parameters = args.map(a => parseEvaluationResultValue(a, handles));\n    let result = global.eval(expression);\n    if (isFunction === true) {\n      result = result(...parameters);\n    } else if (isFunction === false) {\n      result = result;\n    } else {\n      // auto detect.\n      if (typeof result === 'function')\n        result = result(...parameters);\n    }\n    return returnByValue ? this._promiseAwareJsonValueNoThrow(result) : result;\n  }\n\n  jsonValue(returnByValue: true, value: any) {\n    // Special handling of undefined to work-around multi-step returnByValue handling in WebKit.\n    if (Object.is(value, undefined))\n      return undefined;\n    return serializeAsCallArgument(value, (value: any) => ({ fallThrough: value }));\n  }\n\n  private _promiseAwareJsonValueNoThrow(value: any) {\n    const safeJson = (value: any) => {\n      try {\n        return this.jsonValue(true, value);\n      } catch (e) {\n        return undefined;\n      }\n    };\n\n    if (value && typeof value === 'object' && typeof value.then === 'function') {\n      return (async () => {\n        // By using async function we ensure that return value is a native Promise,\n        // and not some overridden Promise in the page.\n        // This makes Firefox and WebKit debugging protocols recognize it as a Promise,\n        // properly await and return the value.\n        const promiseValue = await value;\n        return safeJson(promiseValue);\n      })();\n    }\n    return safeJson(value);\n  }\n}\n"],"file":"utilityScript.js"}