{"version":3,"sources":["../../../src/server/injected/xpathSelectorEngine.ts"],"names":["XPathEngine","queryAll","root","selector","startsWith","result","document","Document","ownerDocument","it","evaluate","XPathResult","ORDERED_NODE_ITERATOR_TYPE","node","iterateNext","nodeType","Node","ELEMENT_NODE","push"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIO,MAAMA,WAA2B,GAAG;AACzCC,EAAAA,QAAQ,CAACC,IAAD,EAAqBC,QAArB,EAAkD;AACxD,QAAIA,QAAQ,CAACC,UAAT,CAAoB,GAApB,CAAJ,EACED,QAAQ,GAAG,MAAMA,QAAjB;AACF,UAAME,MAAiB,GAAG,EAA1B;AACA,UAAMC,QAAQ,GAAGJ,IAAI,YAAYK,QAAhB,GAA2BL,IAA3B,GAAkCA,IAAI,CAACM,aAAxD;AACA,QAAI,CAACF,QAAL,EACE,OAAOD,MAAP;AACF,UAAMI,EAAE,GAAGH,QAAQ,CAACI,QAAT,CAAkBP,QAAlB,EAA4BD,IAA5B,EAAkC,IAAlC,EAAwCS,WAAW,CAACC,0BAApD,CAAX;;AACA,SAAK,IAAIC,IAAI,GAAGJ,EAAE,CAACK,WAAH,EAAhB,EAAkCD,IAAlC,EAAwCA,IAAI,GAAGJ,EAAE,CAACK,WAAH,EAA/C,EAAiE;AAC/D,UAAID,IAAI,CAACE,QAAL,KAAkBC,IAAI,CAACC,YAA3B,EACEZ,MAAM,CAACa,IAAP,CAAYL,IAAZ;AACH;;AACD,WAAOR,MAAP;AACD;;AAdwC,CAApC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SelectorEngine, SelectorRoot } from './selectorEngine';\n\nexport const XPathEngine: SelectorEngine = {\n  queryAll(root: SelectorRoot, selector: string): Element[] {\n    if (selector.startsWith('/'))\n      selector = '.' + selector;\n    const result: Element[] = [];\n    const document = root instanceof Document ? root : root.ownerDocument;\n    if (!document)\n      return result;\n    const it = document.evaluate(selector, root, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n    for (let node = it.iterateNext(); node; node = it.iterateNext()) {\n      if (node.nodeType === Node.ELEMENT_NODE)\n        result.push(node as Element);\n    }\n    return result;\n  }\n};\n"],"file":"xpathSelectorEngine.js"}