{"version":3,"sources":["../../src/server/types.ts"],"names":["kLifecycleEvents","Set","mediaTypes","colorSchemes","reducedMotions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBO,MAAMA,gBAAqC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,MAAD,EAAS,kBAAT,EAA6B,aAA7B,CAAR,CAA9C;;AA2DA,MAAMC,UAA0B,GAAG,IAAID,GAAJ,CAAQ,CAAC,QAAD,EAAW,OAAX,CAAR,CAAnC;;AAGA,MAAME,YAA8B,GAAG,IAAIF,GAAJ,CAAQ,CAAC,MAAD,EAAS,OAAT,EAAkB,eAAlB,CAAR,CAAvC;;AAGA,MAAMG,cAAkC,GAAG,IAAIH,GAAJ,CAAQ,CAAC,eAAD,EAAkB,QAAlB,CAAR,CAA3C","sourcesContent":["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Size, Point, Rect, TimeoutOptions } from '../common/types';\nexport { Size, Point, Rect, Quad, URLMatch, TimeoutOptions } from '../common/types';\n\nexport type StrictOptions = {\n  strict?: boolean,\n};\n\nexport type QueryOnSelectorOptions = StrictOptions & TimeoutOptions;\n\nexport type WaitForElementOptions = TimeoutOptions & StrictOptions & { state?: 'attached' | 'detached' | 'visible' | 'hidden' };\n\nexport type WaitForFunctionOptions = TimeoutOptions & { pollingInterval?: number };\n\nexport type LifecycleEvent = 'load' | 'domcontentloaded' | 'networkidle';\nexport const kLifecycleEvents: Set<LifecycleEvent> = new Set(['load', 'domcontentloaded', 'networkidle']);\n\nexport type NavigateOptions = TimeoutOptions & {\n  waitUntil?: LifecycleEvent,\n};\n\nexport type NavigatingActionWaitOptions = TimeoutOptions & StrictOptions & {\n  noWaitAfter?: boolean,\n};\n\nexport type ForceOptions = {\n  force?: boolean,\n};\n\nexport type PointerActionWaitOptions = TimeoutOptions & ForceOptions & StrictOptions & {\n  trial?: boolean;\n};\n\nexport type ElementScreenshotOptions = TimeoutOptions & {\n  type?: 'png' | 'jpeg',\n  quality?: number,\n  omitBackground?: boolean,\n};\n\nexport type ScreenshotOptions = ElementScreenshotOptions & {\n  fullPage?: boolean,\n  clip?: Rect,\n};\n\nexport type PageScreencastOptions = {\n  width: number,\n  height: number,\n  outputFile: string,\n};\n\nexport type Credentials = {\n  username: string;\n  password: string;\n};\n\nexport type Geolocation = {\n  longitude: number;\n  latitude: number;\n  accuracy?: number;\n};\n\nexport type SelectOption = {\n  value?: string;\n  label?: string;\n  index?: number;\n};\n\nexport type FilePayload = {\n  name: string,\n  mimeType: string,\n  buffer: string,\n};\n\nexport type MediaType = 'screen' | 'print';\nexport const mediaTypes: Set<MediaType> = new Set(['screen', 'print']);\n\nexport type ColorScheme = 'dark' | 'light' | 'no-preference';\nexport const colorSchemes: Set<ColorScheme> = new Set(['dark', 'light', 'no-preference']);\n\nexport type ReducedMotion = 'no-preference' | 'reduce';\nexport const reducedMotions: Set<ReducedMotion> = new Set(['no-preference', 'reduce']);\n\nexport type DeviceDescriptor = {\n  userAgent: string,\n  viewport: Size,\n  deviceScaleFactor: number,\n  isMobile: boolean,\n  hasTouch: boolean,\n  defaultBrowserType: 'chromium' | 'firefox' | 'webkit'\n};\nexport type Devices = { [name: string]: DeviceDescriptor };\n\nexport type PDFOptions = {\n  scale?: number,\n  displayHeaderFooter?: boolean,\n  headerTemplate?: string,\n  footerTemplate?: string,\n  printBackground?: boolean,\n  landscape?: boolean,\n  pageRanges?: string,\n  format?: string,\n  width?: string,\n  height?: string,\n  preferCSSPageSize?: boolean,\n  margin?: {top?: string, bottom?: string, left?: string, right?: string},\n};\n\nexport type CSSCoverageOptions = {\n  resetOnNavigation?: boolean,\n};\n\nexport type JSCoverageOptions = {\n  resetOnNavigation?: boolean,\n  reportAnonymousScripts?: boolean,\n};\n\nexport type JSRange = {\n  startOffset: number,\n  endOffset: number,\n  count: number\n};\n\nexport type CSSCoverageEntry = {\n  url: string,\n  text?: string,\n  ranges: {\n    start: number,\n    end: number\n  }[]\n};\n\nexport type JSCoverageEntry = {\n  url: string,\n  scriptId: string,\n  source?: string,\n  functions: {\n    functionName: string,\n    isBlockCoverage: boolean,\n    ranges: JSRange[]\n  }[]\n};\n\nexport type ProxySettings = {\n  server: string,\n  bypass?: string,\n  username?: string,\n  password?: string\n};\n\nexport type KeyboardModifier = 'Alt' | 'Control' | 'Meta' | 'Shift';\nexport type MouseButton = 'left' | 'right' | 'middle';\n\nexport type PointerActionOptions = {\n  modifiers?: KeyboardModifier[];\n  position?: Point;\n};\n\nexport type DragActionOptions = {\n  sourcePosition?: Point;\n  targetPosition?: Point;\n};\n\n\nexport type MouseClickOptions = PointerActionOptions & {\n  delay?: number;\n  button?: MouseButton;\n  clickCount?: number;\n};\n\nexport type MouseMultiClickOptions = PointerActionOptions & {\n  delay?: number;\n  button?: MouseButton;\n};\n\nexport type World = 'main' | 'utility';\n\nexport type HeadersArray = { name: string, value: string }[];\n\nexport type GotoOptions = NavigateOptions & {\n  referer?: string,\n};\n\nexport type NormalizedFulfillResponse = {\n  status: number,\n  headers: HeadersArray,\n  body: string,\n  isBase64: boolean,\n};\n\nexport type NormalizedContinueOverrides = {\n  url?: string,\n  method?: string,\n  headers?: HeadersArray,\n  postData?: Buffer,\n  interceptResponse?: boolean,\n};\n\nexport type NormalizedResponseContinueOverrides = {\n  status?: number,\n  statusText?: string,\n  headers?: HeadersArray,\n  body?: string,\n  isBase64?: boolean,\n};\n\nexport type NetworkCookie = {\n  name: string,\n  value: string,\n  domain: string,\n  path: string,\n  expires: number,\n  httpOnly: boolean,\n  secure: boolean,\n  sameSite: 'Strict' | 'Lax' | 'None'\n};\n\nexport type SetNetworkCookieParam = {\n  name: string,\n  value: string,\n  url?: string,\n  domain?: string,\n  path?: string,\n  expires?: number,\n  httpOnly?: boolean,\n  secure?: boolean,\n  sameSite?: 'Strict' | 'Lax' | 'None'\n};\n\nexport type EmulatedSize = { viewport: Size, screen: Size };\n\nexport type BrowserContextOptions = {\n  sdkLanguage: string,\n  viewport?: Size,\n  screen?: Size,\n  noDefaultViewport?: boolean,\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: Geolocation,\n  permissions?: string[],\n  extraHTTPHeaders?: HeadersArray,\n  offline?: boolean,\n  httpCredentials?: Credentials,\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: ColorScheme,\n  reducedMotion?: ReducedMotion,\n  acceptDownloads?: boolean,\n  recordVideo?: {\n    dir: string,\n    size?: Size,\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string\n  },\n  strictSelectors?: boolean,\n  proxy?: ProxySettings,\n  baseURL?: string,\n  _debugName?: string,\n};\n\nexport type EnvArray = { name: string, value: string }[];\n\ntype LaunchOptionsBase = {\n  channel?: string,\n  executablePath?: string,\n  args?: string[],\n  ignoreDefaultArgs?: string[],\n  ignoreAllDefaultArgs?: boolean,\n  handleSIGINT?: boolean,\n  handleSIGTERM?: boolean,\n  handleSIGHUP?: boolean,\n  timeout?: number,\n  env?: EnvArray,\n  headless?: boolean,\n  devtools?: boolean,\n  proxy?: ProxySettings,\n  downloadsPath?: string,\n  chromiumSandbox?: boolean,\n  slowMo?: number,\n  useWebSocket?: boolean,\n  tracesDir?: string,\n};\nexport type LaunchOptions = LaunchOptionsBase & {\n  firefoxUserPrefs?: { [key: string]: string | number | boolean },\n};\nexport type LaunchPersistentOptions = LaunchOptionsBase & BrowserContextOptions;\n\nexport type ProtocolLogger = (direction: 'send' | 'receive', message: object) => void;\n\nexport type SerializedAXNode = {\n  role: string,\n  name: string,\n  valueString?: string,\n  valueNumber?: number,\n  description?: string,\n\n  keyshortcuts?: string,\n  roledescription?: string,\n  valuetext?: string,\n\n  disabled?: boolean,\n  expanded?: boolean,\n  focused?: boolean,\n  modal?: boolean,\n  multiline?: boolean,\n  multiselectable?: boolean,\n  readonly?: boolean,\n  required?: boolean,\n  selected?: boolean,\n\n  checked?: 'checked' | 'unchecked' | 'mixed',\n  pressed?: 'pressed' | 'released' | 'mixed',\n\n  level?: number,\n  valuemin?: number,\n  valuemax?: number,\n\n  autocomplete?: string,\n  haspopup?: string,\n  invalid?: string,\n  orientation?: string,\n\n  children?: SerializedAXNode[]\n};\n\nexport type ConsoleMessageLocation = {\n  url: string,\n  lineNumber: number,\n  columnNumber: number,\n};\n\nexport type Error = {\n  message: string,\n  name: string,\n  stack?: string,\n};\n\nexport type NameValueList = {\n  name: string;\n  value: string;\n}[];\n\nexport type OriginStorage = {\n  origin: string;\n  localStorage: NameValueList;\n};\n\nexport type StorageState = {\n  cookies: NetworkCookie[],\n  origins: OriginStorage[]\n};\n\nexport type SetStorageState = {\n  cookies?: SetNetworkCookieParam[],\n  origins?: OriginStorage[]\n};\n"],"file":"types.js"}