{"version":3,"sources":["../../src/server/network.ts"],"names":["filterCookies","cookies","urls","parsedURLs","map","s","URL","filter","c","value","length","parsedURL","domain","startsWith","hostname","endsWith","pathname","path","protocol","secure","rewriteCookies","name","url","copy","substring","lastIndexOf","e","stripFragmentFromUrl","includes","indexOf","Request","SdkObject","constructor","frame","redirectedFrom","documentId","resourceType","method","postData","headers","_response","_redirectedFrom","_redirectedTo","_documentId","_isFavicon","_failureText","_url","_resourceType","_method","_postData","_headers","_headersMap","Map","_frame","_waitForResponsePromise","_waitForResponsePromiseCallback","_responseEndTiming","set","toLowerCase","Promise","f","_setFailureText","failureText","postDataBuffer","headerValue","get","response","_existingResponse","_setResponse","_finalRequest","isNavigationRequest","failure","errorText","updateWithRawHeaders","clear","has","host","push","Route","request","delegate","_request","_delegate","_handled","abort","errorCode","fulfill","overrides","body","isBase64","undefined","responseBody","toString","status","continue","newUrl","oldUrl","Error","Response","statusText","timing","getResponseBodyCallback","httpVersion","_contentPromise","_finishedPromise","_finishedPromiseCallback","_status","_statusText","_getResponseBodyCallback","_timing","_serverAddrPromise","_serverAddrPromiseCallback","_securityDetailsPromise","_securityDetailsPromiseCallback","_httpVersion","_transferSize","_serverAddrFinished","addr","_securityDetailsFinished","securityDetails","_requestFinished","responseEndTiming","error","transferSize","Math","max","responseStart","_setHttpVersion","finished","then","serverAddr","InterceptedResponse","WebSocket","parent","frameSent","opcode","data","emit","Events","FrameSent","frameReceived","FrameReceived","errorMessage","SocketError","closed","Close","STATUS_TEXTS","singleHeader","mergeHeaders","lowerCaseToValue","lowerCaseToOriginalCase","h","lower","result"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as frames from './frames';\nimport * as types from './types';\nimport { assert } from '../utils/utils';\nimport { SdkObject } from './instrumentation';\n\nexport function filterCookies(cookies: types.NetworkCookie[], urls: string[]): types.NetworkCookie[] {\n  const parsedURLs = urls.map(s => new URL(s));\n  // Chromiums's cookies are missing sameSite when it is 'None'\n  return cookies.filter(c => {\n    // Firefox and WebKit can return cookies with empty values.\n    if (!c.value)\n      return false;\n    if (!parsedURLs.length)\n      return true;\n    for (const parsedURL of parsedURLs) {\n      let domain = c.domain;\n      if (!domain.startsWith('.'))\n        domain = '.' + domain;\n      if (!('.' + parsedURL.hostname).endsWith(domain))\n        continue;\n      if (!parsedURL.pathname.startsWith(c.path))\n        continue;\n      if (parsedURL.protocol !== 'https:' && c.secure)\n        continue;\n      return true;\n    }\n    return false;\n  });\n}\n\nexport function rewriteCookies(cookies: types.SetNetworkCookieParam[]): types.SetNetworkCookieParam[] {\n  return cookies.map(c => {\n    assert(c.name, 'Cookie should have a name');\n    assert(c.value, 'Cookie should have a value');\n    assert(c.url || (c.domain && c.path), 'Cookie should have a url or a domain/path pair');\n    assert(!(c.url && c.domain), 'Cookie should have either url or domain');\n    assert(!(c.url && c.path), 'Cookie should have either url or domain');\n    const copy = {...c};\n    if (copy.url) {\n      assert(copy.url !== 'about:blank', `Blank page can not have cookie \"${c.name}\"`);\n      assert(!copy.url.startsWith('data:'), `Data URL page can not have cookie \"${c.name}\"`);\n      const url = new URL(copy.url);\n      copy.domain = url.hostname;\n      copy.path = url.pathname.substring(0, url.pathname.lastIndexOf('/') + 1);\n      copy.secure = url.protocol === 'https:';\n    }\n    return copy;\n  });\n}\n\nexport function parsedURL(url: string): URL | null {\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function stripFragmentFromUrl(url: string): string {\n  if (!url.includes('#'))\n    return url;\n  return url.substring(0, url.indexOf('#'));\n}\n\nexport class Request extends SdkObject {\n  private _response: Response | null = null;\n  private _redirectedFrom: Request | null;\n  private _redirectedTo: Request | null = null;\n  readonly _documentId?: string;\n  readonly _isFavicon: boolean;\n  _failureText: string | null = null;\n  private _url: string;\n  private _resourceType: string;\n  private _method: string;\n  private _postData: Buffer | null;\n  private _headers: types.HeadersArray;\n  private _headersMap = new Map<string, string>();\n  private _frame: frames.Frame;\n  private _waitForResponsePromise: Promise<Response | null>;\n  private _waitForResponsePromiseCallback: (value: Response | null) => void = () => {};\n  _responseEndTiming = -1;\n\n  constructor(frame: frames.Frame, redirectedFrom: Request | null, documentId: string | undefined,\n    url: string, resourceType: string, method: string, postData: Buffer | null, headers: types.HeadersArray) {\n    super(frame, 'request');\n    assert(!url.startsWith('data:'), 'Data urls should not fire requests');\n    this._frame = frame;\n    this._redirectedFrom = redirectedFrom;\n    if (redirectedFrom)\n      redirectedFrom._redirectedTo = this;\n    this._documentId = documentId;\n    this._url = stripFragmentFromUrl(url);\n    this._resourceType = resourceType;\n    this._method = method;\n    this._postData = postData;\n    this._headers = headers;\n    for (const { name, value } of this._headers)\n      this._headersMap.set(name.toLowerCase(), value);\n    this._waitForResponsePromise = new Promise(f => this._waitForResponsePromiseCallback = f);\n    this._isFavicon = url.endsWith('/favicon.ico');\n  }\n\n  _setFailureText(failureText: string) {\n    this._failureText = failureText;\n    this._waitForResponsePromiseCallback(null);\n  }\n\n  url(): string {\n    return this._url;\n  }\n\n  resourceType(): string {\n    return this._resourceType;\n  }\n\n  method(): string {\n    return this._method;\n  }\n\n  postDataBuffer(): Buffer | null {\n    return this._postData;\n  }\n\n  headers(): types.HeadersArray {\n    return this._headers;\n  }\n\n  headerValue(name: string): string | undefined {\n    return this._headersMap.get(name);\n  }\n\n  response(): Promise<Response | null> {\n    return this._waitForResponsePromise;\n  }\n\n  _existingResponse(): Response | null {\n    return this._response;\n  }\n\n  _setResponse(response: Response) {\n    this._response = response;\n    this._waitForResponsePromiseCallback(response);\n  }\n\n  _finalRequest(): Request {\n    return this._redirectedTo ? this._redirectedTo._finalRequest() : this;\n  }\n\n  frame(): frames.Frame {\n    return this._frame;\n  }\n\n  isNavigationRequest(): boolean {\n    return !!this._documentId;\n  }\n\n  redirectedFrom(): Request | null {\n    return this._redirectedFrom;\n  }\n\n  failure(): { errorText: string } | null {\n    if (this._failureText === null)\n      return null;\n    return {\n      errorText: this._failureText\n    };\n  }\n\n  updateWithRawHeaders(headers: types.HeadersArray) {\n    this._headers = headers;\n    this._headersMap.clear();\n    for (const { name, value } of this._headers)\n      this._headersMap.set(name.toLowerCase(), value);\n    if (!this._headersMap.has('host')) {\n      const host = new URL(this._url).host;\n      this._headers.push({ name: 'host', value: host });\n      this._headersMap.set('host', host);\n    }\n  }\n}\n\nexport class Route extends SdkObject {\n  private readonly _request: Request;\n  private readonly _delegate: RouteDelegate;\n  private _handled = false;\n  private _response: InterceptedResponse | null = null;\n\n  constructor(request: Request, delegate: RouteDelegate) {\n    super(request.frame(), 'route');\n    this._request = request;\n    this._delegate = delegate;\n  }\n\n  request(): Request {\n    return this._request;\n  }\n\n  async abort(errorCode: string = 'failed') {\n    assert(!this._handled, 'Route is already handled!');\n    this._handled = true;\n    await this._delegate.abort(errorCode);\n  }\n\n  async fulfill(overrides: { status?: number, headers?: types.HeadersArray, body?: string, isBase64?: boolean }) {\n    assert(!this._handled, 'Route is already handled!');\n    this._handled = true;\n    let body = overrides.body;\n    let isBase64 = overrides.isBase64 || false;\n    if (body === undefined) {\n      if (this._response) {\n        body = (await this._delegate.responseBody()).toString('utf8');\n        isBase64 = false;\n      } else {\n        body = '';\n        isBase64 = false;\n      }\n    }\n    await this._delegate.fulfill({\n      status: overrides.status || this._response?.status() || 200,\n      headers: overrides.headers || this._response?.headers() || [],\n      body,\n      isBase64,\n    });\n  }\n\n  async continue(overrides: types.NormalizedContinueOverrides = {}): Promise<InterceptedResponse|null> {\n    assert(!this._handled, 'Route is already handled!');\n    assert(!this._response, 'Cannot call continue after response interception!');\n    if (overrides.url) {\n      const newUrl = new URL(overrides.url);\n      const oldUrl = new URL(this._request.url());\n      if (oldUrl.protocol !== newUrl.protocol)\n        throw new Error('New URL must have same protocol as overridden URL');\n    }\n    this._response = await this._delegate.continue(this._request, overrides);\n    return this._response;\n  }\n\n  async responseBody(): Promise<Buffer> {\n    assert(!this._handled, 'Route is already handled!');\n    return this._delegate.responseBody();\n  }\n}\n\nexport type RouteHandler = (route: Route, request: Request) => void;\n\ntype GetResponseBodyCallback = () => Promise<Buffer>;\n\nexport type ResourceTiming = {\n  startTime: number;\n  domainLookupStart: number;\n  domainLookupEnd: number;\n  connectStart: number;\n  secureConnectionStart: number;\n  connectEnd: number;\n  requestStart: number;\n  responseStart: number;\n};\n\nexport type RemoteAddr = {\n  ipAddress: string;\n  port: number;\n};\n\nexport type SecurityDetails = {\n    protocol?: string;\n    subjectName?: string;\n    issuer?: string;\n    validFrom?: number;\n    validTo?: number;\n};\n\nexport class Response extends SdkObject {\n  private _request: Request;\n  private _contentPromise: Promise<Buffer> | null = null;\n  _finishedPromise: Promise<{ error?: string }>;\n  private _finishedPromiseCallback: (arg: { error?: string }) => void = () => {};\n  private _status: number;\n  private _statusText: string;\n  private _url: string;\n  private _headers: types.HeadersArray;\n  private _headersMap = new Map<string, string>();\n  private _getResponseBodyCallback: GetResponseBodyCallback;\n  private _timing: ResourceTiming;\n  private _serverAddrPromise: Promise<RemoteAddr|undefined>;\n  private _serverAddrPromiseCallback: (arg?: RemoteAddr) => void = () => {};\n  private _securityDetailsPromise: Promise<SecurityDetails|undefined>;\n  private _securityDetailsPromiseCallback: (arg?: SecurityDetails) => void = () => {};\n  _httpVersion: string | undefined;\n  _transferSize: number | undefined;\n\n  constructor(request: Request, status: number, statusText: string, headers: types.HeadersArray, timing: ResourceTiming, getResponseBodyCallback: GetResponseBodyCallback, httpVersion?: string) {\n    super(request.frame(), 'response');\n    this._request = request;\n    this._timing = timing;\n    this._status = status;\n    this._statusText = statusText;\n    this._url = request.url();\n    this._headers = headers;\n    for (const { name, value } of this._headers)\n      this._headersMap.set(name.toLowerCase(), value);\n    this._getResponseBodyCallback = getResponseBodyCallback;\n    this._serverAddrPromise = new Promise(f => {\n      this._serverAddrPromiseCallback = f;\n    });\n    this._securityDetailsPromise = new Promise(f => {\n      this._securityDetailsPromiseCallback = f;\n    });\n    this._finishedPromise = new Promise(f => {\n      this._finishedPromiseCallback = f;\n    });\n    this._request._setResponse(this);\n    this._httpVersion = httpVersion;\n  }\n\n  _serverAddrFinished(addr?: RemoteAddr) {\n    this._serverAddrPromiseCallback(addr);\n  }\n\n  _securityDetailsFinished(securityDetails?: SecurityDetails) {\n    this._securityDetailsPromiseCallback(securityDetails);\n  }\n\n  _requestFinished(responseEndTiming: number, error?: string, transferSize?: number) {\n    this._request._responseEndTiming = Math.max(responseEndTiming, this._timing.responseStart);\n    this._transferSize = transferSize;\n    this._finishedPromiseCallback({ error });\n  }\n\n  _setHttpVersion(httpVersion: string) {\n    this._httpVersion = httpVersion;\n  }\n\n  url(): string {\n    return this._url;\n  }\n\n  status(): number {\n    return this._status;\n  }\n\n  statusText(): string {\n    return this._statusText;\n  }\n\n  headers(): types.HeadersArray {\n    return this._headers;\n  }\n\n  headerValue(name: string): string | undefined {\n    return this._headersMap.get(name);\n  }\n\n  finished(): Promise<Error | null> {\n    return this._finishedPromise.then(({ error }) => error ? new Error(error) : null);\n  }\n\n  timing(): ResourceTiming {\n    return this._timing;\n  }\n\n  async serverAddr(): Promise<RemoteAddr|null> {\n    return await this._serverAddrPromise || null;\n  }\n\n  async securityDetails(): Promise<SecurityDetails|null> {\n    return await this._securityDetailsPromise || null;\n  }\n\n  body(): Promise<Buffer> {\n    if (!this._contentPromise) {\n      this._contentPromise = this._finishedPromise.then(async ({ error }) => {\n        if (error)\n          throw new Error(error);\n        return this._getResponseBodyCallback();\n      });\n    }\n    return this._contentPromise;\n  }\n\n  request(): Request {\n    return this._request;\n  }\n\n  frame(): frames.Frame {\n    return this._request.frame();\n  }\n}\n\nexport class InterceptedResponse extends SdkObject {\n  private readonly _request: Request;\n  private readonly _status: number;\n  private readonly _statusText: string;\n  private readonly _headers: types.HeadersArray;\n\n  constructor(request: Request, status: number, statusText: string, headers: types.HeadersArray) {\n    super(request.frame(), 'interceptedResponse');\n    this._request = request._finalRequest();\n    this._status = status;\n    this._statusText = statusText;\n    this._headers = headers;\n  }\n\n  status(): number {\n    return this._status;\n  }\n\n  statusText(): string {\n    return this._statusText;\n  }\n\n  headers(): types.HeadersArray {\n    return this._headers;\n  }\n\n  request(): Request {\n    return this._request;\n  }\n}\n\nexport class WebSocket extends SdkObject {\n  private _url: string;\n\n  static Events = {\n    Close: 'close',\n    SocketError: 'socketerror',\n    FrameReceived: 'framereceived',\n    FrameSent: 'framesent',\n  };\n\n  constructor(parent: SdkObject, url: string) {\n    super(parent, 'ws');\n    this._url = url;\n  }\n\n  url(): string {\n    return this._url;\n  }\n\n  frameSent(opcode: number, data: string) {\n    this.emit(WebSocket.Events.FrameSent, { opcode, data });\n  }\n\n  frameReceived(opcode: number, data: string) {\n    this.emit(WebSocket.Events.FrameReceived, { opcode, data });\n  }\n\n  error(errorMessage: string) {\n    this.emit(WebSocket.Events.SocketError, errorMessage);\n  }\n\n  closed() {\n    this.emit(WebSocket.Events.Close);\n  }\n}\n\nexport interface RouteDelegate {\n  abort(errorCode: string): Promise<void>;\n  fulfill(response: types.NormalizedFulfillResponse): Promise<void>;\n  continue(request: Request, overrides: types.NormalizedContinueOverrides): Promise<InterceptedResponse|null>;\n  responseBody(): Promise<Buffer>;\n}\n\n// List taken from https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml with extra 306 and 418 codes.\nexport const STATUS_TEXTS: { [status: string]: string } = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '103': 'Early Hints',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '205': 'Reset Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '226': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': 'I\\'m a teapot',\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '425': 'Too Early',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required',\n};\n\nexport function singleHeader(name: string, value: string): types.HeadersArray {\n  return [{ name, value }];\n}\n\nexport function mergeHeaders(headers: (types.HeadersArray | undefined | null)[]): types.HeadersArray {\n  const lowerCaseToValue = new Map<string, string>();\n  const lowerCaseToOriginalCase = new Map<string, string>();\n  for (const h of headers) {\n    if (!h)\n      continue;\n    for (const { name, value } of h) {\n      const lower = name.toLowerCase();\n      lowerCaseToOriginalCase.set(lower, name);\n      lowerCaseToValue.set(lower, value);\n    }\n  }\n  const result: types.HeadersArray = [];\n  for (const [lower, value] of lowerCaseToValue)\n    result.push({ name: lowerCaseToOriginalCase.get(lower)!, value });\n  return result;\n}\n"],"file":"network.js"}