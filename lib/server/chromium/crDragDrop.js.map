{"version":3,"sources":["../../../src/server/chromium/crDragDrop.ts"],"names":["DragManager","constructor","page","_crPage","_dragState","_lastPosition","x","y","cancelDrag","_mainFrameSession","_client","send","type","data","items","dragOperationsMask","interceptDragCausedByMove","button","buttons","modifiers","moveCallback","client","onDragIntercepted","dragInterceptedPromise","Promise","all","_page","frames","map","frame","nonStallingEvaluateInExistingContext","didStartDrag","resolve","dragEvent","dragListener","event","mouseListener","callback","window","addEventListener","once","capture","setTimeout","defaultPrevented","__cleanupDrag","val","removeEventListener","toString","catch","on","enabled","off","expectingDrag","some","isDragging","drop"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n*/\nimport { CRPage } from './crPage';\nimport * as types from '../types';\nimport { assert } from '../../utils/utils';\nimport { Protocol } from './protocol';\nimport { toModifiersMask } from './crProtocolHelper';\n\ndeclare global {\n  interface Window {\n    __cleanupDrag?: () => Promise<boolean>;\n  }\n}\n\nexport class DragManager {\n  private _crPage: CRPage;\n  private _dragState: Protocol.Input.DragData | null = null;\n  private _lastPosition = {x: 0, y: 0};\n  constructor(page: CRPage) {\n    this._crPage = page;\n  }\n\n  async cancelDrag() {\n    if (!this._dragState)\n      return false;\n    await this._crPage._mainFrameSession._client.send('Input.dispatchDragEvent', {\n      type: 'dragCancel',\n      x: this._lastPosition.x,\n      y: this._lastPosition.y,\n      data: {\n        items: [],\n        dragOperationsMask: 0xFFFF,\n      }\n    });\n    this._dragState = null;\n    return true;\n  }\n\n  async interceptDragCausedByMove(x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, moveCallback: () => Promise<void>): Promise<void> {\n    this._lastPosition = {x, y};\n    if (this._dragState) {\n      await this._crPage._mainFrameSession._client.send('Input.dispatchDragEvent', {\n        type: 'dragOver',\n        x,\n        y,\n        data: this._dragState,\n        modifiers: toModifiersMask(modifiers),\n      });\n      return;\n    }\n    if (button !== 'left')\n      return moveCallback();\n\n    const client = this._crPage._mainFrameSession._client;\n    let onDragIntercepted: (payload: Protocol.Input.dragInterceptedPayload) => void;\n    const dragInterceptedPromise = new Promise<Protocol.Input.dragInterceptedPayload>(x => onDragIntercepted = x);\n\n    await Promise.all(this._crPage._page.frames().map(async frame => {\n      await frame.nonStallingEvaluateInExistingContext((function() {\n        let didStartDrag = Promise.resolve(false);\n        let dragEvent: Event|null = null;\n        const dragListener = (event: Event) => dragEvent = event;\n        const mouseListener = () => {\n          didStartDrag = new Promise<boolean>(callback => {\n            window.addEventListener('dragstart', dragListener, {once: true, capture: true});\n            setTimeout(() => callback(dragEvent ? !dragEvent.defaultPrevented : false), 0);\n          });\n        };\n        window.addEventListener('mousemove', mouseListener, {once: true, capture: true});\n        window.__cleanupDrag = async () => {\n          const val = await didStartDrag;\n          window.removeEventListener('mousemove', mouseListener, {capture: true});\n          window.removeEventListener('dragstart', dragListener, {capture: true});\n          return val;\n        };\n      }).toString(), true, 'utility').catch(() => {});\n    }));\n\n    client.on('Input.dragIntercepted', onDragIntercepted!);\n    try {\n      await client.send('Input.setInterceptDrags', {enabled: true});\n    } catch {\n      // If Input.setInterceptDrags is not supported, just do a regular move.\n      // This can be removed once we stop supporting old Electron.\n      client.off('Input.dragIntercepted', onDragIntercepted!);\n      return moveCallback();\n    }\n    await moveCallback();\n\n    const expectingDrag = (await Promise.all(this._crPage._page.frames().map(async frame => {\n      return frame.nonStallingEvaluateInExistingContext('window.__cleanupDrag && window.__cleanupDrag()', false, 'utility').catch(() => false);\n    }))).some(x => x);\n    this._dragState = expectingDrag ? (await dragInterceptedPromise).data : null;\n    client.off('Input.dragIntercepted', onDragIntercepted!);\n    await client.send('Input.setInterceptDrags', {enabled: false});\n\n\n    if (this._dragState) {\n      await this._crPage._mainFrameSession._client.send('Input.dispatchDragEvent', {\n        type: 'dragEnter',\n        x,\n        y,\n        data: this._dragState,\n        modifiers: toModifiersMask(modifiers),\n      });\n    }\n  }\n\n  isDragging() {\n    return !!this._dragState;\n  }\n\n  async drop(x: number, y: number, modifiers: Set<types.KeyboardModifier>) {\n    assert(this._dragState, 'missing drag state');\n    await this._crPage._mainFrameSession._client.send('Input.dispatchDragEvent', {\n      type: 'drop',\n      x,\n      y,\n      data: this._dragState,\n      modifiers: toModifiersMask(modifiers),\n    });\n    this._dragState = null;\n  }\n}\n"],"file":"crDragDrop.js"}