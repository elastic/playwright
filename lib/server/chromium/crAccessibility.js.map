{"version":3,"sources":["../../../src/server/chromium/crAccessibility.ts"],"names":["getAccessibilityTree","client","needle","nodes","send","tree","CRAXNode","createTree","_findElement","constructor","payload","_payload","_children","_richlyEditable","_editable","_focusable","_expanded","_hidden","_name","_role","_cachedHasFocusableChild","_client","name","value","role","property","properties","_isPlainTextField","_isTextOnlyObject","_hasFocusableChild","undefined","child","children","element","objectId","_objectId","node","backendNodeId","find","backendDOMNodeId","predicate","result","isLeafNode","length","isControl","isInteresting","insideControl","normalizedRole","serialize","Map","set","toLowerCase","description","userStringProperties","userStringProperty","has","get","booleanProperties","booleanProperty","numericalProperties","numericalProperty","tokenProperties","tokenProperty","axNode","valueString","valueNumber","checked","pressed","payloads","nodeById","nodeId","values","childId","childIds","push","next"],"mappings":"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","sourcesContent":["/**\n * Copyright 2018 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CRSession } from './crConnection';\nimport { Protocol } from './protocol';\nimport * as dom from '../dom';\nimport * as accessibility from '../accessibility';\nimport * as types from '../types';\n\nexport async function getAccessibilityTree(client: CRSession, needle?: dom.ElementHandle): Promise<{tree: accessibility.AXNode, needle: accessibility.AXNode | null}> {\n  const {nodes} = await client.send('Accessibility.getFullAXTree');\n  const tree = CRAXNode.createTree(client, nodes);\n  return {\n    tree,\n    needle: needle ? await tree._findElement(needle) : null\n  };\n}\n\nclass CRAXNode implements accessibility.AXNode {\n  _payload: Protocol.Accessibility.AXNode;\n  _children: CRAXNode[] = [];\n  private _richlyEditable = false;\n  private _editable = false;\n  private _focusable = false;\n  private _expanded = false;\n  private _hidden = false;\n  private _name: string;\n  private _role: string;\n  private _cachedHasFocusableChild: boolean | undefined;\n  private _client: CRSession;\n\n  constructor(client: CRSession, payload: Protocol.Accessibility.AXNode) {\n    this._client = client;\n    this._payload = payload;\n\n    this._name = this._payload.name ? this._payload.name.value : '';\n    this._role = this._payload.role ? this._payload.role.value : 'Unknown';\n\n    for (const property of this._payload.properties || []) {\n      if (property.name === 'editable') {\n        this._richlyEditable = property.value.value === 'richtext';\n        this._editable = true;\n      }\n      if (property.name === 'focusable')\n        this._focusable = property.value.value;\n      if (property.name === 'expanded')\n        this._expanded = property.value.value;\n      if (property.name === 'hidden')\n        this._hidden = property.value.value;\n    }\n  }\n\n  private _isPlainTextField(): boolean {\n    if (this._richlyEditable)\n      return false;\n    if (this._editable)\n      return true;\n    return this._role === 'textbox' || this._role === 'ComboBox' || this._role === 'searchbox';\n  }\n\n  private _isTextOnlyObject(): boolean {\n    const role = this._role;\n    return (role === 'LineBreak' || role === 'text' ||\n            role === 'InlineTextBox' || role === 'StaticText');\n  }\n\n  private _hasFocusableChild(): boolean {\n    if (this._cachedHasFocusableChild === undefined) {\n      this._cachedHasFocusableChild = false;\n      for (const child of this._children) {\n        if (child._focusable || child._hasFocusableChild()) {\n          this._cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this._cachedHasFocusableChild;\n  }\n\n  children() {\n    return this._children;\n  }\n\n  async _findElement(element: dom.ElementHandle): Promise<CRAXNode | null> {\n    const objectId = element._objectId;\n    const {node: {backendNodeId}} = await this._client.send('DOM.describeNode', { objectId });\n    const needle = this.find(node => node._payload.backendDOMNodeId === backendNodeId);\n    return needle || null;\n  }\n\n  find(predicate: (arg0: CRAXNode) => boolean): CRAXNode | null {\n    if (predicate(this))\n      return this;\n    for (const child of this._children) {\n      const result = child.find(predicate);\n      if (result)\n        return result;\n    }\n    return null;\n  }\n\n  isLeafNode(): boolean {\n    if (!this._children.length)\n      return true;\n\n    // These types of objects may have children that we use as internal\n    // implementation details, but we want to expose them as leaves to platform\n    // accessibility APIs because screen readers might be confused if they find\n    // any children.\n    if (this._isPlainTextField() || this._isTextOnlyObject())\n      return true;\n\n    // Roles whose children are only presentational according to the ARIA and\n    // HTML5 Specs should be hidden from screen readers.\n    // (Note that whilst ARIA buttons can have only presentational children, HTML5\n    // buttons are allowed to have content.)\n    switch (this._role) {\n      case 'doc-cover':\n      case 'graphics-symbol':\n      case 'img':\n      case 'Meter':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n\n    // Here and below: Android heuristics\n    if (this._hasFocusableChild())\n      return false;\n    if (this._focusable && this._role !== 'WebArea' && this._role !== 'RootWebArea' && this._name)\n      return true;\n    if (this._role === 'heading' && this._name)\n      return true;\n    return false;\n  }\n\n  isControl(): boolean {\n    switch (this._role) {\n      case 'button':\n      case 'checkbox':\n      case 'ColorWell':\n      case 'combobox':\n      case 'DisclosureTriangle':\n      case 'listbox':\n      case 'menu':\n      case 'menubar':\n      case 'menuitem':\n      case 'menuitemcheckbox':\n      case 'menuitemradio':\n      case 'radio':\n      case 'scrollbar':\n      case 'searchbox':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'tab':\n      case 'textbox':\n      case 'tree':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  isInteresting(insideControl: boolean): boolean {\n    const role = this._role;\n    if (role === 'Ignored' || this._hidden)\n      return false;\n\n    if (this._focusable || this._richlyEditable)\n      return true;\n\n    // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl())\n      return true;\n\n    // A non focusable child of a control is not interesting\n    if (insideControl)\n      return false;\n\n    return this.isLeafNode() && !!this._name;\n  }\n\n  normalizedRole() {\n    switch (this._role) {\n      case 'RootWebArea':\n        return 'WebArea';\n      case 'StaticText':\n        return 'text';\n      default:\n        return this._role;\n    }\n  }\n\n  serialize(): types.SerializedAXNode {\n    const properties: Map<string, number | string | boolean> = new Map();\n    for (const property of this._payload.properties || [])\n      properties.set(property.name.toLowerCase(), property.value.value);\n    if (this._payload.description)\n      properties.set('description', this._payload.description.value);\n\n    const node: {[x in keyof types.SerializedAXNode]: any} = {\n      role: this.normalizedRole(),\n      name: this._payload.name ? (this._payload.name.value || '') : '',\n    };\n\n    const userStringProperties: Array<keyof types.SerializedAXNode> = [\n      'description',\n      'keyshortcuts',\n      'roledescription',\n      'valuetext',\n    ];\n    for (const userStringProperty of userStringProperties) {\n      if (!properties.has(userStringProperty))\n        continue;\n      node[userStringProperty] = properties.get(userStringProperty);\n    }\n    const booleanProperties: Array<keyof types.SerializedAXNode> = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    for (const booleanProperty of booleanProperties) {\n      // WebArea's treat focus differently than other nodes. They report whether their frame  has focus,\n      // not whether focus is specifically on the root node.\n      if (booleanProperty === 'focused' && (this._role === 'WebArea' || this._role === 'RootWebArea'))\n        continue;\n      const value = properties.get(booleanProperty);\n      if (!value)\n        continue;\n      node[booleanProperty] = value;\n    }\n    const numericalProperties: Array<keyof types.SerializedAXNode> = [\n      'level',\n      'valuemax',\n      'valuemin',\n    ];\n    for (const numericalProperty of numericalProperties) {\n      if (!properties.has(numericalProperty))\n        continue;\n      node[numericalProperty] = properties.get(numericalProperty);\n    }\n    const tokenProperties: Array<keyof types.SerializedAXNode> = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n      'orientation',\n    ];\n    for (const tokenProperty of tokenProperties) {\n      const value = properties.get(tokenProperty);\n      if (!value || value === 'false')\n        continue;\n      node[tokenProperty] = value;\n    }\n\n    const axNode = node as types.SerializedAXNode;\n    if (this._payload.value) {\n      if (typeof this._payload.value.value === 'string')\n        axNode.valueString = this._payload.value.value;\n      if (typeof this._payload.value.value === 'number')\n        axNode.valueNumber = this._payload.value.value;\n    }\n    if (properties.has('checked'))\n      axNode.checked = properties.get('checked') === 'true' ? 'checked' : properties.get('checked') === 'false' ? 'unchecked' : 'mixed';\n    if (properties.has('pressed'))\n      axNode.pressed = properties.get('pressed') === 'true' ? 'pressed' : properties.get('pressed') === 'false' ? 'released' : 'mixed';\n    return axNode;\n  }\n\n  static createTree(client: CRSession, payloads: Protocol.Accessibility.AXNode[]): CRAXNode {\n    const nodeById: Map<string, CRAXNode> = new Map();\n    for (const payload of payloads)\n      nodeById.set(payload.nodeId, new CRAXNode(client, payload));\n    for (const node of nodeById.values()) {\n      for (const childId of node._payload.childIds || [])\n        node._children.push(nodeById.get(childId)!);\n    }\n    return nodeById.values().next().value;\n  }\n}\n"],"file":"crAccessibility.js"}