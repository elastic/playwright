{"version":3,"sources":["../../../src/server/chromium/crBrowser.ts"],"names":["CRBrowser","Browser","connect","transport","options","devtools","connection","CRConnection","protocolLogger","browserLogsCollector","browser","_devtools","session","rootSession","__testHookOnConnectToBrowser","version","send","_isMac","userAgent","includes","_version","product","substring","indexOf","persistent","autoAttach","waitForDebuggerOnStart","flatten","_defaultContext","CRBrowserContext","undefined","Promise","all","then","_initialize","_waitForAllPagesToBeInitialized","constructor","_connection","_session","_clientRootSessionPromise","_contexts","Map","_crPages","_backgroundPages","_serviceWorkers","_tracingRecording","_tracingPath","_tracingClient","on","ConnectionEvents","Disconnected","_didClose","_onAttachedToTarget","bind","_onDetachedFromTarget","_onDownloadWillBegin","_onDownloadProgress","newContext","browserContextId","disposeOnDetach","proxyServer","proxy","server","proxyBypassList","bypass","context","set","contexts","Array","from","values","isClank","name","map","page","pageOrError","targetInfo","sessionId","waitingForDebugger","type","JSON","stringify","get","url","startsWith","install","_sendMayFail","has","targetId","backgroundPage","CRPage","opener","openerId","crPage","serviceWorker","CRServiceWorker","emit","CREvents","ServiceWorker","payload","delete","didClose","Worker","Events","Close","_findOwningPage","frameId","frame","_page","_frameManager","willBeginDownload","originPage","_initializedPage","_opener","_downloadCreated","guid","suggestedFilename","state","_downloadFinished","_closePage","_targetId","newBrowserCDPSession","createBrowserSession","startTracing","_delegate","_mainFrameSession","_client","defaultCategories","path","screenshots","categories","push","transferMode","join","stopTracing","event","f","once","result","stream","isConnected","_closed","_clientRootSession","browserContext","_browserContext","_createExecutionContext","CRExecutionContext","catch","e","BrowserContext","_evaluateOnNewDocumentSources","_authenticateProxyViaCredentials","_browser","some","promises","behavior","_options","acceptDownloads","_browserContextId","downloadPath","downloadsPath","eventsEnabled","permissions","grantPermissions","pages","newPageDelegate","oldKeys","Set","keys","newKeys","key","size","_doCookies","urls","cookies","network","filterCookies","c","copy","sameSite","priority","sameParty","sourceScheme","sourcePort","addCookies","rewriteCookies","clearCookies","_doGrantPermissions","origin","webPermissionToProtocol","filtered","permission","protocolPermission","Error","_doClearPermissions","setGeolocation","geolocation","updateGeolocation","setExtraHTTPHeaders","headers","extraHTTPHeaders","updateExtraHTTPHeaders","setOffline","offline","updateOffline","_doSetHTTPCredentials","httpCredentials","updateHttpCredentials","_doAddInitScript","source","evaluateOnNewDocument","_doExposeBinding","binding","exposeBinding","_doUpdateRequestInterception","updateRequestInterception","_doClose","_onClosePersistent","entries","_doCancelDownload","backgroundPages","serviceWorkers","filter","newCDPSession","Page","Frame","_sessions","_id","BackgroundPage"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Browser, BrowserOptions } from '../browser';\nimport { assertBrowserContextIsNotOwned, BrowserContext, validateBrowserContextOptions, verifyGeolocation } from '../browserContext';\nimport { assert } from '../../utils/utils';\nimport * as network from '../network';\nimport { Page, PageBinding, PageDelegate, Worker } from '../page';\nimport { Frame } from '../frames';\nimport { ConnectionTransport } from '../transport';\nimport * as types from '../types';\nimport { ConnectionEvents, CRConnection, CRSession } from './crConnection';\nimport { CRPage } from './crPage';\nimport { readProtocolStream } from './crProtocolHelper';\nimport { Protocol } from './protocol';\nimport { CRExecutionContext } from './crExecutionContext';\nimport { CRDevTools } from './crDevTools';\n\nexport class CRBrowser extends Browser {\n  readonly _connection: CRConnection;\n  _session: CRSession;\n  private _clientRootSessionPromise: Promise<CRSession> | null = null;\n  readonly _contexts = new Map<string, CRBrowserContext>();\n  _crPages = new Map<string, CRPage>();\n  _backgroundPages = new Map<string, CRPage>();\n  _serviceWorkers = new Map<string, CRServiceWorker>();\n  _devtools?: CRDevTools;\n  _isMac = false;\n  private _version = '';\n\n  private _tracingRecording = false;\n  private _tracingPath: string | null = '';\n  private _tracingClient: CRSession | undefined;\n\n  static async connect(transport: ConnectionTransport, options: BrowserOptions, devtools?: CRDevTools): Promise<CRBrowser> {\n    const connection = new CRConnection(transport, options.protocolLogger, options.browserLogsCollector);\n    const browser = new CRBrowser(connection, options);\n    browser._devtools = devtools;\n    const session = connection.rootSession;\n    if ((options as any).__testHookOnConnectToBrowser)\n      await (options as any).__testHookOnConnectToBrowser();\n\n    const version = await session.send('Browser.getVersion');\n    browser._isMac = version.userAgent.includes('Macintosh');\n    browser._version = version.product.substring(version.product.indexOf('/') + 1);\n    if (!options.persistent) {\n      await session.send('Target.setAutoAttach', { autoAttach: true, waitForDebuggerOnStart: true, flatten: true });\n      return browser;\n    }\n    browser._defaultContext = new CRBrowserContext(browser, undefined, options.persistent);\n    await Promise.all([\n      session.send('Target.setAutoAttach', { autoAttach: true, waitForDebuggerOnStart: true, flatten: true }).then(async () => {\n        // Target.setAutoAttach has a bug where it does not wait for new Targets being attached.\n        // However making a dummy call afterwards fixes this.\n        // This can be removed after https://chromium-review.googlesource.com/c/chromium/src/+/2885888 lands in stable.\n        await session.send('Target.getTargetInfo');\n      }),\n      (browser._defaultContext as CRBrowserContext)._initialize(),\n    ]);\n    await browser._waitForAllPagesToBeInitialized();\n    return browser;\n  }\n\n  constructor(connection: CRConnection, options: BrowserOptions) {\n    super(options);\n    this._connection = connection;\n    this._session = this._connection.rootSession;\n    this._connection.on(ConnectionEvents.Disconnected, () => this._didClose());\n    this._session.on('Target.attachedToTarget', this._onAttachedToTarget.bind(this));\n    this._session.on('Target.detachedFromTarget', this._onDetachedFromTarget.bind(this));\n    this._session.on('Browser.downloadWillBegin', this._onDownloadWillBegin.bind(this));\n    this._session.on('Browser.downloadProgress', this._onDownloadProgress.bind(this));\n  }\n\n  async newContext(options: types.BrowserContextOptions): Promise<BrowserContext> {\n    validateBrowserContextOptions(options, this.options);\n    const { browserContextId } = await this._session.send('Target.createBrowserContext', {\n      disposeOnDetach: true,\n      proxyServer: options.proxy ? options.proxy.server : undefined,\n      proxyBypassList: options.proxy ? options.proxy.bypass : undefined,\n    });\n    const context = new CRBrowserContext(this, browserContextId, options);\n    await context._initialize();\n    this._contexts.set(browserContextId, context);\n    return context;\n  }\n\n  contexts(): BrowserContext[] {\n    return Array.from(this._contexts.values());\n  }\n\n  version(): string {\n    return this._version;\n  }\n\n  isClank(): boolean {\n    return this.options.name === 'clank';\n  }\n\n  async _waitForAllPagesToBeInitialized() {\n    await Promise.all([...this._crPages.values()].map(page => page.pageOrError()));\n  }\n\n  _onAttachedToTarget({targetInfo, sessionId, waitingForDebugger}: Protocol.Target.attachedToTargetPayload) {\n    if (targetInfo.type === 'browser')\n      return;\n    const session = this._connection.session(sessionId)!;\n    assert(targetInfo.browserContextId, 'targetInfo: ' + JSON.stringify(targetInfo, null, 2));\n    let context = this._contexts.get(targetInfo.browserContextId) || null;\n    if (!context) {\n      // TODO: auto attach only to pages from our contexts.\n      // assert(this._defaultContext);\n      context = this._defaultContext as CRBrowserContext;\n    }\n\n    if (targetInfo.type === 'other' && targetInfo.url.startsWith('devtools://devtools') && this._devtools) {\n      this._devtools.install(session);\n      return;\n    }\n\n    if (targetInfo.type === 'other' || !context) {\n      if (waitingForDebugger) {\n        // Ideally, detaching should resume any target, but there is a bug in the backend.\n        session._sendMayFail('Runtime.runIfWaitingForDebugger').then(() => {\n          this._session._sendMayFail('Target.detachFromTarget', { sessionId });\n        });\n      }\n      return;\n    }\n\n    assert(!this._crPages.has(targetInfo.targetId), 'Duplicate target ' + targetInfo.targetId);\n    assert(!this._backgroundPages.has(targetInfo.targetId), 'Duplicate target ' + targetInfo.targetId);\n    assert(!this._serviceWorkers.has(targetInfo.targetId), 'Duplicate target ' + targetInfo.targetId);\n\n    if (targetInfo.type === 'background_page') {\n      const backgroundPage = new CRPage(session, targetInfo.targetId, context, null, false, true);\n      this._backgroundPages.set(targetInfo.targetId, backgroundPage);\n      return;\n    }\n\n    if (targetInfo.type === 'page') {\n      const opener = targetInfo.openerId ? this._crPages.get(targetInfo.openerId) || null : null;\n      const crPage = new CRPage(session, targetInfo.targetId, context, opener, true, false);\n      this._crPages.set(targetInfo.targetId, crPage);\n      return;\n    }\n\n    if (targetInfo.type === 'service_worker') {\n      const serviceWorker = new CRServiceWorker(context, session, targetInfo.url);\n      this._serviceWorkers.set(targetInfo.targetId, serviceWorker);\n      context.emit(CRBrowserContext.CREvents.ServiceWorker, serviceWorker);\n      return;\n    }\n\n    assert(false, 'Unknown target type: ' + targetInfo.type);\n  }\n\n  _onDetachedFromTarget(payload: Protocol.Target.detachFromTargetParameters) {\n    const targetId = payload.targetId!;\n    const crPage = this._crPages.get(targetId);\n    if (crPage) {\n      this._crPages.delete(targetId);\n      crPage.didClose();\n      return;\n    }\n    const backgroundPage = this._backgroundPages.get(targetId);\n    if (backgroundPage) {\n      this._backgroundPages.delete(targetId);\n      backgroundPage.didClose();\n      return;\n    }\n    const serviceWorker = this._serviceWorkers.get(targetId);\n    if (serviceWorker) {\n      this._serviceWorkers.delete(targetId);\n      serviceWorker.emit(Worker.Events.Close);\n      return;\n    }\n  }\n\n  private _findOwningPage(frameId: string) {\n    for (const crPage of this._crPages.values()) {\n      const frame = crPage._page._frameManager.frame(frameId);\n      if (frame)\n        return crPage;\n    }\n    return null;\n  }\n\n  _onDownloadWillBegin(payload: Protocol.Browser.downloadWillBeginPayload) {\n    const page = this._findOwningPage(payload.frameId);\n    assert(page, 'Download started in unknown page: ' + JSON.stringify(payload));\n    page.willBeginDownload();\n\n    let originPage = page._initializedPage;\n    // If it's a new window download, report it on the opener page.\n    if (!originPage && page._opener)\n      originPage = page._opener._initializedPage;\n    if (!originPage)\n      return;\n    this._downloadCreated(originPage, payload.guid, payload.url, payload.suggestedFilename);\n  }\n\n  _onDownloadProgress(payload: any) {\n    if (payload.state === 'completed')\n      this._downloadFinished(payload.guid, '');\n    if (payload.state === 'canceled')\n      this._downloadFinished(payload.guid, 'canceled');\n  }\n\n  async _closePage(crPage: CRPage) {\n    await this._session.send('Target.closeTarget', { targetId: crPage._targetId });\n  }\n\n  async newBrowserCDPSession(): Promise<CRSession> {\n    return await this._connection.createBrowserSession();\n  }\n\n  async startTracing(page?: Page, options: { path?: string; screenshots?: boolean; categories?: string[]; } = {}) {\n    assert(!this._tracingRecording, 'Cannot start recording trace while already recording trace.');\n    this._tracingClient = page ? (page._delegate as CRPage)._mainFrameSession._client : this._session;\n\n    const defaultCategories = [\n      '-*', 'devtools.timeline', 'v8.execute', 'disabled-by-default-devtools.timeline',\n      'disabled-by-default-devtools.timeline.frame', 'toplevel',\n      'blink.console', 'blink.user_timing', 'latencyInfo', 'disabled-by-default-devtools.timeline.stack',\n      'disabled-by-default-v8.cpu_profiler', 'disabled-by-default-v8.cpu_profiler.hires'\n    ];\n    const {\n      path = null,\n      screenshots = false,\n      categories = defaultCategories,\n    } = options;\n\n    if (screenshots)\n      categories.push('disabled-by-default-devtools.screenshot');\n\n    this._tracingPath = path;\n    this._tracingRecording = true;\n    await this._tracingClient.send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      categories: categories.join(',')\n    });\n  }\n\n  async stopTracing(): Promise<Buffer> {\n    assert(this._tracingClient, 'Tracing was not started.');\n    const [event] = await Promise.all([\n      new Promise(f => this._tracingClient!.once('Tracing.tracingComplete', f)),\n      this._tracingClient.send('Tracing.end')\n    ]);\n    const result = await readProtocolStream(this._tracingClient, (event as any).stream!, this._tracingPath);\n    this._tracingRecording = false;\n    return result;\n  }\n\n  isConnected(): boolean {\n    return !this._connection._closed;\n  }\n\n  async _clientRootSession(): Promise<CRSession> {\n    if (!this._clientRootSessionPromise)\n      this._clientRootSessionPromise = this._connection.createBrowserSession();\n    return this._clientRootSessionPromise;\n  }\n}\n\nclass CRServiceWorker extends Worker {\n  readonly _browserContext: CRBrowserContext;\n\n  constructor(browserContext: CRBrowserContext, session: CRSession, url: string) {\n    super(browserContext, url);\n    this._browserContext = browserContext;\n    session.once('Runtime.executionContextCreated', event => {\n      this._createExecutionContext(new CRExecutionContext(session, event.context));\n    });\n    // This might fail if the target is closed before we receive all execution contexts.\n    session.send('Runtime.enable', {}).catch(e => {});\n    session.send('Runtime.runIfWaitingForDebugger').catch(e => {});\n  }\n}\n\nexport class CRBrowserContext extends BrowserContext {\n  static CREvents = {\n    BackgroundPage: 'backgroundpage',\n    ServiceWorker: 'serviceworker',\n  };\n\n  declare readonly _browser: CRBrowser;\n  readonly _evaluateOnNewDocumentSources: string[];\n\n  constructor(browser: CRBrowser, browserContextId: string | undefined, options: types.BrowserContextOptions) {\n    super(browser, options, browserContextId);\n    this._evaluateOnNewDocumentSources = [];\n    this._authenticateProxyViaCredentials();\n  }\n\n  async _initialize() {\n    assert(!Array.from(this._browser._crPages.values()).some(page => page._browserContext === this));\n    const promises: Promise<any>[] = [ super._initialize() ];\n    if (this._browser.options.name !== 'electron' && this._browser.options.name !== 'clank') {\n      promises.push(this._browser._session.send('Browser.setDownloadBehavior', {\n        behavior: this._options.acceptDownloads ? 'allowAndName' : 'deny',\n        browserContextId: this._browserContextId,\n        downloadPath: this._browser.options.downloadsPath,\n        eventsEnabled: true,\n      }));\n    }\n    if (this._options.permissions)\n      promises.push(this.grantPermissions(this._options.permissions));\n    await Promise.all(promises);\n  }\n\n  pages(): Page[] {\n    const result: Page[] = [];\n    for (const crPage of this._browser._crPages.values()) {\n      if (crPage._browserContext === this && crPage._initializedPage)\n        result.push(crPage._initializedPage);\n    }\n    return result;\n  }\n\n  async newPageDelegate(): Promise<PageDelegate> {\n    assertBrowserContextIsNotOwned(this);\n\n    const oldKeys = this._browser.isClank() ? new Set(this._browser._crPages.keys()) : undefined;\n\n    let { targetId } = await this._browser._session.send('Target.createTarget', { url: 'about:blank', browserContextId: this._browserContextId });\n\n    if (oldKeys) {\n      // Chrome for Android returns tab ids (1, 2, 3, 4, 5) instead of content target ids here, work around it via the\n      // heuristic assuming that there is only one page created at a time.\n      const newKeys = new Set(this._browser._crPages.keys());\n      // Remove old keys.\n      for (const key of oldKeys)\n        newKeys.delete(key);\n      // Remove potential concurrent popups.\n      for (const key of newKeys) {\n        const page = this._browser._crPages.get(key)!;\n        if (page._opener)\n          newKeys.delete(key);\n      }\n      assert(newKeys.size === 1);\n      [ targetId ] = [...newKeys];\n    }\n    return this._browser._crPages.get(targetId)!;\n  }\n\n  async _doCookies(urls: string[]): Promise<types.NetworkCookie[]> {\n    const { cookies } = await this._browser._session.send('Storage.getCookies', { browserContextId: this._browserContextId });\n    return network.filterCookies(cookies.map(c => {\n      const copy: any = { sameSite: 'Lax', ...c };\n      delete copy.size;\n      delete copy.priority;\n      delete copy.session;\n      delete copy.sameParty;\n      delete copy.sourceScheme;\n      delete copy.sourcePort;\n      return copy as types.NetworkCookie;\n    }), urls);\n  }\n\n  async addCookies(cookies: types.SetNetworkCookieParam[]) {\n    await this._browser._session.send('Storage.setCookies', { cookies: network.rewriteCookies(cookies), browserContextId: this._browserContextId });\n  }\n\n  async clearCookies() {\n    await this._browser._session.send('Storage.clearCookies', { browserContextId: this._browserContextId });\n  }\n\n  async _doGrantPermissions(origin: string, permissions: string[]) {\n    const webPermissionToProtocol = new Map<string, Protocol.Browser.PermissionType>([\n      ['geolocation', 'geolocation'],\n      ['midi', 'midi'],\n      ['notifications', 'notifications'],\n      ['camera', 'videoCapture'],\n      ['microphone', 'audioCapture'],\n      ['background-sync', 'backgroundSync'],\n      ['ambient-light-sensor', 'sensors'],\n      ['accelerometer', 'sensors'],\n      ['gyroscope', 'sensors'],\n      ['magnetometer', 'sensors'],\n      ['accessibility-events', 'accessibilityEvents'],\n      ['clipboard-read', 'clipboardReadWrite'],\n      ['clipboard-write', 'clipboardSanitizedWrite'],\n      ['payment-handler', 'paymentHandler'],\n      // chrome-specific permissions we have.\n      ['midi-sysex', 'midiSysex'],\n    ]);\n    const filtered = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._browser._session.send('Browser.grantPermissions', { origin: origin === '*' ? undefined : origin, browserContextId: this._browserContextId, permissions: filtered });\n  }\n\n  async _doClearPermissions() {\n    await this._browser._session.send('Browser.resetPermissions', { browserContextId: this._browserContextId });\n  }\n\n  async setGeolocation(geolocation?: types.Geolocation): Promise<void> {\n    verifyGeolocation(geolocation);\n    this._options.geolocation = geolocation;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateGeolocation();\n  }\n\n  async setExtraHTTPHeaders(headers: types.HeadersArray): Promise<void> {\n    this._options.extraHTTPHeaders = headers;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateExtraHTTPHeaders();\n  }\n\n  async setOffline(offline: boolean): Promise<void> {\n    this._options.offline = offline;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateOffline();\n  }\n\n  async _doSetHTTPCredentials(httpCredentials?: types.Credentials): Promise<void> {\n    this._options.httpCredentials = httpCredentials;\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateHttpCredentials();\n  }\n\n  async _doAddInitScript(source: string) {\n    this._evaluateOnNewDocumentSources.push(source);\n    for (const page of this.pages())\n      await (page._delegate as CRPage).evaluateOnNewDocument(source);\n  }\n\n  async _doExposeBinding(binding: PageBinding) {\n    for (const page of this.pages())\n      await (page._delegate as CRPage).exposeBinding(binding);\n  }\n\n  async _doUpdateRequestInterception(): Promise<void> {\n    for (const page of this.pages())\n      await (page._delegate as CRPage).updateRequestInterception();\n  }\n\n  async _doClose() {\n    assert(this._browserContextId);\n    await this._browser._session.send('Target.disposeBrowserContext', { browserContextId: this._browserContextId });\n    this._browser._contexts.delete(this._browserContextId);\n    for (const [targetId, serviceWorker] of this._browser._serviceWorkers) {\n      if (serviceWorker._browserContext !== this)\n        continue;\n      // When closing a browser context, service workers are shutdown\n      // asynchronously and we get detached from them later.\n      // To avoid the wrong order of notifications, we manually fire\n      // \"close\" event here and forget about the serivce worker.\n      serviceWorker.emit(Worker.Events.Close);\n      this._browser._serviceWorkers.delete(targetId);\n    }\n  }\n\n  _onClosePersistent() {\n    // When persistent context is closed, we do not necessary get Target.detachedFromTarget\n    // for all the background pages.\n    for (const [targetId, backgroundPage] of this._browser._backgroundPages.entries()) {\n      if (backgroundPage._browserContext === this && backgroundPage._initializedPage) {\n        backgroundPage.didClose();\n        this._browser._backgroundPages.delete(targetId);\n      }\n    }\n  }\n\n  async _doCancelDownload(guid: string) {\n    // The upstream CDP method is implemented in a way that no explicit error would be given\n    // regarding the requested `guid`, even if the download is in a state not suitable for\n    // cancellation (finished, cancelled, etc.) or the guid is invalid at all.\n    await this._browser._session.send('Browser.cancelDownload', {\n      guid: guid,\n      browserContextId: this._browserContextId,\n    });\n  }\n\n  backgroundPages(): Page[] {\n    const result: Page[] = [];\n    for (const backgroundPage of this._browser._backgroundPages.values()) {\n      if (backgroundPage._browserContext === this && backgroundPage._initializedPage)\n        result.push(backgroundPage._initializedPage);\n    }\n    return result;\n  }\n\n  serviceWorkers(): Worker[] {\n    return Array.from(this._browser._serviceWorkers.values()).filter(serviceWorker => serviceWorker._browserContext === this);\n  }\n\n  async newCDPSession(page: Page | Frame): Promise<CRSession> {\n    let targetId: string | null = null;\n    if (page instanceof Page) {\n      targetId = (page._delegate as CRPage)._targetId;\n    } else if (page instanceof Frame) {\n      const session = (page._page._delegate as CRPage)._sessions.get(page._id);\n      if (!session) throw new Error(`This frame does not have a separate CDP session, it is a part of the parent frame's session`);\n      targetId = session._targetId;\n    } else {\n      throw new Error('page: expected Page or Frame');\n    }\n\n    const rootSession = await this._browser._clientRootSession();\n    const { sessionId } = await rootSession.send('Target.attachToTarget', { targetId, flatten: true });\n    return this._browser._connection.session(sessionId)!;\n  }\n}\n"],"file":"crBrowser.js"}