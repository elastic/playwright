{"version":3,"sources":["../../../src/server/chromium/crCoverage.ts"],"names":["CRCoverage","constructor","client","_jsCoverage","_cssCoverage","JSCoverage","CSSCoverage","startJSCoverage","options","start","stopJSCoverage","stop","startCSSCoverage","stopCSSCoverage","_client","_enabled","_scriptIds","_scriptSources","_eventListeners","_resetOnNavigation","_reportAnonymousScripts","Set","Map","resetOnNavigation","reportAnonymousScripts","clear","eventsHelper","addEventListener","_onScriptParsed","bind","_onExecutionContextsCleared","_onDebuggerPaused","Promise","all","send","callCount","detailed","skip","event","add","scriptId","url","response","_sendMayFail","set","scriptSource","profileResponse","removeEventListeners","coverage","entry","result","has","source","get","push","_stylesheetURLs","_stylesheetSources","_onStyleSheet","header","sourceURL","styleSheetId","text","ruleTrackingResponse","styleSheetIdToCoverage","ruleUsage","ranges","startOffset","endOffset","count","used","keys","convertToDisjointRanges","nestedRanges","points","range","offset","type","sort","a","b","aLength","bLength","hitCountStack","results","lastOffset","point","length","lastResult","end","pop","filter"],"mappings":";;;;;;;AAkBA;;AAGA;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQO,MAAMA,UAAN,CAAiB;AAItBC,EAAAA,WAAW,CAACC,MAAD,EAAoB;AAAA,SAHvBC,WAGuB;AAAA,SAFvBC,YAEuB;AAC7B,SAAKD,WAAL,GAAmB,IAAIE,UAAJ,CAAeH,MAAf,CAAnB;AACA,SAAKE,YAAL,GAAoB,IAAIE,WAAJ,CAAgBJ,MAAhB,CAApB;AACD;;AAEoB,QAAfK,eAAe,CAACC,OAAD,EAAoC;AACvD,WAAO,MAAM,KAAKL,WAAL,CAAiBM,KAAjB,CAAuBD,OAAvB,CAAb;AACD;;AAEmB,QAAdE,cAAc,GAAqC;AACvD,WAAO,MAAM,KAAKP,WAAL,CAAiBQ,IAAjB,EAAb;AACD;;AAEqB,QAAhBC,gBAAgB,CAACJ,OAAD,EAAqC;AACzD,WAAO,MAAM,KAAKJ,YAAL,CAAkBK,KAAlB,CAAwBD,OAAxB,CAAb;AACD;;AAEoB,QAAfK,eAAe,GAAsC;AACzD,WAAO,MAAM,KAAKT,YAAL,CAAkBO,IAAlB,EAAb;AACD;;AAvBqB;;;;AA0BxB,MAAMN,UAAN,CAAiB;AASfJ,EAAAA,WAAW,CAACC,MAAD,EAAoB;AAAA,SAR/BY,OAQ+B;AAAA,SAP/BC,QAO+B;AAAA,SAN/BC,UAM+B;AAAA,SAL/BC,cAK+B;AAAA,SAJ/BC,eAI+B;AAAA,SAH/BC,kBAG+B;AAAA,SAF/BC,uBAE+B,GAFL,KAEK;AAC7B,SAAKN,OAAL,GAAeZ,MAAf;AACA,SAAKa,QAAL,GAAgB,KAAhB;AACA,SAAKC,UAAL,GAAkB,IAAIK,GAAJ,EAAlB;AACA,SAAKJ,cAAL,GAAsB,IAAIK,GAAJ,EAAtB;AACA,SAAKJ,eAAL,GAAuB,EAAvB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACD;;AAEU,QAALV,KAAK,CAACD,OAAgC,GAAG,EAApC,EAAwC;AACjD,uBAAO,CAAC,KAAKO,QAAb,EAAuB,+BAAvB;AACA,UAAM;AACJQ,MAAAA,iBAAiB,GAAG,IADhB;AAEJC,MAAAA,sBAAsB,GAAG;AAFrB,QAGFhB,OAHJ;AAIA,SAAKW,kBAAL,GAA0BI,iBAA1B;AACA,SAAKH,uBAAL,GAA+BI,sBAA/B;AACA,SAAKT,QAAL,GAAgB,IAAhB;;AACA,SAAKC,UAAL,CAAgBS,KAAhB;;AACA,SAAKR,cAAL,CAAoBQ,KAApB;;AACA,SAAKP,eAAL,GAAuB,CACrBQ,2BAAaC,gBAAb,CAA8B,KAAKb,OAAnC,EAA4C,uBAA5C,EAAqE,KAAKc,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAArE,CADqB,EAErBH,2BAAaC,gBAAb,CAA8B,KAAKb,OAAnC,EAA4C,kCAA5C,EAAgF,KAAKgB,2BAAL,CAAiCD,IAAjC,CAAsC,IAAtC,CAAhF,CAFqB,EAGrBH,2BAAaC,gBAAb,CAA8B,KAAKb,OAAnC,EAA4C,iBAA5C,EAA+D,KAAKiB,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAA/D,CAHqB,CAAvB;AAKA,UAAMG,OAAO,CAACC,GAAR,CAAY,CAChB,KAAKnB,OAAL,CAAaoB,IAAb,CAAkB,iBAAlB,CADgB,EAEhB,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,+BAAlB,EAAmD;AAAEC,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAnD,CAFgB,EAGhB,KAAKtB,OAAL,CAAaoB,IAAb,CAAkB,iBAAlB,CAHgB,EAIhB,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,2BAAlB,EAA+C;AAACG,MAAAA,IAAI,EAAE;AAAP,KAA/C,CAJgB,CAAZ,CAAN;AAMD;;AAEDN,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,OAAL,CAAaoB,IAAb,CAAkB,iBAAlB;AACD;;AAEDJ,EAAAA,2BAA2B,GAAG;AAC5B,QAAI,CAAC,KAAKX,kBAAV,EACE;;AACF,SAAKH,UAAL,CAAgBS,KAAhB;;AACA,SAAKR,cAAL,CAAoBQ,KAApB;AACD;;AAEoB,QAAfG,eAAe,CAACU,KAAD,EAA+C;AAClE,SAAKtB,UAAL,CAAgBuB,GAAhB,CAAoBD,KAAK,CAACE,QAA1B,EADkE,CAElE;;;AACA,QAAI,CAACF,KAAK,CAACG,GAAP,IAAc,CAAC,KAAKrB,uBAAxB,EACE,OAJgE,CAKlE;;AACA,UAAMsB,QAAQ,GAAG,MAAM,KAAK5B,OAAL,CAAa6B,YAAb,CAA0B,0BAA1B,EAAsD;AAACH,MAAAA,QAAQ,EAAEF,KAAK,CAACE;AAAjB,KAAtD,CAAvB;AACA,QAAIE,QAAJ,EACE,KAAKzB,cAAL,CAAoB2B,GAApB,CAAwBN,KAAK,CAACE,QAA9B,EAAwCE,QAAQ,CAACG,YAAjD;AACH;;AAES,QAAJlC,IAAI,GAAqC;AAC7C,uBAAO,KAAKI,QAAZ,EAAsB,2BAAtB;AACA,SAAKA,QAAL,GAAgB,KAAhB;AACA,UAAM,CAAC+B,eAAD,IAAoB,MAAMd,OAAO,CAACC,GAAR,CAAY,CAC1C,KAAKnB,OAAL,CAAaoB,IAAb,CAAkB,8BAAlB,CAD0C,EAE1C,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,8BAAlB,CAF0C,EAG1C,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,kBAAlB,CAH0C,EAI1C,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,kBAAlB,CAJ0C,CAAZ,CAAhC;;AAMAR,+BAAaqB,oBAAb,CAAkC,KAAK7B,eAAvC;;AAEA,UAAM8B,QAAiC,GAAG,EAA1C;;AACA,SAAK,MAAMC,KAAX,IAAoBH,eAAe,CAACI,MAApC,EAA4C;AAC1C,UAAI,CAAC,KAAKlC,UAAL,CAAgBmC,GAAhB,CAAoBF,KAAK,CAACT,QAA1B,CAAL,EACE;AACF,UAAI,CAACS,KAAK,CAACR,GAAP,IAAc,CAAC,KAAKrB,uBAAxB,EACE;;AACF,YAAMgC,MAAM,GAAG,KAAKnC,cAAL,CAAoBoC,GAApB,CAAwBJ,KAAK,CAACT,QAA9B,CAAf;;AACA,UAAIY,MAAJ,EACEJ,QAAQ,CAACM,IAAT,CAAc,EAAC,GAAGL,KAAJ;AAAWG,QAAAA;AAAX,OAAd,EADF,KAGEJ,QAAQ,CAACM,IAAT,CAAcL,KAAd;AACH;;AACD,WAAOD,QAAP;AACD;;AAxFc;;AA2FjB,MAAM1C,WAAN,CAAkB;AAQhBL,EAAAA,WAAW,CAACC,MAAD,EAAoB;AAAA,SAP/BY,OAO+B;AAAA,SAN/BC,QAM+B;AAAA,SAL/BwC,eAK+B;AAAA,SAJ/BC,kBAI+B;AAAA,SAH/BtC,eAG+B;AAAA,SAF/BC,kBAE+B;AAC7B,SAAKL,OAAL,GAAeZ,MAAf;AACA,SAAKa,QAAL,GAAgB,KAAhB;AACA,SAAKwC,eAAL,GAAuB,IAAIjC,GAAJ,EAAvB;AACA,SAAKkC,kBAAL,GAA0B,IAAIlC,GAAJ,EAA1B;AACA,SAAKJ,eAAL,GAAuB,EAAvB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACD;;AAEU,QAALV,KAAK,CAACD,OAAiC,GAAG,EAArC,EAAyC;AAClD,uBAAO,CAAC,KAAKO,QAAb,EAAuB,gCAAvB;AACA,UAAM;AAACQ,MAAAA,iBAAiB,GAAG;AAArB,QAA6Bf,OAAnC;AACA,SAAKW,kBAAL,GAA0BI,iBAA1B;AACA,SAAKR,QAAL,GAAgB,IAAhB;;AACA,SAAKwC,eAAL,CAAqB9B,KAArB;;AACA,SAAK+B,kBAAL,CAAwB/B,KAAxB;;AACA,SAAKP,eAAL,GAAuB,CACrBQ,2BAAaC,gBAAb,CAA8B,KAAKb,OAAnC,EAA4C,qBAA5C,EAAmE,KAAK2C,aAAL,CAAmB5B,IAAnB,CAAwB,IAAxB,CAAnE,CADqB,EAErBH,2BAAaC,gBAAb,CAA8B,KAAKb,OAAnC,EAA4C,kCAA5C,EAAgF,KAAKgB,2BAAL,CAAiCD,IAAjC,CAAsC,IAAtC,CAAhF,CAFqB,CAAvB;AAIA,UAAMG,OAAO,CAACC,GAAR,CAAY,CAChB,KAAKnB,OAAL,CAAaoB,IAAb,CAAkB,YAAlB,CADgB,EAEhB,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,YAAlB,CAFgB,EAGhB,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,4BAAlB,CAHgB,CAAZ,CAAN;AAKD;;AAEDJ,EAAAA,2BAA2B,GAAG;AAC5B,QAAI,CAAC,KAAKX,kBAAV,EACE;;AACF,SAAKoC,eAAL,CAAqB9B,KAArB;;AACA,SAAK+B,kBAAL,CAAwB/B,KAAxB;AACD;;AAEkB,QAAbgC,aAAa,CAACnB,KAAD,EAA6C;AAC9D,UAAMoB,MAAM,GAAGpB,KAAK,CAACoB,MAArB,CAD8D,CAE9D;;AACA,QAAI,CAACA,MAAM,CAACC,SAAZ,EACE,OAJ4D,CAK9D;;AACA,UAAMjB,QAAQ,GAAG,MAAM,KAAK5B,OAAL,CAAa6B,YAAb,CAA0B,uBAA1B,EAAmD;AAACiB,MAAAA,YAAY,EAAEF,MAAM,CAACE;AAAtB,KAAnD,CAAvB;;AACA,QAAIlB,QAAJ,EAAc;AACZ,WAAKa,eAAL,CAAqBX,GAArB,CAAyBc,MAAM,CAACE,YAAhC,EAA8CF,MAAM,CAACC,SAArD;;AACA,WAAKH,kBAAL,CAAwBZ,GAAxB,CAA4Bc,MAAM,CAACE,YAAnC,EAAiDlB,QAAQ,CAACmB,IAA1D;AACD;AACF;;AAES,QAAJlD,IAAI,GAAsC;AAC9C,uBAAO,KAAKI,QAAZ,EAAsB,4BAAtB;AACA,SAAKA,QAAL,GAAgB,KAAhB;AACA,UAAM+C,oBAAoB,GAAG,MAAM,KAAKhD,OAAL,CAAaoB,IAAb,CAAkB,2BAAlB,CAAnC;AACA,UAAMF,OAAO,CAACC,GAAR,CAAY,CAChB,KAAKnB,OAAL,CAAaoB,IAAb,CAAkB,aAAlB,CADgB,EAEhB,KAAKpB,OAAL,CAAaoB,IAAb,CAAkB,aAAlB,CAFgB,CAAZ,CAAN;;AAIAR,+BAAaqB,oBAAb,CAAkC,KAAK7B,eAAvC,EAR8C,CAU9C;;;AACA,UAAM6C,sBAAsB,GAAG,IAAIzC,GAAJ,EAA/B;;AACA,SAAK,MAAM2B,KAAX,IAAoBa,oBAAoB,CAACE,SAAzC,EAAoD;AAClD,UAAIC,MAAM,GAAGF,sBAAsB,CAACV,GAAvB,CAA2BJ,KAAK,CAACW,YAAjC,CAAb;;AACA,UAAI,CAACK,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAG,EAAT;AACAF,QAAAA,sBAAsB,CAACnB,GAAvB,CAA2BK,KAAK,CAACW,YAAjC,EAA+CK,MAA/C;AACD;;AACDA,MAAAA,MAAM,CAACX,IAAP,CAAY;AACVY,QAAAA,WAAW,EAAEjB,KAAK,CAACiB,WADT;AAEVC,QAAAA,SAAS,EAAElB,KAAK,CAACkB,SAFP;AAGVC,QAAAA,KAAK,EAAEnB,KAAK,CAACoB,IAAN,GAAa,CAAb,GAAiB;AAHd,OAAZ;AAKD;;AAED,UAAMrB,QAAkC,GAAG,EAA3C;;AACA,SAAK,MAAMY,YAAX,IAA2B,KAAKL,eAAL,CAAqBe,IAArB,EAA3B,EAAwD;AACtD,YAAM7B,GAAG,GAAG,KAAKc,eAAL,CAAqBF,GAArB,CAAyBO,YAAzB,CAAZ;;AACA,YAAMC,IAAI,GAAG,KAAKL,kBAAL,CAAwBH,GAAxB,CAA4BO,YAA5B,CAAb;;AACA,YAAMK,MAAM,GAAGM,uBAAuB,CAACR,sBAAsB,CAACV,GAAvB,CAA2BO,YAA3B,KAA4C,EAA7C,CAAtC;AACAZ,MAAAA,QAAQ,CAACM,IAAT,CAAc;AAAEb,QAAAA,GAAF;AAAOwB,QAAAA,MAAP;AAAeJ,QAAAA;AAAf,OAAd;AACD;;AAED,WAAOb,QAAP;AACD;;AAzFe;;AA4FlB,SAASuB,uBAAT,CAAiCC,YAAjC,EAG2D;AACzD,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,MAAMC,KAAX,IAAoBF,YAApB,EAAkC;AAChCC,IAAAA,MAAM,CAACnB,IAAP,CAAY;AAAEqB,MAAAA,MAAM,EAAED,KAAK,CAACR,WAAhB;AAA6BU,MAAAA,IAAI,EAAE,CAAnC;AAAsCF,MAAAA;AAAtC,KAAZ;AACAD,IAAAA,MAAM,CAACnB,IAAP,CAAY;AAAEqB,MAAAA,MAAM,EAAED,KAAK,CAACP,SAAhB;AAA2BS,MAAAA,IAAI,EAAE,CAAjC;AAAoCF,MAAAA;AAApC,KAAZ;AACD,GALwD,CAMzD;;;AACAD,EAAAA,MAAM,CAACI,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB;AACA,QAAID,CAAC,CAACH,MAAF,KAAaI,CAAC,CAACJ,MAAnB,EACE,OAAOG,CAAC,CAACH,MAAF,GAAWI,CAAC,CAACJ,MAApB,CAHkB,CAIpB;;AACA,QAAIG,CAAC,CAACF,IAAF,KAAWG,CAAC,CAACH,IAAjB,EACE,OAAOG,CAAC,CAACH,IAAF,GAASE,CAAC,CAACF,IAAlB;AACF,UAAMI,OAAO,GAAGF,CAAC,CAACJ,KAAF,CAAQP,SAAR,GAAoBW,CAAC,CAACJ,KAAF,CAAQR,WAA5C;AACA,UAAMe,OAAO,GAAGF,CAAC,CAACL,KAAF,CAAQP,SAAR,GAAoBY,CAAC,CAACL,KAAF,CAAQR,WAA5C,CARoB,CASpB;;AACA,QAAIY,CAAC,CAACF,IAAF,KAAW,CAAf,EACE,OAAOK,OAAO,GAAGD,OAAjB,CAXkB,CAYpB;;AACA,WAAOA,OAAO,GAAGC,OAAjB;AACD,GAdD;AAgBA,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,OAA0C,GAAG,EAAnD;AACA,MAAIC,UAAU,GAAG,CAAjB,CAzByD,CA0BzD;;AACA,OAAK,MAAMC,KAAX,IAAoBZ,MAApB,EAA4B;AAC1B,QAAIS,aAAa,CAACI,MAAd,IAAwBF,UAAU,GAAGC,KAAK,CAACV,MAA3C,IAAqDO,aAAa,CAACA,aAAa,CAACI,MAAd,GAAuB,CAAxB,CAAb,GAA0C,CAAnG,EAAsG;AACpG,YAAMC,UAAU,GAAGJ,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAxB,GAA+C,IAAlE;AACA,UAAIC,UAAU,IAAIA,UAAU,CAACC,GAAX,KAAmBJ,UAArC,EACEG,UAAU,CAACC,GAAX,GAAiBH,KAAK,CAACV,MAAvB,CADF,KAGEQ,OAAO,CAAC7B,IAAR,CAAa;AAAC7C,QAAAA,KAAK,EAAE2E,UAAR;AAAoBI,QAAAA,GAAG,EAAEH,KAAK,CAACV;AAA/B,OAAb;AACH;;AACDS,IAAAA,UAAU,GAAGC,KAAK,CAACV,MAAnB;AACA,QAAIU,KAAK,CAACT,IAAN,KAAe,CAAnB,EACEM,aAAa,CAAC5B,IAAd,CAAmB+B,KAAK,CAACX,KAAN,CAAYN,KAA/B,EADF,KAGEc,aAAa,CAACO,GAAd;AACH,GAxCwD,CAyCzD;;;AACA,SAAON,OAAO,CAACO,MAAR,CAAehB,KAAK,IAAIA,KAAK,CAACc,GAAN,GAAYd,KAAK,CAACjE,KAAlB,GAA0B,CAAlD,CAAP;AACD","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CRSession } from './crConnection';\nimport { eventsHelper, RegisteredListener } from '../../utils/eventsHelper';\nimport { Protocol } from './protocol';\nimport * as types from '../types';\nimport { assert } from '../../utils/utils';\n\nexport class CRCoverage {\n  private _jsCoverage: JSCoverage;\n  private _cssCoverage: CSSCoverage;\n\n  constructor(client: CRSession) {\n    this._jsCoverage = new JSCoverage(client);\n    this._cssCoverage = new CSSCoverage(client);\n  }\n\n  async startJSCoverage(options?: types.JSCoverageOptions) {\n    return await this._jsCoverage.start(options);\n  }\n\n  async stopJSCoverage(): Promise<types.JSCoverageEntry[]> {\n    return await this._jsCoverage.stop();\n  }\n\n  async startCSSCoverage(options?: types.CSSCoverageOptions) {\n    return await this._cssCoverage.start(options);\n  }\n\n  async stopCSSCoverage(): Promise<types.CSSCoverageEntry[]> {\n    return await this._cssCoverage.stop();\n  }\n}\n\nclass JSCoverage {\n  _client: CRSession;\n  _enabled: boolean;\n  _scriptIds: Set<string>;\n  _scriptSources: Map<string, string>;\n  _eventListeners: RegisteredListener[];\n  _resetOnNavigation: boolean;\n  _reportAnonymousScripts = false;\n\n  constructor(client: CRSession) {\n    this._client = client;\n    this._enabled = false;\n    this._scriptIds = new Set();\n    this._scriptSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n  }\n\n  async start(options: types.JSCoverageOptions = {}) {\n    assert(!this._enabled, 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false\n    } = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._reportAnonymousScripts = reportAnonymousScripts;\n    this._enabled = true;\n    this._scriptIds.clear();\n    this._scriptSources.clear();\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._client, 'Debugger.scriptParsed', this._onScriptParsed.bind(this)),\n      eventsHelper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n      eventsHelper.addEventListener(this._client, 'Debugger.paused', this._onDebuggerPaused.bind(this)),\n    ];\n    await Promise.all([\n      this._client.send('Profiler.enable'),\n      this._client.send('Profiler.startPreciseCoverage', { callCount: true, detailed: true }),\n      this._client.send('Debugger.enable'),\n      this._client.send('Debugger.setSkipAllPauses', {skip: true})\n    ]);\n  }\n\n  _onDebuggerPaused() {\n    this._client.send('Debugger.resume');\n  }\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation)\n      return;\n    this._scriptIds.clear();\n    this._scriptSources.clear();\n  }\n\n  async _onScriptParsed(event: Protocol.Debugger.scriptParsedPayload) {\n    this._scriptIds.add(event.scriptId);\n    // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n    if (!event.url && !this._reportAnonymousScripts)\n      return;\n    // This might fail if the page has already navigated away.\n    const response = await this._client._sendMayFail('Debugger.getScriptSource', {scriptId: event.scriptId});\n    if (response)\n      this._scriptSources.set(event.scriptId, response.scriptSource);\n  }\n\n  async stop(): Promise<types.JSCoverageEntry[]> {\n    assert(this._enabled, 'JSCoverage is not enabled');\n    this._enabled = false;\n    const [profileResponse] = await Promise.all([\n      this._client.send('Profiler.takePreciseCoverage'),\n      this._client.send('Profiler.stopPreciseCoverage'),\n      this._client.send('Profiler.disable'),\n      this._client.send('Debugger.disable'),\n    ] as const);\n    eventsHelper.removeEventListeners(this._eventListeners);\n\n    const coverage: types.JSCoverageEntry[] = [];\n    for (const entry of profileResponse.result) {\n      if (!this._scriptIds.has(entry.scriptId))\n        continue;\n      if (!entry.url && !this._reportAnonymousScripts)\n        continue;\n      const source = this._scriptSources.get(entry.scriptId);\n      if (source)\n        coverage.push({...entry, source});\n      else\n        coverage.push(entry);\n    }\n    return coverage;\n  }\n}\n\nclass CSSCoverage {\n  _client: CRSession;\n  _enabled: boolean;\n  _stylesheetURLs: Map<string, string>;\n  _stylesheetSources: Map<string, string>;\n  _eventListeners: RegisteredListener[];\n  _resetOnNavigation: boolean;\n\n  constructor(client: CRSession) {\n    this._client = client;\n    this._enabled = false;\n    this._stylesheetURLs = new Map();\n    this._stylesheetSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n  }\n\n  async start(options: types.CSSCoverageOptions = {}) {\n    assert(!this._enabled, 'CSSCoverage is already enabled');\n    const {resetOnNavigation = true} = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._enabled = true;\n    this._stylesheetURLs.clear();\n    this._stylesheetSources.clear();\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._client, 'CSS.styleSheetAdded', this._onStyleSheet.bind(this)),\n      eventsHelper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n    ];\n    await Promise.all([\n      this._client.send('DOM.enable'),\n      this._client.send('CSS.enable'),\n      this._client.send('CSS.startRuleUsageTracking'),\n    ]);\n  }\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation)\n      return;\n    this._stylesheetURLs.clear();\n    this._stylesheetSources.clear();\n  }\n\n  async _onStyleSheet(event: Protocol.CSS.styleSheetAddedPayload) {\n    const header = event.header;\n    // Ignore anonymous scripts\n    if (!header.sourceURL)\n      return;\n    // This might fail if the page has already navigated away.\n    const response = await this._client._sendMayFail('CSS.getStyleSheetText', {styleSheetId: header.styleSheetId});\n    if (response) {\n      this._stylesheetURLs.set(header.styleSheetId, header.sourceURL);\n      this._stylesheetSources.set(header.styleSheetId, response.text);\n    }\n  }\n\n  async stop(): Promise<types.CSSCoverageEntry[]> {\n    assert(this._enabled, 'CSSCoverage is not enabled');\n    this._enabled = false;\n    const ruleTrackingResponse = await this._client.send('CSS.stopRuleUsageTracking');\n    await Promise.all([\n      this._client.send('CSS.disable'),\n      this._client.send('DOM.disable'),\n    ]);\n    eventsHelper.removeEventListeners(this._eventListeners);\n\n    // aggregate by styleSheetId\n    const styleSheetIdToCoverage = new Map();\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0,\n      });\n    }\n\n    const coverage: types.CSSCoverageEntry[] = [];\n    for (const styleSheetId of this._stylesheetURLs.keys()) {\n      const url = this._stylesheetURLs.get(styleSheetId)!;\n      const text = this._stylesheetSources.get(styleSheetId)!;\n      const ranges = convertToDisjointRanges(styleSheetIdToCoverage.get(styleSheetId) || []);\n      coverage.push({ url, ranges, text });\n    }\n\n    return coverage;\n  }\n}\n\nfunction convertToDisjointRanges(nestedRanges: {\n    startOffset: number;\n    endOffset: number;\n    count: number; }[]): { start: number; end: number; }[] {\n  const points = [];\n  for (const range of nestedRanges) {\n    points.push({ offset: range.startOffset, type: 0, range });\n    points.push({ offset: range.endOffset, type: 1, range });\n  }\n  // Sort points to form a valid parenthesis sequence.\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset)\n      return a.offset - b.offset;\n    // All \"end\" points should go before \"start\" points.\n    if (a.type !== b.type)\n      return b.type - a.type;\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset;\n    // For two \"start\" points, the one with longer range goes first.\n    if (a.type === 0)\n      return bLength - aLength;\n    // For two \"end\" points, the one with shorter range goes first.\n    return aLength - bLength;\n  });\n\n  const hitCountStack = [];\n  const results: { start: number; end: number; }[] = [];\n  let lastOffset = 0;\n  // Run scanning line to intersect all ranges.\n  for (const point of points) {\n    if (hitCountStack.length && lastOffset < point.offset && hitCountStack[hitCountStack.length - 1] > 0) {\n      const lastResult = results.length ? results[results.length - 1] : null;\n      if (lastResult && lastResult.end === lastOffset)\n        lastResult.end = point.offset;\n      else\n        results.push({start: lastOffset, end: point.offset});\n    }\n    lastOffset = point.offset;\n    if (point.type === 0)\n      hitCountStack.push(point.range.count);\n    else\n      hitCountStack.pop();\n  }\n  // Filter out empty ranges.\n  return results.filter(range => range.end - range.start > 1);\n}\n"],"file":"crCoverage.js"}