{"version":3,"sources":["../../../src/server/webkit/wkBrowser.ts"],"names":["DEFAULT_USER_AGENT","BROWSER_VERSION","WKBrowser","Browser","connect","transport","options","browser","__testHookOnConnectToBrowser","promises","_browserSession","send","persistent","_defaultContext","WKBrowserContext","undefined","push","_initialize","Promise","all","constructor","_connection","_contexts","Map","_wkPages","_eventListeners","WKConnection","_onDisconnect","bind","protocolLogger","browserLogsCollector","browserSession","eventsHelper","addEventListener","_onPageProxyCreated","_onPageProxyDestroyed","event","_onProvisionalLoadFailed","_onWindowOpen","_onDownloadCreated","_onDownloadFilenameSuggested","_onDownloadFinished","_onScreencastFinished","kPageProxyMessageReceived","_onPageProxyMessageReceived","wkPage","values","dispose","video","_idToVideo","artifact","reportFinished","kBrowserClosedError","clear","_didClose","newContext","createOptions","proxy","proxyServer","server","proxyBypassList","bypass","browserContextId","userAgent","context","set","contexts","Array","from","version","payload","page","get","pageProxyId","_page","_frameManager","frameAbortedNavigation","frameId","originPage","_initializedPage","_firstNonInitialNavigationCommittedReject","Error","_opener","_downloadCreated","uuid","url","_downloadFilenameSuggested","suggestedFilename","_downloadFinished","error","_takeVideo","screencastId","pageProxySession","WKSession","message","rawSend","opener","openerId","WKPage","didClose","delete","dispatchMessageToSession","handleProvisionalLoadFailed","handleWindowOpen","isConnected","isClosed","BrowserContext","_evaluateOnNewDocumentSources","_authenticateProxyViaHeader","length","_browserContextId","_browser","behavior","_options","acceptDownloads","downloadPath","downloadsPath","ignoreHTTPSErrors","ignore","locale","languages","permissions","grantPermissions","geolocation","setGeolocation","offline","setOffline","httpCredentials","setHTTPCredentials","filter","_browserContext","pages","map","pageOrNull","newPageDelegate","_doCookies","urls","cookies","network","filterCookies","c","copy","expires","session","addCookies","cc","rewriteCookies","clearCookies","_doGrantPermissions","origin","_delegate","_grantPermissions","_doClearPermissions","_clearPermissions","timestamp","Date","now","setExtraHTTPHeaders","headers","extraHTTPHeaders","updateExtraHTTPHeaders","updateOffline","_doSetHTTPCredentials","updateHttpCredentials","_doAddInitScript","source","_updateBootstrapScript","_doExposeBinding","binding","exposeBinding","_doUpdateRequestInterception","updateRequestInterception","_onClosePersistent","_doClose","_doCancelDownload"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Browser, BrowserOptions } from '../browser';\nimport { assertBrowserContextIsNotOwned, BrowserContext, validateBrowserContextOptions, verifyGeolocation } from '../browserContext';\nimport { eventsHelper, RegisteredListener } from '../../utils/eventsHelper';\nimport { assert } from '../../utils/utils';\nimport * as network from '../network';\nimport { Page, PageBinding, PageDelegate } from '../page';\nimport { ConnectionTransport } from '../transport';\nimport * as types from '../types';\nimport { Protocol } from './protocol';\nimport { kPageProxyMessageReceived, PageProxyMessageReceivedPayload, WKConnection, WKSession } from './wkConnection';\nimport { WKPage } from './wkPage';\nimport { kBrowserClosedError } from '../../utils/errors';\n\nconst DEFAULT_USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.0 Safari/605.1.15';\nconst BROWSER_VERSION = '15.0';\n\nexport class WKBrowser extends Browser {\n  private readonly _connection: WKConnection;\n  readonly _browserSession: WKSession;\n  readonly _contexts = new Map<string, WKBrowserContext>();\n  readonly _wkPages = new Map<string, WKPage>();\n  private readonly _eventListeners: RegisteredListener[];\n\n  static async connect(transport: ConnectionTransport, options: BrowserOptions): Promise<WKBrowser> {\n    const browser = new WKBrowser(transport, options);\n    if ((options as any).__testHookOnConnectToBrowser)\n      await (options as any).__testHookOnConnectToBrowser();\n    const promises: Promise<any>[] = [\n      browser._browserSession.send('Playwright.enable'),\n    ];\n    if (options.persistent) {\n      browser._defaultContext = new WKBrowserContext(browser, undefined, options.persistent);\n      promises.push((browser._defaultContext as WKBrowserContext)._initialize());\n    }\n    await Promise.all(promises);\n    return browser;\n  }\n\n  constructor(transport: ConnectionTransport, options: BrowserOptions) {\n    super(options);\n    this._connection = new WKConnection(transport, this._onDisconnect.bind(this), options.protocolLogger, options.browserLogsCollector);\n    this._browserSession = this._connection.browserSession;\n    this._eventListeners = [\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.pageProxyCreated', this._onPageProxyCreated.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.pageProxyDestroyed', this._onPageProxyDestroyed.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.provisionalLoadFailed', event => this._onProvisionalLoadFailed(event)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.windowOpen', event => this._onWindowOpen(event)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.downloadCreated', this._onDownloadCreated.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.downloadFilenameSuggested', this._onDownloadFilenameSuggested.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.downloadFinished', this._onDownloadFinished.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, 'Playwright.screencastFinished', this._onScreencastFinished.bind(this)),\n      eventsHelper.addEventListener(this._browserSession, kPageProxyMessageReceived, this._onPageProxyMessageReceived.bind(this)),\n    ];\n  }\n\n  _onDisconnect() {\n    for (const wkPage of this._wkPages.values())\n      wkPage.dispose(true);\n    for (const video of this._idToVideo.values())\n      video.artifact.reportFinished(kBrowserClosedError);\n    this._idToVideo.clear();\n    this._didClose();\n  }\n\n  async newContext(options: types.BrowserContextOptions): Promise<BrowserContext> {\n    validateBrowserContextOptions(options, this.options);\n    const createOptions = options.proxy ? {\n      proxyServer: options.proxy.server,\n      proxyBypassList: options.proxy.bypass\n    } : undefined;\n    const { browserContextId } = await this._browserSession.send('Playwright.createContext', createOptions);\n    options.userAgent = options.userAgent || DEFAULT_USER_AGENT;\n    const context = new WKBrowserContext(this, browserContextId, options);\n    await context._initialize();\n    this._contexts.set(browserContextId, context);\n    return context;\n  }\n\n  contexts(): BrowserContext[] {\n    return Array.from(this._contexts.values());\n  }\n\n  version(): string {\n    return BROWSER_VERSION;\n  }\n\n  _onDownloadCreated(payload: Protocol.Playwright.downloadCreatedPayload) {\n    const page = this._wkPages.get(payload.pageProxyId);\n    if (!page)\n      return;\n    // In some cases, e.g. blob url download, we receive only frameScheduledNavigation\n    // but no signals that the navigation was canceled and replaced by download. Fix it\n    // here by simulating cancelled provisional load which matches downloads from network.\n    //\n    // TODO: this is racy, because download might be unrelated any navigation, and we will\n    // abort navgitation that is still running. We should be able to fix this by\n    // instrumenting policy decision start/proceed/cancel.\n    page._page._frameManager.frameAbortedNavigation(payload.frameId, 'Download is starting');\n    let originPage = page._initializedPage;\n    // If it's a new window download, report it on the opener page.\n    if (!originPage) {\n      // Resume the page creation with an error. The page will automatically close right\n      // after the download begins.\n      page._firstNonInitialNavigationCommittedReject(new Error('Starting new page download'));\n      if (page._opener)\n        originPage = page._opener._initializedPage;\n    }\n    if (!originPage)\n      return;\n    this._downloadCreated(originPage, payload.uuid, payload.url);\n  }\n\n  _onDownloadFilenameSuggested(payload: Protocol.Playwright.downloadFilenameSuggestedPayload) {\n    this._downloadFilenameSuggested(payload.uuid, payload.suggestedFilename);\n  }\n\n  _onDownloadFinished(payload: Protocol.Playwright.downloadFinishedPayload) {\n    this._downloadFinished(payload.uuid, payload.error);\n  }\n\n  _onScreencastFinished(payload: Protocol.Playwright.screencastFinishedPayload) {\n    this._takeVideo(payload.screencastId)?.reportFinished();\n  }\n\n  _onPageProxyCreated(event: Protocol.Playwright.pageProxyCreatedPayload) {\n    const pageProxyId = event.pageProxyId;\n    let context: WKBrowserContext | null = null;\n    if (event.browserContextId) {\n      // FIXME: we don't know about the default context id, so assume that all targets from\n      // unknown contexts are created in the 'default' context which can in practice be represented\n      // by multiple actual contexts in WebKit. Solving this properly will require adding context\n      // lifecycle events.\n      context = this._contexts.get(event.browserContextId) || null;\n    }\n    if (!context)\n      context = this._defaultContext as WKBrowserContext;\n    if (!context)\n      return;\n    const pageProxySession = new WKSession(this._connection, pageProxyId, `The page has been closed.`, (message: any) => {\n      this._connection.rawSend({ ...message, pageProxyId });\n    });\n    const opener = event.openerId ? this._wkPages.get(event.openerId) : undefined;\n    const wkPage = new WKPage(context, pageProxySession, opener || null);\n    this._wkPages.set(pageProxyId, wkPage);\n  }\n\n  _onPageProxyDestroyed(event: Protocol.Playwright.pageProxyDestroyedPayload) {\n    const pageProxyId = event.pageProxyId;\n    const wkPage = this._wkPages.get(pageProxyId);\n    if (!wkPage)\n      return;\n    wkPage.didClose();\n    wkPage.dispose(false);\n    this._wkPages.delete(pageProxyId);\n  }\n\n  _onPageProxyMessageReceived(event: PageProxyMessageReceivedPayload) {\n    const wkPage = this._wkPages.get(event.pageProxyId);\n    if (!wkPage)\n      return;\n    wkPage.dispatchMessageToSession(event.message);\n  }\n\n  _onProvisionalLoadFailed(event: Protocol.Playwright.provisionalLoadFailedPayload) {\n    const wkPage = this._wkPages.get(event.pageProxyId);\n    if (!wkPage)\n      return;\n    wkPage.handleProvisionalLoadFailed(event);\n  }\n\n  _onWindowOpen(event: Protocol.Playwright.windowOpenPayload) {\n    const wkPage = this._wkPages.get(event.pageProxyId);\n    if (!wkPage)\n      return;\n    wkPage.handleWindowOpen(event);\n  }\n\n  isConnected(): boolean {\n    return !this._connection.isClosed();\n  }\n}\n\nexport class WKBrowserContext extends BrowserContext {\n  declare readonly _browser: WKBrowser;\n  readonly _evaluateOnNewDocumentSources: string[];\n\n  constructor(browser: WKBrowser, browserContextId: string | undefined, options: types.BrowserContextOptions) {\n    super(browser, options, browserContextId);\n    this._evaluateOnNewDocumentSources = [];\n    this._authenticateProxyViaHeader();\n  }\n\n  async _initialize() {\n    assert(!this._wkPages().length);\n    const browserContextId = this._browserContextId;\n    const promises: Promise<any>[] = [ super._initialize() ];\n    promises.push(this._browser._browserSession.send('Playwright.setDownloadBehavior', {\n      behavior: this._options.acceptDownloads ? 'allow' : 'deny',\n      downloadPath: this._browser.options.downloadsPath,\n      browserContextId\n    }));\n    if (this._options.ignoreHTTPSErrors)\n      promises.push(this._browser._browserSession.send('Playwright.setIgnoreCertificateErrors', { browserContextId, ignore: true }));\n    if (this._options.locale)\n      promises.push(this._browser._browserSession.send('Playwright.setLanguages', { browserContextId, languages: [this._options.locale] }));\n    if (this._options.permissions)\n      promises.push(this.grantPermissions(this._options.permissions));\n    if (this._options.geolocation)\n      promises.push(this.setGeolocation(this._options.geolocation));\n    if (this._options.offline)\n      promises.push(this.setOffline(this._options.offline));\n    if (this._options.httpCredentials)\n      promises.push(this.setHTTPCredentials(this._options.httpCredentials));\n    await Promise.all(promises);\n  }\n\n  _wkPages(): WKPage[] {\n    return Array.from(this._browser._wkPages.values()).filter(wkPage => wkPage._browserContext === this);\n  }\n\n  pages(): Page[] {\n    return this._wkPages().map(wkPage => wkPage._initializedPage).filter(pageOrNull => !!pageOrNull) as Page[];\n  }\n\n  async newPageDelegate(): Promise<PageDelegate> {\n    assertBrowserContextIsNotOwned(this);\n    const { pageProxyId } = await this._browser._browserSession.send('Playwright.createPage', { browserContextId: this._browserContextId });\n    return this._browser._wkPages.get(pageProxyId)!;\n  }\n\n  async _doCookies(urls: string[]): Promise<types.NetworkCookie[]> {\n    const { cookies } = await this._browser._browserSession.send('Playwright.getAllCookies', { browserContextId: this._browserContextId });\n    return network.filterCookies(cookies.map((c: types.NetworkCookie) => {\n      const copy: any = { ... c };\n      copy.expires = c.expires === -1 ? -1 : c.expires / 1000;\n      delete copy.session;\n      return copy as types.NetworkCookie;\n    }), urls);\n  }\n\n  async addCookies(cookies: types.SetNetworkCookieParam[]) {\n    const cc = network.rewriteCookies(cookies).map(c => ({\n      ...c,\n      session: c.expires === -1 || c.expires === undefined,\n      expires: c.expires && c.expires !== -1 ? c.expires * 1000 : c.expires\n    })) as Protocol.Playwright.SetCookieParam[];\n    await this._browser._browserSession.send('Playwright.setCookies', { cookies: cc, browserContextId: this._browserContextId });\n  }\n\n  async clearCookies() {\n    await this._browser._browserSession.send('Playwright.deleteAllCookies', { browserContextId: this._browserContextId });\n  }\n\n  async _doGrantPermissions(origin: string, permissions: string[]) {\n    await Promise.all(this.pages().map(page => (page._delegate as WKPage)._grantPermissions(origin, permissions)));\n  }\n\n  async _doClearPermissions() {\n    await Promise.all(this.pages().map(page => (page._delegate as WKPage)._clearPermissions()));\n  }\n\n  async setGeolocation(geolocation?: types.Geolocation): Promise<void> {\n    verifyGeolocation(geolocation);\n    this._options.geolocation = geolocation;\n    const payload: any = geolocation ? { ...geolocation, timestamp: Date.now() } : undefined;\n    await this._browser._browserSession.send('Playwright.setGeolocationOverride', { browserContextId: this._browserContextId, geolocation: payload });\n  }\n\n  async setExtraHTTPHeaders(headers: types.HeadersArray): Promise<void> {\n    this._options.extraHTTPHeaders = headers;\n    for (const page of this.pages())\n      await (page._delegate as WKPage).updateExtraHTTPHeaders();\n  }\n\n  async setOffline(offline: boolean): Promise<void> {\n    this._options.offline = offline;\n    for (const page of this.pages())\n      await (page._delegate as WKPage).updateOffline();\n  }\n\n  async _doSetHTTPCredentials(httpCredentials?: types.Credentials): Promise<void> {\n    this._options.httpCredentials = httpCredentials;\n    for (const page of this.pages())\n      await (page._delegate as WKPage).updateHttpCredentials();\n  }\n\n  async _doAddInitScript(source: string) {\n    this._evaluateOnNewDocumentSources.push(source);\n    for (const page of this.pages())\n      await (page._delegate as WKPage)._updateBootstrapScript('main');\n  }\n\n  async _doExposeBinding(binding: PageBinding) {\n    for (const page of this.pages())\n      await (page._delegate as WKPage).exposeBinding(binding);\n  }\n\n  async _doUpdateRequestInterception(): Promise<void> {\n    for (const page of this.pages())\n      await (page._delegate as WKPage).updateRequestInterception();\n  }\n\n  _onClosePersistent() {}\n\n  async _doClose() {\n    assert(this._browserContextId);\n    await this._browser._browserSession.send('Playwright.deleteContext', { browserContextId: this._browserContextId });\n    this._browser._contexts.delete(this._browserContextId);\n  }\n\n  async _doCancelDownload(uuid: string) {\n    await this._browser._browserSession.send('Playwright.cancelDownload', { uuid });\n  }\n}\n"],"file":"wkBrowser.js"}