{"version":3,"sources":["../../../src/server/webkit/wkInput.ts"],"names":["toModifiersMask","modifiers","mask","has","toButtonsMask","buttons","RawKeyboardImpl","constructor","session","_pageProxySession","_session","setSession","keydown","code","keyCode","keyCodeWithoutLocation","key","location","autoRepeat","text","parts","modifier","push","shortcut","join","commands","macEditingCommands","send","type","windowsVirtualKeyCode","unmodifiedText","macCommands","isKeypad","input","keypadLocation","keyup","sendText","RawMouseImpl","move","x","y","button","down","clickCount","up","RawTouchscreenImpl","tap"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as input from '../input';\nimport * as types from '../types';\nimport { macEditingCommands } from '../macEditingCommands';\nimport { WKSession } from './wkConnection';\nimport { isString } from '../../utils/utils';\n\nfunction toModifiersMask(modifiers: Set<types.KeyboardModifier>): number {\n  // From Source/WebKit/Shared/WebEvent.h\n  let mask = 0;\n  if (modifiers.has('Shift'))\n    mask |= 1;\n  if (modifiers.has('Control'))\n    mask |= 2;\n  if (modifiers.has('Alt'))\n    mask |= 4;\n  if (modifiers.has('Meta'))\n    mask |= 8;\n  return mask;\n}\n\nfunction toButtonsMask(buttons: Set<types.MouseButton>): number {\n  let mask = 0;\n  if (buttons.has('left'))\n    mask |= 1;\n  if (buttons.has('middle'))\n    mask |= 2;\n  if (buttons.has('right'))\n    mask |= 4;\n  return mask;\n}\n\nexport class RawKeyboardImpl implements input.RawKeyboard {\n  private readonly _pageProxySession: WKSession;\n  private _session?: WKSession;\n\n  constructor(session: WKSession) {\n    this._pageProxySession = session;\n  }\n\n  setSession(session: WKSession) {\n    this._session = session;\n  }\n\n  async keydown(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number, autoRepeat: boolean, text: string | undefined): Promise<void> {\n    const parts = [];\n    for (const modifier of (['Shift', 'Control', 'Alt', 'Meta']) as types.KeyboardModifier[]) {\n      if (modifiers.has(modifier))\n        parts.push(modifier);\n    }\n    parts.push(code);\n    const shortcut = parts.join('+');\n    let commands = macEditingCommands[shortcut];\n    if (isString(commands))\n      commands = [commands];\n    await this._pageProxySession.send('Input.dispatchKeyEvent', {\n      type: 'keyDown',\n      modifiers: toModifiersMask(modifiers),\n      windowsVirtualKeyCode: keyCode,\n      code,\n      key,\n      text,\n      unmodifiedText: text,\n      autoRepeat,\n      macCommands: commands,\n      isKeypad: location === input.keypadLocation\n    });\n  }\n\n  async keyup(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number): Promise<void> {\n    await this._pageProxySession.send('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      modifiers: toModifiersMask(modifiers),\n      key,\n      windowsVirtualKeyCode: keyCode,\n      code,\n      isKeypad: location === input.keypadLocation\n    });\n  }\n\n  async sendText(text: string): Promise<void> {\n    await this._session!.send('Page.insertText', { text });\n  }\n}\n\nexport class RawMouseImpl implements input.RawMouse {\n  private readonly _pageProxySession: WKSession;\n\n  constructor(session: WKSession) {\n    this._pageProxySession = session;\n  }\n\n  async move(x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>): Promise<void> {\n    await this._pageProxySession.send('Input.dispatchMouseEvent', {\n      type: 'move',\n      button,\n      buttons: toButtonsMask(buttons),\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers)\n    });\n  }\n\n  async down(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    await this._pageProxySession.send('Input.dispatchMouseEvent', {\n      type: 'down',\n      button,\n      buttons: toButtonsMask(buttons),\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n      clickCount\n    });\n  }\n\n  async up(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void> {\n    await this._pageProxySession.send('Input.dispatchMouseEvent', {\n      type: 'up',\n      button,\n      buttons: toButtonsMask(buttons),\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n      clickCount\n    });\n  }\n}\n\nexport class RawTouchscreenImpl implements input.RawTouchscreen {\n  private readonly _pageProxySession: WKSession;\n\n  constructor(session: WKSession) {\n    this._pageProxySession = session;\n  }\n\n  async tap(x: number, y: number, modifiers: Set<types.KeyboardModifier>) {\n    await this._pageProxySession.send('Input.dispatchTapEvent', {\n      x,\n      y,\n      modifiers: toModifiersMask(modifiers),\n    });\n  }\n}\n"],"file":"wkInput.js"}