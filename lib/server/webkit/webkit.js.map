{"version":3,"sources":["../../../src/server/webkit/webkit.ts"],"names":["WebKit","BrowserType","constructor","playwrightOptions","_connectToTransport","transport","options","WKBrowser","connect","_amendEnvironment","env","userDataDir","executable","browserArguments","CURL_COOKIE_JAR_PATH","path","join","_rewriteStartupError","error","_attemptToGracefullyCloseBrowser","send","method","params","id","kBrowserCloseMessageId","_defaultArgs","isPersistent","args","proxy","devtools","headless","console","warn","userDataDirArg","find","arg","startsWith","Error","webkitArguments","push","process","platform","server","bypass","split","map","t"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WKBrowser } from '../webkit/wkBrowser';\nimport { Env } from '../../utils/processLauncher';\nimport path from 'path';\nimport { kBrowserCloseMessageId } from './wkConnection';\nimport { BrowserType } from '../browserType';\nimport { ConnectionTransport } from '../transport';\nimport { BrowserOptions, PlaywrightOptions } from '../browser';\nimport * as types from '../types';\n\nexport class WebKit extends BrowserType {\n  constructor(playwrightOptions: PlaywrightOptions) {\n    super('webkit', playwrightOptions);\n  }\n\n  _connectToTransport(transport: ConnectionTransport, options: BrowserOptions): Promise<WKBrowser> {\n    return WKBrowser.connect(transport, options);\n  }\n\n  _amendEnvironment(env: Env, userDataDir: string, executable: string, browserArguments: string[]): Env {\n    return { ...env, CURL_COOKIE_JAR_PATH: path.join(userDataDir, 'cookiejar.db') };\n  }\n\n  _rewriteStartupError(error: Error): Error {\n    return error;\n  }\n\n  _attemptToGracefullyCloseBrowser(transport: ConnectionTransport): void {\n    transport.send({method: 'Playwright.close', params: {}, id: kBrowserCloseMessageId});\n  }\n\n  _defaultArgs(options: types.LaunchOptions, isPersistent: boolean, userDataDir: string): string[] {\n    const { args = [], proxy, devtools, headless } = options;\n    if (devtools)\n      console.warn('devtools parameter as a launch argument in WebKit is not supported. Also starting Web Inspector manually will terminate the execution in WebKit.');\n    const userDataDirArg = args.find(arg => arg.startsWith('--user-data-dir'));\n    if (userDataDirArg)\n      throw new Error('Pass userDataDir parameter to `browserType.launchPersistentContext(userDataDir, ...)` instead of specifying --user-data-dir argument');\n    if (args.find(arg => !arg.startsWith('-')))\n      throw new Error('Arguments can not specify page to be opened');\n    const webkitArguments = ['--inspector-pipe'];\n    if (headless)\n      webkitArguments.push('--headless');\n    if (isPersistent)\n      webkitArguments.push(`--user-data-dir=${userDataDir}`);\n    else\n      webkitArguments.push(`--no-startup-window`);\n    if (proxy) {\n      if (process.platform === 'darwin') {\n        webkitArguments.push(`--proxy=${proxy.server}`);\n        if (proxy.bypass)\n          webkitArguments.push(`--proxy-bypass-list=${proxy.bypass}`);\n      } else if (process.platform === 'linux') {\n        webkitArguments.push(`--proxy=${proxy.server}`);\n        if (proxy.bypass)\n          webkitArguments.push(...proxy.bypass.split(',').map(t => `--ignore-host=${t}`));\n      } else if (process.platform === 'win32') {\n        webkitArguments.push(`--curl-proxy=${proxy.server}`);\n        if (proxy.bypass)\n          webkitArguments.push(`--curl-noproxy=${proxy.bypass}`);\n      }\n    }\n    webkitArguments.push(...args);\n    if (isPersistent)\n      webkitArguments.push('about:blank');\n    return webkitArguments;\n  }\n}\n"],"file":"webkit.js"}