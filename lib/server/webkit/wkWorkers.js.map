{"version":3,"sources":["../../../src/server/webkit/wkWorkers.ts"],"names":["WKWorkers","constructor","page","_sessionListeners","_page","_workerSessions","Map","setSession","session","eventsHelper","removeEventListeners","clear","addEventListener","event","worker","Worker","url","workerSession","WKSession","connection","workerId","message","send","JSON","stringify","catch","e","dispatchMessage","id","error","set","_createExecutionContext","WKExecutionContext","undefined","_addWorker","on","_onConsoleMessage","Promise","all","_removeWorker","get","parse","dispose","delete","_clearWorkers","initializeSession","type","level","text","parameters","line","lineNumber","column","columnNumber","derivedType","handles","map","p","_existingExecutionContext","createHandle","location","_addConsoleMessage","length"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Microsoft Corporation All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { eventsHelper, RegisteredListener } from '../../utils/eventsHelper';\nimport { Page, Worker } from '../page';\nimport { Protocol } from './protocol';\nimport { WKSession } from './wkConnection';\nimport { WKExecutionContext } from './wkExecutionContext';\nimport * as types from '../types';\n\nexport class WKWorkers {\n  private _sessionListeners: RegisteredListener[] = [];\n  private _page: Page;\n  private _workerSessions = new Map<string, WKSession>();\n\n  constructor(page: Page) {\n    this._page = page;\n  }\n\n  setSession(session: WKSession) {\n    eventsHelper.removeEventListeners(this._sessionListeners);\n    this.clear();\n    this._sessionListeners = [\n      eventsHelper.addEventListener(session, 'Worker.workerCreated', (event: Protocol.Worker.workerCreatedPayload) => {\n        const worker = new Worker(this._page, event.url);\n        const workerSession = new WKSession(session.connection, event.workerId, 'Most likely the worker has been closed.', (message: any) => {\n          session.send('Worker.sendMessageToWorker', {\n            workerId: event.workerId,\n            message: JSON.stringify(message)\n          }).catch(e => {\n            workerSession.dispatchMessage({ id: message.id, error: { message: e.message } });\n          });\n        });\n        this._workerSessions.set(event.workerId, workerSession);\n        worker._createExecutionContext(new WKExecutionContext(workerSession, undefined));\n        this._page._addWorker(event.workerId, worker);\n        workerSession.on('Console.messageAdded', event => this._onConsoleMessage(worker, event));\n        Promise.all([\n          workerSession.send('Runtime.enable'),\n          workerSession.send('Console.enable'),\n          session.send('Worker.initialized', { workerId: event.workerId })\n        ]).catch(e => {\n          // Worker can go as we are initializing it.\n          this._page._removeWorker(event.workerId);\n        });\n      }),\n      eventsHelper.addEventListener(session, 'Worker.dispatchMessageFromWorker', (event: Protocol.Worker.dispatchMessageFromWorkerPayload) => {\n        const workerSession = this._workerSessions.get(event.workerId)!;\n        if (!workerSession)\n          return;\n        workerSession.dispatchMessage(JSON.parse(event.message));\n      }),\n      eventsHelper.addEventListener(session, 'Worker.workerTerminated', (event: Protocol.Worker.workerTerminatedPayload) => {\n        const workerSession = this._workerSessions.get(event.workerId)!;\n        if (!workerSession)\n          return;\n        workerSession.dispose(false);\n        this._workerSessions.delete(event.workerId);\n        this._page._removeWorker(event.workerId);\n      })\n    ];\n  }\n\n  clear() {\n    this._page._clearWorkers();\n    this._workerSessions.clear();\n  }\n\n  async initializeSession(session: WKSession) {\n    await session.send('Worker.enable');\n  }\n\n  async _onConsoleMessage(worker: Worker, event: Protocol.Console.messageAddedPayload) {\n    const { type, level, text, parameters, url, line: lineNumber, column: columnNumber } = event.message;\n    let derivedType: string = type || '';\n    if (type === 'log')\n      derivedType = level;\n    else if (type === 'timing')\n      derivedType = 'timeEnd';\n\n    const handles = (parameters || []).map(p => {\n      return worker._existingExecutionContext!.createHandle(p);\n    });\n    const location: types.ConsoleMessageLocation = {\n      url: url || '',\n      lineNumber: (lineNumber || 1) - 1,\n      columnNumber: (columnNumber || 1) - 1\n    };\n    this._page._addConsoleMessage(derivedType, handles, location, handles.length ? undefined : text);\n  }\n}\n"],"file":"wkWorkers.js"}