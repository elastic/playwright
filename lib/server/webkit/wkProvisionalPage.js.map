{"version":3,"sources":["../../../src/server/webkit/wkProvisionalPage.ts"],"names":["WKProvisionalPage","constructor","session","page","_session","_wkPage","_sessionListeners","_mainFrameId","initializationPromise","overrideFrameId","handler","payload","frameId","_page","_frameManager","mainFrame","_id","wkPage","eventsHelper","addEventListener","e","_onRequestWillBeSent","_onRequestIntercepted","_onResponseIntercepted","_onResponseReceived","_onLoadingFinished","_onLoadingFailed","_initializeSession","frameTree","_handleFrameTree","dispose","removeEventListeners","commit","_onFrameAttached","frame","parentId","id"],"mappings":";;;;;;;AAkBA;;AAEA;;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQO,MAAMA,iBAAN,CAAwB;AAO7BC,EAAAA,WAAW,CAACC,OAAD,EAAqBC,IAArB,EAAmC;AAAA,SANrCC,QAMqC;AAAA,SAL7BC,OAK6B;AAAA,SAJtCC,iBAIsC,GAJI,EAIJ;AAAA,SAHtCC,YAGsC,GAHR,IAGQ;AAAA,SAFrCC,qBAEqC;AAC5C,SAAKJ,QAAL,GAAgBF,OAAhB;AACA,SAAKG,OAAL,GAAeF,IAAf;;AAEA,UAAMM,eAAe,GAAIC,OAAD,IAA+B;AACrD,aAAQC,OAAD,IAAkB;AACvB;AACA,YAAIA,OAAO,CAACC,OAAZ,EACED,OAAO,CAACC,OAAR,GAAkB,KAAKP,OAAL,CAAaQ,KAAb,CAAmBC,aAAnB,CAAiCC,SAAjC,GAA6CC,GAA/D;AACFN,QAAAA,OAAO,CAACC,OAAD,CAAP;AACD,OALD;AAMD,KAPD;;AAQA,UAAMM,MAAM,GAAG,KAAKZ,OAApB;AAEA,SAAKC,iBAAL,GAAyB,CACvBY,2BAAaC,gBAAb,CAA8BjB,OAA9B,EAAuC,2BAAvC,EAAoEO,eAAe,CAACW,CAAC,IAAIH,MAAM,CAACI,oBAAP,CAA4BnB,OAA5B,EAAqCkB,CAArC,CAAN,CAAnF,CADuB,EAEvBF,2BAAaC,gBAAb,CAA8BjB,OAA9B,EAAuC,4BAAvC,EAAqEO,eAAe,CAACW,CAAC,IAAIH,MAAM,CAACK,qBAAP,CAA6BpB,OAA7B,EAAsCkB,CAAtC,CAAN,CAApF,CAFuB,EAGvBF,2BAAaC,gBAAb,CAA8BjB,OAA9B,EAAuC,6BAAvC,EAAsEO,eAAe,CAACW,CAAC,IAAIH,MAAM,CAACM,sBAAP,CAA8BrB,OAA9B,EAAuCkB,CAAvC,CAAN,CAArF,CAHuB,EAIvBF,2BAAaC,gBAAb,CAA8BjB,OAA9B,EAAuC,0BAAvC,EAAmEO,eAAe,CAACW,CAAC,IAAIH,MAAM,CAACO,mBAAP,CAA2BJ,CAA3B,CAAN,CAAlF,CAJuB,EAKvBF,2BAAaC,gBAAb,CAA8BjB,OAA9B,EAAuC,yBAAvC,EAAkEO,eAAe,CAACW,CAAC,IAAIH,MAAM,CAACQ,kBAAP,CAA0BL,CAA1B,CAAN,CAAjF,CALuB,EAMvBF,2BAAaC,gBAAb,CAA8BjB,OAA9B,EAAuC,uBAAvC,EAAgEO,eAAe,CAACW,CAAC,IAAIH,MAAM,CAACS,gBAAP,CAAwBN,CAAxB,CAAN,CAA/E,CANuB,CAAzB;AASA,SAAKZ,qBAAL,GAA6B,KAAKH,OAAL,CAAasB,kBAAb,CAAgCzB,OAAhC,EAAyC,IAAzC,EAA+C,CAAC;AAAC0B,MAAAA;AAAD,KAAD,KAAiB,KAAKC,gBAAL,CAAsBD,SAAtB,CAAhE,CAA7B;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACRZ,+BAAaa,oBAAb,CAAkC,KAAKzB,iBAAvC;AACD;;AAED0B,EAAAA,MAAM,GAAG;AACP,uBAAO,KAAKzB,YAAZ;;AACA,SAAKF,OAAL,CAAa4B,gBAAb,CAA8B,KAAK1B,YAAnC,EAAiD,IAAjD;AACD;;AAEOsB,EAAAA,gBAAgB,CAACD,SAAD,EAA6C;AACnE,uBAAO,CAACA,SAAS,CAACM,KAAV,CAAgBC,QAAxB;AACA,SAAK5B,YAAL,GAAoBqB,SAAS,CAACM,KAAV,CAAgBE,EAApC;AACD;;AA7C4B","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WKSession } from './wkConnection';\nimport { WKPage } from './wkPage';\nimport { RegisteredListener, eventsHelper } from '../../utils/eventsHelper';\nimport { Protocol } from './protocol';\nimport { assert } from '../../utils/utils';\n\nexport class WKProvisionalPage {\n  readonly _session: WKSession;\n  private readonly _wkPage: WKPage;\n  private _sessionListeners: RegisteredListener[] = [];\n  private _mainFrameId: string | null = null;\n  readonly initializationPromise: Promise<void>;\n\n  constructor(session: WKSession, page: WKPage) {\n    this._session = session;\n    this._wkPage = page;\n\n    const overrideFrameId = (handler: (p: any) => void) => {\n      return (payload: any) => {\n        // Pretend that the events happened in the same process.\n        if (payload.frameId)\n          payload.frameId = this._wkPage._page._frameManager.mainFrame()._id;\n        handler(payload);\n      };\n    };\n    const wkPage = this._wkPage;\n\n    this._sessionListeners = [\n      eventsHelper.addEventListener(session, 'Network.requestWillBeSent', overrideFrameId(e => wkPage._onRequestWillBeSent(session, e))),\n      eventsHelper.addEventListener(session, 'Network.requestIntercepted', overrideFrameId(e => wkPage._onRequestIntercepted(session, e))),\n      eventsHelper.addEventListener(session, 'Network.responseIntercepted', overrideFrameId(e => wkPage._onResponseIntercepted(session, e))),\n      eventsHelper.addEventListener(session, 'Network.responseReceived', overrideFrameId(e => wkPage._onResponseReceived(e))),\n      eventsHelper.addEventListener(session, 'Network.loadingFinished', overrideFrameId(e => wkPage._onLoadingFinished(e))),\n      eventsHelper.addEventListener(session, 'Network.loadingFailed', overrideFrameId(e => wkPage._onLoadingFailed(e))),\n    ];\n\n    this.initializationPromise = this._wkPage._initializeSession(session, true, ({frameTree}) => this._handleFrameTree(frameTree));\n  }\n\n  dispose() {\n    eventsHelper.removeEventListeners(this._sessionListeners);\n  }\n\n  commit() {\n    assert(this._mainFrameId);\n    this._wkPage._onFrameAttached(this._mainFrameId, null);\n  }\n\n  private _handleFrameTree(frameTree: Protocol.Page.FrameResourceTree) {\n    assert(!frameTree.frame.parentId);\n    this._mainFrameId = frameTree.frame.id;\n  }\n}"],"file":"wkProvisionalPage.js"}