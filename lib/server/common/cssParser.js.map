{"version":3,"sources":["../../../src/server/common/cssParser.ts"],"names":["parseCSS","selector","customNames","tokens","css","tokenize","length","EOFToken","push","e","newMessage","message","index","stack","indexOf","substring","unsupportedToken","find","token","AtKeywordToken","BadStringToken","BadURLToken","ColumnToken","CDOToken","CDCToken","SemicolonToken","OpenCurlyToken","CloseCurlyToken","URLToken","PercentageToken","Error","toSource","pos","names","Set","unexpected","skipWhitespace","WhitespaceToken","isIdent","p","IdentToken","isString","StringToken","isNumber","NumberToken","isComma","CommaToken","isCloseParen","CloseParenToken","isStar","DelimToken","value","isEOF","isClauseCombinator","includes","isSelectorClauseEnd","consumeFunctionArguments","result","consumeArgument","consumeComplexSelector","simples","consumeSimpleSelector","combinator","rawCSSString","functions","HashToken","ColonToken","has","toLowerCase","name","args","add","FunctionToken","consumeBuiltinFunctionArguments","OpenSquareToken","CloseSquareToken","undefined","s","some","arg","Array","from","serializeSelector","map","String","func","join"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as css from './cssTokenizer';\n\n// Note: '>=' is used internally for text engine to preserve backwards compatibility.\ntype ClauseCombinator = '' | '>' | '+' | '~' | '>=';\n// TODO: consider\n//   - key=value\n//   - operators like `=`, `|=`, `~=`, `*=`, `/`\n//   - <empty>~=value\n//   - argument modes: \"parse all\", \"parse commas\", \"just a string\"\nexport type CSSFunctionArgument = CSSComplexSelector | number | string;\nexport type CSSFunction = { name: string, args: CSSFunctionArgument[] };\nexport type CSSSimpleSelector = { css?: string, functions: CSSFunction[] };\nexport type CSSComplexSelector = { simples: { selector: CSSSimpleSelector, combinator: ClauseCombinator }[] };\nexport type CSSComplexSelectorList = CSSComplexSelector[];\n\nexport function parseCSS(selector: string, customNames: Set<string>): { selector: CSSComplexSelectorList, names: string[] } {\n  let tokens: css.CSSTokenInterface[];\n  try {\n    tokens = css.tokenize(selector);\n    if (!(tokens[tokens.length - 1] instanceof css.EOFToken))\n      tokens.push(new css.EOFToken());\n  } catch (e) {\n    const newMessage = e.message + ` while parsing selector \"${selector}\"`;\n    const index = (e.stack || '').indexOf(e.message);\n    if (index !== -1)\n      e.stack = e.stack.substring(0, index) + newMessage + e.stack.substring(index + e.message.length);\n    e.message = newMessage;\n    throw e;\n  }\n  const unsupportedToken = tokens.find(token => {\n    return (token instanceof css.AtKeywordToken) ||\n      (token instanceof css.BadStringToken) ||\n      (token instanceof css.BadURLToken) ||\n      (token instanceof css.ColumnToken) ||\n      (token instanceof css.CDOToken) ||\n      (token instanceof css.CDCToken) ||\n      (token instanceof css.SemicolonToken) ||\n      // TODO: Consider using these for something, e.g. to escape complex strings.\n      // For example :xpath{ (//div/bar[@attr=\"foo\"])[2]/baz }\n      // Or this way :xpath( {complex-xpath-goes-here(\"hello\")} )\n      (token instanceof css.OpenCurlyToken) ||\n      (token instanceof css.CloseCurlyToken) ||\n      // TODO: Consider treating these as strings?\n      (token instanceof css.URLToken) ||\n      (token instanceof css.PercentageToken);\n  });\n  if (unsupportedToken)\n    throw new Error(`Unsupported token \"${unsupportedToken.toSource()}\" while parsing selector \"${selector}\"`);\n\n  let pos = 0;\n  const names = new Set<string>();\n\n  function unexpected() {\n    return new Error(`Unexpected token \"${tokens[pos].toSource()}\" while parsing selector \"${selector}\"`);\n  }\n\n  function skipWhitespace() {\n    while (tokens[pos] instanceof css.WhitespaceToken)\n      pos++;\n  }\n\n  function isIdent(p = pos) {\n    return tokens[p] instanceof css.IdentToken;\n  }\n\n  function isString(p = pos) {\n    return tokens[p] instanceof css.StringToken;\n  }\n\n  function isNumber(p = pos) {\n    return tokens[p] instanceof css.NumberToken;\n  }\n\n  function isComma(p = pos) {\n    return tokens[p] instanceof css.CommaToken;\n  }\n\n  function isCloseParen(p = pos) {\n    return tokens[p] instanceof css.CloseParenToken;\n  }\n\n  function isStar(p = pos) {\n    return (tokens[p] instanceof css.DelimToken) && tokens[p].value === '*';\n  }\n\n  function isEOF(p = pos) {\n    return tokens[p] instanceof css.EOFToken;\n  }\n\n  function isClauseCombinator(p = pos) {\n    return (tokens[p] instanceof css.DelimToken) && (['>', '+', '~'].includes(tokens[p].value));\n  }\n\n  function isSelectorClauseEnd(p = pos) {\n    return isComma(p) || isCloseParen(p) || isEOF(p) || isClauseCombinator(p) || (tokens[p] instanceof css.WhitespaceToken);\n  }\n\n  function consumeFunctionArguments(): CSSFunctionArgument[] {\n    const result = [consumeArgument()];\n    while (true) {\n      skipWhitespace();\n      if (!isComma())\n        break;\n      pos++;\n      result.push(consumeArgument());\n    }\n    return result;\n  }\n\n  function consumeArgument(): CSSFunctionArgument {\n    skipWhitespace();\n    if (isNumber())\n      return tokens[pos++].value;\n    if (isString())\n      return tokens[pos++].value;\n    return consumeComplexSelector();\n  }\n\n  function consumeComplexSelector(): CSSComplexSelector {\n    skipWhitespace();\n    const result = { simples: [{ selector: consumeSimpleSelector(), combinator: '' as ClauseCombinator }] };\n    while (true) {\n      skipWhitespace();\n      if (isClauseCombinator()) {\n        result.simples[result.simples.length - 1].combinator = tokens[pos++].value as ClauseCombinator;\n        skipWhitespace();\n      } else if (isSelectorClauseEnd()) {\n        break;\n      }\n      result.simples.push({ combinator: '', selector: consumeSimpleSelector() });\n    }\n    return result;\n  }\n\n  function consumeSimpleSelector(): CSSSimpleSelector {\n    let rawCSSString = '';\n    const functions: CSSFunction[] = [];\n\n    while (!isSelectorClauseEnd()) {\n      if (isIdent() || isStar()) {\n        rawCSSString += tokens[pos++].toSource();\n      } else if (tokens[pos] instanceof css.HashToken) {\n        rawCSSString += tokens[pos++].toSource();\n      } else if ((tokens[pos] instanceof css.DelimToken) && tokens[pos].value === '.') {\n        pos++;\n        if (isIdent())\n          rawCSSString += '.' + tokens[pos++].toSource();\n        else\n          throw unexpected();\n      } else if (tokens[pos] instanceof css.ColonToken) {\n        pos++;\n        if (isIdent()) {\n          if (!customNames.has(tokens[pos].value.toLowerCase())) {\n            rawCSSString += ':' + tokens[pos++].toSource();\n          } else {\n            const name = tokens[pos++].value.toLowerCase();\n            functions.push({ name, args: [] });\n            names.add(name);\n          }\n        } else if (tokens[pos] instanceof css.FunctionToken) {\n          const name = tokens[pos++].value.toLowerCase();\n          if (!customNames.has(name)) {\n            rawCSSString += `:${name}(${consumeBuiltinFunctionArguments()})`;\n          } else {\n            functions.push({ name, args: consumeFunctionArguments() });\n            names.add(name);\n          }\n          skipWhitespace();\n          if (!isCloseParen())\n            throw unexpected();\n          pos++;\n        } else {\n          throw unexpected();\n        }\n      } else if (tokens[pos] instanceof css.OpenSquareToken) {\n        rawCSSString += '[';\n        pos++;\n        while (!(tokens[pos] instanceof css.CloseSquareToken) && !isEOF())\n          rawCSSString += tokens[pos++].toSource();\n        if (!(tokens[pos] instanceof css.CloseSquareToken))\n          throw unexpected();\n        rawCSSString += ']';\n        pos++;\n      } else {\n        throw unexpected();\n      }\n    }\n    if (!rawCSSString && !functions.length)\n      throw unexpected();\n    return { css: rawCSSString || undefined, functions };\n  }\n\n  function consumeBuiltinFunctionArguments(): string {\n    let s = '';\n    while (!isCloseParen() && !isEOF())\n      s += tokens[pos++].toSource();\n    return s;\n  }\n\n  const result = consumeFunctionArguments();\n  if (!isEOF())\n    throw new Error(`Error while parsing selector \"${selector}\"`);\n  if (result.some(arg => typeof arg !== 'object' || !('simples' in arg)))\n    throw new Error(`Error while parsing selector \"${selector}\"`);\n  return { selector: result as CSSComplexSelector[], names: Array.from(names) };\n}\n\nexport function serializeSelector(args: CSSFunctionArgument[]) {\n  return args.map(arg => {\n    if (typeof arg === 'string')\n      return `\"${arg}\"`;\n    if (typeof arg === 'number')\n      return String(arg);\n    return arg.simples.map(({ selector, combinator }) => {\n      let s = selector.css || '';\n      s = s + selector.functions.map(func => `:${func.name}(${serializeSelector(func.args)})`).join('');\n      if (combinator)\n        s += ' ' + combinator;\n      return s;\n    }).join(' ');\n  }).join(', ');\n}\n"],"file":"cssParser.js"}