{"version":3,"sources":["../../../src/server/common/utilityScriptSerializers.ts"],"names":["isRegExp","obj","RegExp","Object","prototype","toString","call","isDate","Date","isError","Error","__proto__","name","parseEvaluationResultValue","value","handles","is","undefined","v","NaN","Infinity","d","r","p","f","a","map","result","k","o","h","serializeAsCallArgument","handleSerializer","serialize","Set","visited","fallThrough","has","error","global","stack","message","toJSON","source","flags","Array","isArray","add","i","length","push","delete","keys","item","e"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type SerializedValue =\n    undefined | boolean | number | string |\n    { v: 'null' | 'undefined' | 'NaN' | 'Infinity' | '-Infinity' | '-0' } |\n    { d: string } |\n    { r: { p: string, f: string} } |\n    { a: SerializedValue[] } |\n    { o: { k: string, v: SerializedValue }[] } |\n    { h: number };\n\nfunction isRegExp(obj: any): obj is RegExp {\n  return obj instanceof RegExp || Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction isDate(obj: any): obj is Date {\n  return obj instanceof Date || Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction isError(obj: any): obj is Error {\n  return obj instanceof Error || (obj && obj.__proto__ && obj.__proto__.name === 'Error');\n}\n\nexport function parseEvaluationResultValue(value: SerializedValue, handles: any[] = []): any {\n  if (Object.is(value, undefined))\n    return undefined;\n  if (typeof value === 'object' && value) {\n    if ('v' in value) {\n      if (value.v === 'undefined')\n        return undefined;\n      if (value.v === 'null')\n        return null;\n      if (value.v === 'NaN')\n        return NaN;\n      if (value.v === 'Infinity')\n        return Infinity;\n      if (value.v === '-Infinity')\n        return -Infinity;\n      if (value.v === '-0')\n        return -0;\n      return undefined;\n    }\n    if ('d' in value)\n      return new Date(value.d);\n    if ('r' in value)\n      return new RegExp(value.r.p, value.r.f);\n    if ('a' in value)\n      return value.a.map((a: any) => parseEvaluationResultValue(a, handles));\n    if ('o' in value) {\n      const result: any = {};\n      for (const { k, v } of value.o)\n        result[k] = parseEvaluationResultValue(v, handles);\n      return result;\n    }\n    if ('h' in value)\n      return handles[value.h];\n  }\n  return value;\n}\n\nexport type HandleOrValue = { h: number } | { fallThrough: any };\nexport function serializeAsCallArgument(value: any, handleSerializer: (value: any) => HandleOrValue): SerializedValue {\n  return serialize(value, handleSerializer, new Set());\n}\n\nfunction serialize(value: any, handleSerializer: (value: any) => HandleOrValue, visited: Set<any>): SerializedValue {\n  const result = handleSerializer(value);\n  if ('fallThrough' in result)\n    value = result.fallThrough;\n  else\n    return result;\n\n  if (visited.has(value))\n    throw new Error('Argument is a circular structure');\n  if (typeof value === 'symbol')\n    return { v: 'undefined' };\n  if (Object.is(value, undefined))\n    return { v: 'undefined' };\n  if (Object.is(value, null))\n    return { v: 'null' };\n  if (Object.is(value, NaN))\n    return { v: 'NaN' };\n  if (Object.is(value, Infinity))\n    return { v: 'Infinity' };\n  if (Object.is(value, -Infinity))\n    return { v: '-Infinity' };\n  if (Object.is(value, -0))\n    return { v: '-0' };\n\n  if (typeof value === 'boolean')\n    return value;\n  if (typeof value === 'number')\n    return value;\n  if (typeof value === 'string')\n    return value;\n\n  if (isError(value)) {\n    const error = value;\n    if ('captureStackTrace' in global.Error) {\n      // v8\n      return error.stack || '';\n    }\n    return `${error.name}: ${error.message}\\n${error.stack}`;\n  }\n  if (isDate(value))\n    return { d: value.toJSON() };\n  if (isRegExp(value))\n    return { r: { p: value.source, f: value.flags } };\n\n  if (Array.isArray(value)) {\n    const a = [];\n    visited.add(value);\n    for (let i = 0; i < value.length; ++i)\n      a.push(serialize(value[i], handleSerializer, visited));\n    visited.delete(value);\n    return { a };\n  }\n\n  if (typeof value === 'object') {\n    const o: { k: string, v: SerializedValue }[] = [];\n    visited.add(value);\n    for (const name of Object.keys(value)) {\n      let item;\n      try {\n        item = value[name];\n      } catch (e) {\n        continue;  // native bindings will throw sometimes\n      }\n      if (name === 'toJSON' && typeof item === 'function')\n        o.push({ k: name, v: { o: [] } });\n      else\n        o.push({ k: name, v: serialize(item, handleSerializer, visited) });\n    }\n    visited.delete(value);\n    return { o };\n  }\n}\n"],"file":"utilityScriptSerializers.js"}