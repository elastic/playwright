{"version":3,"sources":["../../../src/server/electron/electron.ts"],"names":["ARTIFACTS_FOLDER","path","join","os","tmpdir","ElectronApplication","SdkObject","constructor","parent","browser","nodeConnection","_browserContext","_nodeConnection","_nodeSession","_nodeExecutionContext","_nodeElectronHandlePromise","_lastWindowId","_timeoutSettings","TimeoutSettings","_defaultContext","on","BrowserContext","Events","Close","Promise","resolve","then","emit","page","pages","_onPage","Page","event","rootSession","f","context","auxData","isDefault","js","ExecutionContext","CRExecutionContext","evaluate","send","catch","e","windowId","_browserWindowId","close","progressController","ProgressController","closed","run","progress","helper","waitForEvent","promise","timeout","electronHandle","app","quit","browserWindow","evaluateHandle","BrowserWindow","fromId","Electron","playwrightOptions","rootSdkObject","_playwrightOptions","launch","options","args","controller","setLogName","undefined","electronArguments","platform","runningAsRoot","process","geteuid","indexOf","push","artifactsDir","fs","promises","mkdtemp","browserLogsCollector","RecentLogsCollector","launchedProcess","gracefullyClose","kill","command","executablePath","require","env","log","message","stdio","cwd","tempDirectories","attemptToGracefullyClose","handleSIGINT","handleSIGTERM","handleSIGHUP","onExit","nodeMatch","waitForLine","nodeTransport","WebSocketTransport","connect","CRConnection","debugProtocolLogger","chromeMatch","chromeTransport","browserProcess","onclose","browserOptions","name","isChromium","headful","persistent","sdkLanguage","noDefaultViewport","acceptDownloads","bypassCSP","colorScheme","extraHTTPHeaders","geolocation","httpCredentials","ignoreHTTPSErrors","locale","offline","recordHar","recordVideo","timezoneId","protocolLogger","downloadsPath","tracesDir","CRBrowser","regex","reject","rl","readline","createInterface","input","stderr","failError","Error","listeners","eventsHelper","addEventListener","onLine","bind","cleanupWhenAborted","cleanup","line","match","removeEventListeners"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport { CRBrowser, CRBrowserContext } from '../chromium/crBrowser';\nimport { CRConnection, CRSession } from '../chromium/crConnection';\nimport { CRExecutionContext } from '../chromium/crExecutionContext';\nimport * as js from '../javascript';\nimport { Page } from '../page';\nimport { TimeoutSettings } from '../../utils/timeoutSettings';\nimport { WebSocketTransport } from '../transport';\nimport { launchProcess, envArrayToObject } from '../../utils/processLauncher';\nimport { BrowserContext } from '../browserContext';\nimport type {BrowserWindow} from 'electron';\nimport { Progress, ProgressController } from '../progress';\nimport { helper } from '../helper';\nimport { eventsHelper } from '../../utils/eventsHelper';\nimport { BrowserOptions, BrowserProcess, PlaywrightOptions } from '../browser';\nimport * as childProcess from 'child_process';\nimport * as readline from 'readline';\nimport { RecentLogsCollector } from '../../utils/debugLogger';\nimport { internalCallMetadata, SdkObject } from '../instrumentation';\nimport * as channels from '../../protocol/channels';\n\nconst ARTIFACTS_FOLDER = path.join(os.tmpdir(), 'playwright-artifacts-');\n\nexport class ElectronApplication extends SdkObject {\n  static Events = {\n    Close: 'close',\n  };\n\n  private _browserContext: CRBrowserContext;\n  private _nodeConnection: CRConnection;\n  private _nodeSession: CRSession;\n  private _nodeExecutionContext: js.ExecutionContext | undefined;\n  _nodeElectronHandlePromise: Promise<js.JSHandle<any>>;\n  private _lastWindowId = 0;\n  readonly _timeoutSettings = new TimeoutSettings();\n\n  constructor(parent: SdkObject, browser: CRBrowser, nodeConnection: CRConnection) {\n    super(parent, 'electron-app');\n    this._browserContext = browser._defaultContext as CRBrowserContext;\n    this._browserContext.on(BrowserContext.Events.Close, () => {\n      // Emit application closed after context closed.\n      Promise.resolve().then(() => this.emit(ElectronApplication.Events.Close));\n    });\n    for (const page of this._browserContext.pages())\n      this._onPage(page);\n    this._browserContext.on(BrowserContext.Events.Page, event => this._onPage(event));\n    this._nodeConnection = nodeConnection;\n    this._nodeSession = nodeConnection.rootSession;\n    this._nodeElectronHandlePromise = new Promise(f => {\n      this._nodeSession.on('Runtime.executionContextCreated', async (event: any) => {\n        if (event.context.auxData && event.context.auxData.isDefault) {\n          this._nodeExecutionContext = new js.ExecutionContext(this, new CRExecutionContext(this._nodeSession, event.context));\n          f(await js.evaluate(this._nodeExecutionContext, false /* returnByValue */, `process.mainModule.require('electron')`));\n        }\n      });\n    });\n    this._nodeSession.send('Runtime.enable', {}).catch(e => {});\n  }\n\n  private _onPage(page: Page) {\n    // Needs to be sync.\n    const windowId = ++this._lastWindowId;\n    (page as any)._browserWindowId = windowId;\n  }\n\n  context(): BrowserContext {\n    return this._browserContext;\n  }\n\n  async close() {\n    const progressController = new ProgressController(internalCallMetadata(), this);\n    const closed = progressController.run(progress => helper.waitForEvent(progress, this, ElectronApplication.Events.Close).promise, this._timeoutSettings.timeout({}));\n    const electronHandle = await this._nodeElectronHandlePromise;\n    await electronHandle.evaluate(({ app }) => app.quit());\n    this._nodeConnection.close();\n    await closed;\n  }\n\n  async browserWindow(page: Page): Promise<js.JSHandle<BrowserWindow>> {\n    const electronHandle = await this._nodeElectronHandlePromise;\n    return await electronHandle.evaluateHandle(({ BrowserWindow }, windowId) => BrowserWindow.fromId(windowId), (page as any)._browserWindowId);\n  }\n}\n\nexport class Electron extends SdkObject {\n  private _playwrightOptions: PlaywrightOptions;\n\n  constructor(playwrightOptions: PlaywrightOptions) {\n    super(playwrightOptions.rootSdkObject, 'electron');\n    this._playwrightOptions = playwrightOptions;\n  }\n\n  async launch(options: channels.ElectronLaunchParams): Promise<ElectronApplication> {\n    const {\n      args = [],\n    } = options;\n    const controller = new ProgressController(internalCallMetadata(), this);\n    controller.setLogName('browser');\n    return controller.run(async progress => {\n      let app: ElectronApplication | undefined = undefined;\n      const electronArguments = ['--inspect=0', '--remote-debugging-port=0', ...args];\n\n      if (os.platform() === 'linux') {\n        const runningAsRoot = process.geteuid && process.geteuid() === 0;\n        if (runningAsRoot && electronArguments.indexOf('--no-sandbox') === -1)\n          electronArguments.push('--no-sandbox');\n      }\n\n      const artifactsDir = await fs.promises.mkdtemp(ARTIFACTS_FOLDER);\n\n      const browserLogsCollector = new RecentLogsCollector();\n      const { launchedProcess, gracefullyClose, kill } = await launchProcess({\n        command: options.executablePath || require('electron/index.js'),\n        args: electronArguments,\n        env: options.env ? envArrayToObject(options.env) : process.env,\n        log: (message: string) => {\n          progress.log(message);\n          browserLogsCollector.log(message);\n        },\n        stdio: 'pipe',\n        cwd: options.cwd,\n        tempDirectories: [ artifactsDir ],\n        attemptToGracefullyClose: () => app!.close(),\n        handleSIGINT: true,\n        handleSIGTERM: true,\n        handleSIGHUP: true,\n        onExit: () => {},\n      });\n\n      const nodeMatch = await waitForLine(progress, launchedProcess, /^Debugger listening on (ws:\\/\\/.*)$/);\n      const nodeTransport = await WebSocketTransport.connect(progress, nodeMatch[1]);\n      const nodeConnection = new CRConnection(nodeTransport, helper.debugProtocolLogger(), browserLogsCollector);\n\n      const chromeMatch = await waitForLine(progress, launchedProcess, /^DevTools listening on (ws:\\/\\/.*)$/);\n      const chromeTransport = await WebSocketTransport.connect(progress, chromeMatch[1]);\n      const browserProcess: BrowserProcess = {\n        onclose: undefined,\n        process: launchedProcess,\n        close: gracefullyClose,\n        kill\n      };\n      const browserOptions: BrowserOptions = {\n        ...this._playwrightOptions,\n        name: 'electron',\n        isChromium: true,\n        headful: true,\n        persistent: {\n          sdkLanguage: options.sdkLanguage,\n          noDefaultViewport: true,\n          acceptDownloads: options.acceptDownloads,\n          bypassCSP: options.bypassCSP,\n          colorScheme: options.colorScheme,\n          extraHTTPHeaders: options.extraHTTPHeaders,\n          geolocation: options.geolocation,\n          httpCredentials: options.httpCredentials,\n          ignoreHTTPSErrors: options.ignoreHTTPSErrors,\n          locale: options.locale,\n          offline: options.offline,\n          recordHar: options.recordHar,\n          recordVideo: options.recordVideo,\n          timezoneId: options.timezoneId,\n        },\n        browserProcess,\n        protocolLogger: helper.debugProtocolLogger(),\n        browserLogsCollector,\n        artifactsDir,\n        downloadsPath: artifactsDir,\n        tracesDir: artifactsDir,\n      };\n      const browser = await CRBrowser.connect(chromeTransport, browserOptions);\n      app = new ElectronApplication(this, browser, nodeConnection);\n      return app;\n    }, TimeoutSettings.timeout(options));\n  }\n}\n\nfunction waitForLine(progress: Progress, process: childProcess.ChildProcess, regex: RegExp): Promise<RegExpMatchArray> {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({ input: process.stderr });\n    const failError = new Error('Process failed to launch!');\n    const listeners = [\n      eventsHelper.addEventListener(rl, 'line', onLine),\n      eventsHelper.addEventListener(rl, 'close', reject.bind(null, failError)),\n      eventsHelper.addEventListener(process, 'exit', reject.bind(null, failError)),\n      // It is Ok to remove error handler because we did not create process and there is another listener.\n      eventsHelper.addEventListener(process, 'error', reject.bind(null, failError))\n    ];\n\n    progress.cleanupWhenAborted(cleanup);\n\n    function onLine(line: string) {\n      const match = line.match(regex);\n      if (!match)\n        return;\n      cleanup();\n      resolve(match);\n    }\n\n    function cleanup() {\n      eventsHelper.removeEventListeners(listeners);\n    }\n  });\n}\n"],"file":"electron.js"}