{"version":3,"sources":["../../../../src/server/trace/viewer/traceViewer.ts"],"names":["TraceViewer","constructor","tracesDir","browserName","_server","_browserName","resourcesDir","path","join","actionTraces","fs","readdirSync","filter","name","endsWith","debugNames","map","tracePrefix","substring","indexOf","basename","HttpServer","traceListHandler","request","response","statusCode","setHeader","end","JSON","stringify","routePath","snapshotStorage","PersistentSnapshotStorage","SnapshotServer","traceModelHandler","debugName","url","length","clear","fileStream","createReadStream","rl","readline","createInterface","input","crlfDelay","Infinity","model","TraceModel","line","appendEvent","build","contextEntry","catch","e","console","error","routePrefix","traceViewerHandler","relativePath","absolutePath","__dirname","split","serveFile","fileHandler","URL","search","sha1Handler","sha1","includes","show","headless","urlPrefix","start","traceViewerPlaywright","traceViewerBrowser","args","push","channel","registry","findExecutable","executablePathOrDie","undefined","Error","context","launchPersistentContext","sdkLanguage","noDefaultViewport","useWebSocket","controller","ProgressController","_browser","run","progress","_defaultContext","_loadDefaultContextAsIs","extendInjectedScript","consoleApiSource","source","page","pages","on","close","process","exit","mainFrame","goto","showTraceViewer","tracePath","stat","statSync","log","isDirectory","traceViewer","zipFile","dir","mkdtempSync","os","tmpdir","rimraf","sync"],"mappings":";;;;;;;;AAgBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBO,MAAMA,WAAN,CAAkB;AAIvBC,EAAAA,WAAW,CAACC,SAAD,EAAoBC,WAApB,EAAyC;AAAA,SAH5CC,OAG4C;AAAA,SAF5CC,YAE4C;AAClD,SAAKA,YAAL,GAAoBF,WAApB;;AACA,UAAMG,YAAY,GAAGC,cAAKC,IAAL,CAAUN,SAAV,EAAqB,WAArB,CAArB,CAFkD,CAIlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMO,YAAY,GAAGC,YAAGC,WAAH,CAAeT,SAAf,EAA0BU,MAA1B,CAAiCC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAc,QAAd,CAAzC,CAArB;;AACA,UAAMC,UAAU,GAAGN,YAAY,CAACO,GAAb,CAAiBH,IAAI,IAAI;AAC1C,YAAMI,WAAW,GAAGV,cAAKC,IAAL,CAAUN,SAAV,EAAqBW,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBL,IAAI,CAACM,OAAL,CAAa,QAAb,CAAlB,CAArB,CAApB;;AACA,aAAOZ,cAAKa,QAAL,CAAcH,WAAd,CAAP;AACD,KAHkB,CAAnB;AAKA,SAAKb,OAAL,GAAe,IAAIiB,sBAAJ,EAAf;;AAEA,UAAMC,gBAAoC,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAClEA,MAAAA,QAAQ,CAACC,UAAT,GAAsB,GAAtB;AACAD,MAAAA,QAAQ,CAACE,SAAT,CAAmB,cAAnB,EAAmC,kBAAnC;AACAF,MAAAA,QAAQ,CAACG,GAAT,CAAaC,IAAI,CAACC,SAAL,CAAed,UAAf,CAAb;AACA,aAAO,IAAP;AACD,KALD;;AAMA,SAAKX,OAAL,CAAa0B,SAAb,CAAuB,WAAvB,EAAoCR,gBAApC;;AACA,UAAMS,eAAe,GAAG,IAAIC,qCAAJ,CAA8B1B,YAA9B,CAAxB;AACA,QAAI2B,8BAAJ,CAAmB,KAAK7B,OAAxB,EAAiC2B,eAAjC;;AAEA,UAAMG,iBAAqC,GAAG,CAACX,OAAD,EAAUC,QAAV,KAAuB;AACnE,YAAMW,SAAS,GAAGZ,OAAO,CAACa,GAAR,CAAalB,SAAb,CAAuB,YAAYmB,MAAnC,CAAlB;;AACA,YAAMpB,WAAW,GAAGV,cAAKC,IAAL,CAAUN,SAAV,EAAqBiC,SAArB,CAApB;;AACAJ,MAAAA,eAAe,CAACO,KAAhB;AACAd,MAAAA,QAAQ,CAACC,UAAT,GAAsB,GAAtB;AACAD,MAAAA,QAAQ,CAACE,SAAT,CAAmB,cAAnB,EAAmC,kBAAnC;AACA,OAAC,YAAY;AACX,cAAMa,UAAU,GAAG7B,YAAG8B,gBAAH,CAAoBvB,WAAW,GAAG,QAAlC,EAA4C,MAA5C,CAAnB;;AACA,cAAMwB,EAAE,GAAGC,kBAASC,eAAT,CAAyB;AAClCC,UAAAA,KAAK,EAAEL,UAD2B;AAElCM,UAAAA,SAAS,EAAEC;AAFuB,SAAzB,CAAX;;AAIA,cAAMC,KAAK,GAAG,IAAIC,sBAAJ,CAAejB,eAAf,CAAd;;AACA,mBAAW,MAAMkB,IAAjB,IAAyBR,EAAzB,EACEM,KAAK,CAACG,WAAN,CAAkBD,IAAlB;;AACFF,QAAAA,KAAK,CAACI,KAAN;AACA3B,QAAAA,QAAQ,CAACG,GAAT,CAAaC,IAAI,CAACC,SAAL,CAAekB,KAAK,CAACK,YAArB,CAAb;AACD,OAXD,IAWKC,KAXL,CAWWC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAXhB;AAYA,aAAO,IAAP;AACD,KAnBD;;AAoBA,SAAKlD,OAAL,CAAaqD,WAAb,CAAyB,WAAzB,EAAsCvB,iBAAtC;;AAEA,UAAMwB,kBAAsC,GAAG,CAACnC,OAAD,EAAUC,QAAV,KAAuB;AACpE,YAAMmC,YAAY,GAAGpC,OAAO,CAACa,GAAR,CAAalB,SAAb,CAAuB,gBAAgBmB,MAAvC,CAArB;;AACA,YAAMuB,YAAY,GAAGrD,cAAKC,IAAL,CAAUqD,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,KAAvC,EAA8C,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAjD,CAArB;;AACA,aAAO,KAAK1D,OAAL,CAAa2D,SAAb,CAAuBvC,QAAvB,EAAiCoC,YAAjC,CAAP;AACD,KAJD;;AAKA,SAAKxD,OAAL,CAAaqD,WAAb,CAAyB,eAAzB,EAA0CC,kBAA1C;;AAEA,UAAMM,WAA+B,GAAG,CAACzC,OAAD,EAAUC,QAAV,KAAuB;AAC7D,UAAI;AACF,cAAMY,GAAG,GAAG,IAAI6B,GAAJ,CAAQ,qBAAqB1C,OAAO,CAACa,GAArC,CAAZ;AACA,cAAM8B,MAAM,GAAG9B,GAAG,CAAC8B,MAAnB;AACA,YAAIA,MAAM,CAAC,CAAD,CAAN,KAAc,GAAlB,EACE,OAAO,KAAP;AACF,eAAO,KAAK9D,OAAL,CAAa2D,SAAb,CAAuBvC,QAAvB,EAAiC0C,MAAM,CAAChD,SAAP,CAAiB,CAAjB,CAAjC,CAAP;AACD,OAND,CAME,OAAOoC,CAAP,EAAU;AACV,eAAO,KAAP;AACD;AACF,KAVD;;AAWA,SAAKlD,OAAL,CAAa0B,SAAb,CAAuB,OAAvB,EAAgCkC,WAAhC;;AAEA,UAAMG,WAA+B,GAAG,CAAC5C,OAAD,EAAUC,QAAV,KAAuB;AAC7D,YAAM4C,IAAI,GAAG7C,OAAO,CAACa,GAAR,CAAalB,SAAb,CAAuB,SAASmB,MAAhC,CAAb;AACA,UAAI+B,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EACE,OAAO,KAAP;AACF,aAAO,KAAKjE,OAAL,CAAa2D,SAAb,CAAuBvC,QAAvB,EAAiCjB,cAAKC,IAAL,CAAUF,YAAV,EAAyB8D,IAAzB,CAAjC,CAAP;AACD,KALD;;AAMA,SAAKhE,OAAL,CAAaqD,WAAb,CAAyB,QAAzB,EAAmCU,WAAnC;AACD;;AAES,QAAJG,IAAI,CAACC,QAAD,EAA6C;AACrD,UAAMC,SAAS,GAAG,MAAM,KAAKpE,OAAL,CAAaqE,KAAb,EAAxB;AAEA,UAAMC,qBAAqB,GAAG,kCAAiB,IAAjB,CAA9B;AACA,UAAMC,kBAAkB,GAAG,4BAAgB,UAAhB,GAA6B,KAAKtE,YAA7D;AACA,UAAMuE,IAAI,GAAGD,kBAAkB,KAAK,UAAvB,GAAoC,CAC/C,uBAD+C,EAE/C,wBAF+C,CAApC,GAGT,EAHJ;AAIA,QAAI,yBAAJ,EACEC,IAAI,CAACC,IAAL,CAAW,2BAAX,EAVmD,CAYrD;AACA;;AACA,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAIH,kBAAkB,KAAK,UAA3B,EAAuC;AACrC,WAAK,MAAM9D,IAAX,IAAmB,CAAC,UAAD,EAAa,QAAb,EAAuB,QAAvB,CAAnB,EAAqD;AACnD,YAAI;AACFkE,6BAASC,cAAT,CAAwBnE,IAAxB,EAA+BoE,mBAA/B;;AACAH,UAAAA,OAAO,GAAGjE,IAAI,KAAK,UAAT,GAAsBqE,SAAtB,GAAkCrE,IAA5C;AACA;AACD,SAJD,CAIE,OAAOyC,CAAP,EAAU,CACX;AACF;;AAED,UAAIwB,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA,cAAM,IAAIK,KAAJ,CAAW;AACzB;AACA;AACA;AACA,CAJc,CAAN;AAKD;AACF;;AAED,UAAMC,OAAO,GAAG,MAAMV,qBAAqB,CAACC,kBAAD,CAArB,CAAwDU,uBAAxD,CAAgF,4CAAhF,EAAwG,EAAxG,EAA4G;AAChI;AACAP,MAAAA,OAAO,EAAEA,OAFuH;AAGhIQ,MAAAA,WAAW,EAAE,YAHmH;AAIhIV,MAAAA,IAJgI;AAKhIW,MAAAA,iBAAiB,EAAE,IAL6G;AAMhIhB,MAAAA,QANgI;AAOhIiB,MAAAA,YAAY,EAAE;AAPkH,KAA5G,CAAtB;AAUA,UAAMC,UAAU,GAAG,IAAIC,4BAAJ,CAAuB,4CAAvB,EAA+CN,OAAO,CAACO,QAAvD,CAAnB;AACA,UAAMF,UAAU,CAACG,GAAX,CAAe,MAAMC,QAAN,IAAkB;AACrC,YAAMT,OAAO,CAACO,QAAR,CAAiBG,eAAjB,CAAkCC,uBAAlC,CAA0DF,QAA1D,CAAN;AACD,KAFK,CAAN;AAGA,UAAMT,OAAO,CAACY,oBAAR,CAA6B,MAA7B,EAAqCC,gBAAgB,CAACC,MAAtD,CAAN;AACA,UAAM,CAACC,IAAD,IAASf,OAAO,CAACgB,KAAR,EAAf;AAEA,QAAIzB,kBAAkB,KAAK,UAA3B,EACE,MAAM,2BAAewB,IAAf,CAAN;AAEF,QAAI,yBAAJ,EACEA,IAAI,CAACE,EAAL,CAAQ,OAAR,EAAiB,MAAMjB,OAAO,CAACkB,KAAR,CAAc,4CAAd,EAAsCjD,KAAtC,CAA4C,MAAM,CAAE,CAApD,CAAvB,EADF,KAGE8C,IAAI,CAACE,EAAL,CAAQ,OAAR,EAAiB,MAAME,OAAO,CAACC,IAAR,EAAvB;AAEF,UAAML,IAAI,CAACM,SAAL,GAAiBC,IAAjB,CAAsB,4CAAtB,EAA8ClC,SAAS,GAAG,qCAA1D,CAAN;AACA,WAAOY,OAAP;AACD;;AAzJsB;;;;AA4JlB,eAAeuB,eAAf,CAA+BC,SAA/B,EAAkDzG,WAAlD,EAAuEoE,QAAQ,GAAG,KAAlF,EAA8H;AACnI,MAAIsC,IAAJ;;AACA,MAAI;AACFA,IAAAA,IAAI,GAAGnG,YAAGoG,QAAH,CAAYF,SAAZ,CAAP;AACD,GAFD,CAEE,OAAOtD,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACwD,GAAR,CAAa,8BAA6BH,SAAU,EAApD,EADU,CAC+C;;AACzD;AACD;;AAED,MAAIC,IAAI,CAACG,WAAL,EAAJ,EAAwB;AACtB,UAAMC,WAAW,GAAG,IAAIjH,WAAJ,CAAgB4G,SAAhB,EAA2BzG,WAA3B,CAApB;AACA,WAAO,MAAM8G,WAAW,CAAC3C,IAAZ,CAAiBC,QAAjB,CAAb;AACD;;AAED,QAAM2C,OAAO,GAAGN,SAAhB;;AACA,QAAMO,GAAG,GAAGzG,YAAG0G,WAAH,CAAe7G,cAAKC,IAAL,CAAU6G,YAAGC,MAAH,EAAV,EAAwB,kBAAxB,CAAf,CAAZ;;AACAf,EAAAA,OAAO,CAACF,EAAR,CAAW,MAAX,EAAmB,MAAMkB,gBAAOC,IAAP,CAAYL,GAAZ,CAAzB;;AACA,MAAI;AACF,UAAM,yBAAQD,OAAR,EAAiB;AAAEC,MAAAA;AAAF,KAAjB,CAAN;AACD,GAFD,CAEE,OAAO7D,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACwD,GAAR,CAAa,uBAAsBG,OAAQ,EAA3C,EADU,CACsC;;AAChD;AACD;;AACD,QAAMD,WAAW,GAAG,IAAIjH,WAAJ,CAAgBmH,GAAhB,EAAqBhH,WAArB,CAApB;AACA,SAAO,MAAM8G,WAAW,CAAC3C,IAAZ,CAAiBC,QAAjB,CAAb;AACD","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport extract from 'extract-zip';\nimport fs from 'fs';\nimport readline from 'readline';\nimport os from 'os';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport { createPlaywright } from '../../playwright';\nimport { PersistentSnapshotStorage, TraceModel } from './traceModel';\nimport { ServerRouteHandler, HttpServer } from '../../../utils/httpServer';\nimport { SnapshotServer } from '../../snapshot/snapshotServer';\nimport * as consoleApiSource from '../../../generated/consoleApiSource';\nimport { isUnderTest } from '../../../utils/utils';\nimport { internalCallMetadata } from '../../instrumentation';\nimport { ProgressController } from '../../progress';\nimport { BrowserContext } from '../../browserContext';\nimport { registry } from '../../../utils/registry';\nimport { installAppIcon } from '../../chromium/crApp';\n\nexport class TraceViewer {\n  private _server: HttpServer;\n  private _browserName: string;\n\n  constructor(tracesDir: string, browserName: string) {\n    this._browserName = browserName;\n    const resourcesDir = path.join(tracesDir, 'resources');\n\n    // Served by TraceServer\n    // - \"/tracemodel\" - json with trace model.\n    //\n    // Served by TraceViewer\n    // - \"/traceviewer/...\" - our frontend.\n    // - \"/file?filePath\" - local files, used by sources tab.\n    // - \"/sha1/<sha1>\" - trace resource bodies, used by network previews.\n    //\n    // Served by SnapshotServer\n    // - \"/resources/\" - network resources from the trace.\n    // - \"/snapshot/\" - root for snapshot frame.\n    // - \"/snapshot/pageId/...\" - actual snapshot html.\n    // - \"/snapshot/service-worker.js\" - service worker that intercepts snapshot resources\n    //   and translates them into network requests.\n    const actionTraces = fs.readdirSync(tracesDir).filter(name => name.endsWith('.trace'));\n    const debugNames = actionTraces.map(name => {\n      const tracePrefix = path.join(tracesDir, name.substring(0, name.indexOf('.trace')));\n      return path.basename(tracePrefix);\n    });\n\n    this._server = new HttpServer();\n\n    const traceListHandler: ServerRouteHandler = (request, response) => {\n      response.statusCode = 200;\n      response.setHeader('Content-Type', 'application/json');\n      response.end(JSON.stringify(debugNames));\n      return true;\n    };\n    this._server.routePath('/contexts', traceListHandler);\n    const snapshotStorage = new PersistentSnapshotStorage(resourcesDir);\n    new SnapshotServer(this._server, snapshotStorage);\n\n    const traceModelHandler: ServerRouteHandler = (request, response) => {\n      const debugName = request.url!.substring('/context/'.length);\n      const tracePrefix = path.join(tracesDir, debugName);\n      snapshotStorage.clear();\n      response.statusCode = 200;\n      response.setHeader('Content-Type', 'application/json');\n      (async () => {\n        const fileStream = fs.createReadStream(tracePrefix + '.trace', 'utf8');\n        const rl = readline.createInterface({\n          input: fileStream,\n          crlfDelay: Infinity\n        });\n        const model = new TraceModel(snapshotStorage);\n        for await (const line of rl as any)\n          model.appendEvent(line);\n        model.build();\n        response.end(JSON.stringify(model.contextEntry));\n      })().catch(e => console.error(e));\n      return true;\n    };\n    this._server.routePrefix('/context/', traceModelHandler);\n\n    const traceViewerHandler: ServerRouteHandler = (request, response) => {\n      const relativePath = request.url!.substring('/traceviewer/'.length);\n      const absolutePath = path.join(__dirname, '..', '..', '..', 'web', ...relativePath.split('/'));\n      return this._server.serveFile(response, absolutePath);\n    };\n    this._server.routePrefix('/traceviewer/', traceViewerHandler);\n\n    const fileHandler: ServerRouteHandler = (request, response) => {\n      try {\n        const url = new URL('http://localhost' + request.url!);\n        const search = url.search;\n        if (search[0] !== '?')\n          return false;\n        return this._server.serveFile(response, search.substring(1));\n      } catch (e) {\n        return false;\n      }\n    };\n    this._server.routePath('/file', fileHandler);\n\n    const sha1Handler: ServerRouteHandler = (request, response) => {\n      const sha1 = request.url!.substring('/sha1/'.length);\n      if (sha1.includes('/'))\n        return false;\n      return this._server.serveFile(response, path.join(resourcesDir!, sha1));\n    };\n    this._server.routePrefix('/sha1/', sha1Handler);\n  }\n\n  async show(headless: boolean): Promise<BrowserContext> {\n    const urlPrefix = await this._server.start();\n\n    const traceViewerPlaywright = createPlaywright(true);\n    const traceViewerBrowser = isUnderTest() ? 'chromium' : this._browserName;\n    const args = traceViewerBrowser === 'chromium' ? [\n      '--app=data:text/html,',\n      '--window-size=1280,800'\n    ] : [];\n    if (isUnderTest())\n      args.push(`--remote-debugging-port=0`);\n\n    // For Chromium, fall back to the stable channels of popular vendors for work out of the box.\n    // Null means no installation and no channels found.\n    let channel = null;\n    if (traceViewerBrowser === 'chromium') {\n      for (const name of ['chromium', 'chrome', 'msedge']) {\n        try {\n          registry.findExecutable(name)!.executablePathOrDie();\n          channel = name === 'chromium' ? undefined : name;\n          break;\n        } catch (e) {\n        }\n      }\n\n      if (channel === null) {\n        // TODO: language-specific error message, or fallback to default error.\n        throw new Error(`\n==================================================================\nPlease run 'npx playwright install' to install Playwright browsers\n==================================================================\n`);\n      }\n    }\n\n    const context = await traceViewerPlaywright[traceViewerBrowser as 'chromium'].launchPersistentContext(internalCallMetadata(), '', {\n      // TODO: store language in the trace.\n      channel: channel as any,\n      sdkLanguage: 'javascript',\n      args,\n      noDefaultViewport: true,\n      headless,\n      useWebSocket: isUnderTest()\n    });\n\n    const controller = new ProgressController(internalCallMetadata(), context._browser);\n    await controller.run(async progress => {\n      await context._browser._defaultContext!._loadDefaultContextAsIs(progress);\n    });\n    await context.extendInjectedScript('main', consoleApiSource.source);\n    const [page] = context.pages();\n\n    if (traceViewerBrowser === 'chromium')\n      await installAppIcon(page);\n\n    if (isUnderTest())\n      page.on('close', () => context.close(internalCallMetadata()).catch(() => {}));\n    else\n      page.on('close', () => process.exit());\n\n    await page.mainFrame().goto(internalCallMetadata(), urlPrefix + '/traceviewer/traceViewer/index.html');\n    return context;\n  }\n}\n\nexport async function showTraceViewer(tracePath: string, browserName: string, headless = false): Promise<BrowserContext | undefined> {\n  let stat;\n  try {\n    stat = fs.statSync(tracePath);\n  } catch (e) {\n    console.log(`No such file or directory: ${tracePath}`);  // eslint-disable-line no-console\n    return;\n  }\n\n  if (stat.isDirectory()) {\n    const traceViewer = new TraceViewer(tracePath, browserName);\n    return await traceViewer.show(headless);\n  }\n\n  const zipFile = tracePath;\n  const dir = fs.mkdtempSync(path.join(os.tmpdir(), `playwright-trace`));\n  process.on('exit', () => rimraf.sync(dir));\n  try {\n    await extract(zipFile, { dir });\n  } catch (e) {\n    console.log(`Invalid trace file: ${zipFile}`);  // eslint-disable-line no-console\n    return;\n  }\n  const traceViewer = new TraceViewer(dir, browserName);\n  return await traceViewer.show(headless);\n}\n"],"file":"traceViewer.js"}