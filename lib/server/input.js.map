{"version":3,"sources":["../../src/server/input.ts"],"names":["keypadLocation","keyboardLayout","kModifiers","Keyboard","constructor","raw","page","_pressedModifiers","Set","_pressedKeys","_raw","_page","down","key","description","_keyDescriptionForString","autoRepeat","has","code","add","includes","text","keydown","keyCode","keyCodeWithoutLocation","location","_doSlowMo","keyString","usKeyboardLayout","get","shift","shifted","size","up","delete","keyup","insertText","sendText","type","options","delay","undefined","char","press","Promise","f","setTimeout","split","keys","building","push","tokens","promises","length","i","all","_ensureModifiers","modifiers","modifier","Error","restore","Array","from","needDown","isDown","_modifiers","Mouse","_keyboard","_x","_y","_lastButton","_buttons","keyboard","move","x","y","steps","fromX","fromY","middleX","middleY","button","clickCount","click","cc","dblclick","aliases","Map","buildLayoutClosure","USKeyboardLayout","layout","result","definition","shiftedDescription","shiftKey","shiftKeyCode","set","alias","Touchscreen","tap","_browserContext","_options","hasTouch"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../utils/utils';\nimport * as keyboardLayout from './usKeyboardLayout';\nimport * as types from './types';\nimport type { Page } from './page';\n\nexport const keypadLocation = keyboardLayout.keypadLocation;\n\ntype KeyDescription = {\n  keyCode: number,\n  keyCodeWithoutLocation: number,\n  key: string,\n  text: string,\n  code: string,\n  location: number,\n  shifted?: KeyDescription;\n};\n\nconst kModifiers: types.KeyboardModifier[] = ['Alt', 'Control', 'Meta', 'Shift'];\n\nexport interface RawKeyboard {\n  keydown(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number, autoRepeat: boolean, text: string | undefined): Promise<void>;\n  keyup(modifiers: Set<types.KeyboardModifier>, code: string, keyCode: number, keyCodeWithoutLocation: number, key: string, location: number): Promise<void>;\n  sendText(text: string): Promise<void>;\n}\n\nexport class Keyboard {\n  private _pressedModifiers = new Set<types.KeyboardModifier>();\n  private _pressedKeys = new Set<string>();\n  private _raw: RawKeyboard;\n  private _page: Page;\n\n  constructor(raw: RawKeyboard, page: Page) {\n    this._raw = raw;\n    this._page = page;\n  }\n\n  async down(key: string) {\n    const description = this._keyDescriptionForString(key);\n    const autoRepeat = this._pressedKeys.has(description.code);\n    this._pressedKeys.add(description.code);\n    if (kModifiers.includes(description.key as types.KeyboardModifier))\n      this._pressedModifiers.add(description.key as types.KeyboardModifier);\n    const text = description.text;\n    await this._raw.keydown(this._pressedModifiers, description.code, description.keyCode, description.keyCodeWithoutLocation, description.key, description.location, autoRepeat, text);\n    await this._page._doSlowMo();\n  }\n\n  private _keyDescriptionForString(keyString: string): KeyDescription {\n    let description = usKeyboardLayout.get(keyString);\n    assert(description, `Unknown key: \"${keyString}\"`);\n    const shift = this._pressedModifiers.has('Shift');\n    description = shift && description.shifted ? description.shifted : description;\n\n    // if any modifiers besides shift are pressed, no text should be sent\n    if (this._pressedModifiers.size > 1 || (!this._pressedModifiers.has('Shift') && this._pressedModifiers.size === 1))\n      return { ...description, text: '' };\n    return description;\n  }\n\n  async up(key: string) {\n    const description = this._keyDescriptionForString(key);\n    if (kModifiers.includes(description.key as types.KeyboardModifier))\n      this._pressedModifiers.delete(description.key as types.KeyboardModifier);\n    this._pressedKeys.delete(description.code);\n    await this._raw.keyup(this._pressedModifiers, description.code, description.keyCode, description.keyCodeWithoutLocation, description.key, description.location);\n    await this._page._doSlowMo();\n  }\n\n  async insertText(text: string) {\n    await this._raw.sendText(text);\n    await this._page._doSlowMo();\n  }\n\n  async type(text: string, options?: { delay?: number }) {\n    const delay = (options && options.delay) || undefined;\n    for (const char of text) {\n      if (usKeyboardLayout.has(char)) {\n        await this.press(char, { delay });\n      } else {\n        if (delay)\n          await new Promise(f => setTimeout(f, delay));\n        await this.insertText(char);\n      }\n    }\n  }\n\n  async press(key: string, options: { delay?: number } = {}) {\n    function split(keyString: string) {\n      const keys = [];\n      let building = '';\n      for (const char of keyString) {\n        if (char === '+' && building) {\n          keys.push(building);\n          building = '';\n        } else {\n          building += char;\n        }\n      }\n      keys.push(building);\n      return keys;\n    }\n\n    const tokens = split(key);\n    const promises = [];\n    key = tokens[tokens.length - 1];\n    for (let i = 0; i < tokens.length - 1; ++i)\n      promises.push(this.down(tokens[i]));\n    promises.push(this.down(key));\n    if (options.delay) {\n      await Promise.all(promises);\n      await new Promise(f => setTimeout(f, options.delay));\n    }\n    promises.push(this.up(key));\n    for (let i = tokens.length - 2; i >= 0; --i)\n      promises.push(this.up(tokens[i]));\n    await Promise.all(promises);\n  }\n\n  async _ensureModifiers(modifiers: types.KeyboardModifier[]): Promise<types.KeyboardModifier[]> {\n    for (const modifier of modifiers) {\n      if (!kModifiers.includes(modifier))\n        throw new Error('Unknown modifier ' + modifier);\n    }\n    const restore: types.KeyboardModifier[] = Array.from(this._pressedModifiers);\n    const promises: Promise<void>[] = [];\n    for (const key of kModifiers) {\n      const needDown = modifiers.includes(key);\n      const isDown = this._pressedModifiers.has(key);\n      if (needDown && !isDown)\n        promises.push(this.down(key));\n      else if (!needDown && isDown)\n        promises.push(this.up(key));\n    }\n    await Promise.all(promises);\n    return restore;\n  }\n\n  _modifiers(): Set<types.KeyboardModifier> {\n    return this._pressedModifiers;\n  }\n}\n\nexport interface RawMouse {\n  move(x: number, y: number, button: types.MouseButton | 'none', buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>): Promise<void>;\n  down(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void>;\n  up(x: number, y: number, button: types.MouseButton, buttons: Set<types.MouseButton>, modifiers: Set<types.KeyboardModifier>, clickCount: number): Promise<void>;\n}\n\nexport class Mouse {\n  private _keyboard: Keyboard;\n  private _x = 0;\n  private _y = 0;\n  private _lastButton: 'none' | types.MouseButton = 'none';\n  private _buttons = new Set<types.MouseButton>();\n  private _raw: RawMouse;\n  private _page: Page;\n\n  constructor(raw: RawMouse, page: Page) {\n    this._raw = raw;\n    this._page = page;\n    this._keyboard = this._page.keyboard;\n  }\n\n  async move(x: number, y: number, options: { steps?: number } = {}) {\n    const { steps = 1 } = options;\n    const fromX = this._x;\n    const fromY = this._y;\n    this._x = x;\n    this._y = y;\n    for (let i = 1; i <= steps; i++) {\n      const middleX = fromX + (x - fromX) * (i / steps);\n      const middleY = fromY + (y - fromY) * (i / steps);\n      await this._raw.move(middleX, middleY, this._lastButton, this._buttons, this._keyboard._modifiers());\n      await this._page._doSlowMo();\n    }\n  }\n\n  async down(options: { button?: types.MouseButton, clickCount?: number } = {}) {\n    const { button = 'left', clickCount = 1 } = options;\n    this._lastButton = button;\n    this._buttons.add(button);\n    await this._raw.down(this._x, this._y, this._lastButton, this._buttons, this._keyboard._modifiers(), clickCount);\n    await this._page._doSlowMo();\n  }\n\n  async up(options: { button?: types.MouseButton, clickCount?: number } = {}) {\n    const { button = 'left', clickCount = 1 } = options;\n    this._lastButton = 'none';\n    this._buttons.delete(button);\n    await this._raw.up(this._x, this._y, button, this._buttons, this._keyboard._modifiers(), clickCount);\n    await this._page._doSlowMo();\n  }\n\n  async click(x: number, y: number, options: { delay?: number, button?: types.MouseButton, clickCount?: number } = {}) {\n    const { delay = null, clickCount = 1 } = options;\n    if (delay) {\n      this.move(x, y);\n      for (let cc = 1; cc <= clickCount; ++cc) {\n        await this.down({ ...options, clickCount: cc });\n        await new Promise(f => setTimeout(f, delay));\n        await this.up({ ...options, clickCount: cc });\n        if (cc < clickCount)\n          await new Promise(f => setTimeout(f, delay));\n      }\n    } else {\n      const promises = [];\n      promises.push(this.move(x, y));\n      for (let cc = 1; cc <= clickCount; ++cc) {\n        promises.push(this.down({ ...options, clickCount: cc }));\n        promises.push(this.up({ ...options, clickCount: cc }));\n      }\n      await Promise.all(promises);\n    }\n  }\n\n  async dblclick(x: number, y: number, options: { delay?: number, button?: types.MouseButton } = {}) {\n    await this.click(x, y, { ...options, clickCount: 2 });\n  }\n}\n\nconst aliases = new Map<string, string[]>([\n  ['ShiftLeft', ['Shift']],\n  ['ControlLeft', ['Control']],\n  ['AltLeft', ['Alt']],\n  ['MetaLeft', ['Meta']],\n  ['Enter', ['\\n', '\\r']],\n]);\n\nconst usKeyboardLayout = buildLayoutClosure(keyboardLayout.USKeyboardLayout);\n\nfunction buildLayoutClosure(layout: keyboardLayout.KeyboardLayout): Map<string, KeyDescription> {\n  const result = new Map<string, KeyDescription>();\n  for (const code in layout) {\n    const definition = layout[code];\n    const description: KeyDescription = {\n      key: definition.key || '',\n      keyCode: definition.keyCode || 0,\n      keyCodeWithoutLocation: definition.keyCodeWithoutLocation || definition.keyCode || 0,\n      code,\n      text: definition.text || '',\n      location: definition.location || 0,\n    };\n    if (definition.key.length === 1)\n      description.text = description.key;\n\n    // Generate shifted definition.\n    let shiftedDescription: KeyDescription | undefined;\n    if (definition.shiftKey) {\n      assert(definition.shiftKey.length === 1);\n      shiftedDescription = { ...description };\n      shiftedDescription.key = definition.shiftKey;\n      shiftedDescription.text = definition.shiftKey;\n      if (definition.shiftKeyCode)\n        shiftedDescription.keyCode = definition.shiftKeyCode;\n    }\n\n    // Map from code: Digit3 -> { ... descrption, shifted }\n    result.set(code, { ...description, shifted: shiftedDescription });\n\n    // Map from aliases: Shift -> non-shiftable definition\n    if (aliases.has(code)) {\n      for (const alias of aliases.get(code)!)\n        result.set(alias, description);\n    }\n\n    // Do not use numpad when converting keys to codes.\n    if (definition.location)\n      continue;\n\n    // Map from key, no shifted\n    if (description.key.length === 1)\n      result.set(description.key, description);\n\n    // Map from shiftKey, no shifted\n    if (shiftedDescription)\n      result.set(shiftedDescription.key, { ...shiftedDescription, shifted: undefined });\n  }\n  return result;\n}\n\nexport interface RawTouchscreen {\n  tap(x: number, y: number, modifiers: Set<types.KeyboardModifier>): Promise<void>;\n}\n\nexport class Touchscreen {\n  private _raw: RawTouchscreen;\n  private _page: Page;\n\n  constructor(raw: RawTouchscreen, page: Page) {\n    this._raw = raw;\n    this._page = page;\n  }\n\n  async tap(x: number, y: number) {\n    if (!this._page._browserContext._options.hasTouch)\n      throw new Error('hasTouch must be enabled on the browser context before using the touchscreen.');\n    await this._raw.tap(x, y, this._page.keyboard._modifiers());\n    await this._page._doSlowMo();\n  }\n}\n"],"file":"input.js"}