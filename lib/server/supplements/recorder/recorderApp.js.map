{"version":3,"sources":["../../../../src/server/supplements/recorder/recorderApp.ts"],"names":["RecorderApp","EventEmitter","constructor","page","wsEndpoint","_page","setMaxListeners","close","context","_init","_setServerRequestInterceptor","route","request","url","startsWith","uri","substring","length","file","require","resolve","buffer","fs","promises","readFile","fulfill","status","headers","name","value","extensionToMime","path","extname","body","toString","isBase64","continue","exposeBinding","_","data","emit","once","catch","e","console","error","mainFrame","goto","open","inspectedContext","recorderPlaywright","createPlaywright","args","process","env","PWTEST_RECORDER_PORT","push","channel","executablePath","_browser","options","isChromium","customExecutablePath","chromium","launchPersistentContext","sdkLanguage","_options","noDefaultViewport","headless","PWTEST_CLI_HEADLESS","headful","useWebSocket","controller","ProgressController","run","progress","_defaultContext","_loadDefaultContextAsIs","pages","result","setMode","mode","evaluateExpression","window","playwrightSetMode","setFile","playwrightSetFile","setPaused","paused","playwrightSetPaused","setSources","sources","playwrightSetSources","PWTEST_CLI_EXIT","stdout","write","text","setSelector","selector","focus","arg","playwrightSetSelector","updateCallLogs","callLogs","playwrightUpdateLogs","bringToFront"],"mappings":";;;;;;;AAgBA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;AACA;;;;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAyBO,MAAMA,WAAN,SAA0BC,oBAA1B,CAAuC;AAI5CC,EAAAA,WAAW,CAACC,IAAD,EAAaC,UAAb,EAA6C;AACtD;AADsD,SAHhDC,KAGgD;AAAA,SAF/CD,UAE+C;AAEtD,SAAKE,eAAL,CAAqB,CAArB;AACA,SAAKD,KAAL,GAAaF,IAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;;AAEU,QAALG,KAAK,GAAG;AACZ,UAAM,KAAKF,KAAL,CAAWG,OAAX,GAAqBD,KAArB,CAA2B,4CAA3B,CAAN;AACD;;AAEkB,QAALE,KAAK,GAAG;AACpB,UAAM,2BAAe,KAAKJ,KAApB,CAAN;AAEA,UAAM,KAAKA,KAAL,CAAWK,4BAAX,CAAwC,MAAMC,KAAN,IAAe;AAC3D,UAAIA,KAAK,CAACC,OAAN,GAAgBC,GAAhB,GAAsBC,UAAtB,CAAiC,qBAAjC,CAAJ,EAA6D;AAC3D,cAAMC,GAAG,GAAGJ,KAAK,CAACC,OAAN,GAAgBC,GAAhB,GAAsBG,SAAtB,CAAgC,sBAAsBC,MAAtD,CAAZ;;AACA,cAAMC,IAAI,GAAGC,OAAO,CAACC,OAAR,CAAgB,2BAA2BL,GAA3C,CAAb;;AACA,cAAMM,MAAM,GAAG,MAAMC,YAAGC,QAAH,CAAYC,QAAZ,CAAqBN,IAArB,CAArB;AACA,cAAMP,KAAK,CAACc,OAAN,CAAc;AAClBC,UAAAA,MAAM,EAAE,GADU;AAElBC,UAAAA,OAAO,EAAE,CACP;AAAEC,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,KAAK,EAAEC,eAAe,CAACC,cAAKC,OAAL,CAAad,IAAb,CAAD;AAA9C,WADO,CAFS;AAKlBe,UAAAA,IAAI,EAAEZ,MAAM,CAACa,QAAP,CAAgB,QAAhB,CALY;AAMlBC,UAAAA,QAAQ,EAAE;AANQ,SAAd,CAAN;AAQA;AACD;;AACD,YAAMxB,KAAK,CAACyB,QAAN,EAAN;AACD,KAhBK,CAAN;AAkBA,UAAM,KAAK/B,KAAL,CAAWgC,aAAX,CAAyB,UAAzB,EAAqC,KAArC,EAA4C,CAACC,CAAD,EAAIC,IAAJ,KAAkB,KAAKC,IAAL,CAAU,OAAV,EAAmBD,IAAnB,CAA9D,CAAN;;AAEA,SAAKlC,KAAL,CAAWoC,IAAX,CAAgB,OAAhB,EAAyB,MAAM;AAC7B,WAAKD,IAAL,CAAU,OAAV;;AACA,WAAKnC,KAAL,CAAWG,OAAX,GAAqBD,KAArB,CAA2B,4CAA3B,EAAmDmC,KAAnD,CAAyDC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAA9D;AACD,KAHD;;AAKA,UAAMG,SAAS,GAAG,KAAKzC,KAAL,CAAWyC,SAAX,EAAlB;;AACA,UAAMA,SAAS,CAACC,IAAV,CAAe,4CAAf,EAAuC,+BAAvC,CAAN;AACD;;AAEgB,eAAJC,IAAI,CAACC,gBAAD,EAAyD;AACxE,UAAMC,kBAAkB,GAAG/B,OAAO,CAAC,kBAAD,CAAP,CAA4BgC,gBAA5B,CAA6C,IAA7C,CAA3B;;AACA,UAAMC,IAAI,GAAG,CACX,uBADW,EAEX,uBAFW,EAGX,2BAHW,CAAb;AAKA,QAAIC,OAAO,CAACC,GAAR,CAAYC,oBAAhB,EACEH,IAAI,CAACI,IAAL,CAAW,2BAA0BH,OAAO,CAACC,GAAR,CAAYC,oBAAqB,EAAtE;AACF,QAAIE,OAAJ;AACA,QAAIC,cAAJ;;AACA,QAAIT,gBAAgB,CAACU,QAAjB,CAA0BC,OAA1B,CAAkCC,UAAtC,EAAkD;AAChDJ,MAAAA,OAAO,GAAGR,gBAAgB,CAACU,QAAjB,CAA0BC,OAA1B,CAAkCH,OAA5C;AACA,UAAI,CAACA,OAAL,EACEC,cAAc,GAAGT,gBAAgB,CAACU,QAAjB,CAA0BC,OAA1B,CAAkCE,oBAAnD;AACH;;AACD,UAAMtD,OAAO,GAAG,MAAM0C,kBAAkB,CAACa,QAAnB,CAA4BC,uBAA5B,CAAoD,4CAApD,EAA4E,EAA5E,EAAgF;AACpGP,MAAAA,OADoG;AAEpGC,MAAAA,cAFoG;AAGpGO,MAAAA,WAAW,EAAEhB,gBAAgB,CAACiB,QAAjB,CAA0BD,WAH6D;AAIpGb,MAAAA,IAJoG;AAKpGe,MAAAA,iBAAiB,EAAE,IALiF;AAMpGC,MAAAA,QAAQ,EAAE,CAAC,CAACf,OAAO,CAACC,GAAR,CAAYe,mBAAd,IAAsC,6BAAiB,CAACpB,gBAAgB,CAACU,QAAjB,CAA0BC,OAA1B,CAAkCU,OANA;AAOpGC,MAAAA,YAAY,EAAE,CAAC,CAAClB,OAAO,CAACC,GAAR,CAAYC;AAPwE,KAAhF,CAAtB;AASA,UAAMiB,UAAU,GAAG,IAAIC,4BAAJ,CAAuB,4CAAvB,EAA+CjE,OAAO,CAACmD,QAAvD,CAAnB;AACA,UAAMa,UAAU,CAACE,GAAX,CAAe,MAAMC,QAAN,IAAkB;AACrC,YAAMnE,OAAO,CAACmD,QAAR,CAAiBiB,eAAjB,CAAkCC,uBAAlC,CAA0DF,QAA1D,CAAN;AACD,KAFK,CAAN;AAIA,UAAM,CAACxE,IAAD,IAASK,OAAO,CAACsE,KAAR,EAAf;AACA,UAAMC,MAAM,GAAG,IAAI/E,WAAJ,CAAgBG,IAAhB,EAAsBK,OAAO,CAACmD,QAAR,CAAiBC,OAAjB,CAAyBxD,UAA/C,CAAf;AACA,UAAM2E,MAAM,CAACtE,KAAP,EAAN;AACA,WAAOsE,MAAP;AACD;;AAEY,QAAPC,OAAO,CAACC,IAAD,EAA2D;AACtE,UAAM,KAAK5E,KAAL,CAAWyC,SAAX,GAAuBoC,kBAAvB,CAA0C,CAAED,IAAD,IAAgB;AAC/DE,MAAAA,MAAM,CAACC,iBAAP,CAAyBH,IAAzB;AACD,KAF+C,EAE7C/C,QAF6C,EAA1C,EAES,IAFT,EAEe+C,IAFf,EAEqB,MAFrB,EAE6BvC,KAF7B,CAEmC,MAAM,CAAE,CAF3C,CAAN;AAGD;;AAEY,QAAP2C,OAAO,CAACnE,IAAD,EAA8B;AACzC,UAAM,KAAKb,KAAL,CAAWyC,SAAX,GAAuBoC,kBAAvB,CAA0C,CAAEhE,IAAD,IAAkB;AACjEiE,MAAAA,MAAM,CAACG,iBAAP,CAAyBpE,IAAzB;AACD,KAF+C,EAE7CgB,QAF6C,EAA1C,EAES,IAFT,EAEehB,IAFf,EAEqB,MAFrB,EAE6BwB,KAF7B,CAEmC,MAAM,CAAE,CAF3C,CAAN;AAGD;;AAEc,QAAT6C,SAAS,CAACC,MAAD,EAAiC;AAC9C,UAAM,KAAKnF,KAAL,CAAWyC,SAAX,GAAuBoC,kBAAvB,CAA0C,CAAEM,MAAD,IAAqB;AACpEL,MAAAA,MAAM,CAACM,mBAAP,CAA2BD,MAA3B;AACD,KAF+C,EAE7CtD,QAF6C,EAA1C,EAES,IAFT,EAEesD,MAFf,EAEuB,MAFvB,EAE+B9C,KAF/B,CAEqC,MAAM,CAAE,CAF7C,CAAN;AAGD;;AAEe,QAAVgD,UAAU,CAACC,OAAD,EAAmC;AACjD,UAAM,KAAKtF,KAAL,CAAWyC,SAAX,GAAuBoC,kBAAvB,CAA0C,CAAES,OAAD,IAAuB;AACtER,MAAAA,MAAM,CAACS,oBAAP,CAA4BD,OAA5B;AACD,KAF+C,EAE7CzD,QAF6C,EAA1C,EAES,IAFT,EAEeyD,OAFf,EAEwB,MAFxB,EAEgCjD,KAFhC,CAEsC,MAAM,CAAE,CAF9C,CAAN,CADiD,CAKjD;;AACA;AACE,UAAIW,OAAO,CAACC,GAAR,CAAYuC,eAAZ,IAA+BF,OAAO,CAAC1E,MAA3C,EAAmD;AACjDoC,QAAAA,OAAO,CAACyC,MAAR,CAAeC,KAAf,CAAqB,kCAArB;AACA1C,QAAAA,OAAO,CAACyC,MAAR,CAAeC,KAAf,CAAqBJ,OAAO,CAAC,CAAD,CAAP,CAAWK,IAAhC;AACA3C,QAAAA,OAAO,CAACyC,MAAR,CAAeC,KAAf,CAAqB,kCAArB;AACD;AACF;AACF;;AAEgB,QAAXE,WAAW,CAACC,QAAD,EAAmBC,KAAnB,EAAmD;AAClE,UAAM,KAAK9F,KAAL,CAAWyC,SAAX,GAAuBoC,kBAAvB,CAA0C,CAAEkB,GAAD,IAAc;AAC7DjB,MAAAA,MAAM,CAACkB,qBAAP,CAA6BD,GAAG,CAACF,QAAjC,EAA2CE,GAAG,CAACD,KAA/C;AACD,KAF+C,EAE7CjE,QAF6C,EAA1C,EAES,IAFT,EAEe;AAAEgE,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAFf,EAEoC,MAFpC,EAE4CzD,KAF5C,CAEkD,MAAM,CAAE,CAF1D,CAAN;AAGD;;AAEmB,QAAd4D,cAAc,CAACC,QAAD,EAAqC;AACvD,UAAM,KAAKlG,KAAL,CAAWyC,SAAX,GAAuBoC,kBAAvB,CAA0C,CAAEqB,QAAD,IAAyB;AACxEpB,MAAAA,MAAM,CAACqB,oBAAP,CAA4BD,QAA5B;AACD,KAF+C,EAE7CrE,QAF6C,EAA1C,EAES,IAFT,EAEeqE,QAFf,EAEyB,MAFzB,EAEiC7D,KAFjC,CAEuC,MAAM,CAAE,CAF/C,CAAN;AAGD;;AAEiB,QAAZ+D,YAAY,GAAG;AACnB,UAAM,KAAKpG,KAAL,CAAWoG,YAAX,EAAN;AACD;;AAlI2C;;;AAqI9C,MAAM3E,eAA0C,GAAG;AACjD,UAAQ,UADyC;AAEjD,WAAS,WAFwC;AAGjD,WAAS,YAHwC;AAIjD,SAAO,wBAJ0C;AAKjD,UAAQ,WALyC;AAMjD,UAAQ,UANyC;AAOjD,UAAQ,eAPyC;AAQjD,WAAS,YARwC;AASjD,WAAS,WATwC;AAUjD,YAAU;AAVuC,CAAnD","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport { Page } from '../../page';\nimport { ProgressController } from '../../progress';\nimport { EventEmitter } from 'events';\nimport { internalCallMetadata } from '../../instrumentation';\nimport type { CallLog, EventData, Mode, Source } from './recorderTypes';\nimport { BrowserContext } from '../../browserContext';\nimport { isUnderTest } from '../../../utils/utils';\nimport { installAppIcon } from '../../chromium/crApp';\n\ndeclare global {\n  interface Window {\n    playwrightSetFile: (file: string) => void;\n    playwrightSetMode: (mode: Mode) => void;\n    playwrightSetPaused: (paused: boolean) => void;\n    playwrightSetSources: (sources: Source[]) => void;\n    playwrightSetSelector: (selector: string, focus?: boolean) => void;\n    playwrightUpdateLogs: (callLogs: CallLog[]) => void;\n    dispatch(data: EventData): Promise<void>;\n  }\n}\n\nexport class RecorderApp extends EventEmitter {\n  private _page: Page;\n  readonly wsEndpoint: string | undefined;\n\n  constructor(page: Page, wsEndpoint: string | undefined) {\n    super();\n    this.setMaxListeners(0);\n    this._page = page;\n    this.wsEndpoint = wsEndpoint;\n  }\n\n  async close() {\n    await this._page.context().close(internalCallMetadata());\n  }\n\n  private async _init() {\n    await installAppIcon(this._page);\n\n    await this._page._setServerRequestInterceptor(async route => {\n      if (route.request().url().startsWith('https://playwright/')) {\n        const uri = route.request().url().substring('https://playwright/'.length);\n        const file = require.resolve('../../../web/recorder/' + uri);\n        const buffer = await fs.promises.readFile(file);\n        await route.fulfill({\n          status: 200,\n          headers: [\n            { name: 'Content-Type', value: extensionToMime[path.extname(file)] }\n          ],\n          body: buffer.toString('base64'),\n          isBase64: true\n        });\n        return;\n      }\n      await route.continue();\n    });\n\n    await this._page.exposeBinding('dispatch', false, (_, data: any) => this.emit('event', data));\n\n    this._page.once('close', () => {\n      this.emit('close');\n      this._page.context().close(internalCallMetadata()).catch(e => console.error(e));\n    });\n\n    const mainFrame = this._page.mainFrame();\n    await mainFrame.goto(internalCallMetadata(), 'https://playwright/index.html');\n  }\n\n  static async open(inspectedContext: BrowserContext): Promise<RecorderApp> {\n    const recorderPlaywright = require('../../playwright').createPlaywright(true) as import('../../playwright').Playwright;\n    const args = [\n      '--app=data:text/html,',\n      '--window-size=600,600',\n      '--window-position=1280,10',\n    ];\n    if (process.env.PWTEST_RECORDER_PORT)\n      args.push(`--remote-debugging-port=${process.env.PWTEST_RECORDER_PORT}`);\n    let channel: string | undefined;\n    let executablePath: string | undefined;\n    if (inspectedContext._browser.options.isChromium) {\n      channel = inspectedContext._browser.options.channel;\n      if (!channel)\n        executablePath = inspectedContext._browser.options.customExecutablePath;\n    }\n    const context = await recorderPlaywright.chromium.launchPersistentContext(internalCallMetadata(), '', {\n      channel,\n      executablePath,\n      sdkLanguage: inspectedContext._options.sdkLanguage,\n      args,\n      noDefaultViewport: true,\n      headless: !!process.env.PWTEST_CLI_HEADLESS || (isUnderTest() && !inspectedContext._browser.options.headful),\n      useWebSocket: !!process.env.PWTEST_RECORDER_PORT\n    });\n    const controller = new ProgressController(internalCallMetadata(), context._browser);\n    await controller.run(async progress => {\n      await context._browser._defaultContext!._loadDefaultContextAsIs(progress);\n    });\n\n    const [page] = context.pages();\n    const result = new RecorderApp(page, context._browser.options.wsEndpoint);\n    await result._init();\n    return result;\n  }\n\n  async setMode(mode: 'none' | 'recording' | 'inspecting'): Promise<void> {\n    await this._page.mainFrame().evaluateExpression(((mode: Mode) => {\n      window.playwrightSetMode(mode);\n    }).toString(), true, mode, 'main').catch(() => {});\n  }\n\n  async setFile(file: string): Promise<void> {\n    await this._page.mainFrame().evaluateExpression(((file: string) => {\n      window.playwrightSetFile(file);\n    }).toString(), true, file, 'main').catch(() => {});\n  }\n\n  async setPaused(paused: boolean): Promise<void> {\n    await this._page.mainFrame().evaluateExpression(((paused: boolean) => {\n      window.playwrightSetPaused(paused);\n    }).toString(), true, paused, 'main').catch(() => {});\n  }\n\n  async setSources(sources: Source[]): Promise<void> {\n    await this._page.mainFrame().evaluateExpression(((sources: Source[]) => {\n      window.playwrightSetSources(sources);\n    }).toString(), true, sources, 'main').catch(() => {});\n\n    // Testing harness for runCLI mode.\n    {\n      if (process.env.PWTEST_CLI_EXIT && sources.length) {\n        process.stdout.write('\\n-------------8<-------------\\n');\n        process.stdout.write(sources[0].text);\n        process.stdout.write('\\n-------------8<-------------\\n');\n      }\n    }\n  }\n\n  async setSelector(selector: string, focus?: boolean): Promise<void> {\n    await this._page.mainFrame().evaluateExpression(((arg: any) => {\n      window.playwrightSetSelector(arg.selector, arg.focus);\n    }).toString(), true, { selector, focus }, 'main').catch(() => {});\n  }\n\n  async updateCallLogs(callLogs: CallLog[]): Promise<void> {\n    await this._page.mainFrame().evaluateExpression(((callLogs: CallLog[]) => {\n      window.playwrightUpdateLogs(callLogs);\n    }).toString(), true, callLogs, 'main').catch(() => {});\n  }\n\n  async bringToFront() {\n    await this._page.bringToFront();\n  }\n}\n\nconst extensionToMime: { [key: string]: string } = {\n  '.css': 'text/css',\n  '.html': 'text/html',\n  '.jpeg': 'image/jpeg',\n  '.js': 'application/javascript',\n  '.png': 'image/png',\n  '.ttf': 'font/ttf',\n  '.svg': 'image/svg+xml',\n  '.webp': 'image/webp',\n  '.woff': 'font/woff',\n  '.woff2': 'font/woff2',\n};\n"],"file":"recorderApp.js"}