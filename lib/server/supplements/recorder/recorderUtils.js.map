{"version":3,"sources":["../../../../src/server/supplements/recorder/recorderUtils.ts"],"names":["metadataToCallLog","metadata","status","title","apiName","method","params","info","event","error","url","selector","duration","endTime","startTime","undefined","pauseStartTime","pauseEndTime","Math","max","callLog","id","messages","log"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKO,SAASA,iBAAT,CAA2BC,QAA3B,EAAmDC,MAAnD,EAAmF;AAAA;;AACxF,MAAIC,KAAK,GAAGF,QAAQ,CAACG,OAAT,IAAoBH,QAAQ,CAACI,MAAzC;AACA,MAAIJ,QAAQ,CAACI,MAAT,KAAoB,kBAAxB,EACEF,KAAK,IAAK,IAAGF,QAAQ,CAACK,MAAT,CAAgBC,IAAhB,CAAqBC,KAAM,GAAxC;AACF,MAAIP,QAAQ,CAACQ,KAAb,EACEP,MAAM,GAAG,OAAT;AACF,QAAMI,MAAM,GAAG;AACbI,IAAAA,GAAG,sBAAET,QAAQ,CAACK,MAAX,qDAAE,iBAAiBI,GADT;AAEbC,IAAAA,QAAQ,uBAAEV,QAAQ,CAACK,MAAX,sDAAE,kBAAiBK;AAFd,GAAf;AAIA,MAAIC,QAAQ,GAAGX,QAAQ,CAACY,OAAT,GAAmBZ,QAAQ,CAACY,OAAT,GAAmBZ,QAAQ,CAACa,SAA/C,GAA2DC,SAA1E;;AACA,MAAI,OAAOH,QAAP,KAAoB,QAApB,IAAgCX,QAAQ,CAACe,cAAzC,IAA2Df,QAAQ,CAACgB,YAAxE,EAAsF;AACpFL,IAAAA,QAAQ,IAAKX,QAAQ,CAACgB,YAAT,GAAwBhB,QAAQ,CAACe,cAA9C;AACAJ,IAAAA,QAAQ,GAAGM,IAAI,CAACC,GAAL,CAASP,QAAT,EAAmB,CAAnB,CAAX;AACD;;AACD,QAAMQ,OAAgB,GAAG;AACvBC,IAAAA,EAAE,EAAEpB,QAAQ,CAACoB,EADU;AAEvBC,IAAAA,QAAQ,EAAErB,QAAQ,CAACsB,GAFI;AAGvBpB,IAAAA,KAHuB;AAIvBD,IAAAA,MAJuB;AAKvBO,IAAAA,KAAK,EAAER,QAAQ,CAACQ,KALO;AAMvBH,IAAAA,MANuB;AAOvBM,IAAAA;AAPuB,GAAzB;AASA,SAAOQ,OAAP;AACD","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CallMetadata } from '../../instrumentation';\nimport { CallLog, CallLogStatus } from './recorderTypes';\n\nexport function metadataToCallLog(metadata: CallMetadata, status: CallLogStatus): CallLog {\n  let title = metadata.apiName || metadata.method;\n  if (metadata.method === 'waitForEventInfo')\n    title += `(${metadata.params.info.event})`;\n  if (metadata.error)\n    status = 'error';\n  const params = {\n    url: metadata.params?.url,\n    selector: metadata.params?.selector,\n  };\n  let duration = metadata.endTime ? metadata.endTime - metadata.startTime : undefined;\n  if (typeof duration === 'number' && metadata.pauseStartTime && metadata.pauseEndTime) {\n    duration -= (metadata.pauseEndTime - metadata.pauseStartTime);\n    duration = Math.max(duration, 0);\n  }\n  const callLog: CallLog = {\n    id: metadata.id,\n    messages: metadata.log,\n    title,\n    status,\n    error: metadata.error,\n    params,\n    duration,\n  };\n  return callLog;\n}\n"],"file":"recorderUtils.js"}