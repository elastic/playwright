{"version":3,"sources":["../../../../src/server/supplements/recorder/csharp.ts"],"names":["CSharpLanguageGenerator","id","fileName","highlighter","generateAction","actionInContext","action","pageAlias","formatter","CSharpFormatter","newLine","add","name","url","quote","format","subject","isMainFrame","frameName","frameUrl","signals","dialog","dialogAlias","lines","actionCall","_generateActionCall","waitForNavigation","push","download","unshift","downloadAlias","popup","popupAlias","line","assertNavigation","isPage","Error","method","clickCount","modifiers","options","button","length","Object","entries","selector","optionsString","formatObject","text","files","shortcut","key","join","generateHeader","toPascal","browserName","launchOptions","formatContextOptions","contextOptions","deviceName","generateFooter","saveStorage","storageStateLine","value","indent","includes","getClassName","Array","isArray","map","o","keys","tokens","property","getPropertyName","String","toUpperCase","slice","device","deviceDescriptors","constructor","offset","_baseIndent","_baseOffset","_lines","repeat","prepend","trim","split","concat","spaces","previousLine","startsWith","substring","extraSpaces","test","endsWith","replace"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BrowserContextOptions } from '../../../..';\nimport { LanguageGenerator, LanguageGeneratorOptions, sanitizeDeviceOptions, toSignalMap } from './language';\nimport { ActionInContext } from './codeGenerator';\nimport { actionTitle, Action } from './recorderActions';\nimport { MouseClickOptions, toModifiers } from './utils';\nimport deviceDescriptors from '../../deviceDescriptors';\n\nexport class CSharpLanguageGenerator implements LanguageGenerator {\n  id = 'csharp';\n  fileName = 'C#';\n  highlighter = 'csharp';\n\n  generateAction(actionInContext: ActionInContext): string {\n    const { action, pageAlias } = actionInContext;\n    const formatter = new CSharpFormatter(8);\n    formatter.newLine();\n    formatter.add('// ' + actionTitle(action));\n\n    if (action.name === 'openPage') {\n      formatter.add(`var ${pageAlias} = await context.NewPageAsync();`);\n      if (action.url && action.url !== 'about:blank' && action.url !== 'chrome://newtab/')\n        formatter.add(`await ${pageAlias}.GotoAsync(${quote(action.url)});`);\n      return formatter.format();\n    }\n\n    const subject = actionInContext.isMainFrame ? pageAlias :\n      (actionInContext.frameName ?\n        `${pageAlias}.Frame(${quote(actionInContext.frameName)})` :\n        `${pageAlias}.FrameByUrl(${quote(actionInContext.frameUrl)})`);\n\n    const signals = toSignalMap(action);\n\n    if (signals.dialog) {\n      formatter.add(`    void ${pageAlias}_Dialog${signals.dialog.dialogAlias}_EventHandler(object sender, IDialog dialog)\n      {\n          Console.WriteLine($\"Dialog message: {dialog.Message}\");\n          dialog.DismissAsync();\n          ${pageAlias}.Dialog -= ${pageAlias}_Dialog${signals.dialog.dialogAlias}_EventHandler;\n      }\n      ${pageAlias}.Dialog += ${pageAlias}_Dialog${signals.dialog.dialogAlias}_EventHandler;`);\n    }\n\n    const lines: string[] = [];\n    const actionCall = this._generateActionCall(action, actionInContext.isMainFrame);\n    if (signals.waitForNavigation) {\n      lines.push(`await ${pageAlias}.RunAndWaitForNavigationAsync(async () =>`);\n      lines.push(`{`);\n      lines.push(`    await ${subject}.${actionCall};`);\n      lines.push(`}/*, new ${actionInContext.isMainFrame ? 'Page' : 'Frame'}WaitForNavigationOptions`);\n      lines.push(`{`);\n      lines.push(`    UrlString = ${quote(signals.waitForNavigation.url)}`);\n      lines.push(`}*/);`);\n    } else {\n      lines.push(`await ${subject}.${actionCall};`);\n    }\n\n    if (signals.download) {\n      lines.unshift(`var download${signals.download.downloadAlias} = await ${pageAlias}.RunAndWaitForDownloadAsync(async () =>\\n{`);\n      lines.push(`});`);\n    }\n\n    if (signals.popup) {\n      lines.unshift(`var ${signals.popup.popupAlias} = await ${pageAlias}.RunAndWaitForPopupAsync(async () =>\\n{`);\n      lines.push(`});`);\n    }\n\n    for (const line of lines)\n      formatter.add(line);\n\n    if (signals.assertNavigation)\n      formatter.add(`  // Assert.Equal(${quote(signals.assertNavigation.url)}, ${pageAlias}.Url);`);\n    return formatter.format();\n  }\n\n  private _generateActionCall(action: Action, isPage: boolean): string {\n    switch (action.name) {\n      case 'openPage':\n        throw Error('Not reached');\n      case 'closePage':\n        return 'CloseAsync()';\n      case 'click': {\n        let method = 'Click';\n        if (action.clickCount === 2)\n          method = 'DblClick';\n        const modifiers = toModifiers(action.modifiers);\n        const options: MouseClickOptions = {};\n        if (action.button !== 'left')\n          options.button = action.button;\n        if (modifiers.length)\n          options.modifiers = modifiers;\n        if (action.clickCount > 2)\n          options.clickCount = action.clickCount;\n        if (!Object.entries(options).length)\n          return `${method}Async(${quote(action.selector)})`;\n        const optionsString = formatObject(options, '    ', (isPage ? 'Page' : 'Frame') + method + 'Options');\n        return `${method}Async(${quote(action.selector)}, ${optionsString})`;\n      }\n      case 'check':\n        return `CheckAsync(${quote(action.selector)})`;\n      case 'uncheck':\n        return `UncheckAsync(${quote(action.selector)})`;\n      case 'fill':\n        return `FillAsync(${quote(action.selector)}, ${quote(action.text)})`;\n      case 'setInputFiles':\n        return `SetInputFilesAsync(${quote(action.selector)}, ${formatObject(action.files)})`;\n      case 'press': {\n        const modifiers = toModifiers(action.modifiers);\n        const shortcut = [...modifiers, action.key].join('+');\n        return `PressAsync(${quote(action.selector)}, ${quote(shortcut)})`;\n      }\n      case 'navigate':\n        return `GotoAsync(${quote(action.url)})`;\n      case 'select':\n        return `SelectOptionAsync(${quote(action.selector)}, ${formatObject(action.options)})`;\n    }\n  }\n\n  generateHeader(options: LanguageGeneratorOptions): string {\n    const formatter = new CSharpFormatter(0);\n    formatter.add(`\n      using Microsoft.Playwright;\n      using System;\n      using System.Threading.Tasks;\n\n      class Program\n      {\n          public static async Task Main()\n          {\n              using var playwright = await Playwright.CreateAsync();\n              await using var browser = await playwright.${toPascal(options.browserName)}.LaunchAsync(${formatObject(options.launchOptions, '    ', 'BrowserTypeLaunchOptions')});\n              var context = await browser.NewContextAsync(${formatContextOptions(options.contextOptions, options.deviceName)});`);\n    return formatter.format();\n  }\n\n  generateFooter(saveStorage: string | undefined): string {\n    const storageStateLine = saveStorage ? `\\n        await context.StorageStateAsync(new BrowserContextStorageStateOptions\\n        {\\n            Path = ${quote(saveStorage)}\\n        });\\n` : '';\n    return `${storageStateLine}    }\n}\\n`;\n  }\n}\n\nfunction formatObject(value: any, indent = '    ', name = ''): string {\n  if (typeof value === 'string') {\n    if (['permissions', 'colorScheme', 'modifiers', 'button'].includes(name))\n      return `${getClassName(name)}.${toPascal(value)}`;\n    return quote(value);\n  }\n  if (Array.isArray(value))\n    return `new[] { ${value.map(o => formatObject(o, indent, name)).join(', ')} }`;\n  if (typeof value === 'object') {\n    const keys = Object.keys(value);\n    if (!keys.length)\n      return name ? `new ${getClassName(name)}` : '';\n    const tokens: string[] = [];\n    for (const key of keys) {\n      const property = getPropertyName(key);\n      tokens.push(`${property} = ${formatObject(value[key], indent, key)},`);\n    }\n    if (name)\n      return `new ${getClassName(name)}\\n{\\n${indent}${tokens.join(`\\n${indent}`)}\\n${indent}}`;\n    return `{\\n${indent}${tokens.join(`\\n${indent}`)}\\n${indent}}`;\n  }\n  if (name === 'latitude' || name === 'longitude')\n    return String(value) + 'm';\n\n  return String(value);\n}\n\nfunction getClassName(value: string): string {\n  switch (value) {\n    case 'viewport': return 'ViewportSize';\n    case 'proxy': return 'ProxySettings';\n    case 'permissions': return 'ContextPermission';\n    case 'modifiers': return 'KeyboardModifier';\n    case 'button': return 'MouseButton';\n    default: return toPascal(value);\n  }\n}\n\nfunction getPropertyName(key: string): string {\n  switch (key) {\n    case 'storageState': return 'StorageStatePath';\n    case 'viewport': return 'ViewportSize';\n    default: return toPascal(key);\n  }\n}\n\nfunction toPascal(value: string): string {\n  return value[0].toUpperCase() + value.slice(1);\n}\n\nfunction formatContextOptions(options: BrowserContextOptions, deviceName: string | undefined): string {\n  const device = deviceName && deviceDescriptors[deviceName];\n  if (!device) {\n    if (!Object.entries(options).length)\n      return '';\n    return formatObject(options, '    ', 'BrowserNewContextOptions');\n  }\n\n  options = sanitizeDeviceOptions(device, options);\n  if (!Object.entries(options).length)\n    return `playwright.Devices[${quote(deviceName!)}]`;\n\n  return formatObject(options, '    ', `BrowserNewContextOptions(playwright.Devices[${quote(deviceName!)}])`);\n}\n\nclass CSharpFormatter {\n  private _baseIndent: string;\n  private _baseOffset: string;\n  private _lines: string[] = [];\n\n  constructor(offset = 0) {\n    this._baseIndent = ' '.repeat(4);\n    this._baseOffset = ' '.repeat(offset);\n  }\n\n  prepend(text: string) {\n    this._lines = text.trim().split('\\n').map(line => line.trim()).concat(this._lines);\n  }\n\n  add(text: string) {\n    this._lines.push(...text.trim().split('\\n').map(line => line.trim()));\n  }\n\n  newLine() {\n    this._lines.push('');\n  }\n\n  format(): string {\n    let spaces = '';\n    let previousLine = '';\n    return this._lines.map((line: string) => {\n      if (line === '')\n        return line;\n      if (line.startsWith('}') || line.startsWith(']') || line.includes('});') || line === ');')\n        spaces = spaces.substring(this._baseIndent.length);\n\n      const extraSpaces = /^(for|while|if).*\\(.*\\)$/.test(previousLine) ? this._baseIndent : '';\n      previousLine = line;\n\n      line = spaces + extraSpaces + line;\n      if (line.endsWith('{') || line.endsWith('[') || line.endsWith('('))\n        spaces += this._baseIndent;\n      if (line.endsWith('));'))\n        spaces = spaces.substring(this._baseIndent.length);\n\n      return this._baseOffset + line;\n    }).join('\\n');\n  }\n}\n\nfunction quote(text: string) {\n  return `\"${text.replace(/[\"]/g, '\\\\\"')}\"`;\n}"],"file":"csharp.js"}