{"version":3,"sources":["../../../../src/server/supplements/har/harTracer.ts"],"names":["FALLBACK_HTTP_VERSION","HarTracer","constructor","context","options","_options","_log","_pageEntries","Map","_entries","_lastPage","_barrierPromises","Set","version","creator","name","require","browser","_browser","pages","entries","on","BrowserContext","Events","Page","page","_ensurePageEntry","Request","request","_onRequest","RequestFinished","_onRequestFinished","catch","Response","response","_onResponse","pageEntry","get","DOMContentLoaded","_onDOMContentLoaded","Load","_onLoad","startedDateTime","Date","id","title","pageTimings","onContentLoad","onLoad","set","push","promise","mainFrame","evaluateExpression","String","document","domContentLoaded","performance","timing","domContentLoadedEventStart","undefined","then","result","_addBarrier","loaded","loadEventStart","race","Promise","f","delete","add","frame","_page","url","network","parsedURL","harEntry","pageref","time","method","httpVersion","cookies","headers","queryString","searchParams","map","e","value","postData","postDataForHar","headersSize","bodySize","calculateRequestBodySize","status","statusText","content","size","mimeType","headerValue","redirectURL","_transferSize","cache","beforeRequest","afterRequest","timings","send","wait","receive","redirectedFrom","fromEntry","normaliseHttpVersion","_httpVersion","transferSize","calculateResponseHeadersSize","calculateRequestHeadersSize","body","buffer","length","compression","omitContent","text","toString","encoding","header","cookiesForHar","valueOf","startTime","dns","domainLookupEnd","helper","millisToRoundishMillis","domainLookupStart","connect","connectEnd","connectStart","ssl","secureConnectionStart","responseStart","requestStart","_responseEndTiming","reduce","pre","cur","serverAddr","server","ipAddress","serverIPAddress","port","_serverPort","securityDetails","details","_securityDetails","flush","all","fs","promises","writeFile","path","JSON","stringify","log","postDataBuffer","contentType","params","parsed","URLSearchParams","separator","split","c","parseCookie","cookie","first","pair","indexOfEquals","indexOf","substr","trim","domain","expires","httpOnly","now","sameSite","secure","protocol","rawHeaders","URL","pathname","TextEncoder","encode"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { URL } from 'url';\nimport fs from 'fs';\nimport { BrowserContext } from '../../browserContext';\nimport { helper } from '../../helper';\nimport * as network from '../../network';\nimport { Page } from '../../page';\nimport * as har from './har';\nimport * as types from '../../types';\n\nconst FALLBACK_HTTP_VERSION = 'HTTP/1.1';\n\ntype HarOptions = {\n  path: string;\n  omitContent?: boolean;\n};\n\nexport class HarTracer {\n  private _options: HarOptions;\n  private _log: har.Log;\n  private _pageEntries = new Map<Page, har.Page>();\n  private _entries = new Map<network.Request, har.Entry>();\n  private _lastPage = 0;\n  private _barrierPromises = new Set<Promise<void>>();\n\n  constructor(context: BrowserContext, options: HarOptions) {\n    this._options = options;\n    this._log = {\n      version: '1.2',\n      creator: {\n        name: 'Playwright',\n        version: require('../../../../package.json')['version'],\n      },\n      browser: {\n        name: context._browser.options.name,\n        version: context._browser.version()\n      },\n      pages: [],\n      entries: []\n    };\n    context.on(BrowserContext.Events.Page, (page: Page) => this._ensurePageEntry(page));\n    context.on(BrowserContext.Events.Request, (request: network.Request) => this._onRequest(request));\n    context.on(BrowserContext.Events.RequestFinished, (request: network.Request) => this._onRequestFinished(request).catch(() => {}));\n    context.on(BrowserContext.Events.Response, (response: network.Response) => this._onResponse(response));\n  }\n\n  private _ensurePageEntry(page: Page) {\n    let pageEntry = this._pageEntries.get(page);\n    if (!pageEntry) {\n      page.on(Page.Events.DOMContentLoaded, () => this._onDOMContentLoaded(page));\n      page.on(Page.Events.Load, () => this._onLoad(page));\n\n      pageEntry = {\n        startedDateTime: new Date(),\n        id: `page_${this._lastPage++}`,\n        title: '',\n        pageTimings: {\n          onContentLoad: -1,\n          onLoad: -1,\n        },\n      };\n      this._pageEntries.set(page, pageEntry);\n      this._log.pages.push(pageEntry);\n    }\n    return pageEntry;\n  }\n\n  private _onDOMContentLoaded(page: Page) {\n    const pageEntry = this._ensurePageEntry(page);\n    const promise = page.mainFrame().evaluateExpression(String(() => {\n      return {\n        title: document.title,\n        domContentLoaded: performance.timing.domContentLoadedEventStart,\n      };\n    }), true, undefined, 'utility').then(result => {\n      pageEntry.title = result.title;\n      pageEntry.pageTimings.onContentLoad = result.domContentLoaded;\n    }).catch(() => {});\n    this._addBarrier(page, promise);\n  }\n\n  private _onLoad(page: Page) {\n    const pageEntry = this._ensurePageEntry(page);\n    const promise = page.mainFrame().evaluateExpression(String(() => {\n      return {\n        title: document.title,\n        loaded: performance.timing.loadEventStart,\n      };\n    }), true, undefined, 'utility').then(result => {\n      pageEntry.title = result.title;\n      pageEntry.pageTimings.onLoad = result.loaded;\n    }).catch(() => {});\n    this._addBarrier(page, promise);\n  }\n\n  private _addBarrier(page: Page, promise: Promise<void>) {\n    const race = Promise.race([\n      new Promise<void>(f => page.on('close', () => {\n        this._barrierPromises.delete(race);\n        f();\n      })),\n      promise\n    ]) as Promise<void>;\n    this._barrierPromises.add(race);\n  }\n\n  private _onRequest(request: network.Request) {\n    const page = request.frame()._page;\n    const url = network.parsedURL(request.url());\n    if (!url)\n      return;\n\n    const pageEntry = this._ensurePageEntry(page);\n    const harEntry: har.Entry = {\n      pageref: pageEntry.id,\n      startedDateTime: new Date(),\n      time: -1,\n      request: {\n        method: request.method(),\n        url: request.url(),\n        httpVersion: FALLBACK_HTTP_VERSION,\n        cookies: [],\n        headers: [],\n        queryString: [...url.searchParams].map(e => ({ name: e[0], value: e[1] })),\n        postData: postDataForHar(request),\n        headersSize: -1,\n        bodySize: calculateRequestBodySize(request) || 0,\n      },\n      response: {\n        status: -1,\n        statusText: '',\n        httpVersion: FALLBACK_HTTP_VERSION,\n        cookies: [],\n        headers: [],\n        content: {\n          size: -1,\n          mimeType: request.headerValue('content-type') || 'x-unknown',\n        },\n        headersSize: -1,\n        bodySize: -1,\n        redirectURL: '',\n        _transferSize: -1\n      },\n      cache: {\n        beforeRequest: null,\n        afterRequest: null,\n      },\n      timings: {\n        send: -1,\n        wait: -1,\n        receive: -1\n      },\n    };\n    if (request.redirectedFrom()) {\n      const fromEntry = this._entries.get(request.redirectedFrom()!)!;\n      fromEntry.response.redirectURL = request.url();\n    }\n    this._log.entries.push(harEntry);\n    this._entries.set(request, harEntry);\n  }\n\n  private async _onRequestFinished(request: network.Request) {\n    const page = request.frame()._page;\n    const harEntry = this._entries.get(request)!;\n    const response = await request.response();\n\n    if (!response)\n      return;\n\n    const httpVersion = normaliseHttpVersion(response._httpVersion);\n    const transferSize = response._transferSize || -1;\n    const headersSize = calculateResponseHeadersSize(httpVersion, response.status(), response.statusText(), response.headers());\n    const bodySize = transferSize !== -1 ? transferSize - headersSize : -1;\n\n    harEntry.request.httpVersion = httpVersion;\n    harEntry.response.bodySize = bodySize;\n    harEntry.response.headersSize = headersSize;\n    harEntry.response._transferSize = transferSize;\n    harEntry.request.headersSize = calculateRequestHeadersSize(request.method(), request.url(), httpVersion, request.headers());\n\n    const promise = response.body().then(buffer => {\n      const content = harEntry.response.content;\n      content.size = buffer.length;\n      content.compression = harEntry.response.bodySize !== -1 ? buffer.length - harEntry.response.bodySize : 0;\n\n      if (!this._options.omitContent && buffer && buffer.length > 0) {\n        content.text = buffer.toString('base64');\n        content.encoding = 'base64';\n      }\n    }).catch(() => {});\n    this._addBarrier(page, promise);\n  }\n\n  private _onResponse(response: network.Response) {\n    const page = response.frame()._page;\n    const pageEntry = this._ensurePageEntry(page);\n    const harEntry = this._entries.get(response.request())!;\n    // Rewrite provisional headers with actual\n    const request = response.request();\n\n    harEntry.request.headers = request.headers().map(header => ({ name: header.name, value: header.value }));\n    harEntry.request.cookies = cookiesForHar(request.headerValue('cookie'), ';');\n    harEntry.request.postData = postDataForHar(request);\n\n    harEntry.response = {\n      status: response.status(),\n      statusText: response.statusText(),\n      httpVersion: normaliseHttpVersion(response._httpVersion),\n      cookies: cookiesForHar(response.headerValue('set-cookie'), '\\n'),\n      headers: response.headers().map(header => ({ name: header.name, value: header.value })),\n      content: {\n        size: -1,\n        mimeType: response.headerValue('content-type') || 'x-unknown',\n      },\n      headersSize: -1,\n      bodySize: -1,\n      redirectURL: '',\n      _transferSize: -1\n    };\n    const timing = response.timing();\n    if (pageEntry.startedDateTime.valueOf() > timing.startTime)\n      pageEntry.startedDateTime = new Date(timing.startTime);\n    const dns = timing.domainLookupEnd !== -1 ? helper.millisToRoundishMillis(timing.domainLookupEnd - timing.domainLookupStart) : -1;\n    const connect = timing.connectEnd !== -1 ? helper.millisToRoundishMillis(timing.connectEnd - timing.connectStart) : -1;\n    const ssl = timing.connectEnd !== -1 ? helper.millisToRoundishMillis(timing.connectEnd - timing.secureConnectionStart) : -1;\n    const wait = timing.responseStart !== -1 ? helper.millisToRoundishMillis(timing.responseStart - timing.requestStart) : -1;\n    const receive = response.request()._responseEndTiming !== -1 ? helper.millisToRoundishMillis(response.request()._responseEndTiming - timing.responseStart) : -1;\n    harEntry.timings = {\n      dns,\n      connect,\n      ssl,\n      send: 0,\n      wait,\n      receive,\n    };\n    harEntry.time = [dns, connect, ssl, wait, receive].reduce((pre, cur) => cur > 0 ? cur + pre : pre, 0);\n\n    this._addBarrier(page, response.serverAddr().then(server => {\n      if (server?.ipAddress)\n        harEntry.serverIPAddress = server.ipAddress;\n      if (server?.port)\n        harEntry._serverPort = server.port;\n    }));\n    this._addBarrier(page, response.securityDetails().then(details => {\n      if (details)\n        harEntry._securityDetails = details;\n    }));\n  }\n\n  async flush() {\n    await Promise.all(this._barrierPromises);\n    for (const pageEntry of this._log.pages) {\n      if (pageEntry.pageTimings.onContentLoad >= 0)\n        pageEntry.pageTimings.onContentLoad -= pageEntry.startedDateTime.valueOf();\n      else\n        pageEntry.pageTimings.onContentLoad = -1;\n      if (pageEntry.pageTimings.onLoad >= 0)\n        pageEntry.pageTimings.onLoad -= pageEntry.startedDateTime.valueOf();\n      else\n        pageEntry.pageTimings.onLoad = -1;\n    }\n    await fs.promises.writeFile(this._options.path, JSON.stringify({ log: this._log }, undefined, 2));\n  }\n}\n\nfunction postDataForHar(request: network.Request): har.PostData | undefined {\n  const postData = request.postDataBuffer();\n  if (!postData)\n    return;\n\n  const contentType = request.headerValue('content-type') || 'application/octet-stream';\n  const result: har.PostData = {\n    mimeType: contentType,\n    text: contentType === 'application/octet-stream' ? '' : postData.toString(),\n    params: []\n  };\n  if (contentType === 'application/x-www-form-urlencoded') {\n    const parsed = new URLSearchParams(postData.toString());\n    for (const [name, value] of parsed.entries())\n      result.params.push({ name, value });\n  }\n  return result;\n}\n\nfunction cookiesForHar(header: string | undefined, separator: string): har.Cookie[] {\n  if (!header)\n    return [];\n  return header.split(separator).map(c => parseCookie(c));\n}\n\nfunction parseCookie(c: string): har.Cookie {\n  const cookie: har.Cookie = {\n    name: '',\n    value: ''\n  };\n  let first = true;\n  for (const pair of c.split(/; */)) {\n    const indexOfEquals = pair.indexOf('=');\n    const name = indexOfEquals !== -1 ? pair.substr(0, indexOfEquals).trim() : pair.trim();\n    const value = indexOfEquals !== -1 ? pair.substr(indexOfEquals + 1, pair.length).trim() : '';\n    if (first) {\n      first = false;\n      cookie.name = name;\n      cookie.value = value;\n      continue;\n    }\n\n    if (name === 'Domain')\n      cookie.domain = value;\n    if (name === 'Expires')\n      cookie.expires = new Date(value);\n    if (name === 'HttpOnly')\n      cookie.httpOnly = true;\n    if (name === 'Max-Age')\n      cookie.expires = new Date(Date.now() + (+value) * 1000);\n    if (name === 'Path')\n      cookie.path = value;\n    if (name === 'SameSite')\n      cookie.sameSite = value;\n    if (name === 'Secure')\n      cookie.secure = true;\n  }\n  return cookie;\n}\n\nfunction calculateResponseHeadersSize(protocol: string, status: number, statusText: string , headers: types.HeadersArray) {\n  let rawHeaders = `${protocol} ${status} ${statusText}\\r\\n`;\n  for (const header of headers)\n    rawHeaders += `${header.name}: ${header.value}\\r\\n`;\n  rawHeaders += '\\r\\n';\n  return rawHeaders.length;\n}\n\nfunction calculateRequestHeadersSize(method: string, url: string, httpVersion: string, headers: types.HeadersArray) {\n  let rawHeaders = `${method} ${(new URL(url)).pathname} ${httpVersion}\\r\\n`;\n  for (const header of headers)\n    rawHeaders += `${header.name}: ${header.value}\\r\\n`;\n  return rawHeaders.length;\n}\n\nfunction normaliseHttpVersion(httpVersion?: string) {\n  if (!httpVersion)\n    return FALLBACK_HTTP_VERSION;\n  if (httpVersion === 'http/1.1')\n    return 'HTTP/1.1';\n  return httpVersion;\n}\n\nfunction calculateRequestBodySize(request: network.Request): number|undefined {\n  const postData = request.postDataBuffer();\n  if (!postData)\n    return;\n  return new TextEncoder().encode(postData.toString('utf8')).length;\n}\n"],"file":"harTracer.js"}