{"version":3,"sources":["../../src/server/screenshotter.ts"],"names":["Screenshotter","constructor","page","_queue","TaskQueue","_page","_originalViewportSize","progress","originalViewportSize","viewportSize","mainFrame","waitForFunctionValueInUtility","width","window","innerWidth","height","innerHeight","_fullPageSize","fullPageSize","document","body","documentElement","Math","max","scrollWidth","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","screenshotPage","options","format","validateScreenshotOptions","postTask","fullPage","documentRect","x","y","overriddenViewportSize","fitsViewport","_delegate","canScreenshotOutsideViewport","throwIfAborted","setViewportSize","cleanupWhenAborted","_restoreViewport","clip","trimClipToSize","buffer","_screenshot","undefined","viewportRect","screenshotElement","handle","_waitAndScrollIntoViewIfNeeded","boundingBox","helper","enclosingIntSize","scrollOffset","scrollX","scrollY","enclosingIntRect","__testHookBeforeScreenshot","shouldSetDefaultBackground","omitBackground","setBackgroundColor","r","g","b","a","takeScreenshot","quality","__testHookAfterScreenshot","resetViewport","_chain","Promise","resolve","task","result","then","catch","size","p1","min","p2","type","Number","isInteger"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport { helper } from './helper';\nimport { Page } from './page';\nimport * as types from './types';\nimport { Progress } from './progress';\nimport { assert } from '../utils/utils';\n\nexport class Screenshotter {\n  private _queue = new TaskQueue();\n  private _page: Page;\n\n  constructor(page: Page) {\n    this._page = page;\n    this._queue = new TaskQueue();\n  }\n\n  private async _originalViewportSize(progress: Progress): Promise<{ viewportSize: types.Size, originalViewportSize: types.Size | null }> {\n    const originalViewportSize = this._page.viewportSize();\n    let viewportSize = originalViewportSize;\n    if (!viewportSize)\n      viewportSize = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => ({ width: window.innerWidth, height: window.innerHeight }));\n    return { viewportSize, originalViewportSize };\n  }\n\n  private async _fullPageSize(progress: Progress): Promise<types.Size> {\n    const fullPageSize = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => {\n      if (!document.body || !document.documentElement)\n        return null;\n      return {\n        width: Math.max(\n            document.body.scrollWidth, document.documentElement.scrollWidth,\n            document.body.offsetWidth, document.documentElement.offsetWidth,\n            document.body.clientWidth, document.documentElement.clientWidth\n        ),\n        height: Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        ),\n      };\n    });\n    return fullPageSize!;\n  }\n\n  async screenshotPage(progress: Progress, options: types.ScreenshotOptions): Promise<Buffer> {\n    const format = validateScreenshotOptions(options);\n    return this._queue.postTask(async () => {\n      const { viewportSize, originalViewportSize } = await this._originalViewportSize(progress);\n\n      if (options.fullPage) {\n        const fullPageSize = await this._fullPageSize(progress);\n        let documentRect = { x: 0, y: 0, width: fullPageSize.width, height: fullPageSize.height };\n        let overriddenViewportSize: types.Size | null = null;\n        const fitsViewport = fullPageSize.width <= viewportSize.width && fullPageSize.height <= viewportSize.height;\n        if (!this._page._delegate.canScreenshotOutsideViewport() && !fitsViewport) {\n          overriddenViewportSize = fullPageSize;\n          progress.throwIfAborted(); // Avoid side effects.\n          await this._page.setViewportSize(overriddenViewportSize);\n          progress.cleanupWhenAborted(() => this._restoreViewport(originalViewportSize));\n        }\n        if (options.clip)\n          documentRect = trimClipToSize(options.clip, documentRect);\n        const buffer = await this._screenshot(progress, format, documentRect, undefined, options);\n        progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n        if (overriddenViewportSize)\n          await this._restoreViewport(originalViewportSize);\n        return buffer;\n      }\n\n      const viewportRect = options.clip ? trimClipToSize(options.clip, viewportSize) : { x: 0, y: 0, ...viewportSize };\n      return await this._screenshot(progress, format, undefined, viewportRect, options);\n    });\n  }\n\n  async screenshotElement(progress: Progress, handle: dom.ElementHandle, options: types.ElementScreenshotOptions = {}): Promise<Buffer> {\n    const format = validateScreenshotOptions(options);\n    return this._queue.postTask(async () => {\n      const { viewportSize, originalViewportSize } = await this._originalViewportSize(progress);\n\n      await handle._waitAndScrollIntoViewIfNeeded(progress);\n\n      progress.throwIfAborted(); // Do not do extra work.\n      let boundingBox = await handle.boundingBox();\n      assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n      assert(boundingBox.width !== 0, 'Node has 0 width.');\n      assert(boundingBox.height !== 0, 'Node has 0 height.');\n\n      let overriddenViewportSize: types.Size | null = null;\n      const fitsViewport = boundingBox.width <= viewportSize.width && boundingBox.height <= viewportSize.height;\n      if (!this._page._delegate.canScreenshotOutsideViewport() && !fitsViewport) {\n        overriddenViewportSize = helper.enclosingIntSize({\n          width: Math.max(viewportSize.width, boundingBox.width),\n          height: Math.max(viewportSize.height, boundingBox.height),\n        });\n        progress.throwIfAborted(); // Avoid side effects.\n        await this._page.setViewportSize(overriddenViewportSize);\n        progress.cleanupWhenAborted(() => this._restoreViewport(originalViewportSize));\n\n        progress.throwIfAborted(); // Avoid extra work.\n        await handle._waitAndScrollIntoViewIfNeeded(progress);\n        boundingBox = await handle.boundingBox();\n        assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n        assert(boundingBox.width !== 0, 'Node has 0 width.');\n        assert(boundingBox.height !== 0, 'Node has 0 height.');\n      }\n\n      progress.throwIfAborted(); // Avoid extra work.\n      const scrollOffset = await this._page.mainFrame().waitForFunctionValueInUtility(progress, () => ({ x: window.scrollX, y: window.scrollY }));\n      const documentRect = { ...boundingBox };\n      documentRect.x += scrollOffset.x;\n      documentRect.y += scrollOffset.y;\n      const buffer = await this._screenshot(progress, format, helper.enclosingIntRect(documentRect), undefined, options);\n      progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n      if (overriddenViewportSize)\n        await this._restoreViewport(originalViewportSize);\n      return buffer;\n    });\n  }\n\n  private async _screenshot(progress: Progress, format: 'png' | 'jpeg', documentRect: types.Rect | undefined, viewportRect: types.Rect | undefined, options: types.ElementScreenshotOptions): Promise<Buffer> {\n    if ((options as any).__testHookBeforeScreenshot)\n      await (options as any).__testHookBeforeScreenshot();\n    progress.throwIfAborted(); // Screenshotting is expensive - avoid extra work.\n    const shouldSetDefaultBackground = options.omitBackground && format === 'png';\n    if (shouldSetDefaultBackground) {\n      await this._page._delegate.setBackgroundColor({ r: 0, g: 0, b: 0, a: 0});\n      progress.cleanupWhenAborted(() => this._page._delegate.setBackgroundColor());\n    }\n    progress.throwIfAborted(); // Avoid extra work.\n    const buffer = await this._page._delegate.takeScreenshot(progress, format, documentRect, viewportRect, options.quality);\n    progress.throwIfAborted(); // Avoid restoring after failure - should be done by cleanup.\n    if (shouldSetDefaultBackground)\n      await this._page._delegate.setBackgroundColor();\n    progress.throwIfAborted(); // Avoid side effects.\n    if ((options as any).__testHookAfterScreenshot)\n      await (options as any).__testHookAfterScreenshot();\n    return buffer;\n  }\n\n  private async _restoreViewport(originalViewportSize: types.Size | null) {\n    assert(!this._page._delegate.canScreenshotOutsideViewport());\n    if (originalViewportSize)\n      await this._page.setViewportSize(originalViewportSize);\n    else\n      await this._page._delegate.resetViewport();\n  }\n}\n\nclass TaskQueue {\n  private _chain: Promise<any>;\n\n  constructor() {\n    this._chain = Promise.resolve();\n  }\n\n  postTask(task: () => any): Promise<any> {\n    const result = this._chain.then(task);\n    this._chain = result.catch(() => {});\n    return result;\n  }\n}\n\nfunction trimClipToSize(clip: types.Rect, size: types.Size): types.Rect {\n  const p1 = {\n    x: Math.max(0, Math.min(clip.x, size.width)),\n    y: Math.max(0, Math.min(clip.y, size.height))\n  };\n  const p2 = {\n    x: Math.max(0, Math.min(clip.x + clip.width, size.width)),\n    y: Math.max(0, Math.min(clip.y + clip.height, size.height))\n  };\n  const result = { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\n  assert(result.width && result.height, 'Clipped area is either empty or outside the resulting image');\n  return result;\n}\n\nfunction validateScreenshotOptions(options: types.ScreenshotOptions): 'png' | 'jpeg' {\n  let format: 'png' | 'jpeg' | null = null;\n  // options.type takes precedence over inferring the type from options.path\n  // because it may be a 0-length file with no extension created beforehand (i.e. as a temp file).\n  if (options.type) {\n    assert(options.type === 'png' || options.type === 'jpeg', 'Unknown options.type value: ' + options.type);\n    format = options.type;\n  }\n\n  if (!format)\n    format = 'png';\n\n  if (options.quality !== undefined) {\n    assert(format === 'jpeg', 'options.quality is unsupported for the ' + format + ' screenshots');\n    assert(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' + (typeof options.quality));\n    assert(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n    assert(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' + options.quality);\n  }\n  if (options.clip) {\n    assert(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' + (typeof options.clip.x));\n    assert(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' + (typeof options.clip.y));\n    assert(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' + (typeof options.clip.width));\n    assert(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' + (typeof options.clip.height));\n    assert(options.clip.width !== 0, 'Expected options.clip.width not to be 0.');\n    assert(options.clip.height !== 0, 'Expected options.clip.height not to be 0.');\n  }\n  return format;\n}\n"],"file":"screenshotter.js"}