{"version":3,"sources":["../../../src/server/android/android.ts"],"names":["Android","SdkObject","constructor","backend","playwrightOptions","rootSdkObject","_backend","_devices","Map","_timeoutSettings","_playwrightOptions","TimeoutSettings","setDefaultTimeout","timeout","devices","filter","d","status","newSerials","Set","add","serial","has","device","AndroidDevice","create","set","keys","delete","values","_deviceClosed","android","model","_driverPromise","_lastId","_callbacks","_pollingWebViews","_webViews","_browserConnections","_android","_isClosed","init","runCommand","toString","trim","_init","_refreshWebViews","poll","setTimeout","then","catch","shell","command","result","open","screenshot","_driver","_installDriver","file","installApk","fs","promises","readFile","require","resolve","e","socket","_waitForLocalAbstract","transport","Transport","onmessage","message","response","JSON","parse","id","error","callback","get","reject","Error","fulfill","socketName","Promise","f","send","method","params","driver","stringify","close","clearTimeout","connection","emit","Events","Closed","launchBrowser","pkg","options","commandLine","_connectToBrowser","connectToWebView","pid","sdkLanguage","webView","androidBrowser","AndroidBrowser","browserOptions","name","isChromium","slowMo","persistent","noDefaultViewport","artifactsDir","downloadsPath","tracesDir","browserProcess","ClankBrowserProcess","proxy","protocolLogger","helper","debugProtocolLogger","browserLogsCollector","RecentLogsCollector","browser","CRBrowser","connect","controller","ProgressController","defaultContext","_defaultContext","run","progress","_loadDefaultContextAsIs","page","pages","crPage","_delegate","_mainFrameSession","_client","mobile","width","height","deviceScaleFactor","webViews","content","args","installSocket","join","length","write","success","on","push","path","mode","sendHeader","buffer","Buffer","alloc","writeUInt32LE","data","from","maxChunk","i","slice","Date","now","once","code","sockets","split","newPids","line","match","procs","proc","p","substring","lastIndexOf","WebViewAdded","WebViewRemoved","EventEmitter","_socket","_receiver","_waitForNextTask","onclose","setMaxListeners","ws","Receiver","_write","s","encodeWebFrame","Sender","frame","opcode","mask","fin","readOnly","_browser","kill"],"mappings":";;;;;;;AAgBA;;AAEA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;;;;;;;AAjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAwCO,MAAMA,OAAN,SAAsBC,0BAAtB,CAAgC;AAMrCC,EAAAA,WAAW,CAACC,OAAD,EAAmBC,iBAAnB,EAAyD;AAClE,UAAMA,iBAAiB,CAACC,aAAxB,EAAuC,SAAvC;AADkE,SAL5DC,QAK4D;AAAA,SAJ5DC,QAI4D,GAJjD,IAAIC,GAAJ,EAIiD;AAAA,SAH3DC,gBAG2D;AAAA,SAF3DC,kBAE2D;AAElE,SAAKJ,QAAL,GAAgBH,OAAhB;AACA,SAAKO,kBAAL,GAA0BN,iBAA1B;AACA,SAAKK,gBAAL,GAAwB,IAAIE,gCAAJ,EAAxB;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,OAAD,EAAkB;AACjC,SAAKJ,gBAAL,CAAsBG,iBAAtB,CAAwCC,OAAxC;AACD;;AAEY,QAAPC,OAAO,GAA6B;AACxC,UAAMA,OAAO,GAAG,CAAC,MAAM,KAAKR,QAAL,CAAcQ,OAAd,EAAP,EAAgCC,MAAhC,CAAuCC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,QAAzD,CAAhB;AACA,UAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;;AACA,SAAK,MAAMH,CAAX,IAAgBF,OAAhB,EAAyB;AACvBI,MAAAA,UAAU,CAACE,GAAX,CAAeJ,CAAC,CAACK,MAAjB;AACA,UAAI,KAAKd,QAAL,CAAce,GAAd,CAAkBN,CAAC,CAACK,MAApB,CAAJ,EACE;AACF,YAAME,MAAM,GAAG,MAAMC,aAAa,CAACC,MAAd,CAAqB,IAArB,EAA2BT,CAA3B,CAArB;;AACA,WAAKT,QAAL,CAAcmB,GAAd,CAAkBV,CAAC,CAACK,MAApB,EAA4BE,MAA5B;AACD;;AACD,SAAK,MAAMP,CAAX,IAAgB,KAAKT,QAAL,CAAcoB,IAAd,EAAhB,EAAsC;AACpC,UAAI,CAACT,UAAU,CAACI,GAAX,CAAeN,CAAf,CAAL,EACE,KAAKT,QAAL,CAAcqB,MAAd,CAAqBZ,CAArB;AACH;;AACD,WAAO,CAAC,GAAG,KAAKT,QAAL,CAAcsB,MAAd,EAAJ,CAAP;AACD;;AAEDC,EAAAA,aAAa,CAACP,MAAD,EAAwB;AACnC,SAAKhB,QAAL,CAAcqB,MAAd,CAAqBL,MAAM,CAACF,MAA5B;AACD;;AApCoC;;;;AAuChC,MAAMG,aAAN,SAA4BvB,0BAA5B,CAAsC;AAqB3CC,EAAAA,WAAW,CAAC6B,OAAD,EAAmB5B,OAAnB,EAA2C6B,KAA3C,EAA0D;AACnE,UAAMD,OAAN,EAAe,gBAAf;AADmE,SApB5DzB,QAoB4D;AAAA,SAnB5D0B,KAmB4D;AAAA,SAlB5DX,MAkB4D;AAAA,SAjB7DY,cAiB6D;AAAA,SAhB7DC,OAgB6D,GAhBnD,CAgBmD;AAAA,SAf7DC,UAe6D,GAfhD,IAAI3B,GAAJ,EAegD;AAAA,SAd7D4B,gBAc6D;AAAA,SAb5D3B,gBAa4D;AAAA,SAZ7D4B,SAY6D,GAZjD,IAAI7B,GAAJ,EAYiD;AAAA,SAJ7D8B,mBAI6D,GAJvC,IAAInB,GAAJ,EAIuC;AAAA,SAH7DoB,QAG6D;AAAA,SAF7DC,SAE6D,GAFjD,KAEiD;AAEnE,SAAKD,QAAL,GAAgBR,OAAhB;AACA,SAAKzB,QAAL,GAAgBH,OAAhB;AACA,SAAK6B,KAAL,GAAaA,KAAb;AACA,SAAKX,MAAL,GAAclB,OAAO,CAACkB,MAAtB;AACA,SAAKZ,gBAAL,GAAwB,IAAIE,gCAAJ,CAAoBoB,OAAO,CAACtB,gBAA5B,CAAxB;AACD;;AAEkB,eAANgB,MAAM,CAACM,OAAD,EAAmB5B,OAAnB,EAAmE;AACpF,UAAMA,OAAO,CAACsC,IAAR,EAAN;AACA,UAAMT,KAAK,GAAG,MAAM7B,OAAO,CAACuC,UAAR,CAAmB,gCAAnB,CAApB;AACA,UAAMnB,MAAM,GAAG,IAAIC,aAAJ,CAAkBO,OAAlB,EAA2B5B,OAA3B,EAAoC6B,KAAK,CAACW,QAAN,GAAiBC,IAAjB,EAApC,CAAf;AACA,UAAMrB,MAAM,CAACsB,KAAP,EAAN;AACA,WAAOtB,MAAP;AACD;;AAEU,QAALsB,KAAK,GAAG;AACZ,UAAM,KAAKC,gBAAL,EAAN;;AACA,UAAMC,IAAI,GAAG,MAAM;AACjB,WAAKX,gBAAL,GAAwBY,UAAU,CAAC,MAAM,KAAKF,gBAAL,GAAwBG,IAAxB,CAA6BF,IAA7B,EAAmCG,KAAnC,CAAyC,MAAM,CAAE,CAAjD,CAAP,EAA2D,GAA3D,CAAlC;AACD,KAFD;;AAGAH,IAAAA,IAAI;AACL;;AAEDnC,EAAAA,iBAAiB,CAACC,OAAD,EAAkB;AACjC,SAAKJ,gBAAL,CAAsBG,iBAAtB,CAAwCC,OAAxC;AACD;;AAEU,QAALsC,KAAK,CAACC,OAAD,EAAmC;AAC5C,UAAMC,MAAM,GAAG,MAAM,KAAK/C,QAAL,CAAcoC,UAAd,CAA0B,SAAQU,OAAQ,EAA1C,CAArB;AACA,UAAM,KAAKN,gBAAL,EAAN;AACA,WAAOO,MAAP;AACD;;AAES,QAAJC,IAAI,CAACF,OAAD,EAA0C;AAClD,WAAO,MAAM,KAAK9C,QAAL,CAAcgD,IAAd,CAAoB,GAAEF,OAAQ,EAA9B,CAAb;AACD;;AAEe,QAAVG,UAAU,GAAoB;AAClC,WAAO,MAAM,KAAKjD,QAAL,CAAcoC,UAAd,CAA0B,oBAA1B,CAAb;AACD;;AAEoB,QAAPc,OAAO,GAAuB;AAC1C,QAAI,CAAC,KAAKvB,cAAV,EACE,KAAKA,cAAL,GAAsB,KAAKwB,cAAL,EAAtB;AACF,WAAO,KAAKxB,cAAZ;AACD;;AAE2B,QAAdwB,cAAc,GAAuB;AACjD,wBAAM,YAAN,EAAoB,yBAApB;AACA,UAAM,KAAKN,KAAL,CAAY,sDAAZ,CAAN;AAEA,wBAAM,YAAN,EAAoB,6BAApB;AACA,UAAM,KAAKA,KAAL,CAAY,8DAAZ,CAAN;AACA,UAAM,KAAKA,KAAL,CAAY,mEAAZ,CAAN;AAEA,wBAAM,YAAN,EAAoB,2BAApB;;AACA,SAAK,MAAMO,IAAX,IAAmB,CAAC,oBAAD,EAAuB,2BAAvB,CAAnB,EACE,MAAM,KAAKC,UAAL,CAAgB,MAAMC,YAAGC,QAAH,CAAYC,QAAZ,CAAqBC,OAAO,CAACC,OAAR,CAAiB,gBAAeN,IAAK,EAArC,CAArB,CAAtB,CAAN;;AAEF,wBAAM,YAAN,EAAoB,yBAApB;AACA,SAAKP,KAAL,CAAW,sGAAX,EAAmHD,KAAnH,CAAyHe,CAAC,IAAI,oBAAM,YAAN,EAAoBA,CAApB,CAA9H;AACA,UAAMC,MAAM,GAAG,MAAM,KAAKC,qBAAL,CAA2B,kCAA3B,CAArB;AACA,UAAMC,SAAS,GAAG,IAAIC,oBAAJ,CAAcH,MAAd,EAAsBA,MAAtB,EAA8BA,MAA9B,EAAsC,IAAtC,CAAlB;;AACAE,IAAAA,SAAS,CAACE,SAAV,GAAsBC,OAAO,IAAI;AAC/B,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAjB;AACA,YAAM;AAAEI,QAAAA,EAAF;AAAMtB,QAAAA,MAAN;AAAcuB,QAAAA;AAAd,UAAwBJ,QAA9B;;AACA,YAAMK,QAAQ,GAAG,KAAK1C,UAAL,CAAgB2C,GAAhB,CAAoBH,EAApB,CAAjB;;AACA,UAAI,CAACE,QAAL,EACE;AACF,UAAID,KAAJ,EACEC,QAAQ,CAACE,MAAT,CAAgB,IAAIC,KAAJ,CAAUJ,KAAV,CAAhB,EADF,KAGEC,QAAQ,CAACI,OAAT,CAAiB5B,MAAjB;;AACF,WAAKlB,UAAL,CAAgBP,MAAhB,CAAuB+C,EAAvB;AACD,KAXD;;AAYA,WAAOP,SAAP;AACD;;AAEkC,QAArBD,qBAAqB,CAACe,UAAD,EAA6C;AAC9E,QAAIhB,MAAJ;AACA,wBAAM,YAAN,EAAqB,oCAAmCgB,UAAW,EAAnE;;AACA,WAAO,CAAChB,MAAR,EAAgB;AACd,UAAI;AACFA,QAAAA,MAAM,GAAG,MAAM,KAAK5D,QAAL,CAAcgD,IAAd,CAAoB,iBAAgB4B,UAAW,EAA/C,CAAf;AACD,OAFD,CAEE,OAAOjB,CAAP,EAAU;AACV,cAAM,IAAIkB,OAAJ,CAAYC,CAAC,IAAIpC,UAAU,CAACoC,CAAD,EAAI,GAAJ,CAA3B,CAAN;AACD;AACF;;AACD,wBAAM,YAAN,EAAqB,8BAA6BF,UAAW,EAA7D;AACA,WAAOhB,MAAP;AACD;;AAES,QAAJmB,IAAI,CAACC,MAAD,EAAiBC,MAAW,GAAG,EAA/B,EAAiD;AACzD;AACAA,IAAAA,MAAM,CAAC1E,OAAP,GAAiB,KAAKJ,gBAAL,CAAsBI,OAAtB,CAA8B0E,MAA9B,CAAjB;AACA,UAAMC,MAAM,GAAG,MAAM,KAAKhC,OAAL,EAArB;AACA,UAAMmB,EAAE,GAAG,EAAE,KAAKzC,OAAlB;AACA,UAAMmB,MAAM,GAAG,IAAI8B,OAAJ,CAAY,CAACF,OAAD,EAAUF,MAAV,KAAqB,KAAK5C,UAAL,CAAgBT,GAAhB,CAAoBiD,EAApB,EAAwB;AAAEM,MAAAA,OAAF;AAAWF,MAAAA;AAAX,KAAxB,CAAjC,CAAf;AACAS,IAAAA,MAAM,CAACH,IAAP,CAAYZ,IAAI,CAACgB,SAAL,CAAe;AAAEd,MAAAA,EAAF;AAAMW,MAAAA,MAAN;AAAcC,MAAAA;AAAd,KAAf,CAAZ;AACA,WAAOlC,MAAP;AACD;;AAEU,QAALqC,KAAK,GAAG;AACZ,SAAKlD,SAAL,GAAiB,IAAjB;AACA,QAAI,KAAKJ,gBAAT,EACEuD,YAAY,CAAC,KAAKvD,gBAAN,CAAZ;;AACF,SAAK,MAAMwD,UAAX,IAAyB,KAAKtD,mBAA9B,EACE,MAAMsD,UAAU,CAACF,KAAX,EAAN;;AACF,QAAI,KAAKzD,cAAT,EAAyB;AACvB,YAAMuD,MAAM,GAAG,MAAM,KAAKhC,OAAL,EAArB;AACAgC,MAAAA,MAAM,CAACE,KAAP;AACD;;AACD,UAAM,KAAKpF,QAAL,CAAcoF,KAAd,EAAN;;AACA,SAAKnD,QAAL,CAAcT,aAAd,CAA4B,IAA5B;;AACA,SAAK+D,IAAL,CAAUrE,aAAa,CAACsE,MAAd,CAAqBC,MAA/B;AACD;;AAEkB,QAAbC,aAAa,CAACC,GAAW,GAAG,oBAAf,EAAqCC,OAArC,EAAoG;AACrH,wBAAM,YAAN,EAAoB,gBAApB,EAAsCD,GAAtC;AACA,UAAM,KAAK3F,QAAL,CAAcoC,UAAd,CAA0B,uBAAsBuD,GAAI,EAApD,CAAN;AAEA,UAAMf,UAAU,GAAG,gBAAgB,wBAAnC;AACA,UAAMiB,WAAW,GAAI,4FAA2FjB,UAAW,EAA3H;AACA,wBAAM,YAAN,EAAoB,UAApB,EAAgCe,GAAhC,EAAqCE,WAArC;AACA,UAAM,KAAK7F,QAAL,CAAcoC,UAAd,CAA0B,eAAcyD,WAAY,yCAApD,CAAN;AACA,UAAM,KAAK7F,QAAL,CAAcoC,UAAd,CAA0B,qBAAoBuD,GAAI,kDAAlD,CAAN;AACA,WAAO,MAAM,KAAKG,iBAAL,CAAuBlB,UAAvB,EAAmCgB,OAAnC,CAAb;AACD;;AAEqB,QAAhBG,gBAAgB,CAACC,GAAD,EAAcC,WAAd,EAA4D;AAChF,UAAMC,OAAO,GAAG,KAAKnE,SAAL,CAAeyC,GAAf,CAAmBwB,GAAnB,CAAhB;;AACA,QAAI,CAACE,OAAL,EACE,MAAM,IAAIxB,KAAJ,CAAU,yBAAV,CAAN;AACF,WAAO,MAAM,KAAKoB,iBAAL,CAAwB,2BAA0BE,GAAI,EAAtD,EAAyD;AAAEC,MAAAA;AAAF,KAAzD,CAAb;AACD;;AAE8B,QAAjBH,iBAAiB,CAAClB,UAAD,EAAqBgB,OAArB,EAAoF;AACjH,UAAMhC,MAAM,GAAG,MAAM,KAAKC,qBAAL,CAA2Be,UAA3B,CAArB;AACA,UAAMuB,cAAc,GAAG,IAAIC,cAAJ,CAAmB,IAAnB,EAAyBxC,MAAzB,CAAvB;AACA,UAAMuC,cAAc,CAAC5D,KAAf,EAAN;;AACA,SAAKP,mBAAL,CAAyBlB,GAAzB,CAA6BqF,cAA7B;;AAEA,UAAME,cAA8B,GAAG,EACrC,GAAG,KAAKpE,QAAL,CAAc7B,kBADoB;AAErCkG,MAAAA,IAAI,EAAE,OAF+B;AAGrCC,MAAAA,UAAU,EAAE,IAHyB;AAIrCC,MAAAA,MAAM,EAAE,CAJ6B;AAKrCC,MAAAA,UAAU,EAAE,EAAE,GAAGb,OAAL;AAAcc,QAAAA,iBAAiB,EAAE;AAAjC,OALyB;AAMrCC,MAAAA,YAAY,EAAE,EANuB;AAOrCC,MAAAA,aAAa,EAAE,EAPsB;AAQrCC,MAAAA,SAAS,EAAE,EAR0B;AASrCC,MAAAA,cAAc,EAAE,IAAIC,mBAAJ,CAAwBZ,cAAxB,CATqB;AAUrCa,MAAAA,KAAK,EAAEpB,OAAO,CAACoB,KAVsB;AAWrCC,MAAAA,cAAc,EAAEC,eAAOC,mBAAP,EAXqB;AAYrCC,MAAAA,oBAAoB,EAAE,IAAIC,gCAAJ;AAZe,KAAvC;AAcA,uDAA8BzB,OAA9B,EAAuCS,cAAvC;AAEA,UAAMiB,OAAO,GAAG,MAAMC,qBAAUC,OAAV,CAAkBrB,cAAlB,EAAkCE,cAAlC,CAAtB;AACA,UAAMoB,UAAU,GAAG,IAAIC,4BAAJ,CAAuB,4CAAvB,EAA+C,IAA/C,CAAnB;AACA,UAAMC,cAAc,GAAGL,OAAO,CAACM,eAA/B;AACA,UAAMH,UAAU,CAACI,GAAX,CAAe,MAAMC,QAAN,IAAkB;AACrC,YAAMH,cAAc,CAACI,uBAAf,CAAuCD,QAAvC,CAAN;AACD,KAFK,CAAN;AAGA;AACE;AACA;AACA,YAAME,IAAI,GAAGL,cAAc,CAACM,KAAf,GAAuB,CAAvB,CAAb;AACA,YAAMC,MAAM,GAAGF,IAAI,CAACG,SAApB;AACA,YAAMD,MAAM,CAACE,iBAAP,CAAyBC,OAAzB,CAAiCtD,IAAjC,CAAsC,oCAAtC,EAA4E;AAAEuD,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAE,CAAxB;AAA2BC,QAAAA,MAAM,EAAE,CAAnC;AAAsCC,QAAAA,iBAAiB,EAAE;AAAzD,OAA5E,CAAN;AACA,YAAMP,MAAM,CAACE,iBAAP,CAAyBC,OAAzB,CAAiCtD,IAAjC,CAAsC,sCAAtC,EAA8E,EAA9E,CAAN;AACD;AACD,WAAO4C,cAAP;AACD;;AAEDe,EAAAA,QAAQ,GAAqB;AAC3B,WAAO,CAAC,GAAG,KAAK3G,SAAL,CAAeR,MAAf,EAAJ,CAAP;AACD;;AAEe,QAAV8B,UAAU,CAACsF,OAAD,EAAkB/C,OAAlB,EAAgE;AAC9E,UAAMgD,IAAI,GAAGhD,OAAO,IAAIA,OAAO,CAACgD,IAAnB,GAA0BhD,OAAO,CAACgD,IAAlC,GAAyC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAtD;AACA,wBAAM,YAAN,EAAoB,wBAApB;AACA,UAAMC,aAAa,GAAG,MAAM,KAAK7I,QAAL,CAAcgD,IAAd,CAAoB,6BAA4B4F,IAAI,CAACE,IAAL,CAAU,GAAV,CAAe,IAAGH,OAAO,CAACI,MAAO,EAAjF,CAA5B;AACA,wBAAM,YAAN,EAAoB,2BAA2BJ,OAAO,CAACI,MAAvD;AACA,UAAMF,aAAa,CAACG,KAAd,CAAoBL,OAApB,CAAN;AACA,UAAMM,OAAO,GAAG,MAAM,IAAIpE,OAAJ,CAAYC,CAAC,IAAI+D,aAAa,CAACK,EAAd,CAAiB,MAAjB,EAAyBpE,CAAzB,CAAjB,CAAtB;AACA,wBAAM,YAAN,EAAoB,2BAA2BmE,OAA/C;AACAJ,IAAAA,aAAa,CAACzD,KAAd;AACD;;AAES,QAAJ+D,IAAI,CAACR,OAAD,EAAkBS,IAAlB,EAAgCC,IAAI,GAAG,KAAvC,EAA6D;AACrE,UAAMzF,MAAM,GAAG,MAAM,KAAK5D,QAAL,CAAcgD,IAAd,CAAoB,OAApB,CAArB;;AACA,UAAMsG,UAAU,GAAG,OAAOxG,OAAP,EAAwBiG,MAAxB,KAA2C;AAC5D,YAAMQ,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa3G,OAAO,CAACiG,MAAR,GAAiB,CAA9B,CAAf;AACAQ,MAAAA,MAAM,CAACP,KAAP,CAAalG,OAAb,EAAsB,CAAtB;AACAyG,MAAAA,MAAM,CAACG,aAAP,CAAqBX,MAArB,EAA6BjG,OAAO,CAACiG,MAArC;AACA,YAAMnF,MAAM,CAACoF,KAAP,CAAaO,MAAb,CAAN;AACD,KALD;;AAMA,UAAMxE,IAAI,GAAG,OAAOjC,OAAP,EAAwB6G,IAAxB,KAAyC;AACpD,YAAML,UAAU,CAACxG,OAAD,EAAU6G,IAAI,CAACZ,MAAf,CAAhB;AACA,YAAMnF,MAAM,CAACoF,KAAP,CAAaW,IAAb,CAAN;AACD,KAHD;;AAIA,UAAM5E,IAAI,CAAC,MAAD,EAASyE,MAAM,CAACI,IAAP,CAAa,GAAER,IAAK,IAAGC,IAAK,EAA5B,CAAT,CAAV;AACA,UAAMQ,QAAQ,GAAG,KAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,OAAO,CAACI,MAA5B,EAAoCe,CAAC,IAAID,QAAzC,EACE,MAAM9E,IAAI,CAAC,MAAD,EAAS4D,OAAO,CAACoB,KAAR,CAAcD,CAAd,EAAiBA,CAAC,GAAGD,QAArB,CAAT,CAAV;;AACF,UAAMP,UAAU,CAAC,MAAD,EAAUU,IAAI,CAACC,GAAL,KAAa,IAAd,GAAsB,CAA/B,CAAhB;AACA,UAAMlH,MAAM,GAAG,MAAM,IAAI8B,OAAJ,CAAoBC,CAAC,IAAIlB,MAAM,CAACsG,IAAP,CAAY,MAAZ,EAAoBpF,CAApB,CAAzB,CAArB;AACA,UAAMqF,IAAI,GAAGpH,MAAM,CAACgH,KAAP,CAAa,CAAb,EAAgB,CAAhB,EAAmB1H,QAAnB,EAAb;AACA,QAAI8H,IAAI,KAAK,MAAb,EACE,MAAM,IAAIzF,KAAJ,CAAU,qBAAqByF,IAA/B,CAAN;AACFvG,IAAAA,MAAM,CAACwB,KAAP;AACD;;AAE6B,QAAhB5C,gBAAgB,GAAG;AAC/B,UAAM4H,OAAO,GAAG,CAAC,MAAM,KAAKpK,QAAL,CAAcoC,UAAd,CAA0B,yDAA1B,CAAP,EAA4FC,QAA5F,GAAuGgI,KAAvG,CAA6G,IAA7G,CAAhB;AACA,QAAI,KAAKnI,SAAT,EACE;AAEF,UAAMoI,OAAO,GAAG,IAAIzJ,GAAJ,EAAhB;;AACA,SAAK,MAAM0J,IAAX,IAAmBH,OAAnB,EAA4B;AAC1B,YAAMI,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAW,qCAAX,CAAd;AACA,UAAI,CAACA,KAAL,EACE;AACF,YAAMxE,GAAG,GAAG,CAACwE,KAAK,CAAC,CAAD,CAAlB;AACAF,MAAAA,OAAO,CAACxJ,GAAR,CAAYkF,GAAZ;AACD;;AACD,SAAK,MAAMA,GAAX,IAAkBsE,OAAlB,EAA2B;AACzB,UAAI,KAAKvI,SAAL,CAAef,GAAf,CAAmBgF,GAAnB,CAAJ,EACE;AAEF,YAAMyE,KAAK,GAAG,CAAC,MAAM,KAAKzK,QAAL,CAAcoC,UAAd,CAA0B,sBAAqB4D,GAAI,EAAnD,CAAP,EAA8D3D,QAA9D,GAAyEgI,KAAzE,CAA+E,IAA/E,CAAd;AACA,UAAI,KAAKnI,SAAT,EACE;AACF,UAAIyD,GAAG,GAAG,EAAV;;AACA,WAAK,MAAM+E,IAAX,IAAmBD,KAAnB,EAA0B;AACxB,cAAMD,KAAK,GAAGE,IAAI,CAACF,KAAL,CAAW,mBAAX,CAAd;AACA,YAAI,CAACA,KAAL,EACE;AACF,cAAMG,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAf;AACA,YAAI,CAACG,CAAD,KAAO3E,GAAX,EACE;AACFL,QAAAA,GAAG,GAAG+E,IAAI,CAACE,SAAL,CAAeF,IAAI,CAACG,WAAL,CAAiB,GAAjB,IAAwB,CAAvC,CAAN;AACD;;AACD,YAAM3E,OAAO,GAAG;AAAEF,QAAAA,GAAF;AAAOL,QAAAA;AAAP,OAAhB;;AACA,WAAK5D,SAAL,CAAeX,GAAf,CAAmB4E,GAAnB,EAAwBE,OAAxB;;AACA,WAAKX,IAAL,CAAUrE,aAAa,CAACsE,MAAd,CAAqBsF,YAA/B,EAA6C5E,OAA7C;AACD;;AAED,SAAK,MAAMyE,CAAX,IAAgB,KAAK5I,SAAL,CAAeV,IAAf,EAAhB,EAAuC;AACrC,UAAI,CAACiJ,OAAO,CAACtJ,GAAR,CAAY2J,CAAZ,CAAL,EAAqB;AACnB,aAAK5I,SAAL,CAAeT,MAAf,CAAsBqJ,CAAtB;;AACA,aAAKpF,IAAL,CAAUrE,aAAa,CAACsE,MAAd,CAAqBuF,cAA/B,EAA+CJ,CAA/C;AACD;AACF;AACF;;AAtR0C;;;AAAhCzJ,a,CAWJsE,M,GAAS;AACdsF,EAAAA,YAAY,EAAE,cADA;AAEdC,EAAAA,cAAc,EAAE,gBAFF;AAGdtF,EAAAA,MAAM,EAAE;AAHM,C;;AA8QlB,MAAMW,cAAN,SAA6B4E,oBAA7B,CAA0C;AAQxCpL,EAAAA,WAAW,CAACqB,MAAD,EAAwB2C,MAAxB,EAA+C;AACxD;AADwD,SAPjD3C,MAOiD;AAAA,SANlDgK,OAMkD;AAAA,SALlDC,SAKkD;AAAA,SAJlDC,gBAIkD,GAJ/B,iCAI+B;AAAA,SAH1DnH,SAG0D;AAAA,SAF1DoH,OAE0D;AAExD,SAAKC,eAAL,CAAqB,CAArB;AACA,SAAKpK,MAAL,GAAcA,MAAd;AACA,SAAKgK,OAAL,GAAerH,MAAf;;AACA,SAAKqH,OAAL,CAAa/B,EAAb,CAAgB,OAAhB,EAAyB,MAAM;AAC7B,WAAKiC,gBAAL,CAAsB,MAAM;AAC1B,YAAI,KAAKC,OAAT,EACE,KAAKA,OAAL;AACH,OAHD;AAID,KALD;;AAMA,SAAKF,SAAL,GAAiB,IAAKI,EAAD,CAAYC,QAAhB,EAAjB;;AACA,SAAKL,SAAL,CAAehC,EAAf,CAAkB,SAAlB,EAA6BjF,OAAO,IAAI;AACtC,WAAKkH,gBAAL,CAAsB,MAAM;AAC1B,YAAI,KAAKnH,SAAT,EACE,KAAKA,SAAL,CAAeG,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAf;AACH,OAHD;AAID,KALD;AAMD;;AAEU,QAAL1B,KAAK,GAAG;AACZ,UAAM,KAAK0I,OAAL,CAAajC,KAAb,CAAmBQ,MAAM,CAACI,IAAP,CAAa;AAC1C;AACA;AACA;AACA;AACA;AACA,CAN6B,CAAnB,CAAN,CADY,CAQZ;;AACA,UAAM,IAAI/E,OAAJ,CAAYC,CAAC,IAAI,KAAKmG,OAAL,CAAcf,IAAd,CAAmB,MAAnB,EAA2BpF,CAA3B,CAAjB,CAAN,CATY,CAWZ;;AACA,SAAKmG,OAAL,CAAa/B,EAAb,CAAgB,MAAhB,EAAwBS,IAAI,IAAI,KAAKuB,SAAL,CAAeM,MAAf,CAAsB7B,IAAtB,EAA4B,QAA5B,EAAsC,MAAM,CAAE,CAA9C,CAAhC;AACD;;AAES,QAAJ5E,IAAI,CAAC0G,CAAD,EAAS;AACjB,UAAM,KAAKR,OAAL,CAAcjC,KAAd,CAAoB0C,cAAc,CAACvH,IAAI,CAACgB,SAAL,CAAesG,CAAf,CAAD,CAAlC,CAAN;AACD;;AAEU,QAALrG,KAAK,GAAG;AACZ,SAAK6F,OAAL,CAAc7F,KAAd;AACD;;AAjDuC;;AAoD1C,SAASsG,cAAT,CAAwB/B,IAAxB,EAA8C;AAC5C,SAAQ2B,EAAD,CAAYK,MAAZ,CAAmBC,KAAnB,CAAyBpC,MAAM,CAACI,IAAP,CAAYD,IAAZ,CAAzB,EAA4C;AACjDkC,IAAAA,MAAM,EAAE,CADyC;AAEjDC,IAAAA,IAAI,EAAE,IAF2C;AAGjDC,IAAAA,GAAG,EAAE,IAH4C;AAIjDC,IAAAA,QAAQ,EAAE;AAJuC,GAA5C,EAKJ,CALI,CAAP;AAMD;;AAED,MAAMjF,mBAAN,CAAoD;AAGlDnH,EAAAA,WAAW,CAAC0H,OAAD,EAA0B;AAAA,SAF7B2E,QAE6B;AAAA,SAIrCb,OAJqC;AACnC,SAAKa,QAAL,GAAgB3E,OAAhB;AACD;;AAIS,QAAJ4E,IAAI,GAAkB,CAC3B;;AAEU,QAAL9G,KAAK,GAAkB;AAC3B,UAAM,KAAK6G,QAAL,CAAc7G,KAAd,EAAN;AACD;;AAdiD","sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport debug from 'debug';\nimport * as types from '../types';\nimport { EventEmitter } from 'events';\nimport fs from 'fs';\nimport * as stream from 'stream';\nimport * as ws from 'ws';\nimport { createGuid, makeWaitForNextTask } from '../../utils/utils';\nimport { BrowserOptions, BrowserProcess, PlaywrightOptions } from '../browser';\nimport { BrowserContext, validateBrowserContextOptions } from '../browserContext';\nimport { ProgressController } from '../progress';\nimport { CRBrowser } from '../chromium/crBrowser';\nimport { helper } from '../helper';\nimport { Transport } from '../../protocol/transport';\nimport { RecentLogsCollector } from '../../utils/debugLogger';\nimport { TimeoutSettings } from '../../utils/timeoutSettings';\nimport { AndroidWebView } from '../../protocol/channels';\nimport { CRPage } from '../chromium/crPage';\nimport { SdkObject, internalCallMetadata } from '../instrumentation';\n\nexport interface Backend {\n  devices(): Promise<DeviceBackend[]>;\n}\n\nexport interface DeviceBackend {\n  serial: string;\n  status: string;\n  close(): Promise<void>;\n  init(): Promise<void>;\n  runCommand(command: string): Promise<Buffer>;\n  open(command: string): Promise<SocketBackend>;\n}\n\nexport interface SocketBackend extends EventEmitter {\n  guid: string;\n  write(data: Buffer): Promise<void>;\n  close(): void;\n}\n\nexport class Android extends SdkObject {\n  private _backend: Backend;\n  private _devices = new Map<string, AndroidDevice>();\n  readonly _timeoutSettings: TimeoutSettings;\n  readonly _playwrightOptions: PlaywrightOptions;\n\n  constructor(backend: Backend, playwrightOptions: PlaywrightOptions) {\n    super(playwrightOptions.rootSdkObject, 'android');\n    this._backend = backend;\n    this._playwrightOptions = playwrightOptions;\n    this._timeoutSettings = new TimeoutSettings();\n  }\n\n  setDefaultTimeout(timeout: number) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n\n  async devices(): Promise<AndroidDevice[]> {\n    const devices = (await this._backend.devices()).filter(d => d.status === 'device');\n    const newSerials = new Set<string>();\n    for (const d of devices) {\n      newSerials.add(d.serial);\n      if (this._devices.has(d.serial))\n        continue;\n      const device = await AndroidDevice.create(this, d);\n      this._devices.set(d.serial, device);\n    }\n    for (const d of this._devices.keys()) {\n      if (!newSerials.has(d))\n        this._devices.delete(d);\n    }\n    return [...this._devices.values()];\n  }\n\n  _deviceClosed(device: AndroidDevice) {\n    this._devices.delete(device.serial);\n  }\n}\n\nexport class AndroidDevice extends SdkObject {\n  readonly _backend: DeviceBackend;\n  readonly model: string;\n  readonly serial: string;\n  private _driverPromise: Promise<Transport> | undefined;\n  private _lastId = 0;\n  private _callbacks = new Map<number, { fulfill: (result: any) => void, reject: (error: Error) => void }>();\n  private _pollingWebViews: NodeJS.Timeout | undefined;\n  readonly _timeoutSettings: TimeoutSettings;\n  private _webViews = new Map<number, AndroidWebView>();\n\n  static Events = {\n    WebViewAdded: 'webViewAdded',\n    WebViewRemoved: 'webViewRemoved',\n    Closed: 'closed'\n  };\n\n  private _browserConnections = new Set<AndroidBrowser>();\n  private _android: Android;\n  private _isClosed = false;\n\n  constructor(android: Android, backend: DeviceBackend, model: string) {\n    super(android, 'android-device');\n    this._android = android;\n    this._backend = backend;\n    this.model = model;\n    this.serial = backend.serial;\n    this._timeoutSettings = new TimeoutSettings(android._timeoutSettings);\n  }\n\n  static async create(android: Android, backend: DeviceBackend): Promise<AndroidDevice> {\n    await backend.init();\n    const model = await backend.runCommand('shell:getprop ro.product.model');\n    const device = new AndroidDevice(android, backend, model.toString().trim());\n    await device._init();\n    return device;\n  }\n\n  async _init() {\n    await this._refreshWebViews();\n    const poll = () => {\n      this._pollingWebViews = setTimeout(() => this._refreshWebViews().then(poll).catch(() => {}), 500);\n    };\n    poll();\n  }\n\n  setDefaultTimeout(timeout: number) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n\n  async shell(command: string): Promise<Buffer> {\n    const result = await this._backend.runCommand(`shell:${command}`);\n    await this._refreshWebViews();\n    return result;\n  }\n\n  async open(command: string): Promise<SocketBackend> {\n    return await this._backend.open(`${command}`);\n  }\n\n  async screenshot(): Promise<Buffer> {\n    return await this._backend.runCommand(`shell:screencap -p`);\n  }\n\n  private async _driver(): Promise<Transport> {\n    if (!this._driverPromise)\n      this._driverPromise = this._installDriver();\n    return this._driverPromise;\n  }\n\n  private async _installDriver(): Promise<Transport> {\n    debug('pw:android')('Stopping the old driver');\n    await this.shell(`am force-stop com.microsoft.playwright.androiddriver`);\n\n    debug('pw:android')('Uninstalling the old driver');\n    await this.shell(`cmd package uninstall com.microsoft.playwright.androiddriver`);\n    await this.shell(`cmd package uninstall com.microsoft.playwright.androiddriver.test`);\n\n    debug('pw:android')('Installing the new driver');\n    for (const file of ['android-driver.apk', 'android-driver-target.apk'])\n      await this.installApk(await fs.promises.readFile(require.resolve(`../../../bin/${file}`)));\n\n    debug('pw:android')('Starting the new driver');\n    this.shell('am instrument -w com.microsoft.playwright.androiddriver.test/androidx.test.runner.AndroidJUnitRunner').catch(e => debug('pw:android')(e));\n    const socket = await this._waitForLocalAbstract('playwright_android_driver_socket');\n    const transport = new Transport(socket, socket, socket, 'be');\n    transport.onmessage = message => {\n      const response = JSON.parse(message);\n      const { id, result, error } = response;\n      const callback = this._callbacks.get(id);\n      if (!callback)\n        return;\n      if (error)\n        callback.reject(new Error(error));\n      else\n        callback.fulfill(result);\n      this._callbacks.delete(id);\n    };\n    return transport;\n  }\n\n  private async _waitForLocalAbstract(socketName: string): Promise<SocketBackend> {\n    let socket: SocketBackend | undefined;\n    debug('pw:android')(`Polling the socket localabstract:${socketName}`);\n    while (!socket) {\n      try {\n        socket = await this._backend.open(`localabstract:${socketName}`);\n      } catch (e) {\n        await new Promise(f => setTimeout(f, 250));\n      }\n    }\n    debug('pw:android')(`Connected to localabstract:${socketName}`);\n    return socket;\n  }\n\n  async send(method: string, params: any = {}): Promise<any> {\n    // Patch the timeout in!\n    params.timeout = this._timeoutSettings.timeout(params);\n    const driver = await this._driver();\n    const id = ++this._lastId;\n    const result = new Promise((fulfill, reject) => this._callbacks.set(id, { fulfill, reject }));\n    driver.send(JSON.stringify({ id, method, params }));\n    return result;\n  }\n\n  async close() {\n    this._isClosed = true;\n    if (this._pollingWebViews)\n      clearTimeout(this._pollingWebViews);\n    for (const connection of this._browserConnections)\n      await connection.close();\n    if (this._driverPromise) {\n      const driver = await this._driver();\n      driver.close();\n    }\n    await this._backend.close();\n    this._android._deviceClosed(this);\n    this.emit(AndroidDevice.Events.Closed);\n  }\n\n  async launchBrowser(pkg: string = 'com.android.chrome', options: types.BrowserContextOptions): Promise<BrowserContext> {\n    debug('pw:android')('Force-stopping', pkg);\n    await this._backend.runCommand(`shell:am force-stop ${pkg}`);\n\n    const socketName = 'playwright-' + createGuid();\n    const commandLine = `_ --disable-fre --no-default-browser-check --no-first-run --remote-debugging-socket-name=${socketName}`;\n    debug('pw:android')('Starting', pkg, commandLine);\n    await this._backend.runCommand(`shell:echo \"${commandLine}\" > /data/local/tmp/chrome-command-line`);\n    await this._backend.runCommand(`shell:am start -n ${pkg}/com.google.android.apps.chrome.Main about:blank`);\n    return await this._connectToBrowser(socketName, options);\n  }\n\n  async connectToWebView(pid: number, sdkLanguage: string): Promise<BrowserContext> {\n    const webView = this._webViews.get(pid);\n    if (!webView)\n      throw new Error('WebView has been closed');\n    return await this._connectToBrowser(`webview_devtools_remote_${pid}`, { sdkLanguage });\n  }\n\n  private async _connectToBrowser(socketName: string, options: types.BrowserContextOptions): Promise<BrowserContext> {\n    const socket = await this._waitForLocalAbstract(socketName);\n    const androidBrowser = new AndroidBrowser(this, socket);\n    await androidBrowser._init();\n    this._browserConnections.add(androidBrowser);\n\n    const browserOptions: BrowserOptions = {\n      ...this._android._playwrightOptions,\n      name: 'clank',\n      isChromium: true,\n      slowMo: 0,\n      persistent: { ...options, noDefaultViewport: true },\n      artifactsDir: '',\n      downloadsPath: '',\n      tracesDir: '',\n      browserProcess: new ClankBrowserProcess(androidBrowser),\n      proxy: options.proxy,\n      protocolLogger: helper.debugProtocolLogger(),\n      browserLogsCollector: new RecentLogsCollector()\n    };\n    validateBrowserContextOptions(options, browserOptions);\n\n    const browser = await CRBrowser.connect(androidBrowser, browserOptions);\n    const controller = new ProgressController(internalCallMetadata(), this);\n    const defaultContext = browser._defaultContext!;\n    await controller.run(async progress => {\n      await defaultContext._loadDefaultContextAsIs(progress);\n    });\n    {\n      // TODO: remove after rolling to r838157\n      // Force page scale factor update.\n      const page = defaultContext.pages()[0];\n      const crPage = page._delegate as CRPage;\n      await crPage._mainFrameSession._client.send('Emulation.setDeviceMetricsOverride', { mobile: false, width: 0, height: 0, deviceScaleFactor: 0 });\n      await crPage._mainFrameSession._client.send('Emulation.clearDeviceMetricsOverride', {});\n    }\n    return defaultContext;\n  }\n\n  webViews(): AndroidWebView[] {\n    return [...this._webViews.values()];\n  }\n\n  async installApk(content: Buffer, options?: { args?: string[] }): Promise<void> {\n    const args = options && options.args ? options.args : ['-r', '-t', '-S'];\n    debug('pw:android')('Opening install socket');\n    const installSocket = await this._backend.open(`shell:cmd package install ${args.join(' ')} ${content.length}`);\n    debug('pw:android')('Writing driver bytes: ' + content.length);\n    await installSocket.write(content);\n    const success = await new Promise(f => installSocket.on('data', f));\n    debug('pw:android')('Written driver bytes: ' + success);\n    installSocket.close();\n  }\n\n  async push(content: Buffer, path: string, mode = 0o644): Promise<void> {\n    const socket = await this._backend.open(`sync:`);\n    const sendHeader = async (command: string, length: number) => {\n      const buffer = Buffer.alloc(command.length + 4);\n      buffer.write(command, 0);\n      buffer.writeUInt32LE(length, command.length);\n      await socket.write(buffer);\n    };\n    const send = async (command: string, data: Buffer) => {\n      await sendHeader(command, data.length);\n      await socket.write(data);\n    };\n    await send('SEND', Buffer.from(`${path},${mode}`));\n    const maxChunk = 65535;\n    for (let i = 0; i < content.length; i += maxChunk)\n      await send('DATA', content.slice(i, i + maxChunk));\n    await sendHeader('DONE', (Date.now() / 1000) | 0);\n    const result = await new Promise<Buffer>(f => socket.once('data', f));\n    const code = result.slice(0, 4).toString();\n    if (code !== 'OKAY')\n      throw new Error('Could not push: ' + code);\n    socket.close();\n  }\n\n  private async _refreshWebViews() {\n    const sockets = (await this._backend.runCommand(`shell:cat /proc/net/unix | grep webview_devtools_remote`)).toString().split('\\n');\n    if (this._isClosed)\n      return;\n\n    const newPids = new Set<number>();\n    for (const line of sockets) {\n      const match = line.match(/[^@]+@webview_devtools_remote_(\\d+)/);\n      if (!match)\n        continue;\n      const pid = +match[1];\n      newPids.add(pid);\n    }\n    for (const pid of newPids) {\n      if (this._webViews.has(pid))\n        continue;\n\n      const procs = (await this._backend.runCommand(`shell:ps -A | grep ${pid}`)).toString().split('\\n');\n      if (this._isClosed)\n        return;\n      let pkg = '';\n      for (const proc of procs) {\n        const match = proc.match(/[^\\s]+\\s+(\\d+).*$/);\n        if (!match)\n          continue;\n        const p = match[1];\n        if (+p !== pid)\n          continue;\n        pkg = proc.substring(proc.lastIndexOf(' ') + 1);\n      }\n      const webView = { pid, pkg };\n      this._webViews.set(pid, webView);\n      this.emit(AndroidDevice.Events.WebViewAdded, webView);\n    }\n\n    for (const p of this._webViews.keys()) {\n      if (!newPids.has(p)) {\n        this._webViews.delete(p);\n        this.emit(AndroidDevice.Events.WebViewRemoved, p);\n      }\n    }\n  }\n}\n\nclass AndroidBrowser extends EventEmitter {\n  readonly device: AndroidDevice;\n  private _socket: SocketBackend;\n  private _receiver: stream.Writable;\n  private _waitForNextTask = makeWaitForNextTask();\n  onmessage?: (message: any) => void;\n  onclose?: () => void;\n\n  constructor(device: AndroidDevice, socket: SocketBackend) {\n    super();\n    this.setMaxListeners(0);\n    this.device = device;\n    this._socket = socket;\n    this._socket.on('close', () => {\n      this._waitForNextTask(() => {\n        if (this.onclose)\n          this.onclose();\n      });\n    });\n    this._receiver = new (ws as any).Receiver() as stream.Writable;\n    this._receiver.on('message', message => {\n      this._waitForNextTask(() => {\n        if (this.onmessage)\n          this.onmessage(JSON.parse(message));\n      });\n    });\n  }\n\n  async _init() {\n    await this._socket.write(Buffer.from(`GET /devtools/browser HTTP/1.1\\r\nUpgrade: WebSocket\\r\nConnection: Upgrade\\r\nSec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\\r\nSec-WebSocket-Version: 13\\r\n\\r\n`));\n    // HTTP Upgrade response.\n    await new Promise(f => this._socket!.once('data', f));\n\n    // Start sending web frame to receiver.\n    this._socket.on('data', data => this._receiver._write(data, 'binary', () => {}));\n  }\n\n  async send(s: any) {\n    await this._socket!.write(encodeWebFrame(JSON.stringify(s)));\n  }\n\n  async close() {\n    this._socket!.close();\n  }\n}\n\nfunction encodeWebFrame(data: string): Buffer {\n  return (ws as any).Sender.frame(Buffer.from(data), {\n    opcode: 1,\n    mask: true,\n    fin: true,\n    readOnly: true\n  })[0];\n}\n\nclass ClankBrowserProcess implements BrowserProcess {\n  private _browser: AndroidBrowser;\n\n  constructor(browser: AndroidBrowser) {\n    this._browser = browser;\n  }\n\n  onclose: ((exitCode: number | null, signal: string | null) => void) | undefined;\n\n  async kill(): Promise<void> {\n  }\n\n  async close(): Promise<void> {\n    await this._browser.close();\n  }\n}\n"],"file":"android.js"}