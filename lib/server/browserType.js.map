{"version":3,"sources":["../../src/server/browserType.ts"],"names":["ARTIFACTS_FOLDER","path","join","os","tmpdir","BrowserType","SdkObject","constructor","browserName","playwrightOptions","rootSdkObject","_name","_playwrightOptions","attribution","browserType","executablePath","registry","findExecutable","name","launch","metadata","options","protocolLogger","validateLaunchOptions","loopbackProxyOverride","controller","ProgressController","setLogName","browser","run","progress","_innerLaunchWithRetries","undefined","helper","debugProtocolLogger","catch","e","_rewriteStartupError","TimeoutSettings","timeout","launchPersistentContext","userDataDir","persistent","_defaultContext","_innerLaunch","error","errorMessage","message","includes","log","proxy","browserLogsCollector","RecentLogsCollector","browserProcess","artifactsDir","transport","_launchProcess","__testHookBeforeCreateBrowser","browserOptions","isChromium","channel","slowMo","headful","headless","downloadsPath","tracesDir","customExecutablePath","wsEndpoint","useWebSocket","copyTestHooks","_connectToTransport","ignoreAllDefaultArgs","_loadDefaultContext","isPersistent","ignoreDefaultArgs","args","handleSIGINT","handleSIGTERM","handleSIGHUP","env","process","tempDirectories","fs","promises","mkdir","recursive","mkdtemp","push","browserArguments","_defaultArgs","filter","arg","indexOf","executable","Error","registryExecutable","executablePathOrDie","validateHostRequirements","wsEndpointCallback","shouldWaitForWSListening","some","a","startsWith","waitForWSEndpoint","Promise","f","launchedProcess","gracefullyClose","kill","command","_amendEnvironment","match","stdio","attemptToGracefullyClose","__testHookGracefullyClose","_attemptToGracefullyCloseBrowser","onExit","exitCode","signal","onclose","closeOrKill","timer","race","resolve","reject","setTimeout","ignored","clearTimeout","close","__testHookBrowserCloseTimeout","DEFAULT_TIMEOUT","cleanupWhenAborted","timeUntilDeadline","WebSocketTransport","connect","PipeTransport","connectOverCDP","endpointURL","from","to","key","value","Object","entries","proxyOverride","devtools","isAbsolute","cwd","server"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport * as os from 'os';\nimport path from 'path';\nimport { BrowserContext, normalizeProxySettings, validateBrowserContextOptions } from './browserContext';\nimport { registry, BrowserName } from '../utils/registry';\nimport { ConnectionTransport, WebSocketTransport } from './transport';\nimport { BrowserOptions, Browser, BrowserProcess, PlaywrightOptions } from './browser';\nimport { launchProcess, Env, envArrayToObject } from '../utils/processLauncher';\nimport { PipeTransport } from './pipeTransport';\nimport { Progress, ProgressController } from './progress';\nimport * as types from './types';\nimport { DEFAULT_TIMEOUT, TimeoutSettings } from '../utils/timeoutSettings';\nimport { debugMode, existsAsync } from '../utils/utils';\nimport { helper } from './helper';\nimport { RecentLogsCollector } from '../utils/debugLogger';\nimport { CallMetadata, SdkObject } from './instrumentation';\n\nconst ARTIFACTS_FOLDER = path.join(os.tmpdir(), 'playwright-artifacts-');\n\nexport abstract class BrowserType extends SdkObject {\n  private _name: BrowserName;\n  readonly _playwrightOptions: PlaywrightOptions;\n\n  constructor(browserName: BrowserName, playwrightOptions: PlaywrightOptions) {\n    super(playwrightOptions.rootSdkObject, 'browser-type');\n    this.attribution.browserType = this;\n    this._playwrightOptions = playwrightOptions;\n    this._name = browserName;\n  }\n\n  executablePath(): string {\n    return registry.findExecutable(this._name).executablePath() || '';\n  }\n\n  name(): string {\n    return this._name;\n  }\n\n  async launch(metadata: CallMetadata, options: types.LaunchOptions, protocolLogger?: types.ProtocolLogger): Promise<Browser> {\n    options = validateLaunchOptions(options, this._playwrightOptions.loopbackProxyOverride?.());\n    const controller = new ProgressController(metadata, this);\n    controller.setLogName('browser');\n    const browser = await controller.run(progress => {\n      return this._innerLaunchWithRetries(progress, options, undefined, helper.debugProtocolLogger(protocolLogger)).catch(e => { throw this._rewriteStartupError(e); });\n    }, TimeoutSettings.timeout(options));\n    return browser;\n  }\n\n  async launchPersistentContext(metadata: CallMetadata, userDataDir: string, options: types.LaunchPersistentOptions): Promise<BrowserContext> {\n    options = validateLaunchOptions(options, this._playwrightOptions.loopbackProxyOverride?.());\n    const controller = new ProgressController(metadata, this);\n    const persistent: types.BrowserContextOptions = options;\n    controller.setLogName('browser');\n    const browser = await controller.run(progress => {\n      return this._innerLaunchWithRetries(progress, options, persistent, helper.debugProtocolLogger(), userDataDir).catch(e => { throw this._rewriteStartupError(e); });\n    }, TimeoutSettings.timeout(options));\n    return browser._defaultContext!;\n  }\n\n  async _innerLaunchWithRetries(progress: Progress, options: types.LaunchOptions, persistent: types.BrowserContextOptions | undefined, protocolLogger: types.ProtocolLogger, userDataDir?: string): Promise<Browser> {\n    try {\n      return this._innerLaunch(progress, options, persistent, protocolLogger, userDataDir);\n    } catch (error) {\n      // @see https://github.com/microsoft/playwright/issues/5214\n      const errorMessage = typeof error === 'object' && typeof error.message === 'string' ? error.message : '';\n      if (errorMessage.includes('Inconsistency detected by ld.so')) {\n        progress.log(`<restarting browser due to hitting race condition in glibc>`);\n        return this._innerLaunch(progress, options, persistent, protocolLogger, userDataDir);\n      }\n      throw error;\n    }\n  }\n\n  async _innerLaunch(progress: Progress, options: types.LaunchOptions, persistent: types.BrowserContextOptions | undefined, protocolLogger: types.ProtocolLogger, userDataDir?: string): Promise<Browser> {\n    options.proxy = options.proxy ? normalizeProxySettings(options.proxy) : undefined;\n    const browserLogsCollector = new RecentLogsCollector();\n    const { browserProcess, artifactsDir, transport } = await this._launchProcess(progress, options, !!persistent, browserLogsCollector, userDataDir);\n    if ((options as any).__testHookBeforeCreateBrowser)\n      await (options as any).__testHookBeforeCreateBrowser();\n    const browserOptions: BrowserOptions = {\n      ...this._playwrightOptions,\n      name: this._name,\n      isChromium: this._name === 'chromium',\n      channel: options.channel,\n      slowMo: options.slowMo,\n      persistent,\n      headful: !options.headless,\n      artifactsDir,\n      downloadsPath: (options.downloadsPath || artifactsDir)!,\n      tracesDir: (options.tracesDir || artifactsDir)!,\n      browserProcess,\n      customExecutablePath: options.executablePath,\n      proxy: options.proxy,\n      protocolLogger,\n      browserLogsCollector,\n      wsEndpoint: options.useWebSocket ? (transport as WebSocketTransport).wsEndpoint : undefined,\n    };\n    if (persistent)\n      validateBrowserContextOptions(persistent, browserOptions);\n    copyTestHooks(options, browserOptions);\n    const browser = await this._connectToTransport(transport, browserOptions);\n    // We assume no control when using custom arguments, and do not prepare the default context in that case.\n    if (persistent && !options.ignoreAllDefaultArgs)\n      await browser._defaultContext!._loadDefaultContext(progress);\n    return browser;\n  }\n\n  private async _launchProcess(progress: Progress, options: types.LaunchOptions, isPersistent: boolean, browserLogsCollector: RecentLogsCollector, userDataDir?: string): Promise<{ browserProcess: BrowserProcess, artifactsDir: string, transport: ConnectionTransport }> {\n    const {\n      ignoreDefaultArgs,\n      ignoreAllDefaultArgs,\n      args = [],\n      executablePath = null,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n    } = options;\n\n    const env = options.env ? envArrayToObject(options.env) : process.env;\n\n    const tempDirectories = [];\n    if (options.downloadsPath)\n      await fs.promises.mkdir(options.downloadsPath, { recursive: true });\n    if (options.tracesDir)\n      await fs.promises.mkdir(options.tracesDir, { recursive: true });\n\n    const artifactsDir = await fs.promises.mkdtemp(ARTIFACTS_FOLDER);\n    tempDirectories.push(artifactsDir);\n\n    if (!userDataDir) {\n      userDataDir = await fs.promises.mkdtemp(path.join(os.tmpdir(), `playwright_${this._name}dev_profile-`));\n      tempDirectories.push(userDataDir);\n    }\n\n    const browserArguments = [];\n    if (ignoreAllDefaultArgs)\n      browserArguments.push(...args);\n    else if (ignoreDefaultArgs)\n      browserArguments.push(...this._defaultArgs(options, isPersistent, userDataDir).filter(arg => ignoreDefaultArgs.indexOf(arg) === -1));\n    else\n      browserArguments.push(...this._defaultArgs(options, isPersistent, userDataDir));\n\n    let executable: string;\n    if (executablePath) {\n      if (!(await existsAsync(executablePath)))\n        throw new Error(`Failed to launch ${this._name} because executable doesn't exist at ${executablePath}`);\n      executable = executablePath;\n    } else {\n      const registryExecutable = registry.findExecutable(options.channel || this._name);\n      if (!registryExecutable || registryExecutable.browserName !== this._name)\n        throw new Error(`Unsupported ${this._name} channel \"${options.channel}\"`);\n      executable = registryExecutable.executablePathOrDie();\n      await registryExecutable.validateHostRequirements();\n    }\n\n    let wsEndpointCallback: ((wsEndpoint: string) => void) | undefined;\n    const shouldWaitForWSListening = options.useWebSocket || options.args?.some(a => a.startsWith('--remote-debugging-port'));\n    const waitForWSEndpoint = shouldWaitForWSListening ? new Promise<string>(f => wsEndpointCallback = f) : undefined;\n    // Note: it is important to define these variables before launchProcess, so that we don't get\n    // \"Cannot access 'browserServer' before initialization\" if something went wrong.\n    let transport: ConnectionTransport | undefined = undefined;\n    let browserProcess: BrowserProcess | undefined = undefined;\n    const { launchedProcess, gracefullyClose, kill } = await launchProcess({\n      command: executable,\n      args: browserArguments,\n      env: this._amendEnvironment(env, userDataDir, executable, browserArguments),\n      handleSIGINT,\n      handleSIGTERM,\n      handleSIGHUP,\n      log: (message: string) => {\n        if (wsEndpointCallback) {\n          const match = message.match(/DevTools listening on (.*)/);\n          if (match)\n            wsEndpointCallback(match[1]);\n        }\n        progress.log(message);\n        browserLogsCollector.log(message);\n      },\n      stdio: 'pipe',\n      tempDirectories,\n      attemptToGracefullyClose: async () => {\n        if ((options as any).__testHookGracefullyClose)\n          await (options as any).__testHookGracefullyClose();\n        // We try to gracefully close to prevent crash reporting and core dumps.\n        // Note that it's fine to reuse the pipe transport, since\n        // our connection ignores kBrowserCloseMessageId.\n        this._attemptToGracefullyCloseBrowser(transport!);\n      },\n      onExit: (exitCode, signal) => {\n        if (browserProcess && browserProcess.onclose)\n          browserProcess.onclose(exitCode, signal);\n      },\n    });\n    async function closeOrKill(timeout: number): Promise<void> {\n      let timer: NodeJS.Timer;\n      try {\n        await Promise.race([\n          gracefullyClose(),\n          new Promise((resolve, reject) => timer = setTimeout(reject, timeout)),\n        ]);\n      } catch (ignored) {\n        await kill().catch(ignored => {}); // Make sure to await actual process exit.\n      } finally {\n        clearTimeout(timer!);\n      }\n    }\n    browserProcess = {\n      onclose: undefined,\n      process: launchedProcess,\n      close: () => closeOrKill((options as any).__testHookBrowserCloseTimeout || DEFAULT_TIMEOUT),\n      kill\n    };\n    progress.cleanupWhenAborted(() => closeOrKill(progress.timeUntilDeadline()));\n    let wsEndpoint: string | undefined;\n    if (shouldWaitForWSListening)\n      wsEndpoint = await waitForWSEndpoint;\n    if (options.useWebSocket) {\n      transport = await WebSocketTransport.connect(progress, wsEndpoint!);\n    } else {\n      const stdio = launchedProcess.stdio as unknown as [NodeJS.ReadableStream, NodeJS.WritableStream, NodeJS.WritableStream, NodeJS.WritableStream, NodeJS.ReadableStream];\n      transport = new PipeTransport(stdio[3], stdio[4]);\n    }\n    return { browserProcess, artifactsDir, transport };\n  }\n\n  async connectOverCDP(metadata: CallMetadata, endpointURL: string, options: { slowMo?: number, sdkLanguage: string }, timeout?: number): Promise<Browser> {\n    throw new Error('CDP connections are only supported by Chromium');\n  }\n\n  abstract _defaultArgs(options: types.LaunchOptions, isPersistent: boolean, userDataDir: string): string[];\n  abstract _connectToTransport(transport: ConnectionTransport, options: BrowserOptions): Promise<Browser>;\n  abstract _amendEnvironment(env: Env, userDataDir: string, executable: string, browserArguments: string[]): Env;\n  abstract _rewriteStartupError(error: Error): Error;\n  abstract _attemptToGracefullyCloseBrowser(transport: ConnectionTransport): void;\n}\n\nfunction copyTestHooks(from: object, to: object) {\n  for (const [key, value] of Object.entries(from)) {\n    if (key.startsWith('__testHook'))\n      (to as any)[key] = value;\n  }\n}\n\nfunction validateLaunchOptions<Options extends types.LaunchOptions>(options: Options, proxyOverride?: string): Options {\n  const { devtools = false } = options;\n  let { headless = !devtools, downloadsPath, proxy } = options;\n  if (debugMode())\n    headless = false;\n  if (downloadsPath && !path.isAbsolute(downloadsPath))\n    downloadsPath = path.join(process.cwd(), downloadsPath);\n  if (proxyOverride)\n    proxy = { server: proxyOverride };\n  return { ...options, devtools, headless, downloadsPath, proxy };\n}\n"],"file":"browserType.js"}