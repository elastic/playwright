{"version":3,"sources":["../../src/server/dialog.ts"],"names":["Dialog","SdkObject","constructor","page","type","message","onHandle","defaultValue","_page","_type","_message","_onHandle","_handled","_defaultValue","accept","promptText","dismiss"],"mappings":";;;;;;;AAiBA;;AAEA;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUO,MAAMA,MAAN,SAAqBC,0BAArB,CAA+B;AAQpCC,EAAAA,WAAW,CAACC,IAAD,EAAaC,IAAb,EAA2BC,OAA3B,EAA4CC,QAA5C,EAAgEC,YAAhE,EAAuF;AAChG,UAAMJ,IAAN,EAAY,QAAZ;AADgG,SAP1FK,KAO0F;AAAA,SAN1FC,KAM0F;AAAA,SAL1FC,QAK0F;AAAA,SAJ1FC,SAI0F;AAAA,SAH1FC,QAG0F,GAH/E,KAG+E;AAAA,SAF1FC,aAE0F;AAEhG,SAAKL,KAAL,GAAaL,IAAb;AACA,SAAKM,KAAL,GAAaL,IAAb;AACA,SAAKM,QAAL,GAAgBL,OAAhB;AACA,SAAKM,SAAL,GAAiBL,QAAjB;AACA,SAAKO,aAAL,GAAqBN,YAAY,IAAI,EAArC;AACD;;AAEDH,EAAAA,IAAI,GAAW;AACb,WAAO,KAAKK,KAAZ;AACD;;AAEDJ,EAAAA,OAAO,GAAW;AAChB,WAAO,KAAKK,QAAZ;AACD;;AAEDH,EAAAA,YAAY,GAAW;AACrB,WAAO,KAAKM,aAAZ;AACD;;AAEW,QAANC,MAAM,CAACC,UAAD,EAAiC;AAC3C,uBAAO,CAAC,KAAKH,QAAb,EAAuB,gDAAvB;AACA,SAAKA,QAAL,GAAgB,IAAhB;AACA,UAAM,KAAKD,SAAL,CAAe,IAAf,EAAqBI,UAArB,CAAN;AACD;;AAEY,QAAPC,OAAO,GAAG;AACd,uBAAO,CAAC,KAAKJ,QAAb,EAAuB,iDAAvB;AACA,SAAKA,QAAL,GAAgB,IAAhB;AACA,UAAM,KAAKD,SAAL,CAAe,KAAf,CAAN;AACD;;AAvCmC","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../utils/utils';\nimport { Page } from './page';\nimport { SdkObject } from './instrumentation';\n\ntype OnHandle = (accept: boolean, promptText?: string) => Promise<void>;\n\nexport type DialogType = 'alert' | 'beforeunload' | 'confirm' | 'prompt';\n\nexport class Dialog extends SdkObject {\n  private _page: Page;\n  private _type: string;\n  private _message: string;\n  private _onHandle: OnHandle;\n  private _handled = false;\n  private _defaultValue: string;\n\n  constructor(page: Page, type: string, message: string, onHandle: OnHandle, defaultValue?: string) {\n    super(page, 'dialog');\n    this._page = page;\n    this._type = type;\n    this._message = message;\n    this._onHandle = onHandle;\n    this._defaultValue = defaultValue || '';\n  }\n\n  type(): string {\n    return this._type;\n  }\n\n  message(): string {\n    return this._message;\n  }\n\n  defaultValue(): string {\n    return this._defaultValue;\n  }\n\n  async accept(promptText: string | undefined) {\n    assert(!this._handled, 'Cannot accept dialog which is already handled!');\n    this._handled = true;\n    await this._onHandle(true, promptText);\n  }\n\n  async dismiss() {\n    assert(!this._handled, 'Cannot dismiss dialog which is already handled!');\n    this._handled = true;\n    await this._onHandle(false);\n  }\n}\n"],"file":"dialog.js"}