{"version":3,"sources":["../../src/server/artifact.ts"],"names":["Artifact","SdkObject","constructor","parent","localPath","unaccessibleErrorMessage","cancelCallback","_localPath","_unaccessibleErrorMessage","_cancelCallback","_finishedCallback","_finishedPromise","_saveCallbacks","_finished","_deleted","_failureError","Promise","f","finishedPromise","localPathAfterFinished","Error","saveAs","saveCallback","catch","e","push","failureError","cancel","undefined","delete","fileName","fs","promises","unlink","deleteOnContextClose","reportFinished","error","callback"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport { assert } from '../utils/utils';\nimport { SdkObject } from './instrumentation';\n\ntype SaveCallback = (localPath: string, error?: string) => Promise<void>;\ntype CancelCallback = () => Promise<void>;\n\nexport class Artifact extends SdkObject {\n  private _localPath: string;\n  private _unaccessibleErrorMessage: string | undefined;\n  private _cancelCallback: CancelCallback | undefined;\n  private _finishedCallback: () => void;\n  private _finishedPromise: Promise<void>;\n  private _saveCallbacks: SaveCallback[] = [];\n  private _finished: boolean = false;\n  private _deleted = false;\n  private _failureError: string | null = null;\n\n  constructor(parent: SdkObject, localPath: string, unaccessibleErrorMessage?: string, cancelCallback?: CancelCallback) {\n    super(parent, 'artifact');\n    this._localPath = localPath;\n    this._unaccessibleErrorMessage = unaccessibleErrorMessage;\n    this._cancelCallback = cancelCallback;\n    this._finishedCallback = () => {};\n    this._finishedPromise = new Promise(f => this._finishedCallback = f);\n  }\n\n  finishedPromise() {\n    return this._finishedPromise;\n  }\n\n  localPath() {\n    return this._localPath;\n  }\n\n  async localPathAfterFinished(): Promise<string | null> {\n    if (this._unaccessibleErrorMessage)\n      throw new Error(this._unaccessibleErrorMessage);\n    await this._finishedPromise;\n    if (this._failureError)\n      return null;\n    return this._localPath;\n  }\n\n  saveAs(saveCallback: SaveCallback) {\n    if (this._unaccessibleErrorMessage)\n      throw new Error(this._unaccessibleErrorMessage);\n    if (this._deleted)\n      throw new Error(`File already deleted. Save before deleting.`);\n    if (this._failureError)\n      throw new Error(`File not found on disk. Check download.failure() for details.`);\n\n    if (this._finished) {\n      saveCallback(this._localPath).catch(e => {});\n      return;\n    }\n    this._saveCallbacks.push(saveCallback);\n  }\n\n  async failureError(): Promise<string | null> {\n    if (this._unaccessibleErrorMessage)\n      return this._unaccessibleErrorMessage;\n    await this._finishedPromise;\n    return this._failureError;\n  }\n\n  async cancel(): Promise<void> {\n    assert(this._cancelCallback !== undefined);\n    return this._cancelCallback();\n  }\n\n  async delete(): Promise<void> {\n    if (this._unaccessibleErrorMessage)\n      return;\n    const fileName = await this.localPathAfterFinished();\n    if (this._deleted)\n      return;\n    this._deleted = true;\n    if (fileName)\n      await fs.promises.unlink(fileName).catch(e => {});\n  }\n\n  async deleteOnContextClose(): Promise<void> {\n    // Compared to \"delete\", this method does not wait for the artifact to finish.\n    // We use it when closing the context to avoid stalling.\n    if (this._deleted)\n      return;\n    this._deleted = true;\n    if (!this._unaccessibleErrorMessage)\n      await fs.promises.unlink(this._localPath).catch(e => {});\n    await this.reportFinished('File deleted upon browser context closure.');\n  }\n\n  async reportFinished(error?: string) {\n    if (this._finished)\n      return;\n    this._finished = true;\n    this._failureError = error || null;\n\n    if (error) {\n      for (const callback of this._saveCallbacks)\n        await callback('', error);\n    } else {\n      for (const callback of this._saveCallbacks)\n        await callback(this._localPath);\n    }\n    this._saveCallbacks = [];\n\n    this._finishedCallback();\n  }\n}\n"],"file":"artifact.js"}