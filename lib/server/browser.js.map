{"version":3,"sources":["../../src/server/browser.ts"],"names":["Browser","SdkObject","constructor","options","rootSdkObject","_downloads","Map","_defaultContext","_startedClosing","_idToVideo","attribution","browser","_downloadCreated","page","uuid","url","suggestedFilename","download","Download","downloadsPath","set","_downloadFilenameSuggested","get","_filenameSuggested","_downloadFinished","error","artifact","reportFinished","delete","_videoStarted","context","videoId","path","pageOrError","Artifact","emit","BrowserContext","Events","VideoStarted","then","Page","_video","Video","_takeVideo","video","_didClose","contexts","_browserClosed","Disconnected","close","browserProcess","isConnected","Promise","x","once","killForTests","kill"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from './types';\nimport { BrowserContext } from './browserContext';\nimport { Page } from './page';\nimport { Download } from './download';\nimport { ProxySettings } from './types';\nimport { ChildProcess } from 'child_process';\nimport { RecentLogsCollector } from '../utils/debugLogger';\nimport { SdkObject } from './instrumentation';\nimport { Artifact } from './artifact';\nimport { Selectors } from './selectors';\n\nexport interface BrowserProcess {\n  onclose?: ((exitCode: number | null, signal: string | null) => void);\n  process?: ChildProcess;\n  kill(): Promise<void>;\n  close(): Promise<void>;\n}\n\nexport type PlaywrightOptions = {\n  rootSdkObject: SdkObject,\n  selectors: Selectors,\n  loopbackProxyOverride?: () => string,\n};\n\nexport type BrowserOptions = PlaywrightOptions & {\n  name: string,\n  isChromium: boolean,\n  channel?: string,\n  artifactsDir: string;\n  downloadsPath: string,\n  tracesDir: string,\n  headful?: boolean,\n  persistent?: types.BrowserContextOptions,  // Undefined means no persistent context.\n  browserProcess: BrowserProcess,\n  customExecutablePath?: string;\n  proxy?: ProxySettings,\n  protocolLogger: types.ProtocolLogger,\n  browserLogsCollector: RecentLogsCollector,\n  slowMo?: number;\n  wsEndpoint?: string;  // Only there when connected over web socket.\n};\n\nexport abstract class Browser extends SdkObject {\n  static Events = {\n    Disconnected: 'disconnected',\n  };\n\n  readonly options: BrowserOptions;\n  private _downloads = new Map<string, Download>();\n  _defaultContext: BrowserContext | null = null;\n  private _startedClosing = false;\n  readonly _idToVideo = new Map<string, { context: BrowserContext, artifact: Artifact }>();\n\n  constructor(options: BrowserOptions) {\n    super(options.rootSdkObject, 'browser');\n    this.attribution.browser = this;\n    this.options = options;\n  }\n\n  abstract newContext(options: types.BrowserContextOptions): Promise<BrowserContext>;\n  abstract contexts(): BrowserContext[];\n  abstract isConnected(): boolean;\n  abstract version(): string;\n\n  _downloadCreated(page: Page, uuid: string, url: string, suggestedFilename?: string) {\n    const download = new Download(page, this.options.downloadsPath || '', uuid, url, suggestedFilename);\n    this._downloads.set(uuid, download);\n  }\n\n  _downloadFilenameSuggested(uuid: string, suggestedFilename: string) {\n    const download = this._downloads.get(uuid);\n    if (!download)\n      return;\n    download._filenameSuggested(suggestedFilename);\n  }\n\n  _downloadFinished(uuid: string, error?: string) {\n    const download = this._downloads.get(uuid);\n    if (!download)\n      return;\n    download.artifact.reportFinished(error);\n    this._downloads.delete(uuid);\n  }\n\n  _videoStarted(context: BrowserContext, videoId: string, path: string, pageOrError: Promise<Page | Error>) {\n    const artifact = new Artifact(context, path);\n    this._idToVideo.set(videoId, { context, artifact });\n    context.emit(BrowserContext.Events.VideoStarted, artifact);\n    pageOrError.then(page => {\n      if (page instanceof Page) {\n        page._video = artifact;\n        page.emit(Page.Events.Video, artifact);\n      }\n    });\n  }\n\n  _takeVideo(videoId: string): Artifact | undefined {\n    const video = this._idToVideo.get(videoId);\n    this._idToVideo.delete(videoId);\n    return video?.artifact;\n  }\n\n  _didClose() {\n    for (const context of this.contexts())\n      context._browserClosed();\n    if (this._defaultContext)\n      this._defaultContext._browserClosed();\n    this.emit(Browser.Events.Disconnected);\n  }\n\n  async close() {\n    if (!this._startedClosing) {\n      this._startedClosing = true;\n      await this.options.browserProcess.close();\n    }\n    if (this.isConnected())\n      await new Promise(x => this.once(Browser.Events.Disconnected, x));\n  }\n\n  async killForTests() {\n    await this.options.browserProcess.kill();\n  }\n}\n"],"file":"browser.js"}