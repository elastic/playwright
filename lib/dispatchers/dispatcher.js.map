{"version":3,"sources":["../../src/dispatchers/dispatcher.ts"],"names":["dispatcherSymbol","Symbol","lookupDispatcher","object","result","existingDispatcher","lookupNullableDispatcher","undefined","Dispatcher","EventEmitter","constructor","parent","type","initializer","isScope","_connection","_isScope","_parent","_dispatchers","Map","_disposed","_guid","_type","_scope","_object","DispatcherConnection","guid","has","set","sendMessageToClient","_dispatchEvent","method","params","Error","sdkObject","SdkObject","_dispose","delete","dispatcher","values","clear","_debugScopeState","objects","Array","from","map","o","waitForEventInfo","Root","connection","createPlaywright","_initialized","initialize","playwright","_replaceDispatchersWithGuids","eventMetadata","id","lastEventId","objectId","pageId","attribution","page","frameId","frame","startTime","endTime","log","snapshots","instrumentation","onEvent","onmessage","message","_validateParams","_validateMetadata","_waitOperations","tChannel","name","arg","path","get","ValidationError","scheme","toUpperCase","substring","metadata","dispatch","error","kBrowserOrContextClosedError","rootDispatcher","validParams","validMetadata","e","callMetadata","info","waitId","phase","onBeforeCall","originalMetadata","push","onCallLog","onAfterCall","length","formatLogRecording","payload","isArray","p","key","Object","keys","header","headerLength","leftLength","rightLength","repeat","join"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\nimport * as channels from '../protocol/channels';\nimport { serializeError } from '../protocol/serializers';\nimport { createScheme, Validator, ValidationError } from '../protocol/validator';\nimport { assert, debugAssert, isUnderTest, monotonicTime } from '../utils/utils';\nimport { tOptional } from '../protocol/validatorPrimitives';\nimport { kBrowserOrContextClosedError } from '../utils/errors';\nimport { CallMetadata, SdkObject } from '../server/instrumentation';\nimport { rewriteErrorMessage } from '../utils/stackTrace';\nimport type { PlaywrightDispatcher } from './playwrightDispatcher';\n\nexport const dispatcherSymbol = Symbol('dispatcher');\n\nexport function lookupDispatcher<DispatcherType>(object: any): DispatcherType {\n  const result = object[dispatcherSymbol];\n  debugAssert(result);\n  return result;\n}\n\nexport function existingDispatcher<DispatcherType>(object: any): DispatcherType {\n  return object[dispatcherSymbol];\n}\n\nexport function lookupNullableDispatcher<DispatcherType>(object: any | null): DispatcherType | undefined {\n  return object ? lookupDispatcher(object) : undefined;\n}\n\nexport class Dispatcher<Type extends { guid: string }, Initializer> extends EventEmitter implements channels.Channel {\n  private _connection: DispatcherConnection;\n  private _isScope: boolean;\n  // Parent is always \"isScope\".\n  private _parent: Dispatcher<any, any> | undefined;\n  // Only \"isScope\" channel owners have registered dispatchers inside.\n  private _dispatchers = new Map<string, Dispatcher<any, any>>();\n  private _disposed = false;\n\n  readonly _guid: string;\n  readonly _type: string;\n  readonly _scope: Dispatcher<any, any>;\n  _object: Type;\n\n  constructor(parent: Dispatcher<any, any> | DispatcherConnection, object: Type, type: string, initializer: Initializer, isScope?: boolean) {\n    super();\n\n    this._connection = parent instanceof DispatcherConnection ? parent : parent._connection;\n    this._isScope = !!isScope;\n    this._parent = parent instanceof DispatcherConnection ? undefined : parent;\n    this._scope = isScope ? this : this._parent!;\n\n    const guid = object.guid;\n    assert(!this._connection._dispatchers.has(guid));\n    this._connection._dispatchers.set(guid, this);\n    if (this._parent) {\n      assert(!this._parent._dispatchers.has(guid));\n      this._parent._dispatchers.set(guid, this);\n    }\n\n    this._type = type;\n    this._guid = guid;\n    this._object = object;\n\n    (object as any)[dispatcherSymbol] = this;\n    if (this._parent)\n      this._connection.sendMessageToClient(this._parent._guid, type, '__create__', { type, initializer, guid }, this._parent._object);\n  }\n\n  _dispatchEvent(method: string, params: Dispatcher<any, any> | any = {}) {\n    if (this._disposed) {\n      if (isUnderTest())\n        throw new Error(`${this._guid} is sending \"${method}\" event after being disposed`);\n      // Just ignore this event outside of tests.\n      return;\n    }\n    const sdkObject = this._object instanceof SdkObject ? this._object : undefined;\n    this._connection.sendMessageToClient(this._guid, this._type, method, params, sdkObject);\n  }\n\n  _dispose() {\n    assert(!this._disposed);\n    this._disposed = true;\n\n    // Clean up from parent and connection.\n    if (this._parent)\n      this._parent._dispatchers.delete(this._guid);\n    this._connection._dispatchers.delete(this._guid);\n\n    // Dispose all children.\n    for (const dispatcher of [...this._dispatchers.values()])\n      dispatcher._dispose();\n    this._dispatchers.clear();\n\n    if (this._isScope)\n      this._connection.sendMessageToClient(this._guid, this._type, '__dispose__', {});\n  }\n\n  _debugScopeState(): any {\n    return {\n      _guid: this._guid,\n      objects: Array.from(this._dispatchers.values()).map(o => o._debugScopeState()),\n    };\n  }\n\n  async waitForEventInfo(): Promise<void> {\n    // Instrumentation takes care of this.\n  }\n}\n\nexport type DispatcherScope = Dispatcher<any, any>;\nexport class Root extends Dispatcher<{ guid: '' }, {}> {\n  private _initialized = false;\n\n  constructor(connection: DispatcherConnection, private readonly createPlaywright?: (scope: DispatcherScope) => Promise<PlaywrightDispatcher>) {\n    super(connection, { guid: '' }, 'Root', {}, true);\n  }\n\n  async initialize(params: { language?: string }): Promise<channels.RootInitializeResult> {\n    assert(this.createPlaywright);\n    assert(!this._initialized);\n    this._initialized = true;\n    return {\n      playwright: await this.createPlaywright(this),\n    };\n  }\n}\n\nexport class DispatcherConnection {\n  readonly _dispatchers = new Map<string, Dispatcher<any, any>>();\n  onmessage = (message: object) => {};\n  private _validateParams: (type: string, method: string, params: any) => any;\n  private _validateMetadata: (metadata: any) => { stack?: channels.StackFrame[] };\n  private _waitOperations = new Map<string, CallMetadata>();\n\n  sendMessageToClient(guid: string, type: string, method: string, params: any, sdkObject?: SdkObject) {\n    params = this._replaceDispatchersWithGuids(params);\n    if (sdkObject) {\n      const eventMetadata: CallMetadata = {\n        id: `event@${++lastEventId}`,\n        objectId: sdkObject?.guid,\n        pageId: sdkObject?.attribution?.page?.guid,\n        frameId: sdkObject?.attribution?.frame?.guid,\n        startTime: monotonicTime(),\n        endTime: 0,\n        type,\n        method,\n        params: params || {},\n        log: [],\n        snapshots: []\n      };\n      sdkObject.instrumentation?.onEvent(sdkObject, eventMetadata);\n    }\n    this.onmessage({ guid, method, params });\n  }\n\n  constructor() {\n    const tChannel = (name: string): Validator => {\n      return (arg: any, path: string) => {\n        if (arg && typeof arg === 'object' && typeof arg.guid === 'string') {\n          const guid = arg.guid;\n          const dispatcher = this._dispatchers.get(guid);\n          if (!dispatcher)\n            throw new ValidationError(`${path}: no object with guid ${guid}`);\n          if (name !== '*' && dispatcher._type !== name)\n            throw new ValidationError(`${path}: object with guid ${guid} has type ${dispatcher._type}, expected ${name}`);\n          return dispatcher;\n        }\n        throw new ValidationError(`${path}: expected ${name}`);\n      };\n    };\n    const scheme = createScheme(tChannel);\n    this._validateParams = (type: string, method: string, params: any): any => {\n      const name = type + method[0].toUpperCase() + method.substring(1) + 'Params';\n      if (!scheme[name])\n        throw new ValidationError(`Unknown scheme for ${type}.${method}`);\n      return scheme[name](params, '');\n    };\n    this._validateMetadata = (metadata: any): any => {\n      return tOptional(scheme['Metadata'])(metadata, '');\n    };\n  }\n\n  async dispatch(message: object) {\n    const { id, guid, method, params, metadata } = message as any;\n    const dispatcher = this._dispatchers.get(guid);\n    if (!dispatcher) {\n      this.onmessage({ id, error: serializeError(new Error(kBrowserOrContextClosedError)) });\n      return;\n    }\n    if (method === 'debugScopeState') {\n      const rootDispatcher = this._dispatchers.get('')!;\n      this.onmessage({ id, result: rootDispatcher._debugScopeState() });\n      return;\n    }\n\n    let validParams: any;\n    let validMetadata: channels.Metadata;\n    try {\n      validParams = this._validateParams(dispatcher._type, method, params);\n      validMetadata = this._validateMetadata(metadata);\n      if (typeof (dispatcher as any)[method] !== 'function')\n        throw new Error(`Mismatching dispatcher: \"${dispatcher._type}\" does not implement \"${method}\"`);\n    } catch (e) {\n      this.onmessage({ id, error: serializeError(e) });\n      return;\n    }\n\n    const sdkObject = dispatcher._object instanceof SdkObject ? dispatcher._object : undefined;\n    const callMetadata: CallMetadata = {\n      id: `call@${id}`,\n      ...validMetadata,\n      objectId: sdkObject?.guid,\n      pageId: sdkObject?.attribution?.page?.guid,\n      frameId: sdkObject?.attribution?.frame?.guid,\n      startTime: monotonicTime(),\n      endTime: 0,\n      type: dispatcher._type,\n      method,\n      params: params || {},\n      log: [],\n      snapshots: []\n    };\n\n    if (sdkObject && params?.info?.waitId) {\n      // Process logs for waitForNavigation/waitForLoadState\n      const info = params.info;\n      switch (info.phase) {\n        case 'before': {\n          this._waitOperations.set(info.waitId, callMetadata);\n          await sdkObject.instrumentation.onBeforeCall(sdkObject, callMetadata);\n          return;\n        } case 'log': {\n          const originalMetadata = this._waitOperations.get(info.waitId)!;\n          originalMetadata.log.push(info.message);\n          sdkObject.instrumentation.onCallLog('api', info.message, sdkObject, originalMetadata);\n          return;\n        } case 'after': {\n          const originalMetadata = this._waitOperations.get(info.waitId)!;\n          originalMetadata.endTime = monotonicTime();\n          originalMetadata.error = info.error ? { error: { name: 'Error', message: info.error } } : undefined;\n          this._waitOperations.delete(info.waitId);\n          await sdkObject.instrumentation.onAfterCall(sdkObject, originalMetadata);\n          return;\n        }\n      }\n    }\n\n\n    let error: any;\n    await sdkObject?.instrumentation.onBeforeCall(sdkObject, callMetadata);\n    try {\n      const result = await (dispatcher as any)[method](validParams, callMetadata);\n      callMetadata.result = this._replaceDispatchersWithGuids(result);\n    } catch (e) {\n      // Dispatching error\n      // We want original, unmodified error in metadata.\n      callMetadata.error = serializeError(e);\n      if (callMetadata.log.length)\n        rewriteErrorMessage(e, e.message + formatLogRecording(callMetadata.log));\n      error = serializeError(e);\n    } finally {\n      callMetadata.endTime = monotonicTime();\n      await sdkObject?.instrumentation.onAfterCall(sdkObject, callMetadata);\n    }\n\n    if (callMetadata.error)\n      this.onmessage({ id, error: error });\n    else\n      this.onmessage({ id, result: callMetadata.result });\n  }\n\n  private _replaceDispatchersWithGuids(payload: any): any {\n    if (!payload)\n      return payload;\n    if (payload instanceof Dispatcher)\n      return { guid: payload._guid };\n    if (Array.isArray(payload))\n      return payload.map(p => this._replaceDispatchersWithGuids(p));\n    if (typeof payload === 'object') {\n      const result: any = {};\n      for (const key of Object.keys(payload))\n        result[key] = this._replaceDispatchersWithGuids(payload[key]);\n      return result;\n    }\n    return payload;\n  }\n}\n\nfunction formatLogRecording(log: string[]): string {\n  if (!log.length)\n    return '';\n  const header = ` logs `;\n  const headerLength = 60;\n  const leftLength = (headerLength - header.length) / 2;\n  const rightLength = headerLength - header.length - leftLength;\n  return `\\n${'='.repeat(leftLength)}${header}${'='.repeat(rightLength)}\\n${log.join('\\n')}\\n${'='.repeat(headerLength)}`;\n}\n\nlet lastEventId = 0;\n"],"file":"dispatcher.js"}