{"version":3,"sources":["../../src/dispatchers/streamDispatcher.ts"],"names":["StreamDispatcher","Dispatcher","constructor","scope","stream","guid","_ended","once","read","params","_object","binary","readableLength","Promise","fulfill","reject","buffer","Math","min","size","toString","close","destroy"],"mappings":";;;;;;;AAiBA;;AAEA;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOO,MAAMA,gBAAN,SAA+BC,sBAA/B,CAAmJ;AAExJC,EAAAA,WAAW,CAACC,KAAD,EAAyBC,MAAzB,EAAkD;AAC3D,UAAMD,KAAN,EAAa;AAAEE,MAAAA,IAAI,EAAE,wBAAR;AAAsBD,MAAAA;AAAtB,KAAb,EAA6C,QAA7C,EAAuD,EAAvD,EAD2D,CAE3D;;AAF2D,SADrDE,MACqD,GADnC,KACmC;AAG3DF,IAAAA,MAAM,CAACG,IAAP,CAAY,KAAZ,EAAmB,MAAM,KAAKD,MAAL,GAAe,IAAxC;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqB,MAAM,KAAKD,MAAL,GAAe,IAA1C;AACD;;AAES,QAAJE,IAAI,CAACC,MAAD,EAAwE;AAChF,UAAML,MAAM,GAAG,KAAKM,OAAL,CAAaN,MAA5B;AACA,QAAI,KAAKE,MAAT,EACE,OAAO;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAP;;AACF,QAAI,CAACP,MAAM,CAACQ,cAAZ,EAA4B;AAC1B,YAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCX,QAAAA,MAAM,CAACG,IAAP,CAAY,UAAZ,EAAwBO,OAAxB;AACAV,QAAAA,MAAM,CAACG,IAAP,CAAY,KAAZ,EAAmBO,OAAnB;AACAV,QAAAA,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBQ,MAArB;AACD,OAJK,CAAN;AAKD;;AACD,UAAMC,MAAM,GAAGZ,MAAM,CAACI,IAAP,CAAYS,IAAI,CAACC,GAAL,CAASd,MAAM,CAACQ,cAAhB,EAAgCH,MAAM,CAACU,IAAP,IAAef,MAAM,CAACQ,cAAtD,CAAZ,CAAf;AACA,WAAO;AAAED,MAAAA,MAAM,EAAEK,MAAM,GAAGA,MAAM,CAACI,QAAP,CAAgB,QAAhB,CAAH,GAA+B;AAA/C,KAAP;AACD;;AAEU,QAALC,KAAK,GAAG;AACZ,SAAKX,OAAL,CAAaN,MAAb,CAAoBkB,OAApB;AACD;;AA1BuJ","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as channels from '../protocol/channels';\nimport { Dispatcher, DispatcherScope } from './dispatcher';\nimport * as stream from 'stream';\nimport { createGuid } from '../utils/utils';\n\nexport class StreamDispatcher extends Dispatcher<{ guid: string, stream: stream.Readable }, channels.StreamInitializer> implements channels.StreamChannel {\n  private _ended: boolean = false;\n  constructor(scope: DispatcherScope, stream: stream.Readable) {\n    super(scope, { guid: createGuid(), stream }, 'Stream', {});\n    // In Node v12.9.0+ we can use readableEnded.\n    stream.once('end', () => this._ended =  true);\n    stream.once('error', () => this._ended =  true);\n  }\n\n  async read(params: channels.StreamReadParams): Promise<channels.StreamReadResult> {\n    const stream = this._object.stream;\n    if (this._ended)\n      return { binary: '' };\n    if (!stream.readableLength) {\n      await new Promise((fulfill, reject) => {\n        stream.once('readable', fulfill);\n        stream.once('end', fulfill);\n        stream.once('error', reject);\n      });\n    }\n    const buffer = stream.read(Math.min(stream.readableLength, params.size || stream.readableLength));\n    return { binary: buffer ? buffer.toString('base64') : '' };\n  }\n\n  async close() {\n    this._object.stream.destroy();\n  }\n}\n"],"file":"streamDispatcher.js"}