{"version":3,"sources":["../../src/dispatchers/electronDispatcher.ts"],"names":["ElectronDispatcher","Dispatcher","constructor","scope","electron","launch","params","electronApplication","_object","ElectronApplicationDispatcher","_scope","context","BrowserContextDispatcher","on","ElectronApplication","Events","Close","_dispatchEvent","_dispose","browserWindow","handle","page","ElementHandleDispatcher","fromJSHandle","evaluateExpression","_nodeElectronHandlePromise","value","evaluateExpressionAndWaitForSignals","expression","isFunction","arg","evaluateExpressionHandle","result","close"],"mappings":";;;;;;;AAgBA;;AACA;;AAEA;;AAEA;;AACA;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUO,MAAMA,kBAAN,SAAiCC,sBAAjC,CAAwH;AAC7HC,EAAAA,WAAW,CAACC,KAAD,EAAyBC,QAAzB,EAA6C;AACtD,UAAMD,KAAN,EAAaC,QAAb,EAAuB,UAAvB,EAAmC,EAAnC,EAAuC,IAAvC;AACD;;AAEW,QAANC,MAAM,CAACC,MAAD,EAAgF;AAC1F,UAAMC,mBAAmB,GAAG,MAAM,KAAKC,OAAL,CAAaH,MAAb,CAAoBC,MAApB,CAAlC;AACA,WAAO;AAAEC,MAAAA,mBAAmB,EAAE,IAAIE,6BAAJ,CAAkC,KAAKC,MAAvC,EAA+CH,mBAA/C;AAAvB,KAAP;AACD;;AAR4H;;;;AAWxH,MAAME,6BAAN,SAA4CR,sBAA5C,CAAoK;AACzKC,EAAAA,WAAW,CAACC,KAAD,EAAyBI,mBAAzB,EAAmE;AAC5E,UAAMJ,KAAN,EAAaI,mBAAb,EAAkC,qBAAlC,EAAyD;AACvDI,MAAAA,OAAO,EAAE,IAAIC,kDAAJ,CAA6BT,KAA7B,EAAoCI,mBAAmB,CAACI,OAApB,EAApC;AAD8C,KAAzD,EAEG,IAFH;AAGAJ,IAAAA,mBAAmB,CAACM,EAApB,CAAuBC,8BAAoBC,MAApB,CAA2BC,KAAlD,EAAyD,MAAM;AAC7D,WAAKC,cAAL,CAAoB,OAApB;;AACA,WAAKC,QAAL;AACD,KAHD;AAID;;AAEkB,QAAbC,aAAa,CAACb,MAAD,EAAoH;AACrI,UAAMc,MAAM,GAAG,MAAM,KAAKZ,OAAL,CAAaW,aAAb,CAA4Bb,MAAM,CAACe,IAAR,CAAgCA,IAAhC,EAA3B,CAArB;AACA,WAAO;AAAED,MAAAA,MAAM,EAAEE,kDAAwBC,YAAxB,CAAqC,KAAKb,MAA1C,EAAkDU,MAAlD;AAAV,KAAP;AACD;;AAEuB,QAAlBI,kBAAkB,CAAClB,MAAD,EAA8H;AACpJ,UAAMc,MAAM,GAAG,MAAM,KAAKZ,OAAL,CAAaiB,0BAAlC;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAE,yCAAgB,MAAMN,MAAM,CAACO,mCAAP,CAA2CrB,MAAM,CAACsB,UAAlD,EAA8DtB,MAAM,CAACuB,UAArE,EAAiF;AAAK;AAAtF,QAA2G,uCAAcvB,MAAM,CAACwB,GAArB,CAA3G,CAAtB;AAAT,KAAP;AACD;;AAE6B,QAAxBC,wBAAwB,CAACzB,MAAD,EAA0I;AACtK,UAAMc,MAAM,GAAG,MAAM,KAAKZ,OAAL,CAAaiB,0BAAlC;AACA,UAAMO,MAAM,GAAG,MAAMZ,MAAM,CAACO,mCAAP,CAA2CrB,MAAM,CAACsB,UAAlD,EAA8DtB,MAAM,CAACuB,UAArE,EAAiF;AAAM;AAAvF,MAA4G,uCAAcvB,MAAM,CAACwB,GAArB,CAA5G,CAArB;AACA,WAAO;AAAEV,MAAAA,MAAM,EAAEE,kDAAwBC,YAAxB,CAAqC,KAAKb,MAA1C,EAAkDsB,MAAlD;AAAV,KAAP;AACD;;AAEU,QAALC,KAAK,GAAkB;AAC3B,UAAM,KAAKzB,OAAL,CAAayB,KAAb,EAAN;AACD;;AA7BwK","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dispatcher, DispatcherScope } from './dispatcher';\nimport { Electron, ElectronApplication } from '../server/electron/electron';\nimport * as channels from '../protocol/channels';\nimport { BrowserContextDispatcher } from './browserContextDispatcher';\nimport { PageDispatcher } from './pageDispatcher';\nimport { parseArgument, serializeResult } from './jsHandleDispatcher';\nimport { ElementHandleDispatcher } from './elementHandlerDispatcher';\n\nexport class ElectronDispatcher extends Dispatcher<Electron, channels.ElectronInitializer> implements channels.ElectronChannel {\n  constructor(scope: DispatcherScope, electron: Electron) {\n    super(scope, electron, 'Electron', {}, true);\n  }\n\n  async launch(params: channels.ElectronLaunchParams): Promise<channels.ElectronLaunchResult> {\n    const electronApplication = await this._object.launch(params);\n    return { electronApplication: new ElectronApplicationDispatcher(this._scope, electronApplication) };\n  }\n}\n\nexport class ElectronApplicationDispatcher extends Dispatcher<ElectronApplication, channels.ElectronApplicationInitializer> implements channels.ElectronApplicationChannel {\n  constructor(scope: DispatcherScope, electronApplication: ElectronApplication) {\n    super(scope, electronApplication, 'ElectronApplication', {\n      context: new BrowserContextDispatcher(scope, electronApplication.context())\n    }, true);\n    electronApplication.on(ElectronApplication.Events.Close, () => {\n      this._dispatchEvent('close');\n      this._dispose();\n    });\n  }\n\n  async browserWindow(params: channels.ElectronApplicationBrowserWindowParams): Promise<channels.ElectronApplicationBrowserWindowResult> {\n    const handle = await this._object.browserWindow((params.page as PageDispatcher).page());\n    return { handle: ElementHandleDispatcher.fromJSHandle(this._scope, handle) };\n  }\n\n  async evaluateExpression(params: channels.ElectronApplicationEvaluateExpressionParams): Promise<channels.ElectronApplicationEvaluateExpressionResult> {\n    const handle = await this._object._nodeElectronHandlePromise;\n    return { value: serializeResult(await handle.evaluateExpressionAndWaitForSignals(params.expression, params.isFunction, true /* returnByValue */, parseArgument(params.arg))) };\n  }\n\n  async evaluateExpressionHandle(params: channels.ElectronApplicationEvaluateExpressionHandleParams): Promise<channels.ElectronApplicationEvaluateExpressionHandleResult> {\n    const handle = await this._object._nodeElectronHandlePromise;\n    const result = await handle.evaluateExpressionAndWaitForSignals(params.expression, params.isFunction, false /* returnByValue */, parseArgument(params.arg));\n    return { handle: ElementHandleDispatcher.fromJSHandle(this._scope, result) };\n  }\n\n  async close(): Promise<void> {\n    await this._object.close();\n  }\n}\n"],"file":"electronDispatcher.js"}