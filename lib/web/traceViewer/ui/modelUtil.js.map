{"version":3,"sources":["../../../../src/web/traceViewer/ui/modelUtil.ts"],"names":["contextSymbol","Symbol","pageSymbol","nextSymbol","eventsSymbol","resourcesSymbol","indexModel","context","page","pages","i","actions","length","action","event","events","next","stats","errors","warnings","p","eventsForAction","metadata","method","guid","params","message","type","objects","result","nextAction","filter","startTime","resourcesForAction","resources","resource","timestamp"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,MAAMA,aAAa,GAAGC,MAAM,CAAC,SAAD,CAA5B;AACA,MAAMC,UAAU,GAAGD,MAAM,CAAC,SAAD,CAAzB;AACA,MAAME,UAAU,GAAGF,MAAM,CAAC,MAAD,CAAzB;AACA,MAAMG,YAAY,GAAGH,MAAM,CAAC,QAAD,CAA3B;AACA,MAAMI,eAAe,GAAGJ,MAAM,CAAC,WAAD,CAA9B;;AAEO,SAASK,UAAT,CAAoBC,OAApB,EAA2C;AAChD,OAAK,MAAMC,IAAX,IAAmBD,OAAO,CAACE,KAA3B,EAAkC;AAC/BD,IAAAA,IAAD,CAAcR,aAAd,IAA+BO,OAA/B;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,OAAL,CAAaC,MAAjC,EAAyC,EAAEF,CAA3C,EAA8C;AAC5C,YAAMG,MAAM,GAAGL,IAAI,CAACG,OAAL,CAAaD,CAAb,CAAf;AACAG,MAAAA,MAAM,CAACb,aAAD,CAAN,GAAwBO,OAAxB;AACAM,MAAAA,MAAM,CAACX,UAAD,CAAN,GAAqBM,IAArB;AACAK,MAAAA,MAAM,CAACV,UAAD,CAAN,GAAqBK,IAAI,CAACG,OAAL,CAAaD,CAAC,GAAG,CAAjB,CAArB;AACD;;AACD,SAAK,MAAMI,KAAX,IAAoBN,IAAI,CAACO,MAAzB,EAAiC;AAC9BD,MAAAA,KAAD,CAAed,aAAf,IAAgCO,OAAhC;AACCO,MAAAA,KAAD,CAAeZ,UAAf,IAA6BM,IAA7B;AACD;AACF;AACF;;AAEM,SAASD,OAAT,CAAiBM,MAAjB,EAAyD;AAC9D,SAAQA,MAAD,CAAgBb,aAAhB,CAAP;AACD;;AAEM,SAASQ,IAAT,CAAcK,MAAd,EAAmD;AACxD,SAAQA,MAAD,CAAgBX,UAAhB,CAAP;AACD;;AAEM,SAASc,IAAT,CAAcH,MAAd,EAA0D;AAC/D,SAAQA,MAAD,CAAgBV,UAAhB,CAAP;AACD;;AAEM,SAASc,KAAT,CAAeJ,MAAf,EAA+E;AACpF,MAAIK,MAAM,GAAG,CAAb;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,QAAMC,CAAC,GAAGZ,IAAI,CAACK,MAAD,CAAd;;AACA,OAAK,MAAMC,KAAX,IAAoBO,eAAe,CAACR,MAAD,CAAnC,EAA6C;AAC3C,QAAIC,KAAK,CAACQ,QAAN,CAAeC,MAAf,KAA0B,SAA9B,EAAyC;AAAA;;AACvC,YAAM;AAAEC,QAAAA;AAAF,UAAWV,KAAK,CAACQ,QAAN,CAAeG,MAAf,CAAsBC,OAAvC;AACA,YAAMC,IAAI,sBAAGP,CAAC,CAACQ,OAAF,CAAUJ,IAAV,CAAH,oDAAG,gBAAiBG,IAA9B;AACA,UAAIA,IAAI,KAAK,SAAb,EACE,EAAER,QAAF,CADF,KAEK,IAAIQ,IAAI,KAAK,OAAb,EACH,EAAET,MAAF;AACH;;AACD,QAAIJ,KAAK,CAACQ,QAAN,CAAeC,MAAf,KAA0B,WAA9B,EACE,EAAEL,MAAF;AACH;;AACD,SAAO;AAAEA,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAP;AACD;;AAEM,SAASE,eAAT,CAAyBR,MAAzB,EAAuE;AAC5E,MAAIgB,MAA0B,GAAIhB,MAAD,CAAgBT,YAAhB,CAAjC;AACA,MAAIyB,MAAJ,EACE,OAAOA,MAAP;AAEF,QAAMC,UAAU,GAAGd,IAAI,CAACH,MAAD,CAAvB;AACAgB,EAAAA,MAAM,GAAGrB,IAAI,CAACK,MAAD,CAAJ,CAAaE,MAAb,CAAoBgB,MAApB,CAA2BjB,KAAK,IAAI;AAC3C,WAAOA,KAAK,CAACQ,QAAN,CAAeU,SAAf,IAA4BnB,MAAM,CAACS,QAAP,CAAgBU,SAA5C,KAA0D,CAACF,UAAD,IAAehB,KAAK,CAACQ,QAAN,CAAeU,SAAf,GAA2BF,UAAU,CAACR,QAAX,CAAoBU,SAAxH,CAAP;AACD,GAFQ,CAAT;AAGCnB,EAAAA,MAAD,CAAgBT,YAAhB,IAAgCyB,MAAhC;AACA,SAAOA,MAAP;AACD;;AAEM,SAASI,kBAAT,CAA4BpB,MAA5B,EAA0E;AAC/E,MAAIgB,MAA0B,GAAIhB,MAAD,CAAgBR,eAAhB,CAAjC;AACA,MAAIwB,MAAJ,EACE,OAAOA,MAAP;AAEF,QAAMC,UAAU,GAAGd,IAAI,CAACH,MAAD,CAAvB;AACAgB,EAAAA,MAAM,GAAGtB,OAAO,CAACM,MAAD,CAAP,CAAgBqB,SAAhB,CAA0BH,MAA1B,CAAiCI,QAAQ,IAAI;AACpD,WAAOA,QAAQ,CAACC,SAAT,GAAqBvB,MAAM,CAACS,QAAP,CAAgBU,SAArC,KAAmD,CAACF,UAAD,IAAeK,QAAQ,CAACC,SAAT,GAAqBN,UAAU,CAACR,QAAX,CAAoBU,SAA3G,CAAP;AACD,GAFQ,CAAT;AAGCnB,EAAAA,MAAD,CAAgBR,eAAhB,IAAmCwB,MAAnC;AACA,SAAOA,MAAP;AACD","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ResourceSnapshot } from '../../../server/snapshot/snapshotTypes';\nimport { ActionTraceEvent } from '../../../server/trace/common/traceEvents';\nimport { ContextEntry, PageEntry } from '../../../server/trace/viewer/traceModel';\n\nconst contextSymbol = Symbol('context');\nconst pageSymbol = Symbol('context');\nconst nextSymbol = Symbol('next');\nconst eventsSymbol = Symbol('events');\nconst resourcesSymbol = Symbol('resources');\n\nexport function indexModel(context: ContextEntry) {\n  for (const page of context.pages) {\n    (page as any)[contextSymbol] = context;\n    for (let i = 0; i < page.actions.length; ++i) {\n      const action = page.actions[i] as any;\n      action[contextSymbol] = context;\n      action[pageSymbol] = page;\n      action[nextSymbol] = page.actions[i + 1];\n    }\n    for (const event of page.events) {\n      (event as any)[contextSymbol] = context;\n      (event as any)[pageSymbol] = page;\n    }\n  }\n}\n\nexport function context(action: ActionTraceEvent): ContextEntry {\n  return (action as any)[contextSymbol];\n}\n\nexport function page(action: ActionTraceEvent): PageEntry {\n  return (action as any)[pageSymbol];\n}\n\nexport function next(action: ActionTraceEvent): ActionTraceEvent {\n  return (action as any)[nextSymbol];\n}\n\nexport function stats(action: ActionTraceEvent): { errors: number, warnings: number } {\n  let errors = 0;\n  let warnings = 0;\n  const p = page(action);\n  for (const event of eventsForAction(action)) {\n    if (event.metadata.method === 'console') {\n      const { guid } = event.metadata.params.message;\n      const type = p.objects[guid]?.type;\n      if (type === 'warning')\n        ++warnings;\n      else if (type === 'error')\n        ++errors;\n    }\n    if (event.metadata.method === 'pageError')\n      ++errors;\n  }\n  return { errors, warnings };\n}\n\nexport function eventsForAction(action: ActionTraceEvent): ActionTraceEvent[] {\n  let result: ActionTraceEvent[] = (action as any)[eventsSymbol];\n  if (result)\n    return result;\n\n  const nextAction = next(action);\n  result = page(action).events.filter(event => {\n    return event.metadata.startTime >= action.metadata.startTime && (!nextAction || event.metadata.startTime < nextAction.metadata.startTime);\n  });\n  (action as any)[eventsSymbol] = result;\n  return result;\n}\n\nexport function resourcesForAction(action: ActionTraceEvent): ResourceSnapshot[] {\n  let result: ResourceSnapshot[] = (action as any)[resourcesSymbol];\n  if (result)\n    return result;\n\n  const nextAction = next(action);\n  result = context(action).resources.filter(resource => {\n    return resource.timestamp > action.metadata.startTime && (!nextAction || resource.timestamp < nextAction.metadata.startTime);\n  });\n  (action as any)[resourcesSymbol] = result;\n  return result;\n}\n"],"file":"modelUtil.js"}