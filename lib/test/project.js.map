{"version":3,"sources":["../../src/test/project.ts"],"names":["ProjectImpl","constructor","project","index","config","defines","Map","testTypePools","testPools","test","fixtures","Array","isArray","define","set","buildTestTypePool","testType","has","resolveFixtures","overrides","use","overridesWithLocation","location","file","line","column","pool","FixturePool","get","buildPool","_testType","parents","parent","push","reverse","_use","length","_isDescribe","hook","_eachHooks","validateFunction","fn","type","_allHooks","_type","modifier","_modifiers","_cloneEntries","from","to","repeatEachIndex","filter","clone","_clone","projectName","name","_pool","_projectIndex","_addAllHook","entry","_entries","Suite","suite","_addSuite","pop","suites","retries","_workerHash","digest","_id","_ordinalInFile","_requireFile","_repeatEachIndex","_addTest","cloneFileSuite","result","undefined","map","f","DeclaredFixtures"],"mappings":"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","sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TestType, FullProject, Fixtures, FixturesWithLocation } from './types';\nimport { Suite, TestCase } from './test';\nimport { FixturePool } from './fixtures';\nimport { DeclaredFixtures, TestTypeImpl } from './testType';\n\nexport class ProjectImpl {\n  config: FullProject;\n  private index: number;\n  private defines = new Map<TestType<any, any>, Fixtures>();\n  private testTypePools = new Map<TestTypeImpl, FixturePool>();\n  private testPools = new Map<TestCase, FixturePool>();\n\n  constructor(project: FullProject, index: number) {\n    this.config = project;\n    this.index = index;\n    this.defines = new Map();\n    for (const { test, fixtures } of Array.isArray(project.define) ? project.define : [project.define])\n      this.defines.set(test, fixtures);\n  }\n\n  private buildTestTypePool(testType: TestTypeImpl): FixturePool {\n    if (!this.testTypePools.has(testType)) {\n      const fixtures = this.resolveFixtures(testType);\n      const overrides: Fixtures = this.config.use;\n      const overridesWithLocation = {\n        fixtures: overrides,\n        location: {\n          file: `<configuration file>`,\n          line: 1,\n          column: 1,\n        }\n      };\n      const pool = new FixturePool([...fixtures, overridesWithLocation]);\n      this.testTypePools.set(testType, pool);\n    }\n    return this.testTypePools.get(testType)!;\n  }\n\n  // TODO: we can optimize this function by building the pool inline in cloneSuite\n  private buildPool(test: TestCase): FixturePool {\n    if (!this.testPools.has(test)) {\n      let pool = this.buildTestTypePool(test._testType);\n\n      const parents: Suite[] = [];\n      for (let parent = test.parent; parent; parent = parent.parent)\n        parents.push(parent);\n      parents.reverse();\n\n      for (const parent of parents) {\n        if (parent._use.length)\n          pool = new FixturePool(parent._use, pool, parent._isDescribe);\n        for (const hook of parent._eachHooks)\n          pool.validateFunction(hook.fn, hook.type + ' hook', hook.location);\n        for (const hook of parent._allHooks)\n          pool.validateFunction(hook.fn, hook._type + ' hook', hook.location);\n        for (const modifier of parent._modifiers)\n          pool.validateFunction(modifier.fn, modifier.type + ' modifier', modifier.location);\n      }\n\n      pool.validateFunction(test.fn, 'Test', test.location);\n      this.testPools.set(test, pool);\n    }\n    return this.testPools.get(test)!;\n  }\n\n  private _cloneEntries(from: Suite, to: Suite, repeatEachIndex: number, filter: (test: TestCase) => boolean): boolean {\n    for (const hook of from._allHooks) {\n      const clone = hook._clone();\n      clone.projectName = this.config.name;\n      clone._pool = this.buildPool(hook);\n      clone._projectIndex = this.index;\n      to._addAllHook(clone);\n    }\n    for (const entry of from._entries) {\n      if (entry instanceof Suite) {\n        const suite = entry._clone();\n        to._addSuite(suite);\n        if (!this._cloneEntries(entry, suite, repeatEachIndex, filter)) {\n          to._entries.pop();\n          to.suites.pop();\n        }\n      } else {\n        const pool = this.buildPool(entry);\n        const test = entry._clone();\n        test.projectName = this.config.name;\n        test.retries = this.config.retries;\n        test._workerHash = `run${this.index}-${pool.digest}-repeat${repeatEachIndex}`;\n        test._id = `${entry._ordinalInFile}@${entry._requireFile}#run${this.index}-repeat${repeatEachIndex}`;\n        test._pool = pool;\n        test._repeatEachIndex = repeatEachIndex;\n        test._projectIndex = this.index;\n        to._addTest(test);\n        if (!filter(test)) {\n          to._entries.pop();\n          to.suites.pop();\n        }\n      }\n    }\n    return to._entries.length > 0;\n  }\n\n  cloneFileSuite(suite: Suite, repeatEachIndex: number, filter: (test: TestCase) => boolean): Suite | undefined {\n    const result = suite._clone();\n    return this._cloneEntries(suite, result, repeatEachIndex, filter) ? result : undefined;\n  }\n\n  private resolveFixtures(testType: TestTypeImpl): FixturesWithLocation[] {\n    return testType.fixtures.map(f => {\n      if (f instanceof DeclaredFixtures) {\n        const fixtures = this.defines.get(f.testType.test) || {};\n        return { fixtures, location: f.location };\n      }\n      return f;\n    });\n  }\n}\n"],"file":"project.js"}