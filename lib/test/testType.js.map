{"version":3,"sources":["../../src/test/testType.ts"],"names":["countByFile","Map","DeclaredFixtures","testType","location","TestTypeImpl","constructor","fixtures","test","_createTest","bind","expect","only","describe","_describe","serial","beforeEach","_hook","afterEach","beforeAll","afterAll","skip","_modifier","fixme","fail","slow","setTimeout","_setTimeout","step","_step","use","_use","extend","_extend","declare","_declare","type","title","fn","throwIfRunningInsideJest","suite","ordinalInFile","get","_requireFile","set","TestCase","_addTest","_only","expectedStatus","join","child","Suite","_isDescribe","_addSuite","_serial","name","hook","_addAllHook","_eachHooks","push","modifierArgs","_modifiers","description","length","_annotations","testInfo","timeout","_timeout","body","complete","_addStep","e","fixturesWithLocation","declared","process","env","JEST_WORKER_ID","Error","rootTestType"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { expect } from './expect';\nimport { currentlyLoadingFileSuite, currentTestInfo, setCurrentlyLoadingFileSuite } from './globals';\nimport { TestCase, Suite } from './test';\nimport { wrapFunctionWithLocation } from './transform';\nimport { Fixtures, FixturesWithLocation, Location, TestType } from './types';\nimport { errorWithLocation, serializeError } from './util';\n\nconst countByFile = new Map<string, number>();\n\nexport class DeclaredFixtures {\n  testType!: TestTypeImpl;\n  location!: Location;\n}\n\nexport class TestTypeImpl {\n  readonly fixtures: (FixturesWithLocation | DeclaredFixtures)[];\n  readonly test: TestType<any, any>;\n\n  constructor(fixtures: (FixturesWithLocation | DeclaredFixtures)[]) {\n    this.fixtures = fixtures;\n\n    const test: any = wrapFunctionWithLocation(this._createTest.bind(this, 'default'));\n    test.expect = expect;\n    test.only = wrapFunctionWithLocation(this._createTest.bind(this, 'only'));\n    test.describe = wrapFunctionWithLocation(this._describe.bind(this, 'default'));\n    test.describe.only = wrapFunctionWithLocation(this._describe.bind(this, 'only'));\n    test.describe.serial = wrapFunctionWithLocation(this._describe.bind(this, 'serial'));\n    test.describe.serial.only = wrapFunctionWithLocation(this._describe.bind(this, 'serial.only'));\n    test.beforeEach = wrapFunctionWithLocation(this._hook.bind(this, 'beforeEach'));\n    test.afterEach = wrapFunctionWithLocation(this._hook.bind(this, 'afterEach'));\n    test.beforeAll = wrapFunctionWithLocation(this._hook.bind(this, 'beforeAll'));\n    test.afterAll = wrapFunctionWithLocation(this._hook.bind(this, 'afterAll'));\n    test.skip = wrapFunctionWithLocation(this._modifier.bind(this, 'skip'));\n    test.fixme = wrapFunctionWithLocation(this._modifier.bind(this, 'fixme'));\n    test.fail = wrapFunctionWithLocation(this._modifier.bind(this, 'fail'));\n    test.slow = wrapFunctionWithLocation(this._modifier.bind(this, 'slow'));\n    test.setTimeout = wrapFunctionWithLocation(this._setTimeout.bind(this));\n    test.step = wrapFunctionWithLocation(this._step.bind(this));\n    test.use = wrapFunctionWithLocation(this._use.bind(this));\n    test.extend = wrapFunctionWithLocation(this._extend.bind(this));\n    test.declare = wrapFunctionWithLocation(this._declare.bind(this));\n    this.test = test;\n  }\n\n  private _createTest(type: 'default' | 'only' | 'skip', location: Location, title: string, fn: Function) {\n    throwIfRunningInsideJest();\n    const suite = currentlyLoadingFileSuite();\n    if (!suite)\n      throw errorWithLocation(location, `test() can only be called in a test file`);\n\n    const ordinalInFile = countByFile.get(suite._requireFile) || 0;\n    countByFile.set(suite._requireFile, ordinalInFile + 1);\n\n    const test = new TestCase('test', title, fn, ordinalInFile, this, location);\n    test._requireFile = suite._requireFile;\n    suite._addTest(test);\n\n    if (type === 'only')\n      test._only = true;\n    if (type === 'skip')\n      test.expectedStatus = 'skipped';\n  }\n\n  private _describe(type: 'default' | 'only' | 'serial' | 'serial.only', location: Location, title: string, fn: Function) {\n    throwIfRunningInsideJest();\n    const suite = currentlyLoadingFileSuite();\n    if (!suite)\n      throw errorWithLocation(location, `describe() can only be called in a test file`);\n\n    if (typeof title === 'function') {\n      throw errorWithLocation(location, [\n        'It looks like you are calling describe() without the title. Pass the title as a first argument:',\n        `test.describe('my test group', () => {`,\n        `  // Declare tests here`,\n        `});`,\n      ].join('\\n'));\n    }\n\n    const child = new Suite(title);\n    child._requireFile = suite._requireFile;\n    child._isDescribe = true;\n    child.location = location;\n    suite._addSuite(child);\n\n    if (type === 'only' || type === 'serial.only')\n      child._only = true;\n    if (type === 'serial' || type === 'serial.only')\n      child._serial =  true;\n\n    setCurrentlyLoadingFileSuite(child);\n    fn();\n    setCurrentlyLoadingFileSuite(suite);\n  }\n\n  private _hook(name: 'beforeEach' | 'afterEach' | 'beforeAll' | 'afterAll', location: Location, fn: Function) {\n    const suite = currentlyLoadingFileSuite();\n    if (!suite)\n      throw errorWithLocation(location, `${name} hook can only be called in a test file`);\n    if (name === 'beforeAll' || name === 'afterAll') {\n      const hook = new TestCase(name, name, fn, 0, this, location);\n      hook._requireFile = suite._requireFile;\n      suite._addAllHook(hook);\n    } else {\n      suite._eachHooks.push({ type: name, fn, location });\n    }\n  }\n\n  private _modifier(type: 'skip' | 'fail' | 'fixme' | 'slow', location: Location, ...modifierArgs: [arg?: any | Function, description?: string]) {\n    const suite = currentlyLoadingFileSuite();\n    if (suite) {\n      if (typeof modifierArgs[0] === 'string' && typeof modifierArgs[1] === 'function') {\n        // Support for test.skip('title', () => {})\n        this._createTest('skip', location, modifierArgs[0], modifierArgs[1]);\n        return;\n      }\n\n      if (typeof modifierArgs[0] === 'function') {\n        suite._modifiers.push({ type, fn: modifierArgs[0], location, description: modifierArgs[1] });\n      } else {\n        if (modifierArgs.length >= 1 && !modifierArgs[0])\n          return;\n        const description = modifierArgs[1];\n        suite._annotations.push({ type, description });\n      }\n      return;\n    }\n\n    const testInfo = currentTestInfo();\n    if (!testInfo)\n      throw errorWithLocation(location, `test.${type}() can only be called inside test, describe block or fixture`);\n    if (typeof modifierArgs[0] === 'function')\n      throw errorWithLocation(location, `test.${type}() with a function can only be called inside describe block`);\n    testInfo[type](...modifierArgs as [any, any]);\n  }\n\n  private _setTimeout(location: Location, timeout: number) {\n    const suite = currentlyLoadingFileSuite();\n    if (suite) {\n      suite._timeout = timeout;\n      return;\n    }\n\n    const testInfo = currentTestInfo();\n    if (!testInfo)\n      throw errorWithLocation(location, `test.setTimeout() can only be called from a test`);\n    testInfo.setTimeout(timeout);\n  }\n\n  private _use(location: Location, fixtures: Fixtures) {\n    const suite = currentlyLoadingFileSuite();\n    if (!suite)\n      throw errorWithLocation(location, `test.use() can only be called in a test file`);\n    suite._use.push({ fixtures, location });\n  }\n\n  private async _step(location: Location, title: string, body: () => Promise<void>): Promise<void> {\n    const testInfo = currentTestInfo();\n    if (!testInfo)\n      throw errorWithLocation(location, `test.step() can only be called from a test`);\n    const complete = testInfo._addStep('test.step', title);\n    try {\n      await body();\n      complete();\n    } catch (e) {\n      complete(serializeError(e));\n      throw e;\n    }\n  }\n\n  private _extend(location: Location, fixtures: Fixtures) {\n    const fixturesWithLocation = { fixtures, location };\n    return new TestTypeImpl([...this.fixtures, fixturesWithLocation]).test;\n  }\n\n  private _declare(location: Location) {\n    const declared = new DeclaredFixtures();\n    declared.location = location;\n    const child = new TestTypeImpl([...this.fixtures, declared]);\n    declared.testType = child;\n    return child.test;\n  }\n}\n\nfunction throwIfRunningInsideJest() {\n  if (process.env.JEST_WORKER_ID) {\n    throw new Error(\n        `Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.\\n` +\n        `Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.\\n` +\n        `See https://playwright.dev/docs/intro/ for more information about Playwright Test.`,\n    );\n  }\n}\n\nexport const rootTestType = new TestTypeImpl([]);\n"],"file":"testType.js"}