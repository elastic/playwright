{"version":3,"sources":["../../../src/test/reporters/html.ts"],"names":["HtmlReporter","constructor","_reportFolder","_resourcesFolder","config","suite","path","resolve","process","cwd","env","join","fs","mkdirSync","recursive","appFolder","__dirname","file","readdirSync","copyFileSync","onBegin","onEnd","stats","expected","unexpected","skipped","flaky","allTests","forEach","t","outcome","output","rootDir","projects","map","project","outputDir","repeatEach","retries","metadata","name","testDir","testIgnore","testMatch","timeout","suites","Promise","all","s","_serializeSuite","writeFileSync","JSON","stringify","_relativeLocation","location","line","column","relative","title","tests","_serializeTest","test","testId","titlePath","expectedStatus","annotations","ok","results","r","_serializeResult","result","retry","workerIndex","startTime","toISOString","duration","status","error","failureSnippet","undefined","attachments","_createAttachments","stdout","stderr","steps","serializeSteps","attachment","sha1","extname","push","body","isTextAttachment","contentType","toString","length","_stdioAttachment","type","fileName","chunk","appendFileSync","step","category","startsWith","includes"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport { FullConfig, Location, Suite, TestCase, TestError, TestResult, TestStatus, TestStep } from '../../../types/testReporter';\nimport { calculateSha1 } from '../../utils/utils';\nimport { formatResultFailure } from './base';\nimport { serializePatterns, toPosixPath } from './json';\n\nexport type JsonStats = { expected: number, unexpected: number, flaky: number, skipped: number };\nexport type JsonLocation = Location;\n\nexport type JsonConfig = Omit<FullConfig, 'projects'> & {\n  projects: {\n    outputDir: string,\n    repeatEach: number,\n    retries: number,\n    metadata: any,\n    name: string,\n    testDir: string,\n    testIgnore: string[],\n    testMatch: string[],\n    timeout: number,\n  }[],\n};\n\nexport type JsonReport = {\n  config: JsonConfig,\n  stats: JsonStats,\n  suites: JsonSuite[],\n};\n\nexport type JsonSuite = {\n  title: string;\n  location?: JsonLocation;\n  suites: JsonSuite[];\n  tests: JsonTestCase[];\n};\n\nexport type JsonTestCase = {\n  testId: string;\n  title: string;\n  location: JsonLocation;\n  expectedStatus: TestStatus;\n  timeout: number;\n  annotations: { type: string, description?: string }[];\n  retries: number;\n  results: JsonTestResult[];\n  ok: boolean;\n  outcome: 'skipped' | 'expected' | 'unexpected' | 'flaky';\n};\n\nexport type TestAttachment = {\n  name: string;\n  path?: string;\n  body?: Buffer;\n  contentType: string;\n  sha1?: string;\n};\n\nexport type JsonAttachment = {\n  name: string;\n  path?: string;\n  body?: string;\n  contentType: string;\n  sha1?: string;\n};\n\nexport type JsonTestResult = {\n  retry: number;\n  workerIndex: number;\n  startTime: string;\n  duration: number;\n  status: TestStatus;\n  error?: TestError;\n  failureSnippet?: string;\n  attachments: JsonAttachment[];\n  stdout: (string | Buffer)[];\n  stderr: (string | Buffer)[];\n  steps: JsonTestStep[];\n};\n\nexport type JsonTestStep = {\n  title: string;\n  category: string,\n  startTime: string;\n  duration: number;\n  error?: TestError;\n  steps: JsonTestStep[];\n};\n\nclass HtmlReporter {\n  private _reportFolder: string;\n  private _resourcesFolder: string;\n  private config!: FullConfig;\n  private suite!: Suite;\n\n  constructor() {\n    this._reportFolder = path.resolve(process.cwd(), process.env[`PLAYWRIGHT_HTML_REPORT`] || 'playwright-report');\n    this._resourcesFolder = path.join(this._reportFolder, 'resources');\n    fs.mkdirSync(this._resourcesFolder, { recursive: true });\n    const appFolder = path.join(__dirname, '..', '..', 'web', 'htmlReport');\n    for (const file of fs.readdirSync(appFolder))\n      fs.copyFileSync(path.join(appFolder, file), path.join(this._reportFolder, file));\n  }\n\n  onBegin(config: FullConfig, suite: Suite) {\n    this.config = config;\n    this.suite = suite;\n  }\n\n  async onEnd() {\n    const stats: JsonStats = { expected: 0, unexpected: 0, skipped: 0, flaky: 0 };\n    this.suite.allTests().forEach(t => {\n      ++stats[t.outcome()];\n    });\n    const output: JsonReport = {\n      config: {\n        ...this.config,\n        rootDir: toPosixPath(this.config.rootDir),\n        projects: this.config.projects.map(project => {\n          return {\n            outputDir: toPosixPath(project.outputDir),\n            repeatEach: project.repeatEach,\n            retries: project.retries,\n            metadata: project.metadata,\n            name: project.name,\n            testDir: toPosixPath(project.testDir),\n            testIgnore: serializePatterns(project.testIgnore),\n            testMatch: serializePatterns(project.testMatch),\n            timeout: project.timeout,\n          };\n        })\n      },\n      stats,\n      suites: await Promise.all(this.suite.suites.map(s => this._serializeSuite(s)))\n    };\n    fs.writeFileSync(path.join(this._reportFolder, 'report.json'), JSON.stringify(output));\n  }\n\n  private _relativeLocation(location: Location | undefined): Location {\n    if (!location)\n      return { file: '', line: 0, column: 0 };\n    return {\n      file: toPosixPath(path.relative(this.config.rootDir, location.file)),\n      line: location.line,\n      column: location.column,\n    };\n  }\n\n  private async _serializeSuite(suite: Suite): Promise<JsonSuite> {\n    return {\n      title: suite.title,\n      location: this._relativeLocation(suite.location),\n      suites: await Promise.all(suite.suites.map(s => this._serializeSuite(s))),\n      tests: await Promise.all(suite.tests.map(t => this._serializeTest(t))),\n    };\n  }\n\n  private async _serializeTest(test: TestCase): Promise<JsonTestCase> {\n    const testId = calculateSha1(test.titlePath().join('|'));\n    return {\n      testId,\n      title: test.title,\n      location: this._relativeLocation(test.location),\n      expectedStatus: test.expectedStatus,\n      timeout: test.timeout,\n      annotations: test.annotations,\n      retries: test.retries,\n      ok: test.ok(),\n      outcome: test.outcome(),\n      results: await Promise.all(test.results.map(r => this._serializeResult(testId, test, r))),\n    };\n  }\n\n  private async _serializeResult(testId: string, test: TestCase, result: TestResult): Promise<JsonTestResult> {\n    return {\n      retry: result.retry,\n      workerIndex: result.workerIndex,\n      startTime: result.startTime.toISOString(),\n      duration: result.duration,\n      status: result.status,\n      error: result.error,\n      failureSnippet: formatResultFailure(test, result, '').join('') || undefined,\n      attachments: await this._createAttachments(testId, result),\n      stdout: result.stdout,\n      stderr: result.stderr,\n      steps: serializeSteps(result.steps)\n    };\n  }\n\n  private async _createAttachments(testId: string, result: TestResult): Promise<JsonAttachment[]> {\n    const attachments: JsonAttachment[] = [];\n    for (const attachment of result.attachments) {\n      if (attachment.path) {\n        const sha1 = calculateSha1(attachment.path) + path.extname(attachment.path);\n        fs.copyFileSync(attachment.path, path.join(this._resourcesFolder, sha1));\n        attachments.push({\n          ...attachment,\n          body: undefined,\n          sha1\n        });\n      } else if (attachment.body && isTextAttachment(attachment.contentType)) {\n        attachments.push({ ...attachment, body: attachment.body.toString() });\n      } else {\n        const sha1 = calculateSha1(attachment.body!) + '.dat';\n        fs.writeFileSync(path.join(this._resourcesFolder, sha1), attachment.body);\n        attachments.push({\n          ...attachment,\n          body: undefined,\n          sha1\n        });\n      }\n    }\n\n    if (result.stdout.length)\n      attachments.push(this._stdioAttachment(testId, result, 'stdout'));\n    if (result.stderr.length)\n      attachments.push(this._stdioAttachment(testId, result, 'stderr'));\n    return attachments;\n  }\n\n  private _stdioAttachment(testId: string, result: TestResult, type: 'stdout' | 'stderr'): JsonAttachment {\n    const sha1 = `${testId}.${result.retry}.${type}`;\n    const fileName = path.join(this._resourcesFolder, sha1);\n    for (const chunk of type === 'stdout' ? result.stdout : result.stderr) {\n      if (typeof chunk === 'string')\n        fs.appendFileSync(fileName, chunk + '\\n');\n      else\n        fs.appendFileSync(fileName, chunk);\n    }\n    return {\n      name: type,\n      contentType: 'application/octet-stream',\n      sha1\n    };\n  }\n}\n\nfunction serializeSteps(steps: TestStep[]): JsonTestStep[] {\n  return steps.map(step => {\n    return {\n      title: step.title,\n      category: step.category,\n      startTime: step.startTime.toISOString(),\n      duration: step.duration,\n      error: step.error,\n      steps: serializeSteps(step.steps),\n    };\n  });\n}\n\nfunction isTextAttachment(contentType: string) {\n  if (contentType.startsWith('text/'))\n    return true;\n  if (contentType.includes('json'))\n    return true;\n  return false;\n}\n\nexport default HtmlReporter;\n"],"file":"html.js"}