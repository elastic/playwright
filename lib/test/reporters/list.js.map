{"version":3,"sources":["../../../src/test/reporters/list.ts"],"names":["DOES_NOT_SUPPORT_UTF8_IN_TERMINAL","process","platform","env","TERM_PROGRAM","WT_SESSION","POSITIVE_STATUS_MARK","NEGATIVE_STATUS_MARK","ListReporter","BaseReporter","constructor","_lastRow","_testRows","Map","_needNewLine","_liveTerminal","stdout","isTTY","PWTEST_SKIP_TEST_OUTPUT","onBegin","config","suite","console","log","onTestBegin","test","write","colors","gray","set","onStdOut","chunk","result","_dumpToStdio","onStdErr","onStepBegin","step","category","_updateTestLine","onStepEnd","parent","stream","quiet","text","toString","length","newLineCount","split","onTestEnd","duration","dim","title","status","green","cyan","statusMark","padEnd","expectedStatus","red","line","_updateTestLineForTest","_updateTestLineForTTY","testRow","get","onEnd","epilogue"],"mappings":";;;;;;;AAiBA;;AAEA;;AACA;;;;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAKA;AACA,MAAMA,iCAAiC,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCD,OAAO,CAACE,GAAR,CAAYC,YAAZ,KAA6B,QAA7D,IAAyE,CAACH,OAAO,CAACE,GAAR,CAAYE,UAAhI;AACA,MAAMC,oBAAoB,GAAGN,iCAAiC,GAAG,IAAH,GAAU,GAAxE;AACA,MAAMO,oBAAoB,GAAGP,iCAAiC,GAAG,GAAH,GAAS,GAAvE;;AAEA,MAAMQ,YAAN,SAA2BC,kBAA3B,CAAwC;AAMtCC,EAAAA,WAAW,GAAG;AACZ;AADY,SALNC,QAKM,GALK,CAKL;AAAA,SAJNC,SAIM,GAJM,IAAIC,GAAJ,EAIN;AAAA,SAHNC,YAGM,GAHS,KAGT;AAAA,SAFNC,aAEM;AAEZ,SAAKA,aAAL,GAAqBd,OAAO,CAACe,MAAR,CAAeC,KAAf,IAAwBhB,OAAO,CAACE,GAAR,CAAYe,uBAAzD;AACD;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAqBC,KAArB,EAAmC;AACxC,UAAMF,OAAN,CAAcC,MAAd,EAAsBC,KAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR;AACD;;AAEDC,EAAAA,WAAW,CAACC,IAAD,EAAiB;AAC1B,QAAI,KAAKV,aAAT,EAAwB;AACtB,UAAI,KAAKD,YAAT,EAAuB;AACrB,aAAKA,YAAL,GAAoB,KAApB;AACAb,QAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqB,IAArB;AACA,aAAKf,QAAL;AACD;;AACDV,MAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqB,UAAUC,cAAOC,IAAP,CAAY,2BAAgB,KAAKR,MAArB,EAA6BK,IAA7B,CAAZ,CAAV,GAA4D,IAAjF;AACD;;AACD,SAAKb,SAAL,CAAeiB,GAAf,CAAmBJ,IAAnB,EAAyB,KAAKd,QAAL,EAAzB;AACD;;AAEDmB,EAAAA,QAAQ,CAACC,KAAD,EAAyBN,IAAzB,EAA0CO,MAA1C,EAA+D;AACrE,UAAMF,QAAN,CAAeC,KAAf,EAAsBN,IAAtB,EAA4BO,MAA5B;;AACA,SAAKC,YAAL,CAAkBR,IAAlB,EAAwBM,KAAxB,EAA+B9B,OAAO,CAACe,MAAvC;AACD;;AAEDkB,EAAAA,QAAQ,CAACH,KAAD,EAAyBN,IAAzB,EAA0CO,MAA1C,EAA+D;AACrE,UAAME,QAAN,CAAeH,KAAf,EAAsBN,IAAtB,EAA4BO,MAA5B;;AACA,SAAKC,YAAL,CAAkBR,IAAlB,EAAwBM,KAAxB,EAA+B9B,OAAO,CAACe,MAAvC;AACD;;AAEDmB,EAAAA,WAAW,CAACV,IAAD,EAAiBO,MAAjB,EAAqCI,IAArC,EAAqD;AAC9D,QAAI,CAAC,KAAKrB,aAAV,EACE;AACF,QAAIqB,IAAI,CAACC,QAAL,KAAkB,WAAtB,EACE;;AACF,SAAKC,eAAL,CAAqBb,IAArB,EAA2B,UAAUE,cAAOC,IAAP,CAAY,2BAAgB,KAAKR,MAArB,EAA6BK,IAA7B,EAAmCW,IAAnC,CAAZ,CAArC;AACD;;AAEDG,EAAAA,SAAS,CAACd,IAAD,EAAiBO,MAAjB,EAAqCI,IAArC,EAAqD;AAC5D,QAAI,CAAC,KAAKrB,aAAV,EACE;AACF,QAAIqB,IAAI,CAACC,QAAL,KAAkB,WAAtB,EACE;;AACF,SAAKC,eAAL,CAAqBb,IAArB,EAA2B,UAAUE,cAAOC,IAAP,CAAY,2BAAgB,KAAKR,MAArB,EAA6BK,IAA7B,EAAmCW,IAAI,CAACI,MAAxC,CAAZ,CAArC;AACD;;AAEOP,EAAAA,YAAY,CAACR,IAAD,EAA6BM,KAA7B,EAAqDU,MAArD,EAAiF;AACnG,QAAI,KAAKrB,MAAL,CAAYsB,KAAhB,EACE;AACF,UAAMC,IAAI,GAAGZ,KAAK,CAACa,QAAN,CAAe,OAAf,CAAb;AACA,SAAK9B,YAAL,GAAoB6B,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf,CAAJ,KAA0B,IAA9C;;AACA,QAAI,KAAK9B,aAAT,EAAwB;AACtB,YAAM+B,YAAY,GAAGH,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBF,MAAjB,GAA0B,CAA/C;AACA,WAAKlC,QAAL,IAAiBmC,YAAjB;AACD;;AACDL,IAAAA,MAAM,CAACf,KAAP,CAAaK,KAAb;AACD;;AAEDiB,EAAAA,SAAS,CAACvB,IAAD,EAAiBO,MAAjB,EAAqC;AAC5C,UAAMgB,SAAN,CAAgBvB,IAAhB,EAAsBO,MAAtB;;AAEA,UAAMiB,QAAQ,GAAGtB,cAAOuB,GAAP,CAAY,KAAI,iBAAalB,MAAM,CAACiB,QAApB,CAA8B,GAA9C,CAAjB;;AACA,UAAME,KAAK,GAAG,2BAAgB,KAAK/B,MAArB,EAA6BK,IAA7B,CAAd;AACA,QAAIkB,IAAI,GAAG,EAAX;;AACA,QAAIX,MAAM,CAACoB,MAAP,KAAkB,SAAtB,EAAiC;AAC/BT,MAAAA,IAAI,GAAGhB,cAAO0B,KAAP,CAAa,OAAb,IAAwB1B,cAAO2B,IAAP,CAAYH,KAAZ,CAA/B;AACD,KAFD,MAEO;AACL,YAAMI,UAAU,GAAG,CAAC,QAAQvB,MAAM,CAACoB,MAAP,KAAkB,QAAlB,GAA6B9C,oBAA7B,GAAoDC,oBAA5D,CAAD,EAAoFiD,MAApF,CAA2F,CAA3F,CAAnB;AACA,UAAIxB,MAAM,CAACoB,MAAP,KAAkB3B,IAAI,CAACgC,cAA3B,EACEd,IAAI,GAAG,uBAAuBhB,cAAO0B,KAAP,CAAaE,UAAb,CAAvB,GAAkD5B,cAAOC,IAAP,CAAYuB,KAAZ,CAAlD,GAAuEF,QAA9E,CADF,KAGEN,IAAI,GAAG,uBAAuBhB,cAAO+B,GAAP,CAAWH,UAAU,GAAGJ,KAAxB,CAAvB,GAAwDF,QAA/D;AACH;;AAED,QAAI,KAAKlC,aAAT,EAAwB;AACtB,WAAKuB,eAAL,CAAqBb,IAArB,EAA2BkB,IAA3B;AACD,KAFD,MAEO;AACL,UAAI,KAAK7B,YAAT,EAAuB;AACrB,aAAKA,YAAL,GAAoB,KAApB;AACAb,QAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqB,IAArB;AACD;;AACDzB,MAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqBiB,IAArB;AACA1C,MAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqB,IAArB;AACD;AACF;;AAEOY,EAAAA,eAAe,CAACb,IAAD,EAAiBkC,IAAjB,EAA+B;AACpD,QAAI1D,OAAO,CAACE,GAAR,CAAYe,uBAAhB,EACE,KAAK0C,sBAAL,CAA4BnC,IAA5B,EAAiCkC,IAAjC,EADF,KAGE,KAAKE,qBAAL,CAA2BpC,IAA3B,EAAgCkC,IAAhC;AACH;;AAEOE,EAAAA,qBAAqB,CAACpC,IAAD,EAAiBkC,IAAjB,EAA+B;AAC1D,UAAMG,OAAO,GAAG,KAAKlD,SAAL,CAAemD,GAAf,CAAmBtC,IAAnB,CAAhB,CAD0D,CAE1D;;;AACA,QAAIqC,OAAO,KAAK,KAAKnD,QAArB,EACEV,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAsB,UAAS,KAAKf,QAAL,GAAgBmD,OAAQ,GAAvD,EAJwD,CAK1D;;AACA7D,IAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqB,WAArB;AACAzB,IAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqBiC,IAArB,EAP0D,CAQ1D;;AACA,QAAIG,OAAO,KAAK,KAAKnD,QAArB,EACEV,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAsB,UAAS,KAAKf,QAAL,GAAgBmD,OAAQ,GAAvD;AACH;;AAEOF,EAAAA,sBAAsB,CAACnC,IAAD,EAAiBkC,IAAjB,EAA+B;AAC3D,UAAMG,OAAO,GAAG,KAAKlD,SAAL,CAAemD,GAAf,CAAmBtC,IAAnB,CAAhB;;AACAxB,IAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqBoC,OAAO,GAAG,KAAV,GAAkBH,IAAlB,GAAyB,IAA9C;AACD;;AAEU,QAALK,KAAK,CAAChC,MAAD,EAAqB;AAC9B,UAAM,MAAMgC,KAAN,CAAYhC,MAAZ,CAAN;AACA/B,IAAAA,OAAO,CAACe,MAAR,CAAeU,KAAf,CAAqB,IAArB;AACA,SAAKuC,QAAL,CAAc,IAAd;AACD;;AA3HqC;;eA8HzBzD,Y","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-console */\nimport colors from 'colors/safe';\n// @ts-ignore\nimport milliseconds from 'ms';\nimport { BaseReporter, formatTestTitle } from './base';\nimport { FullConfig, FullResult, Suite, TestCase, TestResult, TestStep } from '../../../types/testReporter';\n\n// Allow it in the Visual Studio Code Terminal and the new Windows Terminal\nconst DOES_NOT_SUPPORT_UTF8_IN_TERMINAL = process.platform === 'win32' && process.env.TERM_PROGRAM !== 'vscode' && !process.env.WT_SESSION;\nconst POSITIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'ok' : '✓';\nconst NEGATIVE_STATUS_MARK = DOES_NOT_SUPPORT_UTF8_IN_TERMINAL ? 'x' : '✘';\n\nclass ListReporter extends BaseReporter {\n  private _lastRow = 0;\n  private _testRows = new Map<TestCase, number>();\n  private _needNewLine = false;\n  private _liveTerminal: string | boolean | undefined;\n\n  constructor() {\n    super();\n    this._liveTerminal = process.stdout.isTTY || process.env.PWTEST_SKIP_TEST_OUTPUT;\n  }\n\n  onBegin(config: FullConfig, suite: Suite) {\n    super.onBegin(config, suite);\n    console.log();\n  }\n\n  onTestBegin(test: TestCase) {\n    if (this._liveTerminal) {\n      if (this._needNewLine) {\n        this._needNewLine = false;\n        process.stdout.write('\\n');\n        this._lastRow++;\n      }\n      process.stdout.write('     ' + colors.gray(formatTestTitle(this.config, test)) + '\\n');\n    }\n    this._testRows.set(test, this._lastRow++);\n  }\n\n  onStdOut(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    super.onStdOut(chunk, test, result);\n    this._dumpToStdio(test, chunk, process.stdout);\n  }\n\n  onStdErr(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    super.onStdErr(chunk, test, result);\n    this._dumpToStdio(test, chunk, process.stdout);\n  }\n\n  onStepBegin(test: TestCase, result: TestResult, step: TestStep) {\n    if (!this._liveTerminal)\n      return;\n    if (step.category !== 'test.step')\n      return;\n    this._updateTestLine(test, '     ' + colors.gray(formatTestTitle(this.config, test, step)));\n  }\n\n  onStepEnd(test: TestCase, result: TestResult, step: TestStep) {\n    if (!this._liveTerminal)\n      return;\n    if (step.category !== 'test.step')\n      return;\n    this._updateTestLine(test, '     ' + colors.gray(formatTestTitle(this.config, test, step.parent)));\n  }\n\n  private _dumpToStdio(test: TestCase | undefined, chunk: string | Buffer, stream: NodeJS.WriteStream) {\n    if (this.config.quiet)\n      return;\n    const text = chunk.toString('utf-8');\n    this._needNewLine = text[text.length - 1] !== '\\n';\n    if (this._liveTerminal) {\n      const newLineCount = text.split('\\n').length - 1;\n      this._lastRow += newLineCount;\n    }\n    stream.write(chunk);\n  }\n\n  onTestEnd(test: TestCase, result: TestResult) {\n    super.onTestEnd(test, result);\n\n    const duration = colors.dim(` (${milliseconds(result.duration)})`);\n    const title = formatTestTitle(this.config, test);\n    let text = '';\n    if (result.status === 'skipped') {\n      text = colors.green('  -  ') + colors.cyan(title);\n    } else {\n      const statusMark = ('  ' + (result.status === 'passed' ? POSITIVE_STATUS_MARK : NEGATIVE_STATUS_MARK)).padEnd(5);\n      if (result.status === test.expectedStatus)\n        text = '\\u001b[2K\\u001b[0G' + colors.green(statusMark) + colors.gray(title) + duration;\n      else\n        text = '\\u001b[2K\\u001b[0G' + colors.red(statusMark + title) + duration;\n    }\n\n    if (this._liveTerminal) {\n      this._updateTestLine(test, text);\n    } else {\n      if (this._needNewLine) {\n        this._needNewLine = false;\n        process.stdout.write('\\n');\n      }\n      process.stdout.write(text);\n      process.stdout.write('\\n');\n    }\n  }\n\n  private _updateTestLine(test: TestCase, line: string) {\n    if (process.env.PWTEST_SKIP_TEST_OUTPUT)\n      this._updateTestLineForTest(test,line);\n    else\n      this._updateTestLineForTTY(test,line);\n  }\n\n  private _updateTestLineForTTY(test: TestCase, line: string) {\n    const testRow = this._testRows.get(test)!;\n    // Go up if needed\n    if (testRow !== this._lastRow)\n      process.stdout.write(`\\u001B[${this._lastRow - testRow}A`);\n    // Erase line\n    process.stdout.write('\\u001B[2K');\n    process.stdout.write(line);\n    // Go down if needed.\n    if (testRow !== this._lastRow)\n      process.stdout.write(`\\u001B[${this._lastRow - testRow}E`);\n  }\n\n  private _updateTestLineForTest(test: TestCase, line: string) {\n    const testRow = this._testRows.get(test)!;\n    process.stdout.write(testRow + ' : ' + line + '\\n');\n  }\n\n  async onEnd(result: FullResult) {\n    await super.onEnd(result);\n    process.stdout.write('\\n');\n    this.epilogue(true);\n  }\n}\n\nexport default ListReporter;\n"],"file":"list.js"}