{"version":3,"sources":["../../../src/test/reporters/dot.ts"],"names":["DotReporter","BaseReporter","_counter","onStdOut","chunk","test","result","config","quiet","process","stdout","write","onStdErr","stderr","onTestEnd","status","colors","yellow","willRetry","gray","outcome","green","red","onEnd","epilogue"],"mappings":";;;;;;;AAgBA;;AACA;;;;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,MAAMA,WAAN,SAA0BC,kBAA1B,CAAuC;AAAA;AAAA;AAAA,SAC7BC,QAD6B,GAClB,CADkB;AAAA;;AAGrCC,EAAAA,QAAQ,CAACC,KAAD,EAAyBC,IAAzB,EAA0CC,MAA1C,EAA+D;AACrE,UAAMH,QAAN,CAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B;AACA,QAAI,CAAC,KAAKC,MAAL,CAAYC,KAAjB,EACEC,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBP,KAArB;AACH;;AAEDQ,EAAAA,QAAQ,CAACR,KAAD,EAAyBC,IAAzB,EAA0CC,MAA1C,EAA+D;AACrE,UAAMM,QAAN,CAAeR,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B;AACA,QAAI,CAAC,KAAKC,MAAL,CAAYC,KAAjB,EACEC,OAAO,CAACI,MAAR,CAAeF,KAAf,CAAqBP,KAArB;AACH;;AAEDU,EAAAA,SAAS,CAACT,IAAD,EAAiBC,MAAjB,EAAqC;AAC5C,UAAMQ,SAAN,CAAgBT,IAAhB,EAAsBC,MAAtB;;AACA,QAAI,KAAKJ,QAAL,KAAkB,EAAtB,EAA0B;AACxBO,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;AACA,WAAKT,QAAL,GAAgB,CAAhB;AACD;;AACD,MAAE,KAAKA,QAAP;;AACA,QAAII,MAAM,CAACS,MAAP,KAAkB,SAAtB,EAAiC;AAC/BN,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBK,cAAOC,MAAP,CAAc,GAAd,CAArB;AACA;AACD;;AACD,QAAI,KAAKC,SAAL,CAAeb,IAAf,EAAqBC,MAArB,CAAJ,EAAkC;AAChCG,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBK,cAAOG,IAAP,CAAY,GAAZ,CAArB;AACA;AACD;;AACD,YAAQd,IAAI,CAACe,OAAL,EAAR;AACE,WAAK,UAAL;AAAiBX,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBK,cAAOK,KAAP,CAAa,GAAb,CAArB;AAAyC;;AAC1D,WAAK,YAAL;AAAmBZ,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBK,cAAOM,GAAP,CAAWhB,MAAM,CAACS,MAAP,KAAkB,UAAlB,GAA+B,GAA/B,GAAqC,GAAhD,CAArB;AAA4E;;AAC/F,WAAK,OAAL;AAAcN,QAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBK,cAAOC,MAAP,CAAc,GAAd,CAArB;AAA0C;AAH1D;AAKD;;AAEU,QAALM,KAAK,CAACjB,MAAD,EAAqB;AAC9B,UAAM,MAAMiB,KAAN,CAAYjB,MAAZ,CAAN;AACAG,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;AACA,SAAKa,QAAL,CAAc,IAAd;AACD;;AAzCoC;;eA4CxBxB,W","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport colors from 'colors/safe';\nimport { BaseReporter } from './base';\nimport { FullResult, TestCase, TestResult } from '../../../types/testReporter';\n\nclass DotReporter extends BaseReporter {\n  private _counter = 0;\n\n  onStdOut(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    super.onStdOut(chunk, test, result);\n    if (!this.config.quiet)\n      process.stdout.write(chunk);\n  }\n\n  onStdErr(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    super.onStdErr(chunk, test, result);\n    if (!this.config.quiet)\n      process.stderr.write(chunk);\n  }\n\n  onTestEnd(test: TestCase, result: TestResult) {\n    super.onTestEnd(test, result);\n    if (this._counter === 80) {\n      process.stdout.write('\\n');\n      this._counter = 0;\n    }\n    ++this._counter;\n    if (result.status === 'skipped') {\n      process.stdout.write(colors.yellow('°'));\n      return;\n    }\n    if (this.willRetry(test, result)) {\n      process.stdout.write(colors.gray('×'));\n      return;\n    }\n    switch (test.outcome()) {\n      case 'expected': process.stdout.write(colors.green('·')); break;\n      case 'unexpected': process.stdout.write(colors.red(result.status === 'timedOut' ? 'T' : 'F')); break;\n      case 'flaky': process.stdout.write(colors.yellow('±')); break;\n    }\n  }\n\n  async onEnd(result: FullResult) {\n    await super.onEnd(result);\n    process.stdout.write('\\n');\n    this.epilogue(true);\n  }\n}\n\nexport default DotReporter;\n"],"file":"dot.js"}