{"version":3,"sources":["../../../src/test/reporters/base.ts"],"names":["stackUtils","StackUtils","kOutputSymbol","Symbol","BaseReporter","duration","config","suite","result","fileDurations","Map","monotonicStartTime","printTestOutput","process","env","PWTEST_SKIP_TEST_OUTPUT","onBegin","monotonicTime","onStdOut","chunk","test","_appendOutput","type","onStdErr","output","push","onTestEnd","projectName","titlePath","relativePath","relativeTestPath","fileAndProject","get","set","onError","error","console","log","formatError","onEnd","_printSlowTests","reportSlowTests","entries","sort","a","b","count","Math","min","length","max","Number","POSITIVE_INFINITY","i","threshold","colors","yellow","epilogue","full","skipped","expected","skippedWithError","unexpected","flaky","allTests","forEach","outcome","results","some","_printFailures","red","_printTestHeaders","green","dim","status","globalTimeout","tests","formatTestHeader","failures","index","formatFailure","willRetry","expectedStatus","retries","stdio","tokens","resultTokens","formatResultFailure","statusSuffix","retry","gray","pad","outputText","map","text","toString","stripAnsiEscapes","join","initialIndent","indent","timeout","undefined","location","file","path","relative","rootDir","basename","stepSuffix","step","stepTitles","t","formatTestTitle","titles","line","column","projectTitle","title","passedUnexpectedlySuffix","header","stack","message","messageLocation","indexOf","preamble","substring","position","positionInFile","source","fs","readFileSync","start","highlightCode","enabled","value","char","repeat","lines","tab","replace","realpathSync","split","parsed","parseLine","resolve","cwd","seconds","nanoseconds","hrtime","asciiRegex","RegExp","str"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { codeFrameColumns } from '@babel/code-frame';\nimport colors from 'colors/safe';\nimport fs from 'fs';\n// @ts-ignore\nimport milliseconds from 'ms';\nimport path from 'path';\nimport StackUtils from 'stack-utils';\nimport { FullConfig, TestCase, Suite, TestResult, TestError, Reporter, FullResult, TestStep } from '../../../types/testReporter';\n\nconst stackUtils = new StackUtils();\n\ntype TestResultOutput = { chunk: string | Buffer, type: 'stdout' | 'stderr' };\nconst kOutputSymbol = Symbol('output');\n\nexport class BaseReporter implements Reporter  {\n  duration = 0;\n  config!: FullConfig;\n  suite!: Suite;\n  result!: FullResult;\n  fileDurations = new Map<string, number>();\n  monotonicStartTime: number = 0;\n  private printTestOutput = !process.env.PWTEST_SKIP_TEST_OUTPUT;\n\n  onBegin(config: FullConfig, suite: Suite) {\n    this.monotonicStartTime = monotonicTime();\n    this.config = config;\n    this.suite = suite;\n  }\n\n  onStdOut(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    this._appendOutput({ chunk, type: 'stdout' }, result);\n  }\n\n  onStdErr(chunk: string | Buffer, test?: TestCase, result?: TestResult) {\n    this._appendOutput({ chunk, type: 'stderr' }, result);\n  }\n\n  private _appendOutput(output: TestResultOutput, result: TestResult | undefined) {\n    if (!result)\n      return;\n    (result as any)[kOutputSymbol] = (result as any)[kOutputSymbol] || [];\n    (result as any)[kOutputSymbol].push(output);\n  }\n\n  onTestEnd(test: TestCase, result: TestResult) {\n    const projectName = test.titlePath()[1];\n    const relativePath = relativeTestPath(this.config, test);\n    const fileAndProject = (projectName ? `[${projectName}] › ` : '') + relativePath;\n    const duration = this.fileDurations.get(fileAndProject) || 0;\n    this.fileDurations.set(fileAndProject, duration + result.duration);\n  }\n\n  onError(error: TestError) {\n    console.log(formatError(error));\n  }\n\n  async onEnd(result: FullResult) {\n    this.duration = monotonicTime() - this.monotonicStartTime;\n    this.result = result;\n  }\n\n  private _printSlowTests() {\n    if (!this.config.reportSlowTests)\n      return;\n    const fileDurations = [...this.fileDurations.entries()];\n    fileDurations.sort((a, b) => b[1] - a[1]);\n    const count = Math.min(fileDurations.length, this.config.reportSlowTests.max || Number.POSITIVE_INFINITY);\n    for (let i = 0; i < count; ++i) {\n      const duration = fileDurations[i][1];\n      if (duration <= this.config.reportSlowTests.threshold)\n        break;\n      console.log(colors.yellow('  Slow test: ') + fileDurations[i][0] + colors.yellow(` (${milliseconds(duration)})`));\n    }\n  }\n\n  epilogue(full: boolean) {\n    let skipped = 0;\n    let expected = 0;\n    const skippedWithError: TestCase[] = [];\n    const unexpected: TestCase[] = [];\n    const flaky: TestCase[] = [];\n\n    this.suite.allTests().forEach(test => {\n      switch (test.outcome()) {\n        case 'skipped': {\n          ++skipped;\n          if (test.results.some(result => !!result.error))\n            skippedWithError.push(test);\n          break;\n        }\n        case 'expected': ++expected; break;\n        case 'unexpected': unexpected.push(test); break;\n        case 'flaky': flaky.push(test); break;\n      }\n    });\n\n    if (full && (unexpected.length || skippedWithError.length)) {\n      console.log('');\n      this._printFailures([...unexpected, ...skippedWithError]);\n    }\n\n    this._printSlowTests();\n\n    console.log('');\n    if (unexpected.length) {\n      console.log(colors.red(`  ${unexpected.length} failed`));\n      this._printTestHeaders(unexpected);\n    }\n    if (flaky.length) {\n      console.log(colors.red(`  ${flaky.length} flaky`));\n      this._printTestHeaders(flaky);\n    }\n    if (skipped)\n      console.log(colors.yellow(`  ${skipped} skipped`));\n    if (expected)\n      console.log(colors.green(`  ${expected} passed`) + colors.dim(` (${milliseconds(this.duration)})`));\n    if (this.result.status === 'timedout')\n      console.log(colors.red(`  Timed out waiting ${this.config.globalTimeout / 1000}s for the entire test run`));\n  }\n\n  private _printTestHeaders(tests: TestCase[]) {\n    tests.forEach(test => {\n      console.log(formatTestHeader(this.config, test, '    '));\n    });\n  }\n\n  private _printFailures(failures: TestCase[]) {\n    failures.forEach((test, index) => {\n      console.log(formatFailure(this.config, test, index + 1, this.printTestOutput));\n    });\n  }\n\n  willRetry(test: TestCase, result: TestResult): boolean {\n    return result.status !== 'passed' && result.status !== test.expectedStatus && test.results.length <= test.retries;\n  }\n}\n\nexport function formatFailure(config: FullConfig, test: TestCase, index?: number, stdio?: boolean): string {\n  const tokens: string[] = [];\n  tokens.push(formatTestHeader(config, test, '  ', index));\n  for (const result of test.results) {\n    const resultTokens = formatResultFailure(test, result, '    ');\n    if (!resultTokens.length)\n      continue;\n    const statusSuffix = (result.status === 'passed' && test.expectedStatus === 'failed') ? ' -- passed unexpectedly' : '';\n    if (result.retry) {\n      tokens.push('');\n      tokens.push(colors.gray(pad(`    Retry #${result.retry}${statusSuffix}`, '-')));\n    }\n    tokens.push(...resultTokens);\n    const output = ((result as any)[kOutputSymbol] || []) as TestResultOutput[];\n    if (stdio && output.length) {\n      const outputText = output.map(({ chunk, type }) => {\n        const text = chunk.toString('utf8');\n        if (type === 'stderr')\n          return colors.red(stripAnsiEscapes(text));\n        return text;\n      }).join('');\n      tokens.push('');\n      tokens.push(colors.gray(pad('--- Test output', '-')) + '\\n\\n' + outputText + '\\n' + pad('', '-'));\n    }\n  }\n  tokens.push('');\n  return tokens.join('\\n');\n}\n\nexport function formatResultFailure(test: TestCase, result: TestResult, initialIndent: string): string[] {\n  const resultTokens: string[] = [];\n  if (result.status === 'timedOut') {\n    resultTokens.push('');\n    resultTokens.push(indent(colors.red(`Timeout of ${test.timeout}ms exceeded.`), initialIndent));\n  }\n  if (result.error !== undefined)\n    resultTokens.push(indent(formatError(result.error, test.location.file), initialIndent));\n  return resultTokens;\n}\n\nfunction relativeTestPath(config: FullConfig, test: TestCase): string {\n  return path.relative(config.rootDir, test.location.file) || path.basename(test.location.file);\n}\n\nfunction stepSuffix(step: TestStep | undefined) {\n  const stepTitles = step ? step.titlePath() : [];\n  return stepTitles.map(t => ' › ' + t).join('');\n}\n\nexport function formatTestTitle(config: FullConfig, test: TestCase, step?: TestStep): string {\n  // root, project, file, ...describes, test\n  const [, projectName, , ...titles] = test.titlePath();\n  const location = `${relativeTestPath(config, test)}:${test.location.line}:${test.location.column}`;\n  const projectTitle = projectName ? `[${projectName}] › ` : '';\n  return `${projectTitle}${location} › ${titles.join(' ')}${stepSuffix(step)}`;\n}\n\nfunction formatTestHeader(config: FullConfig, test: TestCase, indent: string, index?: number): string {\n  const title = formatTestTitle(config, test);\n  const passedUnexpectedlySuffix = (test.results[0].status === 'passed' && test.expectedStatus === 'failed') ? ' -- passed unexpectedly' : '';\n  const header = `${indent}${index ? index + ') ' : ''}${title}${passedUnexpectedlySuffix}`;\n  return colors.red(pad(header, '='));\n}\n\nfunction formatError(error: TestError, file?: string) {\n  const stack = error.stack;\n  const tokens = [];\n  if (stack) {\n    tokens.push('');\n    const message = error.message || '';\n    const messageLocation = stack.indexOf(message);\n    const preamble = stack.substring(0, messageLocation + message.length);\n    tokens.push(preamble);\n    const position = file ? positionInFile(stack, file) : null;\n    if (position) {\n      const source = fs.readFileSync(file!, 'utf8');\n      tokens.push('');\n      tokens.push(codeFrameColumns(source, {\n        start: position,\n      },\n      { highlightCode: colors.enabled }\n      ));\n    }\n    tokens.push('');\n    tokens.push(colors.dim(preamble.length > 0 ? stack.substring(preamble.length + 1) : stack));\n  } else {\n    tokens.push('');\n    tokens.push(error.value);\n  }\n  return tokens.join('\\n');\n}\n\nfunction pad(line: string, char: string): string {\n  if (line)\n    line += ' ';\n  return line + colors.gray(char.repeat(Math.max(0, 100 - line.length)));\n}\n\nfunction indent(lines: string, tab: string) {\n  return lines.replace(/^(?=.+$)/gm, tab);\n}\n\nfunction positionInFile(stack: string, file: string): { column: number; line: number; } | undefined {\n  // Stack will have /private/var/folders instead of /var/folders on Mac.\n  file = fs.realpathSync(file);\n  for (const line of stack.split('\\n')) {\n    const parsed = stackUtils.parseLine(line);\n    if (!parsed || !parsed.file)\n      continue;\n    if (path.resolve(process.cwd(), parsed.file) === file)\n      return {column: parsed.column || 0, line: parsed.line || 0};\n  }\n}\n\nfunction monotonicTime(): number {\n  const [seconds, nanoseconds] = process.hrtime();\n  return seconds * 1000 + (nanoseconds / 1000000 | 0);\n}\n\nconst asciiRegex = new RegExp('[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))', 'g');\nexport function stripAnsiEscapes(str: string): string {\n  return str.replace(asciiRegex, '');\n}\n"],"file":"base.js"}