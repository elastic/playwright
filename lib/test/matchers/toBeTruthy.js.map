{"version":3,"sources":["../../../src/test/matchers/toBeTruthy.ts"],"names":["toBeTruthy","matcherName","receiver","receiverType","query","options","testInfo","Error","matcherOptions","isNot","promise","received","pass","remainingTime","timeout","_testFinished","message","undefined"],"mappings":";;;;;;;AAgBA;;AAIA;;AAEA;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUO,eAAeA,UAAf,CAELC,WAFK,EAGLC,QAHK,EAILC,YAJK,EAKLC,KALK,EAMLC,OAA6B,GAAG,EAN3B,EAOL;AACA,QAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAI,CAACA,QAAL,EACE,MAAM,IAAIC,KAAJ,CAAW,GAAEN,WAAY,iCAAzB,CAAN;AACF,wBAAWC,QAAX,EAAqBC,YAArB,EAAmCF,WAAnC;AAEA,QAAMO,cAAkC,GAAG;AACzCC,IAAAA,KAAK,EAAE,KAAKA,KAD6B;AAEzCC,IAAAA,OAAO,EAAE,KAAKA;AAF2B,GAA3C;AAKA,MAAIC,QAAJ;AACA,MAAIC,IAAI,GAAG,KAAX,CAZA,CAcA;;AACA,QAAM,6BAAkBN,QAAlB,EAA4B,MAAMO,aAAN,IAAuB;AACvDF,IAAAA,QAAQ,GAAG,MAAMP,KAAK,CAACS,aAAD,CAAtB;AACAD,IAAAA,IAAI,GAAG,CAAC,CAACD,QAAT;AACA,WAAOC,IAAI,KAAK,CAACJ,cAAc,CAACC,KAAhC;AACD,GAJK,EAIHJ,OAAO,CAACS,OAJL,EAIcR,QAAQ,CAACS,aAJvB,CAAN;;AAMA,QAAMC,OAAO,GAAG,MAAM;AACpB,WAAO,mCAAYf,WAAZ,EAAyBgB,SAAzB,EAAoC,EAApC,EAAwCT,cAAxC,CAAP;AACD,GAFD;;AAIA,SAAO;AAAEQ,IAAAA,OAAF;AAAWJ,IAAAA;AAAX,GAAP;AACD","sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  matcherHint,\n  MatcherHintOptions\n} from 'jest-matcher-utils';\nimport { currentTestInfo } from '../globals';\nimport type { Expect } from '../types';\nimport { expectType, pollUntilDeadline } from '../util';\n\nexport async function toBeTruthy<T>(\n  this: ReturnType<Expect['getState']>,\n  matcherName: string,\n  receiver: any,\n  receiverType: string,\n  query: (timeout: number) => Promise<T>,\n  options: { timeout?: number } = {},\n) {\n  const testInfo = currentTestInfo();\n  if (!testInfo)\n    throw new Error(`${matcherName} must be called during the test`);\n  expectType(receiver, receiverType, matcherName);\n\n  const matcherOptions: MatcherHintOptions = {\n    isNot: this.isNot,\n    promise: this.promise,\n  };\n\n  let received: T;\n  let pass = false;\n\n  // TODO: interrupt on timeout for nice message.\n  await pollUntilDeadline(testInfo, async remainingTime => {\n    received = await query(remainingTime);\n    pass = !!received;\n    return pass === !matcherOptions.isNot;\n  }, options.timeout, testInfo._testFinished);\n\n  const message = () => {\n    return matcherHint(matcherName, undefined, '', matcherOptions);\n  };\n\n  return { message, pass };\n}\n"],"file":"toBeTruthy.js"}