{"version":3,"sources":["../../src/test/fixtures.ts"],"names":["Fixture","constructor","runner","registration","usages","value","_teardownFenceCallback","_tearDownComplete","_setup","_teardown","Set","setup","workerInfo","testInfo","fn","params","name","deps","pool","resolveDependency","dep","setupFixtureForRegistration","add","setupFenceFulfill","setupFenceReject","e","called","setupFence","Promise","f","r","teardownFence","Error","scope","catch","teardown","fixture","clear","instanceForId","delete","id","FixturePool","fixturesList","parentPool","disallowWorkerFixtures","digest","registrations","Map","fixtures","location","entry","Object","entries","options","Array","isArray","auto","previous","get","errorWithLocations","fixtureParameterNames","super","registrationId","set","validate","markers","stack","visit","push","has","index","indexOf","regs","slice","length","names","map","join","pop","hash","crypto","createHash","from","keys","sort","update","validateFunction","prefix","quoted","FixtureRunner","testScopeClean","setPool","teardownScope","error","values","reverse","undefined","resolveParametersAndRunHookOrTest","paramsStepCallback","shouldSkip","file","line","column","dependsOnWorkerFixturesOnly","signatureSymbol","Symbol","innerFixtureParameterNames","text","toString","match","trimmedParams","trim","firstParam","splitByComma","props","substring","prop","colon","s","result","start","i","token","lastToken","registrationIdMap","lastId","key","String","message","defined"],"mappings":"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","sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { formatLocation, wrapInPromise } from './util';\nimport * as crypto from 'crypto';\nimport { FixturesWithLocation, Location, WorkerInfo, TestInfo, CompleteStepCallback } from './types';\n\ntype FixtureScope = 'test' | 'worker';\ntype FixtureRegistration = {\n  location: Location;\n  name: string;\n  scope: FixtureScope;\n  fn: Function | any;  // Either a fixture function, or a fixture value.\n  auto: boolean;\n  deps: string[];\n  id: string;\n  super?: FixtureRegistration;\n};\n\nclass Fixture {\n  runner: FixtureRunner;\n  registration: FixtureRegistration;\n  usages: Set<Fixture>;\n  value: any;\n  _teardownFenceCallback!: (value?: unknown) => void;\n  _tearDownComplete!: Promise<void>;\n  _setup = false;\n  _teardown = false;\n\n  constructor(runner: FixtureRunner, registration: FixtureRegistration) {\n    this.runner = runner;\n    this.registration = registration;\n    this.usages = new Set();\n    this.value = null;\n  }\n\n  async setup(workerInfo: WorkerInfo, testInfo: TestInfo | undefined) {\n    if (typeof this.registration.fn !== 'function') {\n      this._setup = true;\n      this.value = this.registration.fn;\n      return;\n    }\n\n    const params: { [key: string]: any } = {};\n    for (const name of this.registration.deps) {\n      const registration = this.runner.pool!.resolveDependency(this.registration, name)!;\n      const dep = await this.runner.setupFixtureForRegistration(registration, workerInfo, testInfo);\n      dep.usages.add(this);\n      params[name] = dep.value;\n    }\n\n    let setupFenceFulfill = () => {};\n    let setupFenceReject = (e: Error) => {};\n    let called = false;\n    const setupFence = new Promise<void>((f, r) => { setupFenceFulfill = f; setupFenceReject = r; });\n    const teardownFence = new Promise(f => this._teardownFenceCallback = f);\n    this._tearDownComplete = wrapInPromise(this.registration.fn(params, async (value: any) => {\n      if (called)\n        throw new Error(`Cannot provide fixture value for the second time`);\n      called = true;\n      this.value = value;\n      setupFenceFulfill();\n      return await teardownFence;\n    }, this.registration.scope === 'worker' ? workerInfo : testInfo)).catch((e: any) => {\n      if (!this._setup)\n        setupFenceReject(e);\n      else\n        throw e;\n    });\n    await setupFence;\n    this._setup = true;\n  }\n\n  async teardown() {\n    if (this._teardown)\n      return;\n    this._teardown = true;\n    if (typeof this.registration.fn !== 'function')\n      return;\n    for (const fixture of this.usages)\n      await fixture.teardown();\n    this.usages.clear();\n    if (this._setup) {\n      this._teardownFenceCallback();\n      await this._tearDownComplete;\n    }\n    this.runner.instanceForId.delete(this.registration.id);\n  }\n}\n\nexport class FixturePool {\n  readonly digest: string;\n  readonly registrations: Map<string, FixtureRegistration>;\n\n  constructor(fixturesList: FixturesWithLocation[], parentPool?: FixturePool, disallowWorkerFixtures?: boolean) {\n    this.registrations = new Map(parentPool ? parentPool.registrations : []);\n\n    for (const { fixtures, location } of fixturesList) {\n      for (const entry of Object.entries(fixtures)) {\n        const name = entry[0];\n        let value = entry[1];\n        let options: { auto: boolean, scope: FixtureScope } | undefined;\n        if (Array.isArray(value) && typeof value[1] === 'object' && ('scope' in value[1] || 'auto' in value[1])) {\n          options = {\n            auto: !!value[1].auto,\n            scope: value[1].scope || 'test'\n          };\n          value = value[0];\n        }\n        const fn = value as (Function | any);\n\n        const previous = this.registrations.get(name);\n        if (previous && options) {\n          if (previous.scope !== options.scope)\n            throw errorWithLocations(`Fixture \"${name}\" has already been registered as a { scope: '${previous.scope}' } fixture.`, { location, name }, previous);\n          if (previous.auto !== options.auto)\n            throw errorWithLocations(`Fixture \"${name}\" has already been registered as a { auto: '${previous.scope}' } fixture.`, { location, name }, previous);\n        } else if (previous) {\n          options = { auto: previous.auto, scope: previous.scope };\n        } else if (!options) {\n          options = { auto: false, scope: 'test' };\n        }\n\n        if (options.scope !== 'test' && options.scope !== 'worker')\n          throw errorWithLocations(`Fixture \"${name}\" has unknown { scope: '${options.scope}' }.`, { location, name });\n        if (options.scope === 'worker' && disallowWorkerFixtures)\n          throw errorWithLocations(`Cannot use({ ${name} }) in a describe group, because it forces a new worker.\\nMake it top-level in the test file or put in the configuration file.`, { location, name });\n\n        const deps = fixtureParameterNames(fn, location);\n        const registration: FixtureRegistration = { id: '', name, location, scope: options.scope, fn, auto: options.auto, deps, super: previous };\n        registrationId(registration);\n        this.registrations.set(name, registration);\n      }\n    }\n\n    this.digest = this.validate();\n  }\n\n  private validate() {\n    const markers = new Map<FixtureRegistration, 'visiting' | 'visited'>();\n    const stack: FixtureRegistration[] = [];\n    const visit = (registration: FixtureRegistration) => {\n      markers.set(registration, 'visiting');\n      stack.push(registration);\n      for (const name of registration.deps) {\n        const dep = this.resolveDependency(registration, name);\n        if (!dep) {\n          if (name === registration.name)\n            throw errorWithLocations(`Fixture \"${registration.name}\" references itself, but does not have a base implementation.`, registration);\n          else\n            throw errorWithLocations(`Fixture \"${registration.name}\" has unknown parameter \"${name}\".`, registration);\n        }\n        if (registration.scope === 'worker' && dep.scope === 'test')\n          throw errorWithLocations(`Worker fixture \"${registration.name}\" cannot depend on a test fixture \"${name}\".`, registration, dep);\n        if (!markers.has(dep)) {\n          visit(dep);\n        } else if (markers.get(dep) === 'visiting') {\n          const index = stack.indexOf(dep);\n          const regs = stack.slice(index, stack.length);\n          const names = regs.map(r => `\"${r.name}\"`);\n          throw errorWithLocations(`Fixtures ${names.join(' -> ')} -> \"${dep.name}\" form a dependency cycle.`, ...regs);\n        }\n      }\n      markers.set(registration, 'visited');\n      stack.pop();\n    };\n\n    const hash = crypto.createHash('sha1');\n    const names = Array.from(this.registrations.keys()).sort();\n    for (const name of names) {\n      const registration = this.registrations.get(name)!;\n      visit(registration);\n      if (registration.scope === 'worker')\n        hash.update(registration.id + ';');\n    }\n    return hash.digest('hex');\n  }\n\n  validateFunction(fn: Function, prefix: string, location: Location) {\n    const visit = (registration: FixtureRegistration) => {\n      for (const name of registration.deps)\n        visit(this.resolveDependency(registration, name)!);\n    };\n    for (const name of fixtureParameterNames(fn, location)) {\n      const registration = this.registrations.get(name);\n      if (!registration)\n        throw errorWithLocations(`${prefix} has unknown parameter \"${name}\".`, { location, name: prefix, quoted: false });\n      visit(registration);\n    }\n  }\n\n  resolveDependency(registration: FixtureRegistration, name: string): FixtureRegistration | undefined {\n    if (name === registration.name)\n      return registration.super;\n    return this.registrations.get(name);\n  }\n}\n\nexport class FixtureRunner {\n  private testScopeClean = true;\n  pool: FixturePool | undefined;\n  instanceForId = new Map<string, Fixture>();\n\n  setPool(pool: FixturePool) {\n    if (!this.testScopeClean)\n      throw new Error('Did not teardown test scope');\n    if (this.pool && pool.digest !== this.pool.digest)\n      throw new Error('Digests do not match');\n    this.pool = pool;\n  }\n\n  async teardownScope(scope: FixtureScope) {\n    let error: Error | undefined;\n    // Teardown fixtures in the reverse order.\n    const fixtures = Array.from(this.instanceForId.values()).reverse();\n    for (const fixture of fixtures) {\n      if (fixture.registration.scope === scope) {\n        try {\n          await fixture.teardown();\n        } catch (e) {\n          if (error === undefined)\n            error = e;\n        }\n      }\n    }\n    if (scope === 'test')\n      this.testScopeClean = true;\n    if (error !== undefined)\n      throw error;\n  }\n\n  async resolveParametersAndRunHookOrTest(fn: Function, workerInfo: WorkerInfo, testInfo: TestInfo | undefined, paramsStepCallback?: CompleteStepCallback) {\n    // Install all automatic fixtures.\n    for (const registration of this.pool!.registrations.values()) {\n      const shouldSkip = !testInfo && registration.scope === 'test';\n      if (registration.auto && !shouldSkip)\n        await this.setupFixtureForRegistration(registration, workerInfo, testInfo);\n    }\n\n    // Install used fixtures.\n    const names = fixtureParameterNames(fn, { file: '<unused>', line: 1, column: 1 });\n    const params: { [key: string]: any } = {};\n    for (const name of names) {\n      const registration = this.pool!.registrations.get(name)!;\n      const fixture = await this.setupFixtureForRegistration(registration, workerInfo, testInfo);\n      params[name] = fixture.value;\n    }\n\n    // Report fixture hooks step as completed.\n    paramsStepCallback?.();\n\n    return fn(params, testInfo || workerInfo);\n  }\n\n  async setupFixtureForRegistration(registration: FixtureRegistration, workerInfo: WorkerInfo, testInfo: TestInfo | undefined): Promise<Fixture> {\n    if (registration.scope === 'test')\n      this.testScopeClean = false;\n\n    let fixture = this.instanceForId.get(registration.id);\n    if (fixture)\n      return fixture;\n\n    fixture = new Fixture(this, registration);\n    this.instanceForId.set(registration.id, fixture);\n    await fixture.setup(workerInfo, testInfo);\n    return fixture;\n  }\n\n  dependsOnWorkerFixturesOnly(fn: Function, location: Location): boolean {\n    const names = fixtureParameterNames(fn, location);\n    for (const name of names) {\n      const registration = this.pool!.registrations.get(name)!;\n      if (registration.scope !== 'worker')\n        return false;\n    }\n    return true;\n  }\n}\n\nconst signatureSymbol = Symbol('signature');\n\nfunction fixtureParameterNames(fn: Function | any, location: Location): string[] {\n  if (typeof fn !== 'function')\n    return [];\n  if (!fn[signatureSymbol])\n    fn[signatureSymbol] = innerFixtureParameterNames(fn, location);\n  return fn[signatureSymbol];\n}\n\nfunction innerFixtureParameterNames(fn: Function, location: Location): string[] {\n  const text = fn.toString();\n  const match = text.match(/(?:async)?(?:\\s+function)?[^(]*\\(([^)]*)/);\n  if (!match)\n    return [];\n  const trimmedParams = match[1].trim();\n  if (!trimmedParams)\n    return [];\n  const [firstParam] = splitByComma(trimmedParams);\n  if (firstParam[0] !== '{' || firstParam[firstParam.length - 1] !== '}')\n    throw errorWithLocations('First argument must use the object destructuring pattern: '  + firstParam, { location });\n  const props = splitByComma(firstParam.substring(1, firstParam.length - 1)).map(prop => {\n    const colon = prop.indexOf(':');\n    return colon === -1 ? prop : prop.substring(0, colon).trim();\n  });\n  return props;\n}\n\nfunction splitByComma(s: string) {\n  const result: string[] = [];\n  const stack: string[] = [];\n  let start = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === '{' || s[i] === '[') {\n      stack.push(s[i] === '{' ? '}' : ']');\n    } else if (s[i] === stack[stack.length - 1]) {\n      stack.pop();\n    } else if (!stack.length && s[i] === ',') {\n      const token = s.substring(start, i).trim();\n      if (token)\n        result.push(token);\n      start = i + 1;\n    }\n  }\n  const lastToken = s.substring(start).trim();\n  if (lastToken)\n    result.push(lastToken);\n  return result;\n}\n\n// name + superId, fn -> id\nconst registrationIdMap = new Map<string, Map<Function | any, string>>();\nlet lastId = 0;\n\nfunction registrationId(registration: FixtureRegistration): string {\n  if (registration.id)\n    return registration.id;\n  const key = registration.name + '@@@' + (registration.super ?  registrationId(registration.super) : '');\n  let map = registrationIdMap.get(key);\n  if (!map) {\n    map = new Map();\n    registrationIdMap.set(key, map);\n  }\n  if (!map.has(registration.fn))\n    map.set(registration.fn, String(lastId++));\n  registration.id = map.get(registration.fn)!;\n  return registration.id;\n}\n\nfunction errorWithLocations(message: string, ...defined: { location: Location, name?: string, quoted?: boolean }[]): Error {\n  for (const { name, location, quoted } of defined) {\n    let prefix = '';\n    if (name && quoted === false)\n      prefix = name + ' ';\n    else if (name)\n      prefix = `\"${name}\" `;\n    message += `\\n  ${prefix}defined at ${formatLocation(location)}`;\n  }\n  return new Error(message);\n}\n"],"file":"fixtures.js"}