{"version":3,"sources":["../../src/test/expect.ts"],"names":["expect","expectLibrary","setState","expand","customMatchers","toBeChecked","toBeDisabled","toBeEditable","toBeEmpty","toBeEnabled","toBeFocused","toBeHidden","toBeVisible","toContainText","toHaveAttribute","toHaveClass","toHaveCount","toHaveCSS","toHaveId","toHaveJSProperty","toHaveText","toHaveTitle","toHaveURL","toHaveValue","toMatchSnapshot","wrap","matcherName","matcher","args","testInfo","call","infix","isNot","completeStep","_addStep","stack","Error","reportStepEnd","result","success","pass","error","message","reportStepError","Promise","then","catch","e","wrappedMatchers","matchers","extend"],"mappings":"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","sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport expectLibrary from 'expect';\nimport {\n  toBeChecked,\n  toBeDisabled,\n  toBeEditable,\n  toBeEmpty,\n  toBeEnabled,\n  toBeFocused,\n  toBeHidden,\n  toBeVisible,\n  toContainText,\n  toHaveAttribute,\n  toHaveClass,\n  toHaveCount,\n  toHaveCSS,\n  toHaveId,\n  toHaveJSProperty,\n  toHaveText,\n  toHaveTitle,\n  toHaveURL,\n  toHaveValue\n} from './matchers/matchers';\nimport { toMatchSnapshot } from './matchers/toMatchSnapshot';\nimport type { Expect, TestError } from './types';\nimport matchers from 'expect/build/matchers';\nimport { currentTestInfo } from './globals';\nimport { serializeError } from './util';\n\nexport const expect: Expect = expectLibrary as any;\nexpectLibrary.setState({ expand: false });\nconst customMatchers = {\n  toBeChecked,\n  toBeDisabled,\n  toBeEditable,\n  toBeEmpty,\n  toBeEnabled,\n  toBeFocused,\n  toBeHidden,\n  toBeVisible,\n  toContainText,\n  toHaveAttribute,\n  toHaveClass,\n  toHaveCount,\n  toHaveCSS,\n  toHaveId,\n  toHaveJSProperty,\n  toHaveText,\n  toHaveTitle,\n  toHaveURL,\n  toHaveValue,\n  toMatchSnapshot,\n};\n\nfunction wrap(matcherName: string, matcher: any) {\n  return function(this: any, ...args: any[]) {\n    const testInfo = currentTestInfo();\n    if (!testInfo)\n      return matcher.call(this, ...args);\n\n    const infix = this.isNot ? '.not' : '';\n    const completeStep = testInfo._addStep('expect', `expect${infix}.${matcherName}`);\n    const stack = new Error().stack;\n\n    const reportStepEnd = (result: any) => {\n      const success = result.pass !== this.isNot;\n      let error: TestError | undefined;\n      if (!success)\n        error = { message: result.message(), stack };\n      completeStep?.(error);\n      return result;\n    };\n\n    const reportStepError = (error: Error) => {\n      completeStep?.(serializeError(error));\n      throw error;\n    };\n\n    try {\n      const result = matcher.call(this, ...args);\n      if (result instanceof Promise)\n        return result.then(reportStepEnd).catch(reportStepError);\n      return reportStepEnd(result);\n    } catch (e) {\n      reportStepError(e);\n    }\n  };\n}\n\nconst wrappedMatchers: any = {};\nfor (const matcherName in matchers)\n  wrappedMatchers[matcherName] = wrap(matcherName, matchers[matcherName]);\nfor (const matcherName in customMatchers)\n  wrappedMatchers[matcherName] = wrap(matcherName, (customMatchers as any)[matcherName]);\n\nexpectLibrary.extend(wrappedMatchers);\n"],"file":"expect.js"}