{"version":3,"sources":["../../src/test/test.ts"],"names":["Base","constructor","title","parent","_only","_requireFile","titlePath","push","Suite","suites","tests","location","_use","_isDescribe","_entries","_allHooks","_eachHooks","_timeout","_annotations","_modifiers","_serial","_addTest","test","_addSuite","suite","_addAllHook","hook","allTests","result","visit","entry","_getOnlyItems","items","filter","_clone","slice","TestCase","type","fn","ordinalInFile","testType","results","expectedStatus","timeout","annotations","projectName","retries","_type","_ordinalInFile","_testType","_id","_workerHash","_pool","_repeatEachIndex","_projectIndex","outcome","nonSkipped","status","length","every","some","ok","_appendTestResult","retry","workerIndex","duration","startTime","Date","stdout","stderr","attachments","steps"],"mappings":"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","sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FixturePool } from './fixtures';\nimport * as reporterTypes from '../../types/testReporter';\nimport type { TestTypeImpl } from './testType';\nimport { Annotations, FixturesWithLocation, Location } from './types';\n\nclass Base {\n  title: string;\n  parent?: Suite;\n\n  _only = false;\n  _requireFile: string = '';\n\n  constructor(title: string) {\n    this.title = title;\n  }\n\n  titlePath(): string[] {\n    const titlePath = this.parent ? this.parent.titlePath() : [];\n    titlePath.push(this.title);\n    return titlePath;\n  }\n}\n\nexport type Modifier = {\n  type: 'slow' | 'fixme' | 'skip' | 'fail',\n  fn: Function,\n  location: Location,\n  description: string | undefined\n};\n\nexport class Suite extends Base implements reporterTypes.Suite {\n  suites: Suite[] = [];\n  tests: TestCase[] = [];\n  location?: Location;\n  _use: FixturesWithLocation[] = [];\n  _isDescribe = false;\n  _entries: (Suite | TestCase)[] = [];\n  _allHooks: TestCase[] = [];\n  _eachHooks: { type: 'beforeEach' | 'afterEach', fn: Function, location: Location }[] = [];\n  _timeout: number | undefined;\n  _annotations: Annotations = [];\n  _modifiers: Modifier[] = [];\n  _serial = false;\n\n  _addTest(test: TestCase) {\n    test.parent = this;\n    this.tests.push(test);\n    this._entries.push(test);\n  }\n\n  _addSuite(suite: Suite) {\n    suite.parent = this;\n    this.suites.push(suite);\n    this._entries.push(suite);\n  }\n\n  _addAllHook(hook: TestCase) {\n    hook.parent = this;\n    this._allHooks.push(hook);\n  }\n\n  allTests(): TestCase[] {\n    const result: TestCase[] = [];\n    const visit = (suite: Suite) => {\n      for (const entry of suite._entries) {\n        if (entry instanceof Suite)\n          visit(entry);\n        else\n          result.push(entry);\n      }\n    };\n    visit(this);\n    return result;\n  }\n\n  _getOnlyItems(): (TestCase | Suite)[] {\n    const items: (TestCase | Suite)[] = [];\n    if (this._only)\n      items.push(this);\n    for (const suite of this.suites)\n      items.push(...suite._getOnlyItems());\n    items.push(...this.tests.filter(test => test._only));\n    return items;\n  }\n\n  _clone(): Suite {\n    const suite = new Suite(this.title);\n    suite._only = this._only;\n    suite.location = this.location;\n    suite._requireFile = this._requireFile;\n    suite._use = this._use.slice();\n    suite._eachHooks = this._eachHooks.slice();\n    suite._timeout = this._timeout;\n    suite._annotations = this._annotations.slice();\n    suite._modifiers = this._modifiers.slice();\n    suite._isDescribe = this._isDescribe;\n    suite._serial = this._serial;\n    return suite;\n  }\n}\n\nexport class TestCase extends Base implements reporterTypes.TestCase {\n  fn: Function;\n  results: reporterTypes.TestResult[] = [];\n  location: Location;\n\n  expectedStatus: reporterTypes.TestStatus = 'passed';\n  timeout = 0;\n  annotations: Annotations = [];\n  projectName = '';\n  retries = 0;\n\n  _type: 'beforeAll' | 'afterAll' | 'test';\n  _ordinalInFile: number;\n  _testType: TestTypeImpl;\n  _id = '';\n  _workerHash = '';\n  _pool: FixturePool | undefined;\n  _repeatEachIndex = 0;\n  _projectIndex = 0;\n\n  constructor(type: 'beforeAll' | 'afterAll' | 'test', title: string, fn: Function, ordinalInFile: number, testType: TestTypeImpl, location: Location) {\n    super(title);\n    this._type = type;\n    this.fn = fn;\n    this._ordinalInFile = ordinalInFile;\n    this._testType = testType;\n    this.location = location;\n  }\n\n  outcome(): 'skipped' | 'expected' | 'unexpected' | 'flaky' {\n    const nonSkipped = this.results.filter(result => result.status !== 'skipped');\n    if (!nonSkipped.length)\n      return 'skipped';\n    if (nonSkipped.every(result => result.status === this.expectedStatus))\n      return 'expected';\n    if (nonSkipped.some(result => result.status === this.expectedStatus))\n      return 'flaky';\n    return 'unexpected';\n  }\n\n  ok(): boolean {\n    const status = this.outcome();\n    return status === 'expected' || status === 'flaky' || status === 'skipped';\n  }\n\n  _clone(): TestCase {\n    const test = new TestCase(this._type, this.title, this.fn, this._ordinalInFile, this._testType, this.location);\n    test._only = this._only;\n    test._requireFile = this._requireFile;\n    test.expectedStatus = this.expectedStatus;\n    return test;\n  }\n\n  _appendTestResult(): reporterTypes.TestResult {\n    const result: reporterTypes.TestResult = {\n      retry: this.results.length,\n      workerIndex: 0,\n      duration: 0,\n      startTime: new Date(),\n      stdout: [],\n      stderr: [],\n      attachments: [],\n      status: 'skipped',\n      steps: []\n    };\n    this.results.push(result);\n    return result;\n  }\n}\n"],"file":"test.js"}