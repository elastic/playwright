{"version":3,"sources":["../src/browserServerImpl.ts"],"names":["BrowserServerLauncherImpl","constructor","browserName","_browserName","launchServer","options","playwright","_acceptForwardedPorts","_enablePortForwarding","browser","launch","ignoreDefaultArgs","Array","isArray","undefined","ignoreAllDefaultArgs","env","toProtocolLogger","logger","delegate","path","allowMultipleClients","onClose","_disablePortForwarding","onConnect","_onConnect","bind","server","PlaywrightServer","wsEndpoint","listen","port","browserServer","EventEmitter","process","browserProcess","close","kill","_disconnectForTest","onclose","exitCode","signal","emit","connection","forceDisconnect","browserDispatcher","Root","scope","selectors","Selectors","selectorsDispatcher","SelectorsDispatcher","ConnectedBrowserDispatcher","on","Browser","Events","Disconnected","PlaywrightDispatcher","cleanupContexts","catch","e","Dispatcher","version","name","_contexts","Set","_selectors","newContext","params","metadata","recordVideo","dir","_object","artifactsDir","context","add","_setSelectors","BrowserContext","Close","delete","storageState","setStorageState","BrowserContextDispatcher","_scope","killForTests","newBrowserCDPSession","isChromium","Error","crBrowser","session","CDPSessionDispatcher","startTracing","page","stopTracing","buffer","binary","toString","Promise","all","from","map","direction","message","isEnabled","log","JSON","stringify"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LaunchServerOptions, Logger } from './client/types';\nimport { Browser } from './server/browser';\nimport { EventEmitter } from 'ws';\nimport { Dispatcher, DispatcherConnection, DispatcherScope, Root } from './dispatchers/dispatcher';\nimport { BrowserContextDispatcher } from './dispatchers/browserContextDispatcher';\nimport * as channels from './protocol/channels';\nimport { BrowserServerLauncher, BrowserServer } from './client/browserType';\nimport { envObjectToArray } from './client/clientHelper';\nimport { createGuid } from './utils/utils';\nimport { SelectorsDispatcher } from './dispatchers/selectorsDispatcher';\nimport { Selectors } from './server/selectors';\nimport { ProtocolLogger } from './server/types';\nimport { CallMetadata, internalCallMetadata } from './server/instrumentation';\nimport { createPlaywright, Playwright } from './server/playwright';\nimport { PlaywrightDispatcher } from './dispatchers/playwrightDispatcher';\nimport { PlaywrightServer, PlaywrightServerDelegate } from './remote/playwrightServer';\nimport { BrowserContext } from './server/browserContext';\nimport { CRBrowser } from './server/chromium/crBrowser';\nimport { CDPSessionDispatcher } from './dispatchers/cdpSessionDispatcher';\nimport { PageDispatcher } from './dispatchers/pageDispatcher';\n\nexport class BrowserServerLauncherImpl implements BrowserServerLauncher {\n  private _browserName: 'chromium' | 'firefox' | 'webkit';\n\n  constructor(browserName: 'chromium' | 'firefox' | 'webkit') {\n    this._browserName = browserName;\n  }\n\n  async launchServer(options: LaunchServerOptions = {}): Promise<BrowserServer> {\n    const playwright = createPlaywright();\n    if (options._acceptForwardedPorts)\n      await playwright._enablePortForwarding();\n    // 1. Pre-launch the browser\n    const browser = await playwright[this._browserName].launch(internalCallMetadata(), {\n      ...options,\n      ignoreDefaultArgs: Array.isArray(options.ignoreDefaultArgs) ? options.ignoreDefaultArgs : undefined,\n      ignoreAllDefaultArgs: !!options.ignoreDefaultArgs && !Array.isArray(options.ignoreDefaultArgs),\n      env: options.env ? envObjectToArray(options.env) : undefined,\n    }, toProtocolLogger(options.logger));\n\n    // 2. Start the server\n    const delegate: PlaywrightServerDelegate = {\n      path: '/' + createGuid(),\n      allowMultipleClients: options._acceptForwardedPorts ? false : true,\n      onClose: () => {\n        playwright._disablePortForwarding();\n      },\n      onConnect: this._onConnect.bind(this, playwright, browser),\n    };\n    const server = new PlaywrightServer(delegate);\n    const wsEndpoint = await server.listen(options.port);\n\n    // 3. Return the BrowserServer interface\n    const browserServer = new EventEmitter() as (BrowserServer & EventEmitter);\n    browserServer.process = () => browser.options.browserProcess.process!;\n    browserServer.wsEndpoint = () => wsEndpoint;\n    browserServer.close = () => browser.options.browserProcess.close();\n    browserServer.kill = () => browser.options.browserProcess.kill();\n    (browserServer as any)._disconnectForTest = () => server.close();\n    browser.options.browserProcess.onclose = async (exitCode, signal) => {\n      server.close();\n      browserServer.emit('close', exitCode, signal);\n    };\n    return browserServer;\n  }\n\n  private async _onConnect(playwright: Playwright, browser: Browser, connection: DispatcherConnection, forceDisconnect: () => void) {\n    let browserDispatcher: ConnectedBrowserDispatcher | undefined;\n    new Root(connection, async (scope: DispatcherScope): Promise<PlaywrightDispatcher> => {\n      const selectors = new Selectors();\n      const selectorsDispatcher = new SelectorsDispatcher(scope, selectors);\n      browserDispatcher = new ConnectedBrowserDispatcher(scope, browser, selectors);\n      browser.on(Browser.Events.Disconnected, () => {\n        // Underlying browser did close for some reason - force disconnect the client.\n        forceDisconnect();\n      });\n      return new PlaywrightDispatcher(scope, playwright, selectorsDispatcher, browserDispatcher);\n    });\n    return () => {\n      // Cleanup contexts upon disconnect.\n      browserDispatcher?.cleanupContexts().catch(e => {});\n    };\n  }\n}\n\n// This class implements multiplexing browser dispatchers over a single Browser instance.\nclass ConnectedBrowserDispatcher extends Dispatcher<Browser, channels.BrowserInitializer> implements channels.BrowserChannel {\n  private _contexts = new Set<BrowserContext>();\n  private _selectors: Selectors;\n\n  constructor(scope: DispatcherScope, browser: Browser, selectors: Selectors) {\n    super(scope, browser, 'Browser', { version: browser.version(), name: browser.options.name }, true);\n    this._selectors = selectors;\n  }\n\n  async newContext(params: channels.BrowserNewContextParams, metadata: CallMetadata): Promise<channels.BrowserNewContextResult> {\n    if (params.recordVideo)\n      params.recordVideo.dir = this._object.options.artifactsDir;\n    const context = await this._object.newContext(params);\n    this._contexts.add(context);\n    context._setSelectors(this._selectors);\n    context.on(BrowserContext.Events.Close, () => this._contexts.delete(context));\n    if (params.storageState)\n      await context.setStorageState(metadata, params.storageState);\n    return { context: new BrowserContextDispatcher(this._scope, context) };\n  }\n\n  async close(): Promise<void> {\n    // Client should not send us Browser.close.\n  }\n\n  async killForTests(): Promise<void> {\n    // Client should not send us Browser.killForTests.\n  }\n\n  async newBrowserCDPSession(): Promise<channels.BrowserNewBrowserCDPSessionResult> {\n    if (!this._object.options.isChromium)\n      throw new Error(`CDP session is only available in Chromium`);\n    const crBrowser = this._object as CRBrowser;\n    return { session: new CDPSessionDispatcher(this._scope, await crBrowser.newBrowserCDPSession()) };\n  }\n\n  async startTracing(params: channels.BrowserStartTracingParams): Promise<void> {\n    if (!this._object.options.isChromium)\n      throw new Error(`Tracing is only available in Chromium`);\n    const crBrowser = this._object as CRBrowser;\n    await crBrowser.startTracing(params.page ? (params.page as PageDispatcher)._object : undefined, params);\n  }\n\n  async stopTracing(): Promise<channels.BrowserStopTracingResult> {\n    if (!this._object.options.isChromium)\n      throw new Error(`Tracing is only available in Chromium`);\n    const crBrowser = this._object as CRBrowser;\n    const buffer = await crBrowser.stopTracing();\n    return { binary: buffer.toString('base64') };\n  }\n\n  async cleanupContexts() {\n    await Promise.all(Array.from(this._contexts).map(context => context.close(internalCallMetadata())));\n  }\n}\n\nfunction toProtocolLogger(logger: Logger | undefined): ProtocolLogger | undefined {\n  return logger ? (direction: 'send' | 'receive', message: object) => {\n    if (logger.isEnabled('protocol', 'verbose'))\n      logger.log('protocol', 'verbose', (direction === 'send' ? 'SEND ► ' : '◀ RECV ') + JSON.stringify(message), [], {});\n  } : undefined;\n}\n"],"file":"browserServerImpl.js"}