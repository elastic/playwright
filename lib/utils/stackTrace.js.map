{"version":3,"sources":["../../src/utils/stackTrace.ts"],"names":["stackUtils","StackUtils","rewriteErrorMessage","e","newMessage","stack","index","indexOf","message","substring","length","ROOT_DIR","path","resolve","__dirname","CLIENT_LIB","join","CLIENT_SRC","captureStackTrace","stackTraceLimit","Error","error","isTesting","parsedFrames","split","map","line","frame","parseLine","file","startsWith","fileName","process","cwd","includes","parsed","column","function","frameText","inClient","filter","apiName","i","toLowerCase","slice","frames","p","frameTexts","splitErrorMessage","separationIdx","name"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport { StackFrame } from '../protocol/channels';\nimport StackUtils from 'stack-utils';\nimport { isUnderTest } from './utils';\n\nconst stackUtils = new StackUtils();\n\nexport function rewriteErrorMessage(e: Error, newMessage: string): Error {\n  if (e.stack) {\n    const index = e.stack.indexOf(e.message);\n    if (index !== -1)\n      e.stack = e.stack.substring(0, index) + newMessage + e.stack.substring(index + e.message.length);\n  }\n  e.message = newMessage;\n  return e;\n}\n\nconst ROOT_DIR = path.resolve(__dirname, '..', '..');\nconst CLIENT_LIB = path.join(ROOT_DIR, 'lib', 'client');\nconst CLIENT_SRC = path.join(ROOT_DIR, 'src', 'client');\n\nexport type ParsedStackTrace = {\n  frames: StackFrame[];\n  frameTexts: string[];\n  apiName: string;\n};\n\nexport function captureStackTrace(): ParsedStackTrace {\n  const stackTraceLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 30;\n  const error = new Error();\n  const stack = error.stack!;\n  Error.stackTraceLimit = stackTraceLimit;\n\n  const isTesting = isUnderTest();\n  type ParsedFrame = {\n    frame: StackFrame;\n    frameText: string;\n    inClient: boolean;\n  };\n  let parsedFrames = stack.split('\\n').map(line => {\n    const frame = stackUtils.parseLine(line);\n    if (!frame || !frame.file)\n      return null;\n    if (frame.file.startsWith('internal'))\n      return null;\n    const fileName = path.resolve(process.cwd(), frame.file);\n    if (isTesting && fileName.includes(path.join('playwright', 'tests', 'config', 'coverage.js')))\n      return null;\n    const parsed: ParsedFrame = {\n      frame: {\n        file: fileName,\n        line: frame.line,\n        column: frame.column,\n        function: frame.function,\n      },\n      frameText: line,\n      inClient: fileName.startsWith(CLIENT_LIB) || fileName.startsWith(CLIENT_SRC),\n    };\n    return parsed;\n  }).filter(frame => !!frame) as ParsedFrame[];\n\n  let apiName = '';\n  // Deepest transition between non-client code calling into client code\n  // is the api entry.\n  for (let i = 0; i < parsedFrames.length - 1; i++) {\n    if (parsedFrames[i].inClient && !parsedFrames[i + 1].inClient) {\n      const frame = parsedFrames[i].frame;\n      apiName = frame.function ? frame.function[0].toLowerCase() + frame.function.slice(1) : '';\n      parsedFrames = parsedFrames.slice(i + 1);\n      break;\n    }\n  }\n\n  return {\n    frames: parsedFrames.map(p => p.frame),\n    frameTexts: parsedFrames.map(p => p.frameText),\n    apiName\n  };\n}\n\nexport function splitErrorMessage(message: string): { name: string, message: string } {\n  const separationIdx = message.indexOf(':');\n  return {\n    name: separationIdx !== -1 ? message.slice(0, separationIdx) : '',\n    message: separationIdx !== -1 && separationIdx + 2 <= message.length ? message.substring(separationIdx + 2) : message,\n  };\n}\n"],"file":"stackTrace.js"}