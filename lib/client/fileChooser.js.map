{"version":3,"sources":["../../src/client/fileChooser.ts"],"names":["FileChooser","constructor","page","elementHandle","isMultiple","_page","_elementHandle","_isMultiple","element","setFiles","files","options","_wrapApiCall","setInputFiles"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQO,MAAMA,WAAN,CAA6C;AAKlDC,EAAAA,WAAW,CAACC,IAAD,EAAaC,aAAb,EAA2CC,UAA3C,EAAgE;AAAA,SAJnEC,KAImE;AAAA,SAHnEC,cAGmE;AAAA,SAFnEC,WAEmE;AACzE,SAAKF,KAAL,GAAaH,IAAb;AACA,SAAKI,cAAL,GAAsBH,aAAtB;AACA,SAAKI,WAAL,GAAmBH,UAAnB;AACD;;AAEDI,EAAAA,OAAO,GAAkB;AACvB,WAAO,KAAKF,cAAZ;AACD;;AAEDF,EAAAA,UAAU,GAAY;AACpB,WAAO,KAAKG,WAAZ;AACD;;AAEDL,EAAAA,IAAI,GAAS;AACX,WAAO,KAAKG,KAAZ;AACD;;AAEa,QAARI,QAAQ,CAACC,KAAD,EAAyDC,OAAzD,EAA+G;AAC3H,WAAO,KAAKN,KAAL,CAAWO,YAAX,CAAwB,YAAY;AACzC,aAAO,KAAKN,cAAL,CAAoBO,aAApB,CAAkCH,KAAlC,EAAyCC,OAAzC,CAAP;AACD,KAFM,CAAP;AAGD;;AA3BiD","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ElementHandle } from './elementHandle';\nimport { Page } from './page';\nimport { FilePayload } from './types';\nimport * as channels from '../protocol/channels';\nimport * as api from '../../types/types';\n\nexport class FileChooser implements api.FileChooser {\n  private _page: Page;\n  private _elementHandle: ElementHandle<Node>;\n  private _isMultiple: boolean;\n\n  constructor(page: Page, elementHandle: ElementHandle, isMultiple: boolean) {\n    this._page = page;\n    this._elementHandle = elementHandle;\n    this._isMultiple = isMultiple;\n  }\n\n  element(): ElementHandle {\n    return this._elementHandle;\n  }\n\n  isMultiple(): boolean {\n    return this._isMultiple;\n  }\n\n  page(): Page {\n    return this._page;\n  }\n\n  async setFiles(files: string | FilePayload | string[] | FilePayload[], options?: channels.ElementHandleSetInputFilesOptions) {\n    return this._page._wrapApiCall(async () => {\n      return this._elementHandle.setInputFiles(files, options);\n    });\n  }\n}\n"],"file":"fileChooser.js"}