{"version":3,"sources":["../../src/client/electron.ts"],"names":["Electron","ChannelOwner","from","electron","_object","constructor","parent","type","guid","initializer","launch","options","_wrapApiCall","channel","params","sdkLanguage","extraHTTPHeaders","env","process","ElectronApplication","electronApplication","_context","_windows","Set","_timeoutSettings","TimeoutSettings","BrowserContext","context","page","_pages","_onPage","on","Events","Page","_channel","emit","Close","add","Window","once","delete","windows","firstWindow","size","values","next","value","waitForEvent","close","event","optionsOrPredicate","timeout","predicate","waiter","Waiter","createForEvent","rejectOnTimeout","rejectOnEvent","Error","result","dispose","browserWindow","JSHandle","handle","evaluate","pageFunction","arg","evaluateExpression","expression","String","isFunction","evaluateHandle","evaluateExpressionHandle"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BrowserWindow } from 'electron';\nimport * as structs from '../../types/structs';\nimport * as api from '../../types/types';\nimport * as channels from '../protocol/channels';\nimport { TimeoutSettings } from '../utils/timeoutSettings';\nimport { headersObjectToArray } from '../utils/utils';\nimport { BrowserContext } from './browserContext';\nimport { ChannelOwner } from './channelOwner';\nimport { envObjectToArray } from './clientHelper';\nimport { Events } from './events';\nimport { JSHandle, parseResult, serializeArgument } from './jsHandle';\nimport { Page } from './page';\nimport { Env, WaitForEventOptions, Headers } from './types';\nimport { Waiter } from './waiter';\n\ntype ElectronOptions = Omit<channels.ElectronLaunchOptions, 'env'|'extraHTTPHeaders'> & {\n  env?: Env,\n  extraHTTPHeaders?: Headers,\n};\n\ntype ElectronAppType = typeof import('electron');\n\nexport class Electron extends ChannelOwner<channels.ElectronChannel, channels.ElectronInitializer> implements api.Electron {\n  static from(electron: channels.ElectronChannel): Electron {\n    return (electron as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.ElectronInitializer) {\n    super(parent, type, guid, initializer);\n  }\n\n  async launch(options: ElectronOptions = {}): Promise<ElectronApplication> {\n    return this._wrapApiCall(async (channel: channels.ElectronChannel) => {\n      const params: channels.ElectronLaunchParams = {\n        sdkLanguage: 'javascript',\n        ...options,\n        extraHTTPHeaders: options.extraHTTPHeaders && headersObjectToArray(options.extraHTTPHeaders),\n        env: envObjectToArray(options.env ? options.env : process.env),\n      };\n      return ElectronApplication.from((await channel.launch(params)).electronApplication);\n    });\n  }\n}\n\nexport class ElectronApplication extends ChannelOwner<channels.ElectronApplicationChannel, channels.ElectronApplicationInitializer> implements api.ElectronApplication {\n  private _context: BrowserContext;\n  private _windows = new Set<Page>();\n  private _timeoutSettings = new TimeoutSettings();\n\n  static from(electronApplication: channels.ElectronApplicationChannel): ElectronApplication {\n    return (electronApplication as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.ElectronApplicationInitializer) {\n    super(parent, type, guid, initializer);\n    this._context = BrowserContext.from(initializer.context);\n    for (const page of this._context._pages)\n      this._onPage(page);\n    this._context.on(Events.BrowserContext.Page, page => this._onPage(page));\n    this._channel.on('close', () => this.emit(Events.ElectronApplication.Close));\n  }\n\n  _onPage(page: Page) {\n    this._windows.add(page);\n    this.emit(Events.ElectronApplication.Window, page);\n    page.once(Events.Page.Close, () => this._windows.delete(page));\n  }\n\n  windows(): Page[] {\n    // TODO: add ElectronPage class inherting from Page.\n    return [...this._windows];\n  }\n\n  async firstWindow(): Promise<Page> {\n    return this._wrapApiCall(async (channel: channels.ElectronApplicationChannel) => {\n      if (this._windows.size)\n        return this._windows.values().next().value;\n      return this.waitForEvent('window');\n    });\n  }\n\n  context(): BrowserContext {\n    return this._context! as BrowserContext;\n  }\n\n  async close() {\n    return this._wrapApiCall(async (channel: channels.ElectronApplicationChannel) => {\n      await channel.close();\n    });\n  }\n\n  async waitForEvent(event: string, optionsOrPredicate: WaitForEventOptions = {}): Promise<any> {\n    return this._wrapApiCall(async (channel: channels.ElectronApplicationChannel) => {\n      const timeout = this._timeoutSettings.timeout(typeof optionsOrPredicate === 'function' ? {} : optionsOrPredicate);\n      const predicate = typeof optionsOrPredicate === 'function' ? optionsOrPredicate : optionsOrPredicate.predicate;\n      const waiter = Waiter.createForEvent(this, event);\n      waiter.rejectOnTimeout(timeout, `Timeout while waiting for event \"${event}\"`);\n      if (event !== Events.ElectronApplication.Close)\n        waiter.rejectOnEvent(this, Events.ElectronApplication.Close, new Error('Electron application closed'));\n      const result = await waiter.waitForEvent(this, event, predicate as any);\n      waiter.dispose();\n      return result;\n    });\n  }\n\n  async browserWindow(page: Page): Promise<JSHandle<BrowserWindow>> {\n    return this._wrapApiCall(async (channel: channels.ElectronApplicationChannel) => {\n      const result = await channel.browserWindow({ page: page._channel });\n      return JSHandle.from(result.handle);\n    });\n  }\n\n  async evaluate<R, Arg>(pageFunction: structs.PageFunctionOn<ElectronAppType, Arg, R>, arg: Arg): Promise<R> {\n    return this._wrapApiCall(async (channel: channels.ElectronApplicationChannel) => {\n      const result = await channel.evaluateExpression({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n      return parseResult(result.value);\n    });\n  }\n\n  async evaluateHandle<R, Arg>(pageFunction: structs.PageFunctionOn<ElectronAppType, Arg, R>, arg: Arg): Promise<structs.SmartHandle<R>> {\n    return this._wrapApiCall(async (channel: channels.ElectronApplicationChannel) => {\n      const result = await channel.evaluateExpressionHandle({ expression: String(pageFunction), isFunction: typeof pageFunction === 'function', arg: serializeArgument(arg) });\n      return JSHandle.from(result.handle) as any as structs.SmartHandle<R>;\n    });\n  }\n}\n"],"file":"electron.js"}