{"version":3,"sources":["../../src/client/clientHelper.ts"],"names":["deprecatedHits","Set","deprecate","methodName","message","has","add","console","warn","envObjectToArray","env","result","name","Object","is","undefined","push","value","String","evaluationScript","fun","arg","addSourceUrl","source","toString","argString","JSON","stringify","Error","content","path","fs","promises","readFile","replace","parsedURL","url","URL","e","urlMatches","baseURL","urlString","match","startsWith","globToRegex","test","pathname","escapeGlobChars","glob","tokens","inGroup","i","length","c","beforeDeep","starCount","afterDeep","isDeep","RegExp","join"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from './types';\nimport fs from 'fs';\nimport { isString, isRegExp, constructURLBasedOnBaseURL } from '../utils/utils';\n\nconst deprecatedHits = new Set();\nexport function deprecate(methodName: string, message: string) {\n  if (deprecatedHits.has(methodName))\n    return;\n  deprecatedHits.add(methodName);\n  console.warn(message);\n}\n\nexport function envObjectToArray(env: types.Env): { name: string, value: string }[] {\n  const result: { name: string, value: string }[] = [];\n  for (const name in env) {\n    if (!Object.is(env[name], undefined))\n      result.push({ name, value: String(env[name]) });\n  }\n  return result;\n}\n\nexport async function evaluationScript(fun: Function | string | { path?: string, content?: string }, arg?: any, addSourceUrl: boolean = true): Promise<string> {\n  if (typeof fun === 'function') {\n    const source = fun.toString();\n    const argString = Object.is(arg, undefined) ? 'undefined' : JSON.stringify(arg);\n    return `(${source})(${argString})`;\n  }\n  if (arg !== undefined)\n    throw new Error('Cannot evaluate a string with arguments');\n  if (isString(fun))\n    return fun;\n  if (fun.content !== undefined)\n    return fun.content;\n  if (fun.path !== undefined) {\n    let source = await fs.promises.readFile(fun.path, 'utf8');\n    if (addSourceUrl)\n      source += '//# sourceURL=' + fun.path.replace(/\\n/g, '');\n    return source;\n  }\n  throw new Error('Either path or content property must be present');\n}\n\nexport function parsedURL(url: string): URL | null {\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function urlMatches(baseURL: string | undefined, urlString: string, match: types.URLMatch | undefined): boolean {\n  if (match === undefined || match === '')\n    return true;\n  if (isString(match) && !match.startsWith('*'))\n    match = constructURLBasedOnBaseURL(baseURL, match);\n  if (isString(match))\n    match = globToRegex(match);\n  if (isRegExp(match))\n    return match.test(urlString);\n  if (typeof match === 'string' && match === urlString)\n    return true;\n  const url = parsedURL(urlString);\n  if (!url)\n    return false;\n  if (typeof match === 'string')\n    return url.pathname === match;\n  if (typeof match !== 'function')\n    throw new Error('url parameter should be string, RegExp or function');\n  return match(url);\n}\n\nconst escapeGlobChars = new Set(['/', '$', '^', '+', '.', '(', ')', '=', '!', '|']);\n\nexport function globToRegex(glob: string): RegExp {\n  const tokens = ['^'];\n  let inGroup;\n  for (let i = 0; i < glob.length; ++i) {\n    const c = glob[i];\n    if (escapeGlobChars.has(c)) {\n      tokens.push('\\\\' + c);\n      continue;\n    }\n    if (c === '*') {\n      const beforeDeep = glob[i - 1];\n      let starCount = 1;\n      while (glob[i + 1] === '*') {\n        starCount++;\n        i++;\n      }\n      const afterDeep = glob[i + 1];\n      const isDeep = starCount > 1 &&\n          (beforeDeep === '/' || beforeDeep === undefined) &&\n          (afterDeep === '/' || afterDeep === undefined);\n      if (isDeep) {\n        tokens.push('((?:[^/]*(?:\\/|$))*)');\n        i++;\n      } else {\n        tokens.push('([^/]*)');\n      }\n      continue;\n    }\n\n    switch (c) {\n      case '?':\n        tokens.push('.');\n        break;\n      case '{':\n        inGroup = true;\n        tokens.push('(');\n        break;\n      case '}':\n        inGroup = false;\n        tokens.push(')');\n        break;\n      case ',':\n        if (inGroup) {\n          tokens.push('|');\n          break;\n        }\n        tokens.push('\\\\' + c);\n        break;\n      default:\n        tokens.push(c);\n    }\n  }\n  tokens.push('$');\n  return new RegExp(tokens.join(''));\n}\n"],"file":"clientHelper.js"}