{"version":3,"sources":["../../src/client/waiter.ts"],"names":["Waiter","constructor","channelOwner","event","_dispose","_failures","_immediateError","_logs","_channel","_waitId","_error","_wrapApiCall","channel","waitForEventInfo","info","waitId","phase","catch","error","createForEvent","waitForEvent","emitter","predicate","promise","dispose","waitForPromise","rejectOnEvent","_rejectOn","then","rejectOnTimeout","timeout","message","waitForTimeout","TimeoutError","rejectImmediately","result","Promise","race","e","formatLogRecording","log","s","push","listener","resolve","reject","eventArg","removeListener","addListener","timeoutId","setTimeout","clearTimeout","length","header","headerLength","leftLength","rightLength","repeat","join"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\nimport { rewriteErrorMessage } from '../utils/stackTrace';\nimport { TimeoutError } from '../utils/errors';\nimport { createGuid } from '../utils/utils';\nimport * as channels from '../protocol/channels';\nimport { ChannelOwner } from './channelOwner';\n\nexport class Waiter {\n  private _dispose: (() => void)[];\n  private _failures: Promise<any>[] = [];\n  private _immediateError?: Error;\n  // TODO: can/should we move these logs into wrapApiCall?\n  private _logs: string[] = [];\n  private _channel: channels.EventTargetChannel;\n  private _waitId: string;\n  private _error: string | undefined;\n\n  constructor(channelOwner: ChannelOwner<channels.EventTargetChannel>, event: string) {\n    this._waitId = createGuid();\n    this._channel = channelOwner._channel;\n    channelOwner._wrapApiCall(async (channel: channels.EventTargetChannel) => {\n      channel.waitForEventInfo({ info: { waitId: this._waitId, phase: 'before', event } }).catch(() => {});\n    });\n    this._dispose = [\n      () => this._channel.waitForEventInfo({ info: { waitId: this._waitId, phase: 'after', error: this._error } }).catch(() => {})\n    ];\n  }\n\n  static createForEvent(channelOwner: ChannelOwner<channels.EventTargetChannel>, event: string) {\n    return new Waiter(channelOwner, event);\n  }\n\n  async waitForEvent<T = void>(emitter: EventEmitter, event: string, predicate?: (arg: T) => boolean | Promise<boolean>): Promise<T> {\n    const { promise, dispose } = waitForEvent(emitter, event, predicate);\n    return this.waitForPromise(promise, dispose);\n  }\n\n  rejectOnEvent<T = void>(emitter: EventEmitter, event: string, error: Error, predicate?: (arg: T) => boolean | Promise<boolean>) {\n    const { promise, dispose } = waitForEvent(emitter, event, predicate);\n    this._rejectOn(promise.then(() => { throw error; }), dispose);\n  }\n\n  rejectOnTimeout(timeout: number, message: string) {\n    if (!timeout)\n      return;\n    const { promise, dispose } = waitForTimeout(timeout);\n    this._rejectOn(promise.then(() => { throw new TimeoutError(message); }), dispose);\n  }\n\n  rejectImmediately(error: Error) {\n    this._immediateError = error;\n  }\n\n  dispose() {\n    for (const dispose of this._dispose)\n      dispose();\n  }\n\n  async waitForPromise<T>(promise: Promise<T>, dispose?: () => void): Promise<T> {\n    try {\n      if (this._immediateError)\n        throw this._immediateError;\n      const result = await Promise.race([promise, ...this._failures]);\n      if (dispose)\n        dispose();\n      return result;\n    } catch (e) {\n      if (dispose)\n        dispose();\n      this._error = e.message;\n      this.dispose();\n      rewriteErrorMessage(e, e.message + formatLogRecording(this._logs));\n      throw e;\n    }\n  }\n\n  log(s: string) {\n    this._logs.push(s);\n    this._channel.waitForEventInfo({ info: { waitId: this._waitId, phase: 'log', message: s } }).catch(() => {});\n  }\n\n  private _rejectOn(promise: Promise<any>, dispose?: () => void) {\n    this._failures.push(promise);\n    if (dispose)\n      this._dispose.push(dispose);\n  }\n}\n\nfunction waitForEvent<T = void>(emitter: EventEmitter, event: string, predicate?: (arg: T) => boolean | Promise<boolean>): { promise: Promise<T>, dispose: () => void } {\n  let listener: (eventArg: any) => void;\n  const promise = new Promise<T>((resolve, reject) => {\n    listener = async (eventArg: any) => {\n      try {\n        if (predicate && !(await predicate(eventArg)))\n          return;\n        emitter.removeListener(event, listener);\n        resolve(eventArg);\n      } catch (e) {\n        emitter.removeListener(event, listener);\n        reject(e);\n      }\n    };\n    emitter.addListener(event, listener);\n  });\n  const dispose = () => emitter.removeListener(event, listener);\n  return { promise, dispose };\n}\n\nfunction waitForTimeout(timeout: number): { promise: Promise<void>, dispose: () => void } {\n  let timeoutId: any;\n  const promise = new Promise<void>(resolve => timeoutId = setTimeout(resolve, timeout));\n  const dispose = () => clearTimeout(timeoutId);\n  return { promise, dispose };\n}\n\nfunction formatLogRecording(log: string[]): string {\n  if (!log.length)\n    return '';\n  const header = ` logs `;\n  const headerLength = 60;\n  const leftLength = (headerLength - header.length) / 2;\n  const rightLength = headerLength - header.length - leftLength;\n  return `\\n${'='.repeat(leftLength)}${header}${'='.repeat(rightLength)}\\n${log.join('\\n')}\\n${'='.repeat(headerLength)}`;\n}\n"],"file":"waiter.js"}