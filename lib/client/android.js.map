{"version":3,"sources":["../../src/client/android.ts"],"names":["Android","ChannelOwner","from","android","_object","constructor","parent","type","guid","initializer","_timeoutSettings","TimeoutSettings","setDefaultTimeout","timeout","_channel","setDefaultTimeoutNoReply","devices","_wrapApiCall","channel","map","d","AndroidDevice","androidDevice","_webViews","Map","input","AndroidInput","on","webView","_onWebViewAdded","pid","_onWebViewRemoved","view","AndroidWebView","set","emit","Events","WebView","get","delete","Close","serial","_initializer","model","webViews","values","selector","options","find","v","pkg","waitForEvent","predicate","wait","toSelectorChannel","fill","text","press","key","tap","drag","dest","fling","direction","longTap","pinchClose","percent","pinchOpen","scroll","swipe","info","screenshot","binary","buffer","Buffer","path","fs","promises","writeFile","close","shell","command","result","open","AndroidSocket","socket","installApk","file","loadFile","args","push","mode","undefined","launchBrowser","contextOptions","context","BrowserContext","event","optionsOrPredicate","waiter","Waiter","createForEvent","rejectOnTimeout","rejectOnEvent","Error","dispose","data","Data","write","toString","readFile","encoding","device","_device","inputType","inputPress","point","inputTap","segments","steps","inputSwipe","to","inputDrag","checkable","checked","clazz","clickable","depth","desc","enabled","focusable","focused","hasChild","hasDescendant","longClickable","res","scrollable","selected","toRegex","value","RegExp","source","replace","maxDepth","EventEmitter","_data","_pagePromise","page","_fetchPage","connectToWebView","sdkLanguage","pages"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport { isString } from '../utils/utils';\nimport * as channels from '../protocol/channels';\nimport { Events } from './events';\nimport { BrowserContext, prepareBrowserContextParams } from './browserContext';\nimport { ChannelOwner } from './channelOwner';\nimport * as api from '../../types/types';\nimport * as types from './types';\nimport { Page } from './page';\nimport { TimeoutSettings } from '../utils/timeoutSettings';\nimport { Waiter } from './waiter';\nimport { EventEmitter } from 'events';\n\ntype Direction = 'down' | 'up' | 'left' | 'right';\ntype SpeedOptions = { speed?: number };\n\nexport class Android extends ChannelOwner<channels.AndroidChannel, channels.AndroidInitializer> implements api.Android {\n  readonly _timeoutSettings: TimeoutSettings;\n\n  static from(android: channels.AndroidChannel): Android {\n    return (android as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.AndroidInitializer) {\n    super(parent, type, guid, initializer);\n    this._timeoutSettings = new TimeoutSettings();\n  }\n\n  setDefaultTimeout(timeout: number) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n    this._channel.setDefaultTimeoutNoReply({ timeout });\n  }\n\n  async devices(): Promise<AndroidDevice[]> {\n    return this._wrapApiCall(async (channel: channels.AndroidChannel) => {\n      const { devices } = await channel.devices();\n      return devices.map(d => AndroidDevice.from(d));\n    });\n  }\n}\n\nexport class AndroidDevice extends ChannelOwner<channels.AndroidDeviceChannel, channels.AndroidDeviceInitializer> implements api.AndroidDevice {\n  readonly _timeoutSettings: TimeoutSettings;\n  private _webViews = new Map<number, AndroidWebView>();\n\n  static from(androidDevice: channels.AndroidDeviceChannel): AndroidDevice {\n    return (androidDevice as any)._object;\n  }\n\n  input: AndroidInput;\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.AndroidDeviceInitializer) {\n    super(parent, type, guid, initializer);\n    this.input = new AndroidInput(this);\n    this._timeoutSettings = new TimeoutSettings((parent as Android)._timeoutSettings);\n    this._channel.on('webViewAdded', ({ webView }) => this._onWebViewAdded(webView));\n    this._channel.on('webViewRemoved', ({ pid }) => this._onWebViewRemoved(pid));\n  }\n\n  private _onWebViewAdded(webView: channels.AndroidWebView) {\n    const view = new AndroidWebView(this, webView);\n    this._webViews.set(webView.pid, view);\n    this.emit(Events.AndroidDevice.WebView, view);\n  }\n\n  private _onWebViewRemoved(pid: number) {\n    const view = this._webViews.get(pid);\n    this._webViews.delete(pid);\n    if (view)\n      view.emit(Events.AndroidWebView.Close);\n  }\n\n  setDefaultTimeout(timeout: number) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n    this._channel.setDefaultTimeoutNoReply({ timeout });\n  }\n\n  serial(): string {\n    return this._initializer.serial;\n  }\n\n  model(): string {\n    return this._initializer.model;\n  }\n\n  webViews(): AndroidWebView[] {\n    return [...this._webViews.values()];\n  }\n\n  async webView(selector: { pkg: string }, options?: types.TimeoutOptions): Promise<AndroidWebView> {\n    const webView = [...this._webViews.values()].find(v => v.pkg() === selector.pkg);\n    if (webView)\n      return webView;\n    return this.waitForEvent('webview', {\n      ...options,\n      predicate: (view: AndroidWebView) => view.pkg() === selector.pkg\n    });\n  }\n\n  async wait(selector: api.AndroidSelector, options?: { state?: 'gone' } & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.wait({ selector: toSelectorChannel(selector), ...options });\n    });\n  }\n\n  async fill(selector: api.AndroidSelector, text: string, options?: types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.fill({ selector: toSelectorChannel(selector), text, ...options });\n    });\n  }\n\n  async press(selector: api.AndroidSelector, key: api.AndroidKey, options?: types.TimeoutOptions) {\n    await this.tap(selector, options);\n    await this.input.press(key);\n  }\n\n  async tap(selector: api.AndroidSelector, options?: { duration?: number } & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.tap({ selector: toSelectorChannel(selector), ...options });\n    });\n  }\n\n  async drag(selector: api.AndroidSelector, dest: types.Point, options?: SpeedOptions & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.drag({ selector: toSelectorChannel(selector), dest, ...options });\n    });\n  }\n\n  async fling(selector: api.AndroidSelector, direction: Direction, options?: SpeedOptions & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.fling({ selector: toSelectorChannel(selector), direction, ...options });\n    });\n  }\n\n  async longTap(selector: api.AndroidSelector, options?: types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.longTap({ selector: toSelectorChannel(selector), ...options });\n    });\n  }\n\n  async pinchClose(selector: api.AndroidSelector, percent: number, options?: SpeedOptions & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.pinchClose({ selector: toSelectorChannel(selector), percent, ...options });\n    });\n  }\n\n  async pinchOpen(selector: api.AndroidSelector, percent: number, options?: SpeedOptions & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.pinchOpen({ selector: toSelectorChannel(selector), percent, ...options });\n    });\n  }\n\n  async scroll(selector: api.AndroidSelector, direction: Direction, percent: number, options?: SpeedOptions & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.scroll({ selector: toSelectorChannel(selector), direction, percent, ...options });\n    });\n  }\n\n  async swipe(selector: api.AndroidSelector, direction: Direction, percent: number, options?: SpeedOptions & types.TimeoutOptions) {\n    await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.swipe({ selector: toSelectorChannel(selector), direction, percent, ...options });\n    });\n  }\n\n  async info(selector: api.AndroidSelector): Promise<api.AndroidElementInfo> {\n    return await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      return (await channel.info({ selector: toSelectorChannel(selector) })).info;\n    });\n  }\n\n  async screenshot(options: { path?: string } = {}): Promise<Buffer> {\n    return await this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      const { binary } = await channel.screenshot();\n      const buffer = Buffer.from(binary, 'base64');\n      if (options.path)\n        await fs.promises.writeFile(options.path, buffer);\n      return buffer;\n    });\n  }\n\n  async close() {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.close();\n      this.emit(Events.AndroidDevice.Close);\n    });\n  }\n\n  async shell(command: string): Promise<Buffer> {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      const { result } = await channel.shell({ command });\n      return Buffer.from(result, 'base64');\n    });\n  }\n\n  async open(command: string): Promise<AndroidSocket> {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      return AndroidSocket.from((await channel.open({ command })).socket);\n    });\n  }\n\n  async installApk(file: string | Buffer, options?: { args: string[] }): Promise<void> {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.installApk({ file: await loadFile(file), args: options && options.args });\n    });\n  }\n\n  async push(file: string | Buffer, path: string, options?: { mode: number }): Promise<void> {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.push({ file: await loadFile(file), path, mode: options ? options.mode : undefined });\n    });\n  }\n\n  async launchBrowser(options: types.BrowserContextOptions & { pkg?: string  } = {}): Promise<BrowserContext> {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      const contextOptions = await prepareBrowserContextParams(options);\n      const { context } = await channel.launchBrowser(contextOptions);\n      return BrowserContext.from(context) as BrowserContext;\n    });\n  }\n\n  async waitForEvent(event: string, optionsOrPredicate: types.WaitForEventOptions = {}): Promise<any> {\n    return this._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      const timeout = this._timeoutSettings.timeout(typeof optionsOrPredicate === 'function' ? {} : optionsOrPredicate);\n      const predicate = typeof optionsOrPredicate === 'function' ? optionsOrPredicate : optionsOrPredicate.predicate;\n      const waiter = Waiter.createForEvent(this, event);\n      waiter.rejectOnTimeout(timeout, `Timeout while waiting for event \"${event}\"`);\n      if (event !== Events.AndroidDevice.Close)\n        waiter.rejectOnEvent(this, Events.AndroidDevice.Close, new Error('Device closed'));\n      const result = await waiter.waitForEvent(this, event, predicate as any);\n      waiter.dispose();\n      return result;\n    });\n  }\n}\n\nexport class AndroidSocket extends ChannelOwner<channels.AndroidSocketChannel, channels.AndroidSocketInitializer> implements api.AndroidSocket {\n  static from(androidDevice: channels.AndroidSocketChannel): AndroidSocket {\n    return (androidDevice as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.AndroidSocketInitializer) {\n    super(parent, type, guid, initializer);\n    this._channel.on('data', ({ data }) => this.emit(Events.AndroidSocket.Data, Buffer.from(data, 'base64')));\n    this._channel.on('close', () => this.emit(Events.AndroidSocket.Close));\n  }\n\n  async write(data: Buffer): Promise<void> {\n    return this._wrapApiCall(async (channel: channels.AndroidSocketChannel) => {\n      await channel.write({ data: data.toString('base64') });\n    });\n  }\n\n  async close(): Promise<void> {\n    return this._wrapApiCall(async (channel: channels.AndroidSocketChannel) => {\n      await channel.close();\n    });\n  }\n}\n\nasync function loadFile(file: string | Buffer): Promise<string> {\n  if (isString(file))\n    return fs.promises.readFile(file, { encoding: 'base64' }).toString();\n  return file.toString('base64');\n}\n\nexport class AndroidInput implements api.AndroidInput {\n  private _device: AndroidDevice;\n\n  constructor(device: AndroidDevice) {\n    this._device = device;\n  }\n\n  async type(text: string) {\n    return this._device._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.inputType({ text });\n    });\n  }\n\n  async press(key: api.AndroidKey) {\n    return this._device._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.inputPress({ key });\n    });\n  }\n\n  async tap(point: types.Point) {\n    return this._device._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.inputTap({ point });\n    });\n  }\n\n  async swipe(from: types.Point, segments: types.Point[], steps: number) {\n    return this._device._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.inputSwipe({ segments, steps });\n    });\n  }\n\n  async drag(from: types.Point, to: types.Point, steps: number) {\n    return this._device._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      await channel.inputDrag({ from, to, steps });\n    });\n  }\n}\n\nfunction toSelectorChannel(selector: api.AndroidSelector): channels.AndroidSelector {\n  const {\n    checkable,\n    checked,\n    clazz,\n    clickable,\n    depth,\n    desc,\n    enabled,\n    focusable,\n    focused,\n    hasChild,\n    hasDescendant,\n    longClickable,\n    pkg,\n    res,\n    scrollable,\n    selected,\n    text,\n  } = selector;\n\n  const toRegex = (value: RegExp | string | undefined): string | undefined => {\n    if (value === undefined)\n      return undefined;\n    if (value instanceof RegExp)\n      return value.source;\n    return '^' + value.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d') + '$';\n  };\n\n  return {\n    checkable,\n    checked,\n    clazz: toRegex(clazz),\n    pkg: toRegex(pkg),\n    desc: toRegex(desc),\n    res: toRegex(res),\n    text: toRegex(text),\n    clickable,\n    depth,\n    enabled,\n    focusable,\n    focused,\n    hasChild: hasChild ? { selector: toSelectorChannel(hasChild.selector) } : undefined,\n    hasDescendant: hasDescendant ? { selector: toSelectorChannel(hasDescendant.selector), maxDepth: hasDescendant.maxDepth} : undefined,\n    longClickable,\n    scrollable,\n    selected,\n  };\n}\n\nexport class AndroidWebView extends EventEmitter implements api.AndroidWebView {\n  private _device: AndroidDevice;\n  private _data: channels.AndroidWebView;\n  private _pagePromise: Promise<Page> | undefined;\n\n  constructor(device: AndroidDevice, data: channels.AndroidWebView) {\n    super();\n    this._device = device;\n    this._data = data;\n  }\n\n  pid(): number {\n    return this._data.pid;\n  }\n\n  pkg(): string {\n    return this._data.pkg;\n  }\n\n  async page(): Promise<Page> {\n    if (!this._pagePromise)\n      this._pagePromise = this._fetchPage();\n    return this._pagePromise;\n  }\n\n  private async _fetchPage(): Promise<Page> {\n    return this._device._wrapApiCall(async (channel: channels.AndroidDeviceChannel) => {\n      const { context } = await channel.connectToWebView({ pid: this._data.pid, sdkLanguage: 'javascript' });\n      return BrowserContext.from(context).pages()[0];\n    });\n  }\n}\n"],"file":"android.js"}