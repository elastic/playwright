{"version":3,"sources":["../../src/client/browserType.ts"],"names":["BrowserType","ChannelOwner","from","browserType","_object","constructor","parent","type","guid","initializer","_timeoutSettings","TimeoutSettings","_serverLauncher","_contexts","Set","_defaultContextOptions","_defaultLaunchOptions","_onDidCreateContext","_onWillCloseContext","executablePath","_initializer","Error","name","launch","options","logger","_wrapApiCall","channel","userDataDir","port","launchOptions","ignoreDefaultArgs","Array","isArray","undefined","ignoreAllDefaultArgs","env","browser","Browser","_logger","_setBrowserType","launchServer","launchPersistentContext","contextParams","persistentParams","result","context","BrowserContext","_options","connect","optionsOrWsEndpoint","_connect","wsEndpoint","params","paramsHeaders","Object","assign","headers","ws","WebSocket","perMessageDeflate","maxPayload","handshakeTimeout","timeout","connection","Connection","close","waitForNextTask","slowMo","cb","setTimeout","onmessage","message","readyState","OPEN","send","JSON","stringify","addEventListener","event","isDisconnected","dispatch","parse","data","e","console","error","timeoutCallback","timeoutPromise","Promise","f","r","timer","successPromise","fulfill","reject","__testHookBeforeCreateBrowser","prematureCloseListener","code","reason","playwright","initializePlaywright","preLaunchedBrowser","_remoteType","_name","closeListener","contexts","page","pages","_onClose","_didClose","didDisconnect","kBrowserClosedError","removeEventListener","on","Events","Disconnected","_cleanup","_forwardPorts","_enablePortForwarding","err","race","clearTimeout","connectOverCDP","endpointURLOrOptions","_connectOverCDP","endpointURL","sdkLanguage","defaultContext","add"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as channels from '../protocol/channels';\nimport { Browser } from './browser';\nimport { BrowserContext, prepareBrowserContextParams } from './browserContext';\nimport { ChannelOwner } from './channelOwner';\nimport { LaunchOptions, LaunchServerOptions, ConnectOptions, LaunchPersistentContextOptions, BrowserContextOptions } from './types';\nimport WebSocket from 'ws';\nimport { Connection } from './connection';\nimport { Events } from './events';\nimport { TimeoutSettings } from '../utils/timeoutSettings';\nimport { ChildProcess } from 'child_process';\nimport { envObjectToArray } from './clientHelper';\nimport { assert, headersObjectToArray, makeWaitForNextTask, getUserAgent } from '../utils/utils';\nimport { kBrowserClosedError } from '../utils/errors';\nimport * as api from '../../types/types';\n\nexport interface BrowserServerLauncher {\n  launchServer(options?: LaunchServerOptions): Promise<api.BrowserServer>;\n}\n\n// This is here just for api generation and checking.\nexport interface BrowserServer extends api.BrowserServer {\n  process(): ChildProcess;\n  wsEndpoint(): string;\n  close(): Promise<void>;\n  kill(): Promise<void>;\n}\n\nexport class BrowserType extends ChannelOwner<channels.BrowserTypeChannel, channels.BrowserTypeInitializer> implements api.BrowserType {\n  private _timeoutSettings = new TimeoutSettings();\n  _serverLauncher?: BrowserServerLauncher;\n  _contexts = new Set<BrowserContext>();\n\n  // Instrumentation.\n  _defaultContextOptions: BrowserContextOptions = {};\n  _defaultLaunchOptions: LaunchOptions = {};\n  _onDidCreateContext?: (context: BrowserContext) => Promise<void>;\n  _onWillCloseContext?: (context: BrowserContext) => Promise<void>;\n\n  static from(browserType: channels.BrowserTypeChannel): BrowserType {\n    return (browserType as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.BrowserTypeInitializer) {\n    super(parent, type, guid, initializer);\n  }\n\n  executablePath(): string {\n    if (!this._initializer.executablePath)\n      throw new Error('Browser is not supported on current platform');\n    return this._initializer.executablePath;\n  }\n\n  name(): string {\n    return this._initializer.name;\n  }\n\n  async launch(options: LaunchOptions = {}): Promise<Browser> {\n    const logger = options.logger;\n    return this._wrapApiCall(async (channel: channels.BrowserTypeChannel) => {\n      assert(!(options as any).userDataDir, 'userDataDir option is not supported in `browserType.launch`. Use `browserType.launchPersistentContext` instead');\n      assert(!(options as any).port, 'Cannot specify a port without launching as a server.');\n      options = { ...this._defaultLaunchOptions, ...options };\n      const launchOptions: channels.BrowserTypeLaunchParams = {\n        ...options,\n        ignoreDefaultArgs: Array.isArray(options.ignoreDefaultArgs) ? options.ignoreDefaultArgs : undefined,\n        ignoreAllDefaultArgs: !!options.ignoreDefaultArgs && !Array.isArray(options.ignoreDefaultArgs),\n        env: options.env ? envObjectToArray(options.env) : undefined,\n      };\n      const browser = Browser.from((await channel.launch(launchOptions)).browser);\n      browser._logger = logger;\n      browser._setBrowserType(this);\n      return browser;\n    }, logger);\n  }\n\n  async launchServer(options: LaunchServerOptions = {}): Promise<api.BrowserServer> {\n    if (!this._serverLauncher)\n      throw new Error('Launching server is not supported');\n    return this._serverLauncher.launchServer(options);\n  }\n\n  async launchPersistentContext(userDataDir: string, options: LaunchPersistentContextOptions = {}): Promise<BrowserContext> {\n    return this._wrapApiCall(async (channel: channels.BrowserTypeChannel) => {\n      assert(!(options as any).port, 'Cannot specify a port without launching as a server.');\n      options = { ...this._defaultLaunchOptions, ...this._defaultContextOptions, ...options };\n      const contextParams = await prepareBrowserContextParams(options);\n      const persistentParams: channels.BrowserTypeLaunchPersistentContextParams = {\n        ...contextParams,\n        ignoreDefaultArgs: Array.isArray(options.ignoreDefaultArgs) ? options.ignoreDefaultArgs : undefined,\n        ignoreAllDefaultArgs: !!options.ignoreDefaultArgs && !Array.isArray(options.ignoreDefaultArgs),\n        env: options.env ? envObjectToArray(options.env) : undefined,\n        channel: options.channel,\n        userDataDir,\n      };\n      const result = await channel.launchPersistentContext(persistentParams);\n      const context = BrowserContext.from(result.context);\n      context._options = contextParams;\n      context._logger = options.logger;\n      context._setBrowserType(this);\n      await this._onDidCreateContext?.(context);\n      return context;\n    }, options.logger);\n  }\n\n  connect(options: api.ConnectOptions & { wsEndpoint?: string }): Promise<api.Browser>;\n  connect(wsEndpoint: string, options?: api.ConnectOptions): Promise<api.Browser>;\n  async connect(optionsOrWsEndpoint: string|(api.ConnectOptions & { wsEndpoint?: string }), options?: api.ConnectOptions): Promise<Browser>{\n    if (typeof optionsOrWsEndpoint === 'string')\n      return this._connect(optionsOrWsEndpoint, options);\n    assert(optionsOrWsEndpoint.wsEndpoint, 'options.wsEndpoint is required');\n    return this._connect(optionsOrWsEndpoint.wsEndpoint, optionsOrWsEndpoint);\n  }\n  async _connect(wsEndpoint: string, params: Partial<ConnectOptions> = {}): Promise<Browser> {\n    const logger = params.logger;\n    const paramsHeaders = Object.assign({'User-Agent': getUserAgent()}, params.headers);\n    return this._wrapApiCall(async () => {\n      const ws = new WebSocket(wsEndpoint, [], {\n        perMessageDeflate: false,\n        maxPayload: 256 * 1024 * 1024, // 256Mb,\n        handshakeTimeout: this._timeoutSettings.timeout(params),\n        headers: paramsHeaders,\n      });\n      const connection = new Connection(() => ws.close());\n\n      // The 'ws' module in node sometimes sends us multiple messages in a single task.\n      const waitForNextTask = params.slowMo\n        ? (cb: () => any) => setTimeout(cb, params.slowMo)\n        : makeWaitForNextTask();\n      connection.onmessage = message => {\n        // Connection should handle all outgoing message in disconnected().\n        if (ws.readyState !== WebSocket.OPEN)\n          return;\n        ws.send(JSON.stringify(message));\n      };\n      ws.addEventListener('message', event => {\n        waitForNextTask(() => {\n          try {\n            // Since we may slow down the messages, but disconnect\n            // synchronously, we might come here with a message\n            // after disconnect.\n            if (!connection.isDisconnected())\n              connection.dispatch(JSON.parse(event.data));\n          } catch (e) {\n            console.error(`Playwright: Connection dispatch error`);\n            console.error(e);\n            ws.close();\n          }\n        });\n      });\n\n      let timeoutCallback = (e: Error) => {};\n      const timeoutPromise = new Promise<Browser>((f, r) => timeoutCallback = r);\n      const timer = params.timeout ? setTimeout(() => timeoutCallback(new Error(`Timeout ${params.timeout}ms exceeded.`)), params.timeout) : undefined;\n\n      const successPromise = new Promise<Browser>(async (fulfill, reject) => {\n        if ((params as any).__testHookBeforeCreateBrowser) {\n          try {\n            await (params as any).__testHookBeforeCreateBrowser();\n          } catch (e) {\n            reject(e);\n          }\n        }\n        ws.addEventListener('open', async () => {\n          const prematureCloseListener = (event: { code: number, reason: string }) => {\n            reject(new Error(`WebSocket server disconnected (${event.code}) ${event.reason}`));\n          };\n          ws.addEventListener('close', prematureCloseListener);\n          const playwright = await connection.initializePlaywright();\n\n          if (!playwright._initializer.preLaunchedBrowser) {\n            reject(new Error('Malformed endpoint. Did you use launchServer method?'));\n            ws.close();\n            return;\n          }\n\n          const browser = Browser.from(playwright._initializer.preLaunchedBrowser!);\n          browser._logger = logger;\n          browser._remoteType = 'owns-connection';\n          browser._setBrowserType((playwright as any)[browser._name]);\n          const closeListener = () => {\n            // Emulate all pages, contexts and the browser closing upon disconnect.\n            for (const context of browser.contexts()) {\n              for (const page of context.pages())\n                page._onClose();\n              context._onClose();\n            }\n            browser._didClose();\n            connection.didDisconnect(kBrowserClosedError);\n          };\n          ws.removeEventListener('close', prematureCloseListener);\n          ws.addEventListener('close', closeListener);\n          browser.on(Events.Browser.Disconnected, () => {\n            playwright._cleanup();\n            ws.removeEventListener('close', closeListener);\n            ws.close();\n          });\n          if (params._forwardPorts) {\n            try {\n              await playwright._enablePortForwarding(params._forwardPorts);\n            } catch (err) {\n              reject(err);\n              return;\n            }\n          }\n          fulfill(browser);\n        });\n        ws.addEventListener('error', event => {\n          ws.close();\n          reject(new Error(event.message + '. Most likely ws endpoint is incorrect'));\n        });\n      });\n\n      try {\n        return await Promise.race([successPromise, timeoutPromise]);\n      } finally {\n        if (timer)\n          clearTimeout(timer);\n      }\n    }, logger);\n  }\n\n  connectOverCDP(options: api.ConnectOverCDPOptions  & { wsEndpoint?: string }): Promise<api.Browser>;\n  connectOverCDP(endpointURL: string, options?: api.ConnectOverCDPOptions): Promise<api.Browser>;\n  connectOverCDP(endpointURLOrOptions: (api.ConnectOverCDPOptions & { wsEndpoint?: string })|string, options?: api.ConnectOverCDPOptions) {\n    if (typeof endpointURLOrOptions === 'string')\n      return this._connectOverCDP(endpointURLOrOptions, options);\n    const endpointURL = 'endpointURL' in endpointURLOrOptions ? endpointURLOrOptions.endpointURL : endpointURLOrOptions.wsEndpoint;\n    assert(endpointURL, 'Cannot connect over CDP without wsEndpoint.');\n    return this.connectOverCDP(endpointURL, endpointURLOrOptions);\n  }\n\n  async _connectOverCDP(endpointURL: string, params: api.ConnectOverCDPOptions = {}): Promise<Browser>  {\n    if (this.name() !== 'chromium')\n      throw new Error('Connecting over CDP is only supported in Chromium.');\n    const logger = params.logger;\n    return this._wrapApiCall(async (channel: channels.BrowserTypeChannel) => {\n      const paramsHeaders = Object.assign({'User-Agent': getUserAgent()}, params.headers);\n      const headers = paramsHeaders ? headersObjectToArray(paramsHeaders) : undefined;\n      const result = await channel.connectOverCDP({\n        sdkLanguage: 'javascript',\n        endpointURL,\n        headers,\n        slowMo: params.slowMo,\n        timeout: params.timeout\n      });\n      const browser = Browser.from(result.browser);\n      if (result.defaultContext)\n        browser._contexts.add(BrowserContext.from(result.defaultContext));\n      browser._remoteType = 'uses-connection';\n      browser._logger = logger;\n      browser._setBrowserType(this);\n      return browser;\n    }, logger);\n  }\n}\n"],"file":"browserType.js"}