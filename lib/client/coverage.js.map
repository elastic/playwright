{"version":3,"sources":["../../src/client/coverage.ts"],"names":["Coverage","constructor","channel","_channel","startJSCoverage","options","stopJSCoverage","entries","startCSSCoverage","stopCSSCoverage"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKO,MAAMA,QAAN,CAAuC;AAG5CC,EAAAA,WAAW,CAACC,OAAD,EAAgC;AAAA,SAFnCC,QAEmC;AACzC,SAAKA,QAAL,GAAgBD,OAAhB;AACD;;AAEoB,QAAfE,eAAe,CAACC,OAA4C,GAAG,EAAhD,EAAoD;AACvE,UAAM,KAAKF,QAAL,CAAcC,eAAd,CAA8BC,OAA9B,CAAN;AACD;;AAEmB,QAAdC,cAAc,GAA0D;AAC5E,WAAO,CAAC,MAAM,KAAKH,QAAL,CAAcG,cAAd,EAAP,EAAuCC,OAA9C;AACD;;AAEqB,QAAhBC,gBAAgB,CAACH,OAA6C,GAAG,EAAjD,EAAqD;AACzE,UAAM,KAAKF,QAAL,CAAcK,gBAAd,CAA+BH,OAA/B,CAAN;AACD;;AAEoB,QAAfI,eAAe,GAA2D;AAC9E,WAAO,CAAC,MAAM,KAAKN,QAAL,CAAcM,eAAd,EAAP,EAAwCF,OAA/C;AACD;;AArB2C","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as channels from '../protocol/channels';\nimport * as api from '../../types/types';\n\nexport class Coverage implements api.Coverage {\n  private _channel: channels.PageChannel;\n\n  constructor(channel: channels.PageChannel) {\n    this._channel = channel;\n  }\n\n  async startJSCoverage(options: channels.PageStartJSCoverageOptions = {}) {\n    await this._channel.startJSCoverage(options);\n  }\n\n  async stopJSCoverage(): Promise<channels.PageStopJSCoverageResult['entries']> {\n    return (await this._channel.stopJSCoverage()).entries;\n  }\n\n  async startCSSCoverage(options: channels.PageStartCSSCoverageOptions = {}) {\n    await this._channel.startCSSCoverage(options);\n  }\n\n  async stopCSSCoverage(): Promise<channels.PageStopCSSCoverageResult['entries']> {\n    return (await this._channel.stopCSSCoverage()).entries;\n  }\n}\n"],"file":"coverage.js"}