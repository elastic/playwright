{"version":3,"sources":["../../src/client/dialog.ts"],"names":["Dialog","ChannelOwner","from","dialog","_object","constructor","parent","type","guid","initializer","_initializer","message","defaultValue","accept","promptText","_wrapApiCall","channel","dismiss"],"mappings":";;;;;;;AAiBA;;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMO,MAAMA,MAAN,SAAqBC,0BAArB,CAA4G;AACtG,SAAJC,IAAI,CAACC,MAAD,EAAyC;AAClD,WAAQA,MAAD,CAAgBC,OAAvB;AACD;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAuBC,IAAvB,EAAqCC,IAArC,EAAmDC,WAAnD,EAA4F;AACrG,UAAMH,MAAN,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,WAA1B;AACD;;AAEDF,EAAAA,IAAI,GAAW;AACb,WAAO,KAAKG,YAAL,CAAkBH,IAAzB;AACD;;AAEDI,EAAAA,OAAO,GAAW;AAChB,WAAO,KAAKD,YAAL,CAAkBC,OAAzB;AACD;;AAEDC,EAAAA,YAAY,GAAW;AACrB,WAAO,KAAKF,YAAL,CAAkBE,YAAzB;AACD;;AAEW,QAANC,MAAM,CAACC,UAAD,EAAiC;AAC3C,WAAO,KAAKC,YAAL,CAAkB,MAAOC,OAAP,IAA2C;AAClE,YAAMA,OAAO,CAACH,MAAR,CAAe;AAAEC,QAAAA;AAAF,OAAf,CAAN;AACD,KAFM,CAAP;AAGD;;AAEY,QAAPG,OAAO,GAAG;AACd,WAAO,KAAKF,YAAL,CAAkB,MAAOC,OAAP,IAA2C;AAClE,YAAMA,OAAO,CAACC,OAAR,EAAN;AACD,KAFM,CAAP;AAGD;;AA/BgH","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as channels from '../protocol/channels';\nimport { ChannelOwner } from './channelOwner';\nimport * as api from '../../types/types';\n\nexport class Dialog extends ChannelOwner<channels.DialogChannel, channels.DialogInitializer> implements api.Dialog {\n  static from(dialog: channels.DialogChannel): Dialog {\n    return (dialog as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.DialogInitializer) {\n    super(parent, type, guid, initializer);\n  }\n\n  type(): string {\n    return this._initializer.type;\n  }\n\n  message(): string {\n    return this._initializer.message;\n  }\n\n  defaultValue(): string {\n    return this._initializer.defaultValue;\n  }\n\n  async accept(promptText: string | undefined) {\n    return this._wrapApiCall(async (channel: channels.DialogChannel) => {\n      await channel.accept({ promptText });\n    });\n  }\n\n  async dismiss() {\n    return this._wrapApiCall(async (channel: channels.DialogChannel) => {\n      await channel.dismiss();\n    });\n  }\n}\n"],"file":"dialog.js"}