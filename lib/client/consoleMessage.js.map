{"version":3,"sources":["../../src/client/consoleMessage.ts"],"names":["ConsoleMessage","ChannelOwner","from","message","_object","constructor","parent","type","guid","initializer","_initializer","text","args","map","JSHandle","location","util","inspect","custom"],"mappings":";;;;;;;AAgBA;;AACA;;AAEA;;;;;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUO,MAAMA,cAAN,SAA6BC,0BAA7B,CAA4I;AACtI,SAAJC,IAAI,CAACC,OAAD,EAA0D;AACnE,WAAQA,OAAD,CAAiBC,OAAxB;AACD;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAuBC,IAAvB,EAAqCC,IAArC,EAAmDC,WAAnD,EAAoG;AAC7G,UAAMH,MAAN,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,WAA1B;AACD;;AAEDF,EAAAA,IAAI,GAAW;AACb,WAAO,KAAKG,YAAL,CAAkBH,IAAzB;AACD;;AAEDI,EAAAA,IAAI,GAAW;AACb,WAAO,KAAKD,YAAL,CAAkBC,IAAzB;AACD;;AAEDC,EAAAA,IAAI,GAAe;AACjB,WAAO,KAAKF,YAAL,CAAkBE,IAAlB,CAAuBC,GAAvB,CAA2BC,mBAASZ,IAApC,CAAP;AACD;;AAEDa,EAAAA,QAAQ,GAA2B;AACjC,WAAO,KAAKL,YAAL,CAAkBK,QAAzB;AACD;;AAE4B,GAA3BC,IAAI,CAACC,OAAN,CAAsBC,MAAM,IAAI;AAC/B,WAAO,KAAKP,IAAL,EAAP;AACD;;AA3BgJ","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as util from 'util';\nimport { JSHandle } from './jsHandle';\nimport * as channels from '../protocol/channels';\nimport { ChannelOwner } from './channelOwner';\nimport * as api from '../../types/types';\n\ntype ConsoleMessageLocation = channels.ConsoleMessageInitializer['location'];\n\nexport class ConsoleMessage extends ChannelOwner<channels.ConsoleMessageChannel, channels.ConsoleMessageInitializer> implements api.ConsoleMessage {\n  static from(message: channels.ConsoleMessageChannel): ConsoleMessage {\n    return (message as any)._object;\n  }\n\n  constructor(parent: ChannelOwner, type: string, guid: string, initializer: channels.ConsoleMessageInitializer) {\n    super(parent, type, guid, initializer);\n  }\n\n  type(): string {\n    return this._initializer.type;\n  }\n\n  text(): string {\n    return this._initializer.text;\n  }\n\n  args(): JSHandle[] {\n    return this._initializer.args.map(JSHandle.from);\n  }\n\n  location(): ConsoleMessageLocation {\n    return this._initializer.location;\n  }\n\n  [(util.inspect as any).custom]() {\n    return this.text();\n  }\n}\n"],"file":"consoleMessage.js"}