{"version":3,"sources":["../../src/protocol/channels.ts"],"names":["commandsWithTracingSnapshots","Set"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA0IA;AAeA;AA2CA;AAeA;AAmOA;AAuKA;AAmBA;AAoQA;AAoaA;AAomBA;AAiCA;AAgEA;AAqZA;AAuBA;AAgEA;AAwDA;AAyBA;AAcA;AA0BA;AAqBA;AA+CA;AAmBA;AAyBA;AAkFA;AA+CA;AAmBA;AAuBA;AA8YA;AAsCO,MAAMA,4BAA4B,GAAG,IAAIC,GAAJ,CAAQ,CAClD,8BADkD,EAElD,iCAFkD,EAGlD,uBAHkD,EAIlD,4BAJkD,EAKlD,sCALkD,EAMlD,gCANkD,EAOlD,aAPkD,EAQlD,gBARkD,EASlD,aATkD,EAUlD,sBAVkD,EAWlD,mBAXkD,EAYlD,iBAZkD,EAalD,yBAbkD,EAclD,mBAdkD,EAelD,oBAfkD,EAgBlD,gBAhBkD,EAiBlD,gBAjBkD,EAkBlD,cAlBkD,EAmBlD,iBAnBkD,EAoBlD,qBApBkD,EAqBlD,sBArBkD,EAsBlD,yBAtBkD,EAuBlD,oBAvBkD,EAwBlD,mBAxBkD,EAyBlD,aAzBkD,EA0BlD,aA1BkD,EA2BlD,gBA3BkD,EA4BlD,qBA5BkD,EA6BlD,0BA7BkD,EA8BlD,gCA9BkD,EA+BlD,YA/BkD,EAgClD,aAhCkD,EAiClD,oBAjCkD,EAkClD,YAlCkD,EAmClD,aAnCkD,EAoClD,iBApCkD,EAqClD,iBArCkD,EAsClD,kBAtCkD,EAuClD,iBAvCkD,EAwClD,kBAxCkD,EAyClD,iBAzCkD,EA0ClD,gBA1CkD,EA2ClD,kBA3CkD,EA4ClD,aA5CkD,EA6ClD,oBA7CkD,EA8ClD,kBA9CkD,EA+ClD,qBA/CkD,EAgDlD,WAhDkD,EAiDlD,mBAjDkD,EAkDlD,YAlDkD,EAmDlD,eAnDkD,EAoDlD,uBApDkD,EAqDlD,uBArDkD,EAsDlD,6BAtDkD,EAuDlD,kCAvDkD,EAwDlD,mCAxDkD,EAyDlD,wCAzDkD,EA0DlD,8BA1DkD,EA2DlD,iCA3DkD,EA4DlD,qBA5DkD,EA6DlD,qBA7DkD,EA8DlD,wBA9DkD,EA+DlD,6BA/DkD,EAgElD,oBAhEkD,EAiElD,qBAjEkD,EAkElD,qBAlEkD,EAmElD,sCAnEkD,EAoElD,4BApEkD,EAqElD,0BArEkD,EAsElD,6BAtEkD,EAuElD,mBAvEkD,EAwElD,oBAxEkD,EAyElD,uBAzEkD,EA0ElD,mCA1EkD,EA2ElD,+BA3EkD,CAAR,CAArC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file is generated by generate_channels.js, do not edit manually.\n\nimport { EventEmitter } from 'events';\n\nexport type Binary = string;\n\nexport interface Channel extends EventEmitter {\n}\n\nexport type StackFrame = {\n  file: string,\n  line?: number,\n  column?: number,\n  function?: string,\n};\n\nexport type Metadata = {\n  stack?: StackFrame[],\n  apiName?: string,\n};\n\nexport type Point = {\n  x: number,\n  y: number,\n};\n\nexport type Rect = {\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n};\n\nexport type SerializedValue = {\n  n?: number,\n  b?: boolean,\n  s?: string,\n  v?: 'null' | 'undefined' | 'NaN' | 'Infinity' | '-Infinity' | '-0',\n  d?: string,\n  r?: {\n    p: string,\n    f: string,\n  },\n  a?: SerializedValue[],\n  o?: {\n    k: string,\n    v: SerializedValue,\n  }[],\n  h?: number,\n};\n\nexport type SerializedArgument = {\n  value: SerializedValue,\n  handles: Channel[],\n};\n\nexport type AXNode = {\n  role: string,\n  name: string,\n  valueString?: string,\n  valueNumber?: number,\n  description?: string,\n  keyshortcuts?: string,\n  roledescription?: string,\n  valuetext?: string,\n  disabled?: boolean,\n  expanded?: boolean,\n  focused?: boolean,\n  modal?: boolean,\n  multiline?: boolean,\n  multiselectable?: boolean,\n  readonly?: boolean,\n  required?: boolean,\n  selected?: boolean,\n  checked?: 'checked' | 'unchecked' | 'mixed',\n  pressed?: 'pressed' | 'released' | 'mixed',\n  level?: number,\n  valuemin?: number,\n  valuemax?: number,\n  autocomplete?: string,\n  haspopup?: string,\n  invalid?: string,\n  orientation?: string,\n  children?: AXNode[],\n};\n\nexport type SetNetworkCookie = {\n  name: string,\n  value: string,\n  url?: string,\n  domain?: string,\n  path?: string,\n  expires?: number,\n  httpOnly?: boolean,\n  secure?: boolean,\n  sameSite?: 'Strict' | 'Lax' | 'None',\n};\n\nexport type NetworkCookie = {\n  name: string,\n  value: string,\n  domain: string,\n  path: string,\n  expires: number,\n  httpOnly: boolean,\n  secure: boolean,\n  sameSite: 'Strict' | 'Lax' | 'None',\n};\n\nexport type NameValue = {\n  name: string,\n  value: string,\n};\n\nexport type OriginStorage = {\n  origin: string,\n  localStorage: NameValue[],\n};\n\nexport type SerializedError = {\n  error?: {\n    message: string,\n    name: string,\n    stack?: string,\n  },\n  value?: SerializedValue,\n};\n\nexport type InterceptedResponse = {\n  request: RequestChannel,\n  status: number,\n  statusText: string,\n  headers: {\n    name: string,\n    value: string,\n  }[],\n};\n\n// ----------- Root -----------\nexport type RootInitializer = {};\nexport interface RootChannel extends Channel {\n  initialize(params: RootInitializeParams, metadata?: Metadata): Promise<RootInitializeResult>;\n}\nexport type RootInitializeParams = {\n  language: string,\n};\nexport type RootInitializeOptions = {\n\n};\nexport type RootInitializeResult = {\n  playwright: PlaywrightChannel,\n};\n\n// ----------- Playwright -----------\nexport type PlaywrightInitializer = {\n  chromium: BrowserTypeChannel,\n  firefox: BrowserTypeChannel,\n  webkit: BrowserTypeChannel,\n  android: AndroidChannel,\n  electron: ElectronChannel,\n  deviceDescriptors: {\n    name: string,\n    descriptor: {\n      userAgent: string,\n      viewport: {\n        width: number,\n        height: number,\n      },\n      screen?: {\n        width: number,\n        height: number,\n      },\n      deviceScaleFactor: number,\n      isMobile: boolean,\n      hasTouch: boolean,\n      defaultBrowserType: 'chromium' | 'firefox' | 'webkit',\n    },\n  }[],\n  selectors: SelectorsChannel,\n  preLaunchedBrowser?: BrowserChannel,\n};\nexport interface PlaywrightChannel extends Channel {\n  on(event: 'incomingSocksSocket', callback: (params: PlaywrightIncomingSocksSocketEvent) => void): this;\n  setForwardedPorts(params: PlaywrightSetForwardedPortsParams, metadata?: Metadata): Promise<PlaywrightSetForwardedPortsResult>;\n}\nexport type PlaywrightIncomingSocksSocketEvent = {\n  socket: SocksSocketChannel,\n};\nexport type PlaywrightSetForwardedPortsParams = {\n  ports: number[],\n};\nexport type PlaywrightSetForwardedPortsOptions = {\n\n};\nexport type PlaywrightSetForwardedPortsResult = void;\n\n// ----------- Selectors -----------\nexport type SelectorsInitializer = {};\nexport interface SelectorsChannel extends Channel {\n  register(params: SelectorsRegisterParams, metadata?: Metadata): Promise<SelectorsRegisterResult>;\n}\nexport type SelectorsRegisterParams = {\n  name: string,\n  source: string,\n  contentScript?: boolean,\n};\nexport type SelectorsRegisterOptions = {\n  contentScript?: boolean,\n};\nexport type SelectorsRegisterResult = void;\n\n// ----------- BrowserType -----------\nexport type BrowserTypeInitializer = {\n  executablePath: string,\n  name: string,\n};\nexport interface BrowserTypeChannel extends Channel {\n  launch(params: BrowserTypeLaunchParams, metadata?: Metadata): Promise<BrowserTypeLaunchResult>;\n  launchPersistentContext(params: BrowserTypeLaunchPersistentContextParams, metadata?: Metadata): Promise<BrowserTypeLaunchPersistentContextResult>;\n  connectOverCDP(params: BrowserTypeConnectOverCDPParams, metadata?: Metadata): Promise<BrowserTypeConnectOverCDPResult>;\n}\nexport type BrowserTypeLaunchParams = {\n  channel?: string,\n  executablePath?: string,\n  args?: string[],\n  ignoreAllDefaultArgs?: boolean,\n  ignoreDefaultArgs?: string[],\n  handleSIGINT?: boolean,\n  handleSIGTERM?: boolean,\n  handleSIGHUP?: boolean,\n  timeout?: number,\n  env?: NameValue[],\n  headless?: boolean,\n  devtools?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n  downloadsPath?: string,\n  tracesDir?: string,\n  chromiumSandbox?: boolean,\n  firefoxUserPrefs?: any,\n  slowMo?: number,\n};\nexport type BrowserTypeLaunchOptions = {\n  channel?: string,\n  executablePath?: string,\n  args?: string[],\n  ignoreAllDefaultArgs?: boolean,\n  ignoreDefaultArgs?: string[],\n  handleSIGINT?: boolean,\n  handleSIGTERM?: boolean,\n  handleSIGHUP?: boolean,\n  timeout?: number,\n  env?: NameValue[],\n  headless?: boolean,\n  devtools?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n  downloadsPath?: string,\n  tracesDir?: string,\n  chromiumSandbox?: boolean,\n  firefoxUserPrefs?: any,\n  slowMo?: number,\n};\nexport type BrowserTypeLaunchResult = {\n  browser: BrowserChannel,\n};\nexport type BrowserTypeLaunchPersistentContextParams = {\n  channel?: string,\n  executablePath?: string,\n  args?: string[],\n  ignoreAllDefaultArgs?: boolean,\n  ignoreDefaultArgs?: string[],\n  handleSIGINT?: boolean,\n  handleSIGTERM?: boolean,\n  handleSIGHUP?: boolean,\n  timeout?: number,\n  env?: NameValue[],\n  headless?: boolean,\n  devtools?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n  downloadsPath?: string,\n  tracesDir?: string,\n  chromiumSandbox?: boolean,\n  sdkLanguage: string,\n  noDefaultViewport?: boolean,\n  viewport?: {\n    width: number,\n    height: number,\n  },\n  screen?: {\n    width: number,\n    height: number,\n  },\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  permissions?: string[],\n  extraHTTPHeaders?: NameValue[],\n  offline?: boolean,\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  reducedMotion?: 'reduce' | 'no-preference',\n  acceptDownloads?: boolean,\n  baseURL?: string,\n  _debugName?: string,\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  strictSelectors?: boolean,\n  userDataDir: string,\n  slowMo?: number,\n};\nexport type BrowserTypeLaunchPersistentContextOptions = {\n  channel?: string,\n  executablePath?: string,\n  args?: string[],\n  ignoreAllDefaultArgs?: boolean,\n  ignoreDefaultArgs?: string[],\n  handleSIGINT?: boolean,\n  handleSIGTERM?: boolean,\n  handleSIGHUP?: boolean,\n  timeout?: number,\n  env?: NameValue[],\n  headless?: boolean,\n  devtools?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n  downloadsPath?: string,\n  tracesDir?: string,\n  chromiumSandbox?: boolean,\n  noDefaultViewport?: boolean,\n  viewport?: {\n    width: number,\n    height: number,\n  },\n  screen?: {\n    width: number,\n    height: number,\n  },\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  permissions?: string[],\n  extraHTTPHeaders?: NameValue[],\n  offline?: boolean,\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  reducedMotion?: 'reduce' | 'no-preference',\n  acceptDownloads?: boolean,\n  baseURL?: string,\n  _debugName?: string,\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  strictSelectors?: boolean,\n  slowMo?: number,\n};\nexport type BrowserTypeLaunchPersistentContextResult = {\n  context: BrowserContextChannel,\n};\nexport type BrowserTypeConnectOverCDPParams = {\n  sdkLanguage: string,\n  endpointURL: string,\n  headers?: NameValue[],\n  slowMo?: number,\n  timeout?: number,\n};\nexport type BrowserTypeConnectOverCDPOptions = {\n  headers?: NameValue[],\n  slowMo?: number,\n  timeout?: number,\n};\nexport type BrowserTypeConnectOverCDPResult = {\n  browser: BrowserChannel,\n  defaultContext?: BrowserContextChannel,\n};\n\n// ----------- Browser -----------\nexport type BrowserInitializer = {\n  version: string,\n  name: string,\n};\nexport interface BrowserChannel extends Channel {\n  on(event: 'close', callback: (params: BrowserCloseEvent) => void): this;\n  close(params?: BrowserCloseParams, metadata?: Metadata): Promise<BrowserCloseResult>;\n  killForTests(params?: BrowserKillForTestsParams, metadata?: Metadata): Promise<BrowserKillForTestsResult>;\n  newContext(params: BrowserNewContextParams, metadata?: Metadata): Promise<BrowserNewContextResult>;\n  newBrowserCDPSession(params?: BrowserNewBrowserCDPSessionParams, metadata?: Metadata): Promise<BrowserNewBrowserCDPSessionResult>;\n  startTracing(params: BrowserStartTracingParams, metadata?: Metadata): Promise<BrowserStartTracingResult>;\n  stopTracing(params?: BrowserStopTracingParams, metadata?: Metadata): Promise<BrowserStopTracingResult>;\n}\nexport type BrowserCloseEvent = {};\nexport type BrowserCloseParams = {};\nexport type BrowserCloseOptions = {};\nexport type BrowserCloseResult = void;\nexport type BrowserKillForTestsParams = {};\nexport type BrowserKillForTestsOptions = {};\nexport type BrowserKillForTestsResult = void;\nexport type BrowserNewContextParams = {\n  sdkLanguage: string,\n  noDefaultViewport?: boolean,\n  viewport?: {\n    width: number,\n    height: number,\n  },\n  screen?: {\n    width: number,\n    height: number,\n  },\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  permissions?: string[],\n  extraHTTPHeaders?: NameValue[],\n  offline?: boolean,\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  reducedMotion?: 'reduce' | 'no-preference',\n  acceptDownloads?: boolean,\n  baseURL?: string,\n  _debugName?: string,\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  strictSelectors?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n  storageState?: {\n    cookies?: SetNetworkCookie[],\n    origins?: OriginStorage[],\n  },\n};\nexport type BrowserNewContextOptions = {\n  noDefaultViewport?: boolean,\n  viewport?: {\n    width: number,\n    height: number,\n  },\n  screen?: {\n    width: number,\n    height: number,\n  },\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  permissions?: string[],\n  extraHTTPHeaders?: NameValue[],\n  offline?: boolean,\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  reducedMotion?: 'reduce' | 'no-preference',\n  acceptDownloads?: boolean,\n  baseURL?: string,\n  _debugName?: string,\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  strictSelectors?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n  storageState?: {\n    cookies?: SetNetworkCookie[],\n    origins?: OriginStorage[],\n  },\n};\nexport type BrowserNewContextResult = {\n  context: BrowserContextChannel,\n};\nexport type BrowserNewBrowserCDPSessionParams = {};\nexport type BrowserNewBrowserCDPSessionOptions = {};\nexport type BrowserNewBrowserCDPSessionResult = {\n  session: CDPSessionChannel,\n};\nexport type BrowserStartTracingParams = {\n  page?: PageChannel,\n  path?: string,\n  screenshots?: boolean,\n  categories?: string[],\n};\nexport type BrowserStartTracingOptions = {\n  page?: PageChannel,\n  path?: string,\n  screenshots?: boolean,\n  categories?: string[],\n};\nexport type BrowserStartTracingResult = void;\nexport type BrowserStopTracingParams = {};\nexport type BrowserStopTracingOptions = {};\nexport type BrowserStopTracingResult = {\n  binary: Binary,\n};\n\n// ----------- EventTarget -----------\nexport type EventTargetInitializer = {};\nexport interface EventTargetChannel extends Channel {\n  waitForEventInfo(params: EventTargetWaitForEventInfoParams, metadata?: Metadata): Promise<EventTargetWaitForEventInfoResult>;\n}\nexport type EventTargetWaitForEventInfoParams = {\n  info: {\n    waitId: string,\n    phase: 'before' | 'after' | 'log',\n    event?: string,\n    message?: string,\n    error?: string,\n  },\n};\nexport type EventTargetWaitForEventInfoOptions = {\n\n};\nexport type EventTargetWaitForEventInfoResult = void;\n\n// ----------- BrowserContext -----------\nexport type BrowserContextInitializer = {\n  isChromium: boolean,\n};\nexport interface BrowserContextChannel extends EventTargetChannel {\n  on(event: 'bindingCall', callback: (params: BrowserContextBindingCallEvent) => void): this;\n  on(event: 'close', callback: (params: BrowserContextCloseEvent) => void): this;\n  on(event: 'page', callback: (params: BrowserContextPageEvent) => void): this;\n  on(event: 'route', callback: (params: BrowserContextRouteEvent) => void): this;\n  on(event: 'video', callback: (params: BrowserContextVideoEvent) => void): this;\n  on(event: 'backgroundPage', callback: (params: BrowserContextBackgroundPageEvent) => void): this;\n  on(event: 'serviceWorker', callback: (params: BrowserContextServiceWorkerEvent) => void): this;\n  on(event: 'request', callback: (params: BrowserContextRequestEvent) => void): this;\n  on(event: 'requestFailed', callback: (params: BrowserContextRequestFailedEvent) => void): this;\n  on(event: 'requestFinished', callback: (params: BrowserContextRequestFinishedEvent) => void): this;\n  on(event: 'response', callback: (params: BrowserContextResponseEvent) => void): this;\n  addCookies(params: BrowserContextAddCookiesParams, metadata?: Metadata): Promise<BrowserContextAddCookiesResult>;\n  addInitScript(params: BrowserContextAddInitScriptParams, metadata?: Metadata): Promise<BrowserContextAddInitScriptResult>;\n  clearCookies(params?: BrowserContextClearCookiesParams, metadata?: Metadata): Promise<BrowserContextClearCookiesResult>;\n  clearPermissions(params?: BrowserContextClearPermissionsParams, metadata?: Metadata): Promise<BrowserContextClearPermissionsResult>;\n  close(params?: BrowserContextCloseParams, metadata?: Metadata): Promise<BrowserContextCloseResult>;\n  cookies(params: BrowserContextCookiesParams, metadata?: Metadata): Promise<BrowserContextCookiesResult>;\n  exposeBinding(params: BrowserContextExposeBindingParams, metadata?: Metadata): Promise<BrowserContextExposeBindingResult>;\n  grantPermissions(params: BrowserContextGrantPermissionsParams, metadata?: Metadata): Promise<BrowserContextGrantPermissionsResult>;\n  newPage(params?: BrowserContextNewPageParams, metadata?: Metadata): Promise<BrowserContextNewPageResult>;\n  setDefaultNavigationTimeoutNoReply(params: BrowserContextSetDefaultNavigationTimeoutNoReplyParams, metadata?: Metadata): Promise<BrowserContextSetDefaultNavigationTimeoutNoReplyResult>;\n  setDefaultTimeoutNoReply(params: BrowserContextSetDefaultTimeoutNoReplyParams, metadata?: Metadata): Promise<BrowserContextSetDefaultTimeoutNoReplyResult>;\n  setExtraHTTPHeaders(params: BrowserContextSetExtraHTTPHeadersParams, metadata?: Metadata): Promise<BrowserContextSetExtraHTTPHeadersResult>;\n  setGeolocation(params: BrowserContextSetGeolocationParams, metadata?: Metadata): Promise<BrowserContextSetGeolocationResult>;\n  setHTTPCredentials(params: BrowserContextSetHTTPCredentialsParams, metadata?: Metadata): Promise<BrowserContextSetHTTPCredentialsResult>;\n  setNetworkInterceptionEnabled(params: BrowserContextSetNetworkInterceptionEnabledParams, metadata?: Metadata): Promise<BrowserContextSetNetworkInterceptionEnabledResult>;\n  setOffline(params: BrowserContextSetOfflineParams, metadata?: Metadata): Promise<BrowserContextSetOfflineResult>;\n  storageState(params?: BrowserContextStorageStateParams, metadata?: Metadata): Promise<BrowserContextStorageStateResult>;\n  pause(params?: BrowserContextPauseParams, metadata?: Metadata): Promise<BrowserContextPauseResult>;\n  recorderSupplementEnable(params: BrowserContextRecorderSupplementEnableParams, metadata?: Metadata): Promise<BrowserContextRecorderSupplementEnableResult>;\n  newCDPSession(params: BrowserContextNewCDPSessionParams, metadata?: Metadata): Promise<BrowserContextNewCDPSessionResult>;\n  tracingStart(params: BrowserContextTracingStartParams, metadata?: Metadata): Promise<BrowserContextTracingStartResult>;\n  tracingStop(params?: BrowserContextTracingStopParams, metadata?: Metadata): Promise<BrowserContextTracingStopResult>;\n  tracingExport(params?: BrowserContextTracingExportParams, metadata?: Metadata): Promise<BrowserContextTracingExportResult>;\n}\nexport type BrowserContextBindingCallEvent = {\n  binding: BindingCallChannel,\n};\nexport type BrowserContextCloseEvent = {};\nexport type BrowserContextPageEvent = {\n  page: PageChannel,\n};\nexport type BrowserContextRouteEvent = {\n  route: RouteChannel,\n  request: RequestChannel,\n};\nexport type BrowserContextVideoEvent = {\n  artifact: ArtifactChannel,\n};\nexport type BrowserContextBackgroundPageEvent = {\n  page: PageChannel,\n};\nexport type BrowserContextServiceWorkerEvent = {\n  worker: WorkerChannel,\n};\nexport type BrowserContextRequestEvent = {\n  request: RequestChannel,\n  page?: PageChannel,\n};\nexport type BrowserContextRequestFailedEvent = {\n  request: RequestChannel,\n  failureText?: string,\n  responseEndTiming: number,\n  page?: PageChannel,\n};\nexport type BrowserContextRequestFinishedEvent = {\n  request: RequestChannel,\n  responseEndTiming: number,\n  page?: PageChannel,\n};\nexport type BrowserContextResponseEvent = {\n  response: ResponseChannel,\n  page?: PageChannel,\n};\nexport type BrowserContextAddCookiesParams = {\n  cookies: SetNetworkCookie[],\n};\nexport type BrowserContextAddCookiesOptions = {\n\n};\nexport type BrowserContextAddCookiesResult = void;\nexport type BrowserContextAddInitScriptParams = {\n  source: string,\n};\nexport type BrowserContextAddInitScriptOptions = {\n\n};\nexport type BrowserContextAddInitScriptResult = void;\nexport type BrowserContextClearCookiesParams = {};\nexport type BrowserContextClearCookiesOptions = {};\nexport type BrowserContextClearCookiesResult = void;\nexport type BrowserContextClearPermissionsParams = {};\nexport type BrowserContextClearPermissionsOptions = {};\nexport type BrowserContextClearPermissionsResult = void;\nexport type BrowserContextCloseParams = {};\nexport type BrowserContextCloseOptions = {};\nexport type BrowserContextCloseResult = void;\nexport type BrowserContextCookiesParams = {\n  urls: string[],\n};\nexport type BrowserContextCookiesOptions = {\n\n};\nexport type BrowserContextCookiesResult = {\n  cookies: NetworkCookie[],\n};\nexport type BrowserContextExposeBindingParams = {\n  name: string,\n  needsHandle?: boolean,\n};\nexport type BrowserContextExposeBindingOptions = {\n  needsHandle?: boolean,\n};\nexport type BrowserContextExposeBindingResult = void;\nexport type BrowserContextGrantPermissionsParams = {\n  permissions: string[],\n  origin?: string,\n};\nexport type BrowserContextGrantPermissionsOptions = {\n  origin?: string,\n};\nexport type BrowserContextGrantPermissionsResult = void;\nexport type BrowserContextNewPageParams = {};\nexport type BrowserContextNewPageOptions = {};\nexport type BrowserContextNewPageResult = {\n  page: PageChannel,\n};\nexport type BrowserContextSetDefaultNavigationTimeoutNoReplyParams = {\n  timeout: number,\n};\nexport type BrowserContextSetDefaultNavigationTimeoutNoReplyOptions = {\n\n};\nexport type BrowserContextSetDefaultNavigationTimeoutNoReplyResult = void;\nexport type BrowserContextSetDefaultTimeoutNoReplyParams = {\n  timeout: number,\n};\nexport type BrowserContextSetDefaultTimeoutNoReplyOptions = {\n\n};\nexport type BrowserContextSetDefaultTimeoutNoReplyResult = void;\nexport type BrowserContextSetExtraHTTPHeadersParams = {\n  headers: NameValue[],\n};\nexport type BrowserContextSetExtraHTTPHeadersOptions = {\n\n};\nexport type BrowserContextSetExtraHTTPHeadersResult = void;\nexport type BrowserContextSetGeolocationParams = {\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n};\nexport type BrowserContextSetGeolocationOptions = {\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n};\nexport type BrowserContextSetGeolocationResult = void;\nexport type BrowserContextSetHTTPCredentialsParams = {\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n};\nexport type BrowserContextSetHTTPCredentialsOptions = {\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n};\nexport type BrowserContextSetHTTPCredentialsResult = void;\nexport type BrowserContextSetNetworkInterceptionEnabledParams = {\n  enabled: boolean,\n};\nexport type BrowserContextSetNetworkInterceptionEnabledOptions = {\n\n};\nexport type BrowserContextSetNetworkInterceptionEnabledResult = void;\nexport type BrowserContextSetOfflineParams = {\n  offline: boolean,\n};\nexport type BrowserContextSetOfflineOptions = {\n\n};\nexport type BrowserContextSetOfflineResult = void;\nexport type BrowserContextStorageStateParams = {};\nexport type BrowserContextStorageStateOptions = {};\nexport type BrowserContextStorageStateResult = {\n  cookies: NetworkCookie[],\n  origins: OriginStorage[],\n};\nexport type BrowserContextPauseParams = {};\nexport type BrowserContextPauseOptions = {};\nexport type BrowserContextPauseResult = void;\nexport type BrowserContextRecorderSupplementEnableParams = {\n  language?: string,\n  startRecording?: boolean,\n  pauseOnNextStatement?: boolean,\n  launchOptions?: any,\n  contextOptions?: any,\n  device?: string,\n  saveStorage?: string,\n  outputFile?: string,\n  showRecorder?: boolean,\n  actionListener?: any,\n};\nexport type BrowserContextRecorderSupplementEnableOptions = {\n  language?: string,\n  startRecording?: boolean,\n  pauseOnNextStatement?: boolean,\n  launchOptions?: any,\n  contextOptions?: any,\n  device?: string,\n  saveStorage?: string,\n  outputFile?: string,\n  showRecorder?: boolean,\n  actionListener?: any,\n};\nexport type BrowserContextRecorderSupplementEnableResult = void;\nexport type BrowserContextNewCDPSessionParams = {\n  page?: PageChannel,\n  frame?: FrameChannel,\n};\nexport type BrowserContextNewCDPSessionOptions = {\n  page?: PageChannel,\n  frame?: FrameChannel,\n};\nexport type BrowserContextNewCDPSessionResult = {\n  session: CDPSessionChannel,\n};\nexport type BrowserContextTracingStartParams = {\n  name?: string,\n  snapshots?: boolean,\n  screenshots?: boolean,\n};\nexport type BrowserContextTracingStartOptions = {\n  name?: string,\n  snapshots?: boolean,\n  screenshots?: boolean,\n};\nexport type BrowserContextTracingStartResult = void;\nexport type BrowserContextTracingStopParams = {};\nexport type BrowserContextTracingStopOptions = {};\nexport type BrowserContextTracingStopResult = void;\nexport type BrowserContextTracingExportParams = {};\nexport type BrowserContextTracingExportOptions = {};\nexport type BrowserContextTracingExportResult = {\n  artifact: ArtifactChannel,\n};\n\n// ----------- Page -----------\nexport type PageInitializer = {\n  mainFrame: FrameChannel,\n  viewportSize?: {\n    width: number,\n    height: number,\n  },\n  isClosed: boolean,\n  opener?: PageChannel,\n};\nexport interface PageChannel extends EventTargetChannel {\n  on(event: 'bindingCall', callback: (params: PageBindingCallEvent) => void): this;\n  on(event: 'close', callback: (params: PageCloseEvent) => void): this;\n  on(event: 'console', callback: (params: PageConsoleEvent) => void): this;\n  on(event: 'crash', callback: (params: PageCrashEvent) => void): this;\n  on(event: 'dialog', callback: (params: PageDialogEvent) => void): this;\n  on(event: 'download', callback: (params: PageDownloadEvent) => void): this;\n  on(event: 'domcontentloaded', callback: (params: PageDomcontentloadedEvent) => void): this;\n  on(event: 'fileChooser', callback: (params: PageFileChooserEvent) => void): this;\n  on(event: 'frameAttached', callback: (params: PageFrameAttachedEvent) => void): this;\n  on(event: 'frameDetached', callback: (params: PageFrameDetachedEvent) => void): this;\n  on(event: 'load', callback: (params: PageLoadEvent) => void): this;\n  on(event: 'pageError', callback: (params: PagePageErrorEvent) => void): this;\n  on(event: 'route', callback: (params: PageRouteEvent) => void): this;\n  on(event: 'video', callback: (params: PageVideoEvent) => void): this;\n  on(event: 'webSocket', callback: (params: PageWebSocketEvent) => void): this;\n  on(event: 'worker', callback: (params: PageWorkerEvent) => void): this;\n  setDefaultNavigationTimeoutNoReply(params: PageSetDefaultNavigationTimeoutNoReplyParams, metadata?: Metadata): Promise<PageSetDefaultNavigationTimeoutNoReplyResult>;\n  setDefaultTimeoutNoReply(params: PageSetDefaultTimeoutNoReplyParams, metadata?: Metadata): Promise<PageSetDefaultTimeoutNoReplyResult>;\n  setFileChooserInterceptedNoReply(params: PageSetFileChooserInterceptedNoReplyParams, metadata?: Metadata): Promise<PageSetFileChooserInterceptedNoReplyResult>;\n  addInitScript(params: PageAddInitScriptParams, metadata?: Metadata): Promise<PageAddInitScriptResult>;\n  close(params: PageCloseParams, metadata?: Metadata): Promise<PageCloseResult>;\n  emulateMedia(params: PageEmulateMediaParams, metadata?: Metadata): Promise<PageEmulateMediaResult>;\n  exposeBinding(params: PageExposeBindingParams, metadata?: Metadata): Promise<PageExposeBindingResult>;\n  goBack(params: PageGoBackParams, metadata?: Metadata): Promise<PageGoBackResult>;\n  goForward(params: PageGoForwardParams, metadata?: Metadata): Promise<PageGoForwardResult>;\n  reload(params: PageReloadParams, metadata?: Metadata): Promise<PageReloadResult>;\n  screenshot(params: PageScreenshotParams, metadata?: Metadata): Promise<PageScreenshotResult>;\n  setExtraHTTPHeaders(params: PageSetExtraHTTPHeadersParams, metadata?: Metadata): Promise<PageSetExtraHTTPHeadersResult>;\n  setNetworkInterceptionEnabled(params: PageSetNetworkInterceptionEnabledParams, metadata?: Metadata): Promise<PageSetNetworkInterceptionEnabledResult>;\n  setViewportSize(params: PageSetViewportSizeParams, metadata?: Metadata): Promise<PageSetViewportSizeResult>;\n  keyboardDown(params: PageKeyboardDownParams, metadata?: Metadata): Promise<PageKeyboardDownResult>;\n  keyboardUp(params: PageKeyboardUpParams, metadata?: Metadata): Promise<PageKeyboardUpResult>;\n  keyboardInsertText(params: PageKeyboardInsertTextParams, metadata?: Metadata): Promise<PageKeyboardInsertTextResult>;\n  keyboardType(params: PageKeyboardTypeParams, metadata?: Metadata): Promise<PageKeyboardTypeResult>;\n  keyboardPress(params: PageKeyboardPressParams, metadata?: Metadata): Promise<PageKeyboardPressResult>;\n  mouseMove(params: PageMouseMoveParams, metadata?: Metadata): Promise<PageMouseMoveResult>;\n  mouseDown(params: PageMouseDownParams, metadata?: Metadata): Promise<PageMouseDownResult>;\n  mouseUp(params: PageMouseUpParams, metadata?: Metadata): Promise<PageMouseUpResult>;\n  mouseClick(params: PageMouseClickParams, metadata?: Metadata): Promise<PageMouseClickResult>;\n  touchscreenTap(params: PageTouchscreenTapParams, metadata?: Metadata): Promise<PageTouchscreenTapResult>;\n  accessibilitySnapshot(params: PageAccessibilitySnapshotParams, metadata?: Metadata): Promise<PageAccessibilitySnapshotResult>;\n  pdf(params: PagePdfParams, metadata?: Metadata): Promise<PagePdfResult>;\n  startJSCoverage(params: PageStartJSCoverageParams, metadata?: Metadata): Promise<PageStartJSCoverageResult>;\n  stopJSCoverage(params?: PageStopJSCoverageParams, metadata?: Metadata): Promise<PageStopJSCoverageResult>;\n  startCSSCoverage(params: PageStartCSSCoverageParams, metadata?: Metadata): Promise<PageStartCSSCoverageResult>;\n  stopCSSCoverage(params?: PageStopCSSCoverageParams, metadata?: Metadata): Promise<PageStopCSSCoverageResult>;\n  bringToFront(params?: PageBringToFrontParams, metadata?: Metadata): Promise<PageBringToFrontResult>;\n}\nexport type PageBindingCallEvent = {\n  binding: BindingCallChannel,\n};\nexport type PageCloseEvent = {};\nexport type PageConsoleEvent = {\n  message: ConsoleMessageChannel,\n};\nexport type PageCrashEvent = {};\nexport type PageDialogEvent = {\n  dialog: DialogChannel,\n};\nexport type PageDownloadEvent = {\n  url: string,\n  suggestedFilename: string,\n  artifact: ArtifactChannel,\n};\nexport type PageDomcontentloadedEvent = {};\nexport type PageFileChooserEvent = {\n  element: ElementHandleChannel,\n  isMultiple: boolean,\n};\nexport type PageFrameAttachedEvent = {\n  frame: FrameChannel,\n};\nexport type PageFrameDetachedEvent = {\n  frame: FrameChannel,\n};\nexport type PageLoadEvent = {};\nexport type PagePageErrorEvent = {\n  error: SerializedError,\n};\nexport type PageRouteEvent = {\n  route: RouteChannel,\n  request: RequestChannel,\n};\nexport type PageVideoEvent = {\n  artifact: ArtifactChannel,\n};\nexport type PageWebSocketEvent = {\n  webSocket: WebSocketChannel,\n};\nexport type PageWorkerEvent = {\n  worker: WorkerChannel,\n};\nexport type PageSetDefaultNavigationTimeoutNoReplyParams = {\n  timeout: number,\n};\nexport type PageSetDefaultNavigationTimeoutNoReplyOptions = {\n\n};\nexport type PageSetDefaultNavigationTimeoutNoReplyResult = void;\nexport type PageSetDefaultTimeoutNoReplyParams = {\n  timeout: number,\n};\nexport type PageSetDefaultTimeoutNoReplyOptions = {\n\n};\nexport type PageSetDefaultTimeoutNoReplyResult = void;\nexport type PageSetFileChooserInterceptedNoReplyParams = {\n  intercepted: boolean,\n};\nexport type PageSetFileChooserInterceptedNoReplyOptions = {\n\n};\nexport type PageSetFileChooserInterceptedNoReplyResult = void;\nexport type PageAddInitScriptParams = {\n  source: string,\n};\nexport type PageAddInitScriptOptions = {\n\n};\nexport type PageAddInitScriptResult = void;\nexport type PageCloseParams = {\n  runBeforeUnload?: boolean,\n};\nexport type PageCloseOptions = {\n  runBeforeUnload?: boolean,\n};\nexport type PageCloseResult = void;\nexport type PageEmulateMediaParams = {\n  media?: 'screen' | 'print' | 'null',\n  colorScheme?: 'dark' | 'light' | 'no-preference' | 'null',\n  reducedMotion?: 'reduce' | 'no-preference' | 'null',\n};\nexport type PageEmulateMediaOptions = {\n  media?: 'screen' | 'print' | 'null',\n  colorScheme?: 'dark' | 'light' | 'no-preference' | 'null',\n  reducedMotion?: 'reduce' | 'no-preference' | 'null',\n};\nexport type PageEmulateMediaResult = void;\nexport type PageExposeBindingParams = {\n  name: string,\n  needsHandle?: boolean,\n};\nexport type PageExposeBindingOptions = {\n  needsHandle?: boolean,\n};\nexport type PageExposeBindingResult = void;\nexport type PageGoBackParams = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type PageGoBackOptions = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type PageGoBackResult = {\n  response?: ResponseChannel,\n};\nexport type PageGoForwardParams = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type PageGoForwardOptions = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type PageGoForwardResult = {\n  response?: ResponseChannel,\n};\nexport type PageReloadParams = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type PageReloadOptions = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type PageReloadResult = {\n  response?: ResponseChannel,\n};\nexport type PageScreenshotParams = {\n  timeout?: number,\n  type?: 'png' | 'jpeg',\n  quality?: number,\n  omitBackground?: boolean,\n  fullPage?: boolean,\n  clip?: Rect,\n};\nexport type PageScreenshotOptions = {\n  timeout?: number,\n  type?: 'png' | 'jpeg',\n  quality?: number,\n  omitBackground?: boolean,\n  fullPage?: boolean,\n  clip?: Rect,\n};\nexport type PageScreenshotResult = {\n  binary: Binary,\n};\nexport type PageSetExtraHTTPHeadersParams = {\n  headers: NameValue[],\n};\nexport type PageSetExtraHTTPHeadersOptions = {\n\n};\nexport type PageSetExtraHTTPHeadersResult = void;\nexport type PageSetNetworkInterceptionEnabledParams = {\n  enabled: boolean,\n};\nexport type PageSetNetworkInterceptionEnabledOptions = {\n\n};\nexport type PageSetNetworkInterceptionEnabledResult = void;\nexport type PageSetViewportSizeParams = {\n  viewportSize: {\n    width: number,\n    height: number,\n  },\n};\nexport type PageSetViewportSizeOptions = {\n\n};\nexport type PageSetViewportSizeResult = void;\nexport type PageKeyboardDownParams = {\n  key: string,\n};\nexport type PageKeyboardDownOptions = {\n\n};\nexport type PageKeyboardDownResult = void;\nexport type PageKeyboardUpParams = {\n  key: string,\n};\nexport type PageKeyboardUpOptions = {\n\n};\nexport type PageKeyboardUpResult = void;\nexport type PageKeyboardInsertTextParams = {\n  text: string,\n};\nexport type PageKeyboardInsertTextOptions = {\n\n};\nexport type PageKeyboardInsertTextResult = void;\nexport type PageKeyboardTypeParams = {\n  text: string,\n  delay?: number,\n};\nexport type PageKeyboardTypeOptions = {\n  delay?: number,\n};\nexport type PageKeyboardTypeResult = void;\nexport type PageKeyboardPressParams = {\n  key: string,\n  delay?: number,\n};\nexport type PageKeyboardPressOptions = {\n  delay?: number,\n};\nexport type PageKeyboardPressResult = void;\nexport type PageMouseMoveParams = {\n  x: number,\n  y: number,\n  steps?: number,\n};\nexport type PageMouseMoveOptions = {\n  steps?: number,\n};\nexport type PageMouseMoveResult = void;\nexport type PageMouseDownParams = {\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n};\nexport type PageMouseDownOptions = {\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n};\nexport type PageMouseDownResult = void;\nexport type PageMouseUpParams = {\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n};\nexport type PageMouseUpOptions = {\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n};\nexport type PageMouseUpResult = void;\nexport type PageMouseClickParams = {\n  x: number,\n  y: number,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n};\nexport type PageMouseClickOptions = {\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n};\nexport type PageMouseClickResult = void;\nexport type PageTouchscreenTapParams = {\n  x: number,\n  y: number,\n};\nexport type PageTouchscreenTapOptions = {\n\n};\nexport type PageTouchscreenTapResult = void;\nexport type PageAccessibilitySnapshotParams = {\n  interestingOnly?: boolean,\n  root?: ElementHandleChannel,\n};\nexport type PageAccessibilitySnapshotOptions = {\n  interestingOnly?: boolean,\n  root?: ElementHandleChannel,\n};\nexport type PageAccessibilitySnapshotResult = {\n  rootAXNode?: AXNode,\n};\nexport type PagePdfParams = {\n  scale?: number,\n  displayHeaderFooter?: boolean,\n  headerTemplate?: string,\n  footerTemplate?: string,\n  printBackground?: boolean,\n  landscape?: boolean,\n  pageRanges?: string,\n  format?: string,\n  width?: string,\n  height?: string,\n  preferCSSPageSize?: boolean,\n  margin?: {\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string,\n  },\n};\nexport type PagePdfOptions = {\n  scale?: number,\n  displayHeaderFooter?: boolean,\n  headerTemplate?: string,\n  footerTemplate?: string,\n  printBackground?: boolean,\n  landscape?: boolean,\n  pageRanges?: string,\n  format?: string,\n  width?: string,\n  height?: string,\n  preferCSSPageSize?: boolean,\n  margin?: {\n    top?: string,\n    bottom?: string,\n    left?: string,\n    right?: string,\n  },\n};\nexport type PagePdfResult = {\n  pdf: Binary,\n};\nexport type PageStartJSCoverageParams = {\n  resetOnNavigation?: boolean,\n  reportAnonymousScripts?: boolean,\n};\nexport type PageStartJSCoverageOptions = {\n  resetOnNavigation?: boolean,\n  reportAnonymousScripts?: boolean,\n};\nexport type PageStartJSCoverageResult = void;\nexport type PageStopJSCoverageParams = {};\nexport type PageStopJSCoverageOptions = {};\nexport type PageStopJSCoverageResult = {\n  entries: {\n    url: string,\n    scriptId: string,\n    source?: string,\n    functions: {\n      functionName: string,\n      isBlockCoverage: boolean,\n      ranges: {\n        startOffset: number,\n        endOffset: number,\n        count: number,\n      }[],\n    }[],\n  }[],\n};\nexport type PageStartCSSCoverageParams = {\n  resetOnNavigation?: boolean,\n};\nexport type PageStartCSSCoverageOptions = {\n  resetOnNavigation?: boolean,\n};\nexport type PageStartCSSCoverageResult = void;\nexport type PageStopCSSCoverageParams = {};\nexport type PageStopCSSCoverageOptions = {};\nexport type PageStopCSSCoverageResult = {\n  entries: {\n    url: string,\n    text?: string,\n    ranges: {\n      start: number,\n      end: number,\n    }[],\n  }[],\n};\nexport type PageBringToFrontParams = {};\nexport type PageBringToFrontOptions = {};\nexport type PageBringToFrontResult = void;\n\n// ----------- Frame -----------\nexport type FrameInitializer = {\n  url: string,\n  name: string,\n  parentFrame?: FrameChannel,\n  loadStates: ('load' | 'domcontentloaded' | 'networkidle')[],\n};\nexport interface FrameChannel extends Channel {\n  on(event: 'loadstate', callback: (params: FrameLoadstateEvent) => void): this;\n  on(event: 'navigated', callback: (params: FrameNavigatedEvent) => void): this;\n  evalOnSelector(params: FrameEvalOnSelectorParams, metadata?: Metadata): Promise<FrameEvalOnSelectorResult>;\n  evalOnSelectorAll(params: FrameEvalOnSelectorAllParams, metadata?: Metadata): Promise<FrameEvalOnSelectorAllResult>;\n  addScriptTag(params: FrameAddScriptTagParams, metadata?: Metadata): Promise<FrameAddScriptTagResult>;\n  addStyleTag(params: FrameAddStyleTagParams, metadata?: Metadata): Promise<FrameAddStyleTagResult>;\n  check(params: FrameCheckParams, metadata?: Metadata): Promise<FrameCheckResult>;\n  click(params: FrameClickParams, metadata?: Metadata): Promise<FrameClickResult>;\n  content(params?: FrameContentParams, metadata?: Metadata): Promise<FrameContentResult>;\n  dragAndDrop(params: FrameDragAndDropParams, metadata?: Metadata): Promise<FrameDragAndDropResult>;\n  dblclick(params: FrameDblclickParams, metadata?: Metadata): Promise<FrameDblclickResult>;\n  dispatchEvent(params: FrameDispatchEventParams, metadata?: Metadata): Promise<FrameDispatchEventResult>;\n  evaluateExpression(params: FrameEvaluateExpressionParams, metadata?: Metadata): Promise<FrameEvaluateExpressionResult>;\n  evaluateExpressionHandle(params: FrameEvaluateExpressionHandleParams, metadata?: Metadata): Promise<FrameEvaluateExpressionHandleResult>;\n  fill(params: FrameFillParams, metadata?: Metadata): Promise<FrameFillResult>;\n  focus(params: FrameFocusParams, metadata?: Metadata): Promise<FrameFocusResult>;\n  frameElement(params?: FrameFrameElementParams, metadata?: Metadata): Promise<FrameFrameElementResult>;\n  getAttribute(params: FrameGetAttributeParams, metadata?: Metadata): Promise<FrameGetAttributeResult>;\n  goto(params: FrameGotoParams, metadata?: Metadata): Promise<FrameGotoResult>;\n  hover(params: FrameHoverParams, metadata?: Metadata): Promise<FrameHoverResult>;\n  innerHTML(params: FrameInnerHTMLParams, metadata?: Metadata): Promise<FrameInnerHTMLResult>;\n  innerText(params: FrameInnerTextParams, metadata?: Metadata): Promise<FrameInnerTextResult>;\n  inputValue(params: FrameInputValueParams, metadata?: Metadata): Promise<FrameInputValueResult>;\n  isChecked(params: FrameIsCheckedParams, metadata?: Metadata): Promise<FrameIsCheckedResult>;\n  isDisabled(params: FrameIsDisabledParams, metadata?: Metadata): Promise<FrameIsDisabledResult>;\n  isEnabled(params: FrameIsEnabledParams, metadata?: Metadata): Promise<FrameIsEnabledResult>;\n  isHidden(params: FrameIsHiddenParams, metadata?: Metadata): Promise<FrameIsHiddenResult>;\n  isVisible(params: FrameIsVisibleParams, metadata?: Metadata): Promise<FrameIsVisibleResult>;\n  isEditable(params: FrameIsEditableParams, metadata?: Metadata): Promise<FrameIsEditableResult>;\n  press(params: FramePressParams, metadata?: Metadata): Promise<FramePressResult>;\n  querySelector(params: FrameQuerySelectorParams, metadata?: Metadata): Promise<FrameQuerySelectorResult>;\n  querySelectorAll(params: FrameQuerySelectorAllParams, metadata?: Metadata): Promise<FrameQuerySelectorAllResult>;\n  selectOption(params: FrameSelectOptionParams, metadata?: Metadata): Promise<FrameSelectOptionResult>;\n  setContent(params: FrameSetContentParams, metadata?: Metadata): Promise<FrameSetContentResult>;\n  setInputFiles(params: FrameSetInputFilesParams, metadata?: Metadata): Promise<FrameSetInputFilesResult>;\n  tap(params: FrameTapParams, metadata?: Metadata): Promise<FrameTapResult>;\n  textContent(params: FrameTextContentParams, metadata?: Metadata): Promise<FrameTextContentResult>;\n  title(params?: FrameTitleParams, metadata?: Metadata): Promise<FrameTitleResult>;\n  type(params: FrameTypeParams, metadata?: Metadata): Promise<FrameTypeResult>;\n  uncheck(params: FrameUncheckParams, metadata?: Metadata): Promise<FrameUncheckResult>;\n  waitForFunction(params: FrameWaitForFunctionParams, metadata?: Metadata): Promise<FrameWaitForFunctionResult>;\n  waitForSelector(params: FrameWaitForSelectorParams, metadata?: Metadata): Promise<FrameWaitForSelectorResult>;\n}\nexport type FrameLoadstateEvent = {\n  add?: 'load' | 'domcontentloaded' | 'networkidle',\n  remove?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type FrameNavigatedEvent = {\n  url: string,\n  name: string,\n  newDocument?: {\n    request?: RequestChannel,\n  },\n  error?: string,\n};\nexport type FrameEvalOnSelectorParams = {\n  selector: string,\n  strict?: boolean,\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type FrameEvalOnSelectorOptions = {\n  strict?: boolean,\n  isFunction?: boolean,\n};\nexport type FrameEvalOnSelectorResult = {\n  value: SerializedValue,\n};\nexport type FrameEvalOnSelectorAllParams = {\n  selector: string,\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type FrameEvalOnSelectorAllOptions = {\n  isFunction?: boolean,\n};\nexport type FrameEvalOnSelectorAllResult = {\n  value: SerializedValue,\n};\nexport type FrameAddScriptTagParams = {\n  url?: string,\n  content?: string,\n  type?: string,\n};\nexport type FrameAddScriptTagOptions = {\n  url?: string,\n  content?: string,\n  type?: string,\n};\nexport type FrameAddScriptTagResult = {\n  element: ElementHandleChannel,\n};\nexport type FrameAddStyleTagParams = {\n  url?: string,\n  content?: string,\n};\nexport type FrameAddStyleTagOptions = {\n  url?: string,\n  content?: string,\n};\nexport type FrameAddStyleTagResult = {\n  element: ElementHandleChannel,\n};\nexport type FrameCheckParams = {\n  selector: string,\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameCheckOptions = {\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameCheckResult = void;\nexport type FrameClickParams = {\n  selector: string,\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameClickOptions = {\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameClickResult = void;\nexport type FrameContentParams = {};\nexport type FrameContentOptions = {};\nexport type FrameContentResult = {\n  value: string,\n};\nexport type FrameDragAndDropParams = {\n  source: string,\n  target: string,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  timeout?: number,\n  trial?: boolean,\n  sourcePosition?: Point,\n  targetPosition?: Point,\n};\nexport type FrameDragAndDropOptions = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  timeout?: number,\n  trial?: boolean,\n  sourcePosition?: Point,\n  targetPosition?: Point,\n};\nexport type FrameDragAndDropResult = void;\nexport type FrameDblclickParams = {\n  selector: string,\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameDblclickOptions = {\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameDblclickResult = void;\nexport type FrameDispatchEventParams = {\n  selector: string,\n  strict?: boolean,\n  type: string,\n  eventInit: SerializedArgument,\n  timeout?: number,\n};\nexport type FrameDispatchEventOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameDispatchEventResult = void;\nexport type FrameEvaluateExpressionParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type FrameEvaluateExpressionOptions = {\n  isFunction?: boolean,\n};\nexport type FrameEvaluateExpressionResult = {\n  value: SerializedValue,\n};\nexport type FrameEvaluateExpressionHandleParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type FrameEvaluateExpressionHandleOptions = {\n  isFunction?: boolean,\n};\nexport type FrameEvaluateExpressionHandleResult = {\n  handle: JSHandleChannel,\n};\nexport type FrameFillParams = {\n  selector: string,\n  strict?: boolean,\n  value: string,\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type FrameFillOptions = {\n  strict?: boolean,\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type FrameFillResult = void;\nexport type FrameFocusParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameFocusOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameFocusResult = void;\nexport type FrameFrameElementParams = {};\nexport type FrameFrameElementOptions = {};\nexport type FrameFrameElementResult = {\n  element: ElementHandleChannel,\n};\nexport type FrameGetAttributeParams = {\n  selector: string,\n  strict?: boolean,\n  name: string,\n  timeout?: number,\n};\nexport type FrameGetAttributeOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameGetAttributeResult = {\n  value?: string,\n};\nexport type FrameGotoParams = {\n  url: string,\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n  referer?: string,\n};\nexport type FrameGotoOptions = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n  referer?: string,\n};\nexport type FrameGotoResult = {\n  response?: ResponseChannel,\n};\nexport type FrameHoverParams = {\n  selector: string,\n  strict?: boolean,\n  force?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameHoverOptions = {\n  strict?: boolean,\n  force?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameHoverResult = void;\nexport type FrameInnerHTMLParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameInnerHTMLOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameInnerHTMLResult = {\n  value: string,\n};\nexport type FrameInnerTextParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameInnerTextOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameInnerTextResult = {\n  value: string,\n};\nexport type FrameInputValueParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameInputValueOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameInputValueResult = {\n  value: string,\n};\nexport type FrameIsCheckedParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsCheckedOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsCheckedResult = {\n  value: boolean,\n};\nexport type FrameIsDisabledParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsDisabledOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsDisabledResult = {\n  value: boolean,\n};\nexport type FrameIsEnabledParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsEnabledOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsEnabledResult = {\n  value: boolean,\n};\nexport type FrameIsHiddenParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsHiddenOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsHiddenResult = {\n  value: boolean,\n};\nexport type FrameIsVisibleParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsVisibleOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsVisibleResult = {\n  value: boolean,\n};\nexport type FrameIsEditableParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsEditableOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameIsEditableResult = {\n  value: boolean,\n};\nexport type FramePressParams = {\n  selector: string,\n  strict?: boolean,\n  key: string,\n  delay?: number,\n  noWaitAfter?: boolean,\n  timeout?: number,\n};\nexport type FramePressOptions = {\n  strict?: boolean,\n  delay?: number,\n  noWaitAfter?: boolean,\n  timeout?: number,\n};\nexport type FramePressResult = void;\nexport type FrameQuerySelectorParams = {\n  selector: string,\n  strict?: boolean,\n};\nexport type FrameQuerySelectorOptions = {\n  strict?: boolean,\n};\nexport type FrameQuerySelectorResult = {\n  element?: ElementHandleChannel,\n};\nexport type FrameQuerySelectorAllParams = {\n  selector: string,\n  strict?: boolean,\n};\nexport type FrameQuerySelectorAllOptions = {\n  strict?: boolean,\n};\nexport type FrameQuerySelectorAllResult = {\n  elements: ElementHandleChannel[],\n};\nexport type FrameSelectOptionParams = {\n  selector: string,\n  strict?: boolean,\n  elements?: ElementHandleChannel[],\n  options?: {\n    value?: string,\n    label?: string,\n    index?: number,\n  }[],\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type FrameSelectOptionOptions = {\n  strict?: boolean,\n  elements?: ElementHandleChannel[],\n  options?: {\n    value?: string,\n    label?: string,\n    index?: number,\n  }[],\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type FrameSelectOptionResult = {\n  values: string[],\n};\nexport type FrameSetContentParams = {\n  html: string,\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type FrameSetContentOptions = {\n  timeout?: number,\n  waitUntil?: 'load' | 'domcontentloaded' | 'networkidle',\n};\nexport type FrameSetContentResult = void;\nexport type FrameSetInputFilesParams = {\n  selector: string,\n  strict?: boolean,\n  files: {\n    name: string,\n    mimeType?: string,\n    buffer: Binary,\n  }[],\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type FrameSetInputFilesOptions = {\n  strict?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type FrameSetInputFilesResult = void;\nexport type FrameTapParams = {\n  selector: string,\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameTapOptions = {\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameTapResult = void;\nexport type FrameTextContentParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameTextContentOptions = {\n  strict?: boolean,\n  timeout?: number,\n};\nexport type FrameTextContentResult = {\n  value?: string,\n};\nexport type FrameTitleParams = {};\nexport type FrameTitleOptions = {};\nexport type FrameTitleResult = {\n  value: string,\n};\nexport type FrameTypeParams = {\n  selector: string,\n  strict?: boolean,\n  text: string,\n  delay?: number,\n  noWaitAfter?: boolean,\n  timeout?: number,\n};\nexport type FrameTypeOptions = {\n  strict?: boolean,\n  delay?: number,\n  noWaitAfter?: boolean,\n  timeout?: number,\n};\nexport type FrameTypeResult = void;\nexport type FrameUncheckParams = {\n  selector: string,\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameUncheckOptions = {\n  strict?: boolean,\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type FrameUncheckResult = void;\nexport type FrameWaitForFunctionParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n  timeout?: number,\n  pollingInterval?: number,\n};\nexport type FrameWaitForFunctionOptions = {\n  isFunction?: boolean,\n  timeout?: number,\n  pollingInterval?: number,\n};\nexport type FrameWaitForFunctionResult = {\n  handle: JSHandleChannel,\n};\nexport type FrameWaitForSelectorParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n  state?: 'attached' | 'detached' | 'visible' | 'hidden',\n};\nexport type FrameWaitForSelectorOptions = {\n  strict?: boolean,\n  timeout?: number,\n  state?: 'attached' | 'detached' | 'visible' | 'hidden',\n};\nexport type FrameWaitForSelectorResult = {\n  element?: ElementHandleChannel,\n};\n\n// ----------- Worker -----------\nexport type WorkerInitializer = {\n  url: string,\n};\nexport interface WorkerChannel extends Channel {\n  on(event: 'close', callback: (params: WorkerCloseEvent) => void): this;\n  evaluateExpression(params: WorkerEvaluateExpressionParams, metadata?: Metadata): Promise<WorkerEvaluateExpressionResult>;\n  evaluateExpressionHandle(params: WorkerEvaluateExpressionHandleParams, metadata?: Metadata): Promise<WorkerEvaluateExpressionHandleResult>;\n}\nexport type WorkerCloseEvent = {};\nexport type WorkerEvaluateExpressionParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type WorkerEvaluateExpressionOptions = {\n  isFunction?: boolean,\n};\nexport type WorkerEvaluateExpressionResult = {\n  value: SerializedValue,\n};\nexport type WorkerEvaluateExpressionHandleParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type WorkerEvaluateExpressionHandleOptions = {\n  isFunction?: boolean,\n};\nexport type WorkerEvaluateExpressionHandleResult = {\n  handle: JSHandleChannel,\n};\n\n// ----------- JSHandle -----------\nexport type JSHandleInitializer = {\n  preview: string,\n};\nexport interface JSHandleChannel extends Channel {\n  on(event: 'previewUpdated', callback: (params: JSHandlePreviewUpdatedEvent) => void): this;\n  dispose(params?: JSHandleDisposeParams, metadata?: Metadata): Promise<JSHandleDisposeResult>;\n  evaluateExpression(params: JSHandleEvaluateExpressionParams, metadata?: Metadata): Promise<JSHandleEvaluateExpressionResult>;\n  evaluateExpressionHandle(params: JSHandleEvaluateExpressionHandleParams, metadata?: Metadata): Promise<JSHandleEvaluateExpressionHandleResult>;\n  getPropertyList(params?: JSHandleGetPropertyListParams, metadata?: Metadata): Promise<JSHandleGetPropertyListResult>;\n  getProperty(params: JSHandleGetPropertyParams, metadata?: Metadata): Promise<JSHandleGetPropertyResult>;\n  jsonValue(params?: JSHandleJsonValueParams, metadata?: Metadata): Promise<JSHandleJsonValueResult>;\n}\nexport type JSHandlePreviewUpdatedEvent = {\n  preview: string,\n};\nexport type JSHandleDisposeParams = {};\nexport type JSHandleDisposeOptions = {};\nexport type JSHandleDisposeResult = void;\nexport type JSHandleEvaluateExpressionParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type JSHandleEvaluateExpressionOptions = {\n  isFunction?: boolean,\n};\nexport type JSHandleEvaluateExpressionResult = {\n  value: SerializedValue,\n};\nexport type JSHandleEvaluateExpressionHandleParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type JSHandleEvaluateExpressionHandleOptions = {\n  isFunction?: boolean,\n};\nexport type JSHandleEvaluateExpressionHandleResult = {\n  handle: JSHandleChannel,\n};\nexport type JSHandleGetPropertyListParams = {};\nexport type JSHandleGetPropertyListOptions = {};\nexport type JSHandleGetPropertyListResult = {\n  properties: {\n    name: string,\n    value: JSHandleChannel,\n  }[],\n};\nexport type JSHandleGetPropertyParams = {\n  name: string,\n};\nexport type JSHandleGetPropertyOptions = {\n\n};\nexport type JSHandleGetPropertyResult = {\n  handle: JSHandleChannel,\n};\nexport type JSHandleJsonValueParams = {};\nexport type JSHandleJsonValueOptions = {};\nexport type JSHandleJsonValueResult = {\n  value: SerializedValue,\n};\n\n// ----------- ElementHandle -----------\nexport type ElementHandleInitializer = {};\nexport interface ElementHandleChannel extends JSHandleChannel {\n  evalOnSelector(params: ElementHandleEvalOnSelectorParams, metadata?: Metadata): Promise<ElementHandleEvalOnSelectorResult>;\n  evalOnSelectorAll(params: ElementHandleEvalOnSelectorAllParams, metadata?: Metadata): Promise<ElementHandleEvalOnSelectorAllResult>;\n  boundingBox(params?: ElementHandleBoundingBoxParams, metadata?: Metadata): Promise<ElementHandleBoundingBoxResult>;\n  check(params: ElementHandleCheckParams, metadata?: Metadata): Promise<ElementHandleCheckResult>;\n  click(params: ElementHandleClickParams, metadata?: Metadata): Promise<ElementHandleClickResult>;\n  contentFrame(params?: ElementHandleContentFrameParams, metadata?: Metadata): Promise<ElementHandleContentFrameResult>;\n  dblclick(params: ElementHandleDblclickParams, metadata?: Metadata): Promise<ElementHandleDblclickResult>;\n  dispatchEvent(params: ElementHandleDispatchEventParams, metadata?: Metadata): Promise<ElementHandleDispatchEventResult>;\n  fill(params: ElementHandleFillParams, metadata?: Metadata): Promise<ElementHandleFillResult>;\n  focus(params?: ElementHandleFocusParams, metadata?: Metadata): Promise<ElementHandleFocusResult>;\n  getAttribute(params: ElementHandleGetAttributeParams, metadata?: Metadata): Promise<ElementHandleGetAttributeResult>;\n  hover(params: ElementHandleHoverParams, metadata?: Metadata): Promise<ElementHandleHoverResult>;\n  innerHTML(params?: ElementHandleInnerHTMLParams, metadata?: Metadata): Promise<ElementHandleInnerHTMLResult>;\n  innerText(params?: ElementHandleInnerTextParams, metadata?: Metadata): Promise<ElementHandleInnerTextResult>;\n  inputValue(params?: ElementHandleInputValueParams, metadata?: Metadata): Promise<ElementHandleInputValueResult>;\n  isChecked(params?: ElementHandleIsCheckedParams, metadata?: Metadata): Promise<ElementHandleIsCheckedResult>;\n  isDisabled(params?: ElementHandleIsDisabledParams, metadata?: Metadata): Promise<ElementHandleIsDisabledResult>;\n  isEditable(params?: ElementHandleIsEditableParams, metadata?: Metadata): Promise<ElementHandleIsEditableResult>;\n  isEnabled(params?: ElementHandleIsEnabledParams, metadata?: Metadata): Promise<ElementHandleIsEnabledResult>;\n  isHidden(params?: ElementHandleIsHiddenParams, metadata?: Metadata): Promise<ElementHandleIsHiddenResult>;\n  isVisible(params?: ElementHandleIsVisibleParams, metadata?: Metadata): Promise<ElementHandleIsVisibleResult>;\n  ownerFrame(params?: ElementHandleOwnerFrameParams, metadata?: Metadata): Promise<ElementHandleOwnerFrameResult>;\n  press(params: ElementHandlePressParams, metadata?: Metadata): Promise<ElementHandlePressResult>;\n  querySelector(params: ElementHandleQuerySelectorParams, metadata?: Metadata): Promise<ElementHandleQuerySelectorResult>;\n  querySelectorAll(params: ElementHandleQuerySelectorAllParams, metadata?: Metadata): Promise<ElementHandleQuerySelectorAllResult>;\n  screenshot(params: ElementHandleScreenshotParams, metadata?: Metadata): Promise<ElementHandleScreenshotResult>;\n  scrollIntoViewIfNeeded(params: ElementHandleScrollIntoViewIfNeededParams, metadata?: Metadata): Promise<ElementHandleScrollIntoViewIfNeededResult>;\n  selectOption(params: ElementHandleSelectOptionParams, metadata?: Metadata): Promise<ElementHandleSelectOptionResult>;\n  selectText(params: ElementHandleSelectTextParams, metadata?: Metadata): Promise<ElementHandleSelectTextResult>;\n  setInputFiles(params: ElementHandleSetInputFilesParams, metadata?: Metadata): Promise<ElementHandleSetInputFilesResult>;\n  tap(params: ElementHandleTapParams, metadata?: Metadata): Promise<ElementHandleTapResult>;\n  textContent(params?: ElementHandleTextContentParams, metadata?: Metadata): Promise<ElementHandleTextContentResult>;\n  type(params: ElementHandleTypeParams, metadata?: Metadata): Promise<ElementHandleTypeResult>;\n  uncheck(params: ElementHandleUncheckParams, metadata?: Metadata): Promise<ElementHandleUncheckResult>;\n  waitForElementState(params: ElementHandleWaitForElementStateParams, metadata?: Metadata): Promise<ElementHandleWaitForElementStateResult>;\n  waitForSelector(params: ElementHandleWaitForSelectorParams, metadata?: Metadata): Promise<ElementHandleWaitForSelectorResult>;\n}\nexport type ElementHandleEvalOnSelectorParams = {\n  selector: string,\n  strict?: boolean,\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type ElementHandleEvalOnSelectorOptions = {\n  strict?: boolean,\n  isFunction?: boolean,\n};\nexport type ElementHandleEvalOnSelectorResult = {\n  value: SerializedValue,\n};\nexport type ElementHandleEvalOnSelectorAllParams = {\n  selector: string,\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type ElementHandleEvalOnSelectorAllOptions = {\n  isFunction?: boolean,\n};\nexport type ElementHandleEvalOnSelectorAllResult = {\n  value: SerializedValue,\n};\nexport type ElementHandleBoundingBoxParams = {};\nexport type ElementHandleBoundingBoxOptions = {};\nexport type ElementHandleBoundingBoxResult = {\n  value?: Rect,\n};\nexport type ElementHandleCheckParams = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleCheckOptions = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleCheckResult = void;\nexport type ElementHandleClickParams = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleClickOptions = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  clickCount?: number,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleClickResult = void;\nexport type ElementHandleContentFrameParams = {};\nexport type ElementHandleContentFrameOptions = {};\nexport type ElementHandleContentFrameResult = {\n  frame?: FrameChannel,\n};\nexport type ElementHandleDblclickParams = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleDblclickOptions = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  delay?: number,\n  button?: 'left' | 'right' | 'middle',\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleDblclickResult = void;\nexport type ElementHandleDispatchEventParams = {\n  type: string,\n  eventInit: SerializedArgument,\n};\nexport type ElementHandleDispatchEventOptions = {\n\n};\nexport type ElementHandleDispatchEventResult = void;\nexport type ElementHandleFillParams = {\n  value: string,\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandleFillOptions = {\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandleFillResult = void;\nexport type ElementHandleFocusParams = {};\nexport type ElementHandleFocusOptions = {};\nexport type ElementHandleFocusResult = void;\nexport type ElementHandleGetAttributeParams = {\n  name: string,\n};\nexport type ElementHandleGetAttributeOptions = {\n\n};\nexport type ElementHandleGetAttributeResult = {\n  value?: string,\n};\nexport type ElementHandleHoverParams = {\n  force?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleHoverOptions = {\n  force?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleHoverResult = void;\nexport type ElementHandleInnerHTMLParams = {};\nexport type ElementHandleInnerHTMLOptions = {};\nexport type ElementHandleInnerHTMLResult = {\n  value: string,\n};\nexport type ElementHandleInnerTextParams = {};\nexport type ElementHandleInnerTextOptions = {};\nexport type ElementHandleInnerTextResult = {\n  value: string,\n};\nexport type ElementHandleInputValueParams = {};\nexport type ElementHandleInputValueOptions = {};\nexport type ElementHandleInputValueResult = {\n  value: string,\n};\nexport type ElementHandleIsCheckedParams = {};\nexport type ElementHandleIsCheckedOptions = {};\nexport type ElementHandleIsCheckedResult = {\n  value: boolean,\n};\nexport type ElementHandleIsDisabledParams = {};\nexport type ElementHandleIsDisabledOptions = {};\nexport type ElementHandleIsDisabledResult = {\n  value: boolean,\n};\nexport type ElementHandleIsEditableParams = {};\nexport type ElementHandleIsEditableOptions = {};\nexport type ElementHandleIsEditableResult = {\n  value: boolean,\n};\nexport type ElementHandleIsEnabledParams = {};\nexport type ElementHandleIsEnabledOptions = {};\nexport type ElementHandleIsEnabledResult = {\n  value: boolean,\n};\nexport type ElementHandleIsHiddenParams = {};\nexport type ElementHandleIsHiddenOptions = {};\nexport type ElementHandleIsHiddenResult = {\n  value: boolean,\n};\nexport type ElementHandleIsVisibleParams = {};\nexport type ElementHandleIsVisibleOptions = {};\nexport type ElementHandleIsVisibleResult = {\n  value: boolean,\n};\nexport type ElementHandleOwnerFrameParams = {};\nexport type ElementHandleOwnerFrameOptions = {};\nexport type ElementHandleOwnerFrameResult = {\n  frame?: FrameChannel,\n};\nexport type ElementHandlePressParams = {\n  key: string,\n  delay?: number,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandlePressOptions = {\n  delay?: number,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandlePressResult = void;\nexport type ElementHandleQuerySelectorParams = {\n  selector: string,\n  strict?: boolean,\n};\nexport type ElementHandleQuerySelectorOptions = {\n  strict?: boolean,\n};\nexport type ElementHandleQuerySelectorResult = {\n  element?: ElementHandleChannel,\n};\nexport type ElementHandleQuerySelectorAllParams = {\n  selector: string,\n};\nexport type ElementHandleQuerySelectorAllOptions = {\n\n};\nexport type ElementHandleQuerySelectorAllResult = {\n  elements: ElementHandleChannel[],\n};\nexport type ElementHandleScreenshotParams = {\n  timeout?: number,\n  type?: 'png' | 'jpeg',\n  quality?: number,\n  omitBackground?: boolean,\n};\nexport type ElementHandleScreenshotOptions = {\n  timeout?: number,\n  type?: 'png' | 'jpeg',\n  quality?: number,\n  omitBackground?: boolean,\n};\nexport type ElementHandleScreenshotResult = {\n  binary: Binary,\n};\nexport type ElementHandleScrollIntoViewIfNeededParams = {\n  timeout?: number,\n};\nexport type ElementHandleScrollIntoViewIfNeededOptions = {\n  timeout?: number,\n};\nexport type ElementHandleScrollIntoViewIfNeededResult = void;\nexport type ElementHandleSelectOptionParams = {\n  elements?: ElementHandleChannel[],\n  options?: {\n    value?: string,\n    label?: string,\n    index?: number,\n  }[],\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandleSelectOptionOptions = {\n  elements?: ElementHandleChannel[],\n  options?: {\n    value?: string,\n    label?: string,\n    index?: number,\n  }[],\n  force?: boolean,\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandleSelectOptionResult = {\n  values: string[],\n};\nexport type ElementHandleSelectTextParams = {\n  force?: boolean,\n  timeout?: number,\n};\nexport type ElementHandleSelectTextOptions = {\n  force?: boolean,\n  timeout?: number,\n};\nexport type ElementHandleSelectTextResult = void;\nexport type ElementHandleSetInputFilesParams = {\n  files: {\n    name: string,\n    mimeType?: string,\n    buffer: Binary,\n  }[],\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandleSetInputFilesOptions = {\n  timeout?: number,\n  noWaitAfter?: boolean,\n};\nexport type ElementHandleSetInputFilesResult = void;\nexport type ElementHandleTapParams = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleTapOptions = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  modifiers?: ('Alt' | 'Control' | 'Meta' | 'Shift')[],\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleTapResult = void;\nexport type ElementHandleTextContentParams = {};\nexport type ElementHandleTextContentOptions = {};\nexport type ElementHandleTextContentResult = {\n  value?: string,\n};\nexport type ElementHandleTypeParams = {\n  text: string,\n  delay?: number,\n  noWaitAfter?: boolean,\n  timeout?: number,\n};\nexport type ElementHandleTypeOptions = {\n  delay?: number,\n  noWaitAfter?: boolean,\n  timeout?: number,\n};\nexport type ElementHandleTypeResult = void;\nexport type ElementHandleUncheckParams = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleUncheckOptions = {\n  force?: boolean,\n  noWaitAfter?: boolean,\n  position?: Point,\n  timeout?: number,\n  trial?: boolean,\n};\nexport type ElementHandleUncheckResult = void;\nexport type ElementHandleWaitForElementStateParams = {\n  state: 'visible' | 'hidden' | 'stable' | 'enabled' | 'disabled' | 'editable',\n  timeout?: number,\n};\nexport type ElementHandleWaitForElementStateOptions = {\n  timeout?: number,\n};\nexport type ElementHandleWaitForElementStateResult = void;\nexport type ElementHandleWaitForSelectorParams = {\n  selector: string,\n  strict?: boolean,\n  timeout?: number,\n  state?: 'attached' | 'detached' | 'visible' | 'hidden',\n};\nexport type ElementHandleWaitForSelectorOptions = {\n  strict?: boolean,\n  timeout?: number,\n  state?: 'attached' | 'detached' | 'visible' | 'hidden',\n};\nexport type ElementHandleWaitForSelectorResult = {\n  element?: ElementHandleChannel,\n};\n\n// ----------- Request -----------\nexport type RequestInitializer = {\n  frame: FrameChannel,\n  url: string,\n  resourceType: string,\n  method: string,\n  postData?: Binary,\n  headers: {\n    name: string,\n    value: string,\n  }[],\n  isNavigationRequest: boolean,\n  redirectedFrom?: RequestChannel,\n};\nexport interface RequestChannel extends Channel {\n  response(params?: RequestResponseParams, metadata?: Metadata): Promise<RequestResponseResult>;\n}\nexport type RequestResponseParams = {};\nexport type RequestResponseOptions = {};\nexport type RequestResponseResult = {\n  response?: ResponseChannel,\n};\n\n// ----------- Route -----------\nexport type RouteInitializer = {\n  request: RequestChannel,\n};\nexport interface RouteChannel extends Channel {\n  abort(params: RouteAbortParams, metadata?: Metadata): Promise<RouteAbortResult>;\n  continue(params: RouteContinueParams, metadata?: Metadata): Promise<RouteContinueResult>;\n  fulfill(params: RouteFulfillParams, metadata?: Metadata): Promise<RouteFulfillResult>;\n  responseBody(params?: RouteResponseBodyParams, metadata?: Metadata): Promise<RouteResponseBodyResult>;\n}\nexport type RouteAbortParams = {\n  errorCode?: string,\n};\nexport type RouteAbortOptions = {\n  errorCode?: string,\n};\nexport type RouteAbortResult = void;\nexport type RouteContinueParams = {\n  url?: string,\n  method?: string,\n  headers?: NameValue[],\n  postData?: Binary,\n  interceptResponse?: boolean,\n};\nexport type RouteContinueOptions = {\n  url?: string,\n  method?: string,\n  headers?: NameValue[],\n  postData?: Binary,\n  interceptResponse?: boolean,\n};\nexport type RouteContinueResult = {\n  response?: InterceptedResponse,\n};\nexport type RouteFulfillParams = {\n  status?: number,\n  headers?: NameValue[],\n  body?: string,\n  isBase64?: boolean,\n};\nexport type RouteFulfillOptions = {\n  status?: number,\n  headers?: NameValue[],\n  body?: string,\n  isBase64?: boolean,\n};\nexport type RouteFulfillResult = void;\nexport type RouteResponseBodyParams = {};\nexport type RouteResponseBodyOptions = {};\nexport type RouteResponseBodyResult = {\n  binary: Binary,\n};\n\nexport type ResourceTiming = {\n  startTime: number,\n  domainLookupStart: number,\n  domainLookupEnd: number,\n  connectStart: number,\n  secureConnectionStart: number,\n  connectEnd: number,\n  requestStart: number,\n  responseStart: number,\n};\n\n// ----------- Response -----------\nexport type ResponseInitializer = {\n  request: RequestChannel,\n  url: string,\n  status: number,\n  statusText: string,\n  requestHeaders: {\n    name: string,\n    value: string,\n  }[],\n  headers: {\n    name: string,\n    value: string,\n  }[],\n  timing: ResourceTiming,\n};\nexport interface ResponseChannel extends Channel {\n  body(params?: ResponseBodyParams, metadata?: Metadata): Promise<ResponseBodyResult>;\n  finished(params?: ResponseFinishedParams, metadata?: Metadata): Promise<ResponseFinishedResult>;\n  securityDetails(params?: ResponseSecurityDetailsParams, metadata?: Metadata): Promise<ResponseSecurityDetailsResult>;\n  serverAddr(params?: ResponseServerAddrParams, metadata?: Metadata): Promise<ResponseServerAddrResult>;\n}\nexport type ResponseBodyParams = {};\nexport type ResponseBodyOptions = {};\nexport type ResponseBodyResult = {\n  binary: Binary,\n};\nexport type ResponseFinishedParams = {};\nexport type ResponseFinishedOptions = {};\nexport type ResponseFinishedResult = {\n  error?: string,\n};\nexport type ResponseSecurityDetailsParams = {};\nexport type ResponseSecurityDetailsOptions = {};\nexport type ResponseSecurityDetailsResult = {\n  value?: SecurityDetails,\n};\nexport type ResponseServerAddrParams = {};\nexport type ResponseServerAddrOptions = {};\nexport type ResponseServerAddrResult = {\n  value?: RemoteAddr,\n};\n\nexport type SecurityDetails = {\n  issuer?: string,\n  protocol?: string,\n  subjectName?: string,\n  validFrom?: number,\n  validTo?: number,\n};\n\nexport type RemoteAddr = {\n  ipAddress: string,\n  port: number,\n};\n\n// ----------- WebSocket -----------\nexport type WebSocketInitializer = {\n  url: string,\n};\nexport interface WebSocketChannel extends EventTargetChannel {\n  on(event: 'open', callback: (params: WebSocketOpenEvent) => void): this;\n  on(event: 'frameSent', callback: (params: WebSocketFrameSentEvent) => void): this;\n  on(event: 'frameReceived', callback: (params: WebSocketFrameReceivedEvent) => void): this;\n  on(event: 'socketError', callback: (params: WebSocketSocketErrorEvent) => void): this;\n  on(event: 'close', callback: (params: WebSocketCloseEvent) => void): this;\n}\nexport type WebSocketOpenEvent = {};\nexport type WebSocketFrameSentEvent = {\n  opcode: number,\n  data: string,\n};\nexport type WebSocketFrameReceivedEvent = {\n  opcode: number,\n  data: string,\n};\nexport type WebSocketSocketErrorEvent = {\n  error: string,\n};\nexport type WebSocketCloseEvent = {};\n\n// ----------- ConsoleMessage -----------\nexport type ConsoleMessageInitializer = {\n  type: string,\n  text: string,\n  args: JSHandleChannel[],\n  location: {\n    url: string,\n    lineNumber: number,\n    columnNumber: number,\n  },\n};\nexport interface ConsoleMessageChannel extends Channel {\n}\n\n// ----------- BindingCall -----------\nexport type BindingCallInitializer = {\n  frame: FrameChannel,\n  name: string,\n  args?: SerializedValue[],\n  handle?: JSHandleChannel,\n};\nexport interface BindingCallChannel extends Channel {\n  reject(params: BindingCallRejectParams, metadata?: Metadata): Promise<BindingCallRejectResult>;\n  resolve(params: BindingCallResolveParams, metadata?: Metadata): Promise<BindingCallResolveResult>;\n}\nexport type BindingCallRejectParams = {\n  error: SerializedError,\n};\nexport type BindingCallRejectOptions = {\n\n};\nexport type BindingCallRejectResult = void;\nexport type BindingCallResolveParams = {\n  result: SerializedArgument,\n};\nexport type BindingCallResolveOptions = {\n\n};\nexport type BindingCallResolveResult = void;\n\n// ----------- Dialog -----------\nexport type DialogInitializer = {\n  type: string,\n  message: string,\n  defaultValue: string,\n};\nexport interface DialogChannel extends Channel {\n  accept(params: DialogAcceptParams, metadata?: Metadata): Promise<DialogAcceptResult>;\n  dismiss(params?: DialogDismissParams, metadata?: Metadata): Promise<DialogDismissResult>;\n}\nexport type DialogAcceptParams = {\n  promptText?: string,\n};\nexport type DialogAcceptOptions = {\n  promptText?: string,\n};\nexport type DialogAcceptResult = void;\nexport type DialogDismissParams = {};\nexport type DialogDismissOptions = {};\nexport type DialogDismissResult = void;\n\n// ----------- Artifact -----------\nexport type ArtifactInitializer = {\n  absolutePath: string,\n};\nexport interface ArtifactChannel extends Channel {\n  pathAfterFinished(params?: ArtifactPathAfterFinishedParams, metadata?: Metadata): Promise<ArtifactPathAfterFinishedResult>;\n  saveAs(params: ArtifactSaveAsParams, metadata?: Metadata): Promise<ArtifactSaveAsResult>;\n  saveAsStream(params?: ArtifactSaveAsStreamParams, metadata?: Metadata): Promise<ArtifactSaveAsStreamResult>;\n  failure(params?: ArtifactFailureParams, metadata?: Metadata): Promise<ArtifactFailureResult>;\n  stream(params?: ArtifactStreamParams, metadata?: Metadata): Promise<ArtifactStreamResult>;\n  cancel(params?: ArtifactCancelParams, metadata?: Metadata): Promise<ArtifactCancelResult>;\n  delete(params?: ArtifactDeleteParams, metadata?: Metadata): Promise<ArtifactDeleteResult>;\n}\nexport type ArtifactPathAfterFinishedParams = {};\nexport type ArtifactPathAfterFinishedOptions = {};\nexport type ArtifactPathAfterFinishedResult = {\n  value?: string,\n};\nexport type ArtifactSaveAsParams = {\n  path: string,\n};\nexport type ArtifactSaveAsOptions = {\n\n};\nexport type ArtifactSaveAsResult = void;\nexport type ArtifactSaveAsStreamParams = {};\nexport type ArtifactSaveAsStreamOptions = {};\nexport type ArtifactSaveAsStreamResult = {\n  stream: StreamChannel,\n};\nexport type ArtifactFailureParams = {};\nexport type ArtifactFailureOptions = {};\nexport type ArtifactFailureResult = {\n  error?: string,\n};\nexport type ArtifactStreamParams = {};\nexport type ArtifactStreamOptions = {};\nexport type ArtifactStreamResult = {\n  stream?: StreamChannel,\n};\nexport type ArtifactCancelParams = {};\nexport type ArtifactCancelOptions = {};\nexport type ArtifactCancelResult = void;\nexport type ArtifactDeleteParams = {};\nexport type ArtifactDeleteOptions = {};\nexport type ArtifactDeleteResult = void;\n\n// ----------- Stream -----------\nexport type StreamInitializer = {};\nexport interface StreamChannel extends Channel {\n  read(params: StreamReadParams, metadata?: Metadata): Promise<StreamReadResult>;\n  close(params?: StreamCloseParams, metadata?: Metadata): Promise<StreamCloseResult>;\n}\nexport type StreamReadParams = {\n  size?: number,\n};\nexport type StreamReadOptions = {\n  size?: number,\n};\nexport type StreamReadResult = {\n  binary: Binary,\n};\nexport type StreamCloseParams = {};\nexport type StreamCloseOptions = {};\nexport type StreamCloseResult = void;\n\n// ----------- CDPSession -----------\nexport type CDPSessionInitializer = {};\nexport interface CDPSessionChannel extends Channel {\n  on(event: 'event', callback: (params: CDPSessionEventEvent) => void): this;\n  send(params: CDPSessionSendParams, metadata?: Metadata): Promise<CDPSessionSendResult>;\n  detach(params?: CDPSessionDetachParams, metadata?: Metadata): Promise<CDPSessionDetachResult>;\n}\nexport type CDPSessionEventEvent = {\n  method: string,\n  params?: any,\n};\nexport type CDPSessionSendParams = {\n  method: string,\n  params?: any,\n};\nexport type CDPSessionSendOptions = {\n  params?: any,\n};\nexport type CDPSessionSendResult = {\n  result: any,\n};\nexport type CDPSessionDetachParams = {};\nexport type CDPSessionDetachOptions = {};\nexport type CDPSessionDetachResult = void;\n\n// ----------- Electron -----------\nexport type ElectronInitializer = {};\nexport interface ElectronChannel extends Channel {\n  launch(params: ElectronLaunchParams, metadata?: Metadata): Promise<ElectronLaunchResult>;\n}\nexport type ElectronLaunchParams = {\n  sdkLanguage: string,\n  executablePath?: string,\n  args?: string[],\n  cwd?: string,\n  env?: NameValue[],\n  timeout?: number,\n  acceptDownloads?: boolean,\n  bypassCSP?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  extraHTTPHeaders?: NameValue[],\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  ignoreHTTPSErrors?: boolean,\n  locale?: string,\n  offline?: boolean,\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  strictSelectors?: boolean,\n  timezoneId?: string,\n};\nexport type ElectronLaunchOptions = {\n  executablePath?: string,\n  args?: string[],\n  cwd?: string,\n  env?: NameValue[],\n  timeout?: number,\n  acceptDownloads?: boolean,\n  bypassCSP?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  extraHTTPHeaders?: NameValue[],\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  ignoreHTTPSErrors?: boolean,\n  locale?: string,\n  offline?: boolean,\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  strictSelectors?: boolean,\n  timezoneId?: string,\n};\nexport type ElectronLaunchResult = {\n  electronApplication: ElectronApplicationChannel,\n};\n\n// ----------- ElectronApplication -----------\nexport type ElectronApplicationInitializer = {\n  context: BrowserContextChannel,\n};\nexport interface ElectronApplicationChannel extends EventTargetChannel {\n  on(event: 'close', callback: (params: ElectronApplicationCloseEvent) => void): this;\n  browserWindow(params: ElectronApplicationBrowserWindowParams, metadata?: Metadata): Promise<ElectronApplicationBrowserWindowResult>;\n  evaluateExpression(params: ElectronApplicationEvaluateExpressionParams, metadata?: Metadata): Promise<ElectronApplicationEvaluateExpressionResult>;\n  evaluateExpressionHandle(params: ElectronApplicationEvaluateExpressionHandleParams, metadata?: Metadata): Promise<ElectronApplicationEvaluateExpressionHandleResult>;\n  close(params?: ElectronApplicationCloseParams, metadata?: Metadata): Promise<ElectronApplicationCloseResult>;\n}\nexport type ElectronApplicationCloseEvent = {};\nexport type ElectronApplicationBrowserWindowParams = {\n  page: PageChannel,\n};\nexport type ElectronApplicationBrowserWindowOptions = {\n\n};\nexport type ElectronApplicationBrowserWindowResult = {\n  handle: JSHandleChannel,\n};\nexport type ElectronApplicationEvaluateExpressionParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type ElectronApplicationEvaluateExpressionOptions = {\n  isFunction?: boolean,\n};\nexport type ElectronApplicationEvaluateExpressionResult = {\n  value: SerializedValue,\n};\nexport type ElectronApplicationEvaluateExpressionHandleParams = {\n  expression: string,\n  isFunction?: boolean,\n  arg: SerializedArgument,\n};\nexport type ElectronApplicationEvaluateExpressionHandleOptions = {\n  isFunction?: boolean,\n};\nexport type ElectronApplicationEvaluateExpressionHandleResult = {\n  handle: JSHandleChannel,\n};\nexport type ElectronApplicationCloseParams = {};\nexport type ElectronApplicationCloseOptions = {};\nexport type ElectronApplicationCloseResult = void;\n\n// ----------- Android -----------\nexport type AndroidInitializer = {};\nexport interface AndroidChannel extends Channel {\n  devices(params?: AndroidDevicesParams, metadata?: Metadata): Promise<AndroidDevicesResult>;\n  setDefaultTimeoutNoReply(params: AndroidSetDefaultTimeoutNoReplyParams, metadata?: Metadata): Promise<AndroidSetDefaultTimeoutNoReplyResult>;\n}\nexport type AndroidDevicesParams = {};\nexport type AndroidDevicesOptions = {};\nexport type AndroidDevicesResult = {\n  devices: AndroidDeviceChannel[],\n};\nexport type AndroidSetDefaultTimeoutNoReplyParams = {\n  timeout: number,\n};\nexport type AndroidSetDefaultTimeoutNoReplyOptions = {\n\n};\nexport type AndroidSetDefaultTimeoutNoReplyResult = void;\n\n// ----------- AndroidSocket -----------\nexport type AndroidSocketInitializer = {};\nexport interface AndroidSocketChannel extends Channel {\n  on(event: 'data', callback: (params: AndroidSocketDataEvent) => void): this;\n  on(event: 'close', callback: (params: AndroidSocketCloseEvent) => void): this;\n  write(params: AndroidSocketWriteParams, metadata?: Metadata): Promise<AndroidSocketWriteResult>;\n  close(params?: AndroidSocketCloseParams, metadata?: Metadata): Promise<AndroidSocketCloseResult>;\n}\nexport type AndroidSocketDataEvent = {\n  data: Binary,\n};\nexport type AndroidSocketCloseEvent = {};\nexport type AndroidSocketWriteParams = {\n  data: Binary,\n};\nexport type AndroidSocketWriteOptions = {\n\n};\nexport type AndroidSocketWriteResult = void;\nexport type AndroidSocketCloseParams = {};\nexport type AndroidSocketCloseOptions = {};\nexport type AndroidSocketCloseResult = void;\n\n// ----------- AndroidDevice -----------\nexport type AndroidDeviceInitializer = {\n  model: string,\n  serial: string,\n};\nexport interface AndroidDeviceChannel extends EventTargetChannel {\n  on(event: 'webViewAdded', callback: (params: AndroidDeviceWebViewAddedEvent) => void): this;\n  on(event: 'webViewRemoved', callback: (params: AndroidDeviceWebViewRemovedEvent) => void): this;\n  wait(params: AndroidDeviceWaitParams, metadata?: Metadata): Promise<AndroidDeviceWaitResult>;\n  fill(params: AndroidDeviceFillParams, metadata?: Metadata): Promise<AndroidDeviceFillResult>;\n  tap(params: AndroidDeviceTapParams, metadata?: Metadata): Promise<AndroidDeviceTapResult>;\n  drag(params: AndroidDeviceDragParams, metadata?: Metadata): Promise<AndroidDeviceDragResult>;\n  fling(params: AndroidDeviceFlingParams, metadata?: Metadata): Promise<AndroidDeviceFlingResult>;\n  longTap(params: AndroidDeviceLongTapParams, metadata?: Metadata): Promise<AndroidDeviceLongTapResult>;\n  pinchClose(params: AndroidDevicePinchCloseParams, metadata?: Metadata): Promise<AndroidDevicePinchCloseResult>;\n  pinchOpen(params: AndroidDevicePinchOpenParams, metadata?: Metadata): Promise<AndroidDevicePinchOpenResult>;\n  scroll(params: AndroidDeviceScrollParams, metadata?: Metadata): Promise<AndroidDeviceScrollResult>;\n  swipe(params: AndroidDeviceSwipeParams, metadata?: Metadata): Promise<AndroidDeviceSwipeResult>;\n  info(params: AndroidDeviceInfoParams, metadata?: Metadata): Promise<AndroidDeviceInfoResult>;\n  screenshot(params?: AndroidDeviceScreenshotParams, metadata?: Metadata): Promise<AndroidDeviceScreenshotResult>;\n  inputType(params: AndroidDeviceInputTypeParams, metadata?: Metadata): Promise<AndroidDeviceInputTypeResult>;\n  inputPress(params: AndroidDeviceInputPressParams, metadata?: Metadata): Promise<AndroidDeviceInputPressResult>;\n  inputTap(params: AndroidDeviceInputTapParams, metadata?: Metadata): Promise<AndroidDeviceInputTapResult>;\n  inputSwipe(params: AndroidDeviceInputSwipeParams, metadata?: Metadata): Promise<AndroidDeviceInputSwipeResult>;\n  inputDrag(params: AndroidDeviceInputDragParams, metadata?: Metadata): Promise<AndroidDeviceInputDragResult>;\n  launchBrowser(params: AndroidDeviceLaunchBrowserParams, metadata?: Metadata): Promise<AndroidDeviceLaunchBrowserResult>;\n  open(params: AndroidDeviceOpenParams, metadata?: Metadata): Promise<AndroidDeviceOpenResult>;\n  shell(params: AndroidDeviceShellParams, metadata?: Metadata): Promise<AndroidDeviceShellResult>;\n  installApk(params: AndroidDeviceInstallApkParams, metadata?: Metadata): Promise<AndroidDeviceInstallApkResult>;\n  push(params: AndroidDevicePushParams, metadata?: Metadata): Promise<AndroidDevicePushResult>;\n  setDefaultTimeoutNoReply(params: AndroidDeviceSetDefaultTimeoutNoReplyParams, metadata?: Metadata): Promise<AndroidDeviceSetDefaultTimeoutNoReplyResult>;\n  connectToWebView(params: AndroidDeviceConnectToWebViewParams, metadata?: Metadata): Promise<AndroidDeviceConnectToWebViewResult>;\n  close(params?: AndroidDeviceCloseParams, metadata?: Metadata): Promise<AndroidDeviceCloseResult>;\n}\nexport type AndroidDeviceWebViewAddedEvent = {\n  webView: AndroidWebView,\n};\nexport type AndroidDeviceWebViewRemovedEvent = {\n  pid: number,\n};\nexport type AndroidDeviceWaitParams = {\n  selector: AndroidSelector,\n  state?: 'gone',\n  timeout?: number,\n};\nexport type AndroidDeviceWaitOptions = {\n  state?: 'gone',\n  timeout?: number,\n};\nexport type AndroidDeviceWaitResult = void;\nexport type AndroidDeviceFillParams = {\n  selector: AndroidSelector,\n  text: string,\n  timeout?: number,\n};\nexport type AndroidDeviceFillOptions = {\n  timeout?: number,\n};\nexport type AndroidDeviceFillResult = void;\nexport type AndroidDeviceTapParams = {\n  selector: AndroidSelector,\n  duration?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceTapOptions = {\n  duration?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceTapResult = void;\nexport type AndroidDeviceDragParams = {\n  selector: AndroidSelector,\n  dest: Point,\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceDragOptions = {\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceDragResult = void;\nexport type AndroidDeviceFlingParams = {\n  selector: AndroidSelector,\n  direction: 'up' | 'down' | 'left' | 'right',\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceFlingOptions = {\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceFlingResult = void;\nexport type AndroidDeviceLongTapParams = {\n  selector: AndroidSelector,\n  timeout?: number,\n};\nexport type AndroidDeviceLongTapOptions = {\n  timeout?: number,\n};\nexport type AndroidDeviceLongTapResult = void;\nexport type AndroidDevicePinchCloseParams = {\n  selector: AndroidSelector,\n  percent: number,\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDevicePinchCloseOptions = {\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDevicePinchCloseResult = void;\nexport type AndroidDevicePinchOpenParams = {\n  selector: AndroidSelector,\n  percent: number,\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDevicePinchOpenOptions = {\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDevicePinchOpenResult = void;\nexport type AndroidDeviceScrollParams = {\n  selector: AndroidSelector,\n  direction: 'up' | 'down' | 'left' | 'right',\n  percent: number,\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceScrollOptions = {\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceScrollResult = void;\nexport type AndroidDeviceSwipeParams = {\n  selector: AndroidSelector,\n  direction: 'up' | 'down' | 'left' | 'right',\n  percent: number,\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceSwipeOptions = {\n  speed?: number,\n  timeout?: number,\n};\nexport type AndroidDeviceSwipeResult = void;\nexport type AndroidDeviceInfoParams = {\n  selector: AndroidSelector,\n};\nexport type AndroidDeviceInfoOptions = {\n\n};\nexport type AndroidDeviceInfoResult = {\n  info: AndroidElementInfo,\n};\nexport type AndroidDeviceScreenshotParams = {};\nexport type AndroidDeviceScreenshotOptions = {};\nexport type AndroidDeviceScreenshotResult = {\n  binary: Binary,\n};\nexport type AndroidDeviceInputTypeParams = {\n  text: string,\n};\nexport type AndroidDeviceInputTypeOptions = {\n\n};\nexport type AndroidDeviceInputTypeResult = void;\nexport type AndroidDeviceInputPressParams = {\n  key: string,\n};\nexport type AndroidDeviceInputPressOptions = {\n\n};\nexport type AndroidDeviceInputPressResult = void;\nexport type AndroidDeviceInputTapParams = {\n  point: Point,\n};\nexport type AndroidDeviceInputTapOptions = {\n\n};\nexport type AndroidDeviceInputTapResult = void;\nexport type AndroidDeviceInputSwipeParams = {\n  segments: Point[],\n  steps: number,\n};\nexport type AndroidDeviceInputSwipeOptions = {\n\n};\nexport type AndroidDeviceInputSwipeResult = void;\nexport type AndroidDeviceInputDragParams = {\n  from: Point,\n  to: Point,\n  steps: number,\n};\nexport type AndroidDeviceInputDragOptions = {\n\n};\nexport type AndroidDeviceInputDragResult = void;\nexport type AndroidDeviceLaunchBrowserParams = {\n  sdkLanguage: string,\n  pkg?: string,\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  permissions?: string[],\n  extraHTTPHeaders?: NameValue[],\n  offline?: boolean,\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  reducedMotion?: 'reduce' | 'no-preference',\n  acceptDownloads?: boolean,\n  _debugName?: string,\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  strictSelectors?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n};\nexport type AndroidDeviceLaunchBrowserOptions = {\n  pkg?: string,\n  ignoreHTTPSErrors?: boolean,\n  javaScriptEnabled?: boolean,\n  bypassCSP?: boolean,\n  userAgent?: string,\n  locale?: string,\n  timezoneId?: string,\n  geolocation?: {\n    longitude: number,\n    latitude: number,\n    accuracy?: number,\n  },\n  permissions?: string[],\n  extraHTTPHeaders?: NameValue[],\n  offline?: boolean,\n  httpCredentials?: {\n    username: string,\n    password: string,\n  },\n  deviceScaleFactor?: number,\n  isMobile?: boolean,\n  hasTouch?: boolean,\n  colorScheme?: 'dark' | 'light' | 'no-preference',\n  reducedMotion?: 'reduce' | 'no-preference',\n  acceptDownloads?: boolean,\n  _debugName?: string,\n  recordVideo?: {\n    dir: string,\n    size?: {\n      width: number,\n      height: number,\n    },\n  },\n  recordHar?: {\n    omitContent?: boolean,\n    path: string,\n  },\n  strictSelectors?: boolean,\n  proxy?: {\n    server: string,\n    bypass?: string,\n    username?: string,\n    password?: string,\n  },\n};\nexport type AndroidDeviceLaunchBrowserResult = {\n  context: BrowserContextChannel,\n};\nexport type AndroidDeviceOpenParams = {\n  command: string,\n};\nexport type AndroidDeviceOpenOptions = {\n\n};\nexport type AndroidDeviceOpenResult = {\n  socket: AndroidSocketChannel,\n};\nexport type AndroidDeviceShellParams = {\n  command: string,\n};\nexport type AndroidDeviceShellOptions = {\n\n};\nexport type AndroidDeviceShellResult = {\n  result: Binary,\n};\nexport type AndroidDeviceInstallApkParams = {\n  file: Binary,\n  args?: string[],\n};\nexport type AndroidDeviceInstallApkOptions = {\n  args?: string[],\n};\nexport type AndroidDeviceInstallApkResult = void;\nexport type AndroidDevicePushParams = {\n  file: Binary,\n  path: string,\n  mode?: number,\n};\nexport type AndroidDevicePushOptions = {\n  mode?: number,\n};\nexport type AndroidDevicePushResult = void;\nexport type AndroidDeviceSetDefaultTimeoutNoReplyParams = {\n  timeout: number,\n};\nexport type AndroidDeviceSetDefaultTimeoutNoReplyOptions = {\n\n};\nexport type AndroidDeviceSetDefaultTimeoutNoReplyResult = void;\nexport type AndroidDeviceConnectToWebViewParams = {\n  sdkLanguage: string,\n  pid: number,\n};\nexport type AndroidDeviceConnectToWebViewOptions = {\n\n};\nexport type AndroidDeviceConnectToWebViewResult = {\n  context: BrowserContextChannel,\n};\nexport type AndroidDeviceCloseParams = {};\nexport type AndroidDeviceCloseOptions = {};\nexport type AndroidDeviceCloseResult = void;\n\nexport type AndroidWebView = {\n  pid: number,\n  pkg: string,\n};\n\nexport type AndroidSelector = {\n  checkable?: boolean,\n  checked?: boolean,\n  clazz?: string,\n  clickable?: boolean,\n  depth?: number,\n  desc?: string,\n  enabled?: boolean,\n  focusable?: boolean,\n  focused?: boolean,\n  hasChild?: {\n    selector: AndroidSelector,\n  },\n  hasDescendant?: {\n    selector: AndroidSelector,\n    maxDepth?: number,\n  },\n  longClickable?: boolean,\n  pkg?: string,\n  res?: string,\n  scrollable?: boolean,\n  selected?: boolean,\n  text?: string,\n};\n\nexport type AndroidElementInfo = {\n  children?: AndroidElementInfo[],\n  clazz: string,\n  desc: string,\n  res: string,\n  pkg: string,\n  text: string,\n  bounds: Rect,\n  checkable: boolean,\n  checked: boolean,\n  clickable: boolean,\n  enabled: boolean,\n  focusable: boolean,\n  focused: boolean,\n  longClickable: boolean,\n  scrollable: boolean,\n  selected: boolean,\n};\n\n// ----------- SocksSocket -----------\nexport type SocksSocketInitializer = {\n  dstAddr: string,\n  dstPort: number,\n};\nexport interface SocksSocketChannel extends Channel {\n  on(event: 'data', callback: (params: SocksSocketDataEvent) => void): this;\n  on(event: 'close', callback: (params: SocksSocketCloseEvent) => void): this;\n  write(params: SocksSocketWriteParams, metadata?: Metadata): Promise<SocksSocketWriteResult>;\n  error(params: SocksSocketErrorParams, metadata?: Metadata): Promise<SocksSocketErrorResult>;\n  connected(params?: SocksSocketConnectedParams, metadata?: Metadata): Promise<SocksSocketConnectedResult>;\n  end(params?: SocksSocketEndParams, metadata?: Metadata): Promise<SocksSocketEndResult>;\n}\nexport type SocksSocketDataEvent = {\n  data: Binary,\n};\nexport type SocksSocketCloseEvent = {};\nexport type SocksSocketWriteParams = {\n  data: Binary,\n};\nexport type SocksSocketWriteOptions = {\n\n};\nexport type SocksSocketWriteResult = void;\nexport type SocksSocketErrorParams = {\n  error: string,\n};\nexport type SocksSocketErrorOptions = {\n\n};\nexport type SocksSocketErrorResult = void;\nexport type SocksSocketConnectedParams = {};\nexport type SocksSocketConnectedOptions = {};\nexport type SocksSocketConnectedResult = void;\nexport type SocksSocketEndParams = {};\nexport type SocksSocketEndOptions = {};\nexport type SocksSocketEndResult = void;\n\nexport const commandsWithTracingSnapshots = new Set([\n  'EventTarget.waitForEventInfo',\n  'BrowserContext.waitForEventInfo',\n  'Page.waitForEventInfo',\n  'WebSocket.waitForEventInfo',\n  'ElectronApplication.waitForEventInfo',\n  'AndroidDevice.waitForEventInfo',\n  'Page.goBack',\n  'Page.goForward',\n  'Page.reload',\n  'Page.setViewportSize',\n  'Page.keyboardDown',\n  'Page.keyboardUp',\n  'Page.keyboardInsertText',\n  'Page.keyboardType',\n  'Page.keyboardPress',\n  'Page.mouseMove',\n  'Page.mouseDown',\n  'Page.mouseUp',\n  'Page.mouseClick',\n  'Page.touchscreenTap',\n  'Frame.evalOnSelector',\n  'Frame.evalOnSelectorAll',\n  'Frame.addScriptTag',\n  'Frame.addStyleTag',\n  'Frame.check',\n  'Frame.click',\n  'Frame.dblclick',\n  'Frame.dispatchEvent',\n  'Frame.evaluateExpression',\n  'Frame.evaluateExpressionHandle',\n  'Frame.fill',\n  'Frame.focus',\n  'Frame.getAttribute',\n  'Frame.goto',\n  'Frame.hover',\n  'Frame.innerHTML',\n  'Frame.innerText',\n  'Frame.inputValue',\n  'Frame.isChecked',\n  'Frame.isDisabled',\n  'Frame.isEnabled',\n  'Frame.isHidden',\n  'Frame.isEditable',\n  'Frame.press',\n  'Frame.selectOption',\n  'Frame.setContent',\n  'Frame.setInputFiles',\n  'Frame.tap',\n  'Frame.textContent',\n  'Frame.type',\n  'Frame.uncheck',\n  'Frame.waitForFunction',\n  'Frame.waitForSelector',\n  'JSHandle.evaluateExpression',\n  'ElementHandle.evaluateExpression',\n  'JSHandle.evaluateExpressionHandle',\n  'ElementHandle.evaluateExpressionHandle',\n  'ElementHandle.evalOnSelector',\n  'ElementHandle.evalOnSelectorAll',\n  'ElementHandle.check',\n  'ElementHandle.click',\n  'ElementHandle.dblclick',\n  'ElementHandle.dispatchEvent',\n  'ElementHandle.fill',\n  'ElementHandle.hover',\n  'ElementHandle.press',\n  'ElementHandle.scrollIntoViewIfNeeded',\n  'ElementHandle.selectOption',\n  'ElementHandle.selectText',\n  'ElementHandle.setInputFiles',\n  'ElementHandle.tap',\n  'ElementHandle.type',\n  'ElementHandle.uncheck',\n  'ElementHandle.waitForElementState',\n  'ElementHandle.waitForSelector'\n]);"],"file":"channels.js"}